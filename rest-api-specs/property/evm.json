{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "title": "OPERA Cloud Sales Event Management API",
    "version": "23.2",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality-integrations_ww@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "basePath": "/evm/v1",
  "paths": {
    "/alternateEvents": {
      "put": {
        "description": " <p><strong>OperationId:</strong>manageAlternateEvents</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Manage alternate events.",
        "operationId": "manageAlternateEvents",
        "parameters": [
          {
            "description": "Request object for managing catering events those are alternate to other catering events.",
            "name": "manageAlternateEvents",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/manageAlternateEvents"
                },
                {
                  "example": {
                    "alternateEvents": [
                      {
                        "altEventsDetail": [
                          {
                            "eventDetail": {
                              "alternateEvent": true,
                              "attendees": {
                                "actual": 0,
                                "billed": 0,
                                "expected": 0,
                                "guaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "set": 0
                              },
                              "cateringDeductInventory": true,
                              "cateringStatusType": "Waitlist",
                              "createDateTime": "2020-07-17T11:06:40.139Z",
                              "creatorId": "string",
                              "displayDoorcard": true,
                              "doorcard": "string",
                              "eventLevelRevenueActualization": true,
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "masterEventDates": {
                                  "endDateTime": "2020-07-17T11:06:40.138Z",
                                  "startDateTime": "2020-07-17T11:06:40.138Z"
                                },
                                "type": "SubEvent"
                              },
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "eventShared": true,
                              "eventStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "eventTimeSpan": {
                                "endDateTime": "2020-07-17T11:06:40.138Z",
                                "startDateTime": "2020-07-17T11:06:40.138Z"
                              },
                              "eventType": "string",
                              "hasPostings": true,
                              "inactiveDate": "2020-07-17",
                              "includeSpaceInPackage": true,
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-17T11:06:40.139Z",
                              "loudEvent": true,
                              "masterEvent": true,
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "notMoveable": true,
                              "packageEvent": true,
                              "packageId": 0,
                              "packageName": "string",
                              "purgeDate": "2020-07-17",
                              "subEvent": true,
                              "waitlistReturnStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "waitlisted": true
                            },
                            "eventPrimaryInfo": {
                              "eventId": {
                                "id": "string",
                                "idContext": "string",
                                "idExtension": 0,
                                "instance": "string",
                                "type": "string",
                                "url": "string"
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "functionSpaceInformation": {
                              "comboSpace": true,
                              "discountPercentage": 0,
                              "elementSpace": true,
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "maximumOccupancy": 0,
                              "minimumOccupancy": 0,
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "rentalCode": "string",
                              "setdownTime": 0,
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "shareable": true
                            }
                          }
                        ],
                        "eventBlockInfo": {
                          "blockIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ]
                        },
                        "eventDetail": {
                          "alternateEvent": true,
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "cateringDeductInventory": true,
                          "cateringStatusType": "Waitlist",
                          "createDateTime": "2020-07-17T11:06:40.118Z",
                          "creatorId": "string",
                          "displayDoorcard": true,
                          "doorcard": "string",
                          "eventLevelRevenueActualization": true,
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "masterEventDates": {
                              "endDateTime": "2020-07-17T11:06:40.118Z",
                              "startDateTime": "2020-07-17T11:06:40.118Z"
                            },
                            "type": "SubEvent"
                          },
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "eventShared": true,
                          "eventStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "eventTimeSpan": {
                            "endDateTime": "2020-07-17T11:06:40.118Z",
                            "startDateTime": "2020-07-17T11:06:40.118Z"
                          },
                          "eventType": "string",
                          "hasPostings": true,
                          "inactiveDate": "2020-07-17",
                          "includeSpaceInPackage": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-17T11:06:40.118Z",
                          "loudEvent": true,
                          "masterEvent": true,
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "notMoveable": true,
                          "packageEvent": true,
                          "packageId": 0,
                          "packageName": "string",
                          "purgeDate": "2020-07-17",
                          "subEvent": true,
                          "waitlistReturnStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "waitlisted": true
                        },
                        "eventIndicators": [
                          {
                            "count": 0,
                            "indicatorName": "string"
                          }
                        ],
                        "eventNotes": [
                          {
                            "comment": "string",
                            "createDateTime": "2020-07-17T11:06:40.138Z",
                            "creatorId": "string",
                            "internal": true,
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-07-17T11:06:40.138Z",
                            "noteCode": "string",
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteTitle": "string",
                            "purgeDate": "2020-07-17",
                            "sequence": 0
                          }
                        ],
                        "eventPrimaryInfo": {
                          "eventId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventResources": [
                          {
                            "consumptionBased": true,
                            "custom": true,
                            "discount": 0,
                            "eventEndDate": "2020-07-17",
                            "eventResourceNotes": [
                              {
                                "comment": "string",
                                "createDateTime": "2020-07-17T11:06:40.118Z",
                                "creatorId": "string",
                                "internal": true,
                                "lastModifierId": "string",
                                "lastModifyDateTime": "2020-07-17T11:06:40.118Z",
                                "noteCode": "string",
                                "noteId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "noteTitle": "string",
                                "purgeDate": "2020-07-17",
                                "sequence": 0
                              }
                            ],
                            "eventStartDate": "2020-07-17",
                            "external": true,
                            "hasDiscountMenuItem": true,
                            "hasNotes": true,
                            "hotelId": "string",
                            "hours": 0,
                            "itemAttribute": "string",
                            "multiChoice": true,
                            "order": "string",
                            "packaged": true,
                            "persons": 0,
                            "quantity": 0,
                            "quantityExcluded": 0,
                            "quantityIncluded": 0,
                            "rentalCode": "string",
                            "resourceId": {
                              "id": "string",
                              "idContext": "string",
                              "idExtension": 0,
                              "instance": "string",
                              "type": "string",
                              "url": "string"
                            },
                            "resourceName": "string",
                            "resourceType": "FunctionSpace",
                            "revenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "sellEndDate": "2020-07-17",
                            "sellStartDate": "2020-07-17",
                            "setupCode": "string",
                            "unitPrice": {
                              "amount": 0,
                              "currencyCode": "string"
                            }
                          }
                        ],
                        "eventRevenues": {
                          "currencyCode": "string",
                          "eventLevelRevenueActualization": true,
                          "eventRevenueInformation": [
                            {
                              "actualRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "billedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "custom": true,
                              "expectedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "flatForecastRevenue": true,
                              "forecastRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "guaranteedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "ignoreForecast": true,
                              "onTheBooksRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "orderBy": 0,
                              "packaged": true,
                              "revenueType": {
                                "code": "string",
                                "displaySequence": 0,
                                "foodAndBeverage": true,
                                "inactive": true,
                                "revenueDetails": [
                                  {
                                    "hotelId": "string",
                                    "revenueMinimum": true,
                                    "tax": 0
                                  }
                                ],
                                "revenueGroup": "string",
                                "translatableDescription": {
                                  "defaultText": "string",
                                  "translations": {
                                    "text": [
                                      {
                                        "language": "string",
                                        "value": "string"
                                      }
                                    ]
                                  }
                                }
                              },
                              "totalCost": {
                                "amount": 0,
                                "currencyCode": "string"
                              }
                            }
                          ],
                          "excludeFromForecast": true,
                          "useForecastRevenue": true
                        },
                        "functionSpaceInformation": {
                          "comboSpace": true,
                          "discountPercentage": 0,
                          "elementSpace": true,
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "maximumOccupancy": 0,
                          "minimumOccupancy": 0,
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "rentalCode": "string",
                          "setdownTime": 0,
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "shareable": true
                        },
                        "masterEventDetail": {
                          "eventDetail": {
                            "alternateEvent": true,
                            "attendees": {
                              "actual": 0,
                              "billed": 0,
                              "expected": 0,
                              "guaranteed": 0,
                              "packageActual": 0,
                              "packageBilled": 0,
                              "packageExpected": 0,
                              "packageGuaranteed": 0,
                              "set": 0
                            },
                            "cateringDeductInventory": true,
                            "cateringStatusType": "Waitlist",
                            "createDateTime": "2020-07-17T11:06:40.139Z",
                            "creatorId": "string",
                            "displayDoorcard": true,
                            "doorcard": "string",
                            "eventLevelRevenueActualization": true,
                            "eventLink": {
                              "id": {
                                "id": "string",
                                "type": "string"
                              },
                              "masterEventDates": {
                                "endDateTime": "2020-07-17T11:06:40.139Z",
                                "startDateTime": "2020-07-17T11:06:40.139Z"
                              },
                              "type": "SubEvent"
                            },
                            "eventName": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "language": "string",
                                    "value": "string"
                                  }
                                ]
                              }
                            },
                            "eventShared": true,
                            "eventStatus": {
                              "color": "White",
                              "status": {
                                "code": "string",
                                "description": "string"
                              }
                            },
                            "eventTimeSpan": {
                              "endDateTime": "2020-07-17T11:06:40.139Z",
                              "startDateTime": "2020-07-17T11:06:40.139Z"
                            },
                            "eventType": "string",
                            "hasPostings": true,
                            "inactiveDate": "2020-07-17",
                            "includeSpaceInPackage": true,
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-07-17T11:06:40.139Z",
                            "loudEvent": true,
                            "masterEvent": true,
                            "masterEventId": {
                              "id": "string",
                              "type": "string"
                            },
                            "notMoveable": true,
                            "packageEvent": true,
                            "packageId": 0,
                            "packageName": "string",
                            "purgeDate": "2020-07-17",
                            "subEvent": true,
                            "waitlistReturnStatus": {
                              "color": "White",
                              "status": {
                                "code": "string",
                                "description": "string"
                              }
                            },
                            "waitlisted": true
                          },
                          "eventPrimaryInfo": {
                            "eventId": {
                              "id": "string",
                              "idContext": "string",
                              "idExtension": 0,
                              "instance": "string",
                              "type": "string",
                              "url": "string"
                            },
                            "hotelId": "string",
                            "includeSubEvents": true
                          },
                          "functionSpaceInformation": {
                            "comboSpace": true,
                            "discountPercentage": 0,
                            "elementSpace": true,
                            "functionSpaceCode": "string",
                            "functionSpaceDescription": "string",
                            "maximumOccupancy": 0,
                            "minimumOccupancy": 0,
                            "rateDesc": "string",
                            "rentalAmount": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "rentalCode": "string",
                            "setdownTime": 0,
                            "setupCode": "string",
                            "setupDescription": "string",
                            "setupTime": 0,
                            "shareable": true
                          }
                        },
                        "onTheBooksRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "processInstructions": {
                          "overbook": true,
                          "overrideCapacity": true,
                          "overrideMaxgroups": true,
                          "shareable": true,
                          "waitList": true,
                          "warnFunctionSpace": true
                        },
                        "subEventsDetail": [
                          {
                            "eventDetail": {
                              "alternateEvent": true,
                              "attendees": {
                                "actual": 0,
                                "billed": 0,
                                "expected": 0,
                                "guaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "set": 0
                              },
                              "cateringDeductInventory": true,
                              "cateringStatusType": "Waitlist",
                              "createDateTime": "2020-07-17T11:06:40.138Z",
                              "creatorId": "string",
                              "displayDoorcard": true,
                              "doorcard": "string",
                              "eventLevelRevenueActualization": true,
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "masterEventDates": {
                                  "endDateTime": "2020-07-17T11:06:40.138Z",
                                  "startDateTime": "2020-07-17T11:06:40.138Z"
                                },
                                "type": "SubEvent"
                              },
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "eventShared": true,
                              "eventStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "eventTimeSpan": {
                                "endDateTime": "2020-07-17T11:06:40.138Z",
                                "startDateTime": "2020-07-17T11:06:40.138Z"
                              },
                              "eventType": "string",
                              "hasPostings": true,
                              "inactiveDate": "2020-07-17",
                              "includeSpaceInPackage": true,
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-17T11:06:40.138Z",
                              "loudEvent": true,
                              "masterEvent": true,
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "notMoveable": true,
                              "packageEvent": true,
                              "packageId": 0,
                              "packageName": "string",
                              "purgeDate": "2020-07-17",
                              "subEvent": true,
                              "waitlistReturnStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "waitlisted": true
                            },
                            "eventPrimaryInfo": {
                              "eventId": {
                                "id": "string",
                                "idContext": "string",
                                "idExtension": 0,
                                "instance": "string",
                                "type": "string",
                                "url": "string"
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "functionSpaceInformation": {
                              "comboSpace": true,
                              "discountPercentage": 0,
                              "elementSpace": true,
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "maximumOccupancy": 0,
                              "minimumOccupancy": 0,
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "rentalCode": "string",
                              "setdownTime": 0,
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "shareable": true
                            }
                          }
                        ]
                      }
                    ],
                    "links": [
                      {
                        "href": "string",
                        "method": "GET",
                        "operationId": "string",
                        "rel": "string",
                        "targetSchema": "string",
                        "templated": false,
                        "title": "string"
                      }
                    ],
                    "manageAlternateEventsInstruction": "Copy"
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/manageAlternateEventsStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/blocks/{blockId}/cateringPackages": {
      "get": {
        "description": "Retrieve the cateringPackages on the block <p><strong>OperationId:</strong>getCateringPackages</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Get Catering packages ",
        "operationId": "getCateringPackages",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the block",
            "name": "blockId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Block hotel code.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "blockIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "blockIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching catering packages associated to block.",
            "schema": {
              "$ref": "#/definitions/cateringPackages"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CateringPackages not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Update a Catering Package which already exists on the block. <p><strong>OperationId:</strong>changeCateringPackages</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Update a Catering packages",
        "operationId": "changeCateringPackages",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the block",
            "name": "blockId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for modifying details of associated catering packages.",
            "name": "cateringPackages",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cateringPackages"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/cateringPackages"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Add an available catering package onto your block. <p><strong>OperationId:</strong>postCateringPackage</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Add catering packages to a block",
        "operationId": "postCateringPackage",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the block",
            "name": "blockId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for adding Catering Package/Template Events to block .",
            "name": "blockCateringPackage",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/blockCateringPackage"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response object for adding Catering Package/Template Events to block.",
            "schema": {
              "$ref": "#/definitions/blockCateringPackageDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/blocks/{blockId}/cateringPackages/{cateringpackageId}/copy": {
      "put": {
        "description": "Use this API to copy an existing Catering Package one the block to another date on the same block. <p><strong>OperationId:</strong>copyCateringPackage</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Copy a Catering package",
        "operationId": "copyCateringPackage",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the catering package",
            "name": "cateringpackageId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the block",
            "name": "blockId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for Copying Catering Package/Template to another block.",
            "name": "copyCateringPackage",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyCateringPackage"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for copying packages.",
            "schema": {
              "$ref": "#/definitions/copyCateringPackageResponse"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/blocks/{blockId}/cateringPackages/{cateringpackageId}/revenue": {
      "get": {
        "description": "Retrieve catering package revenue on a block <p><strong>OperationId:</strong>getCateringPackageRevenue</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Get Catering package revenue",
        "operationId": "getCateringPackageRevenue",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the catering package",
            "name": "cateringpackageId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the block",
            "name": "blockId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Block hotel code.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "idExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "blockIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "blockIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "packageIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "packageIdType",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "BlockInfo",
                "Pricing"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fetch instructions that can be used in caterig Package Revenue maintenance.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching revenue details of the associated catering package.",
            "schema": {
              "$ref": "#/definitions/cateringPackageRevenue"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "cateringPackageRevenueDetails": {
                  "blockInfo": {
                    "blockIdList": [
                      {
                        "id": "string",
                        "type": "string"
                      }
                    ]
                  },
                  "flatPrice": true,
                  "packageDetail": {
                    "description": {
                      "defaultText": "string",
                      "translations": {
                        "text": [
                          {
                            "language": "string",
                            "value": "string"
                          }
                        ]
                      }
                    },
                    "duration": 0,
                    "isTemplate": true,
                    "pkgCode": "string",
                    "webBookable": true
                  },
                  "packageId": {
                    "id": "string",
                    "type": "string"
                  },
                  "priceCode": "string",
                  "priceDescription": "string",
                  "revenues": [
                    {
                      "costExpected": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "eventName": "string",
                      "eventTimeSpan": {
                        "endDateTime": "2020-07-17T09:13:02.425Z",
                        "startDateTime": "2020-07-17T09:13:02.425Z"
                      },
                      "eventType": "string",
                      "orderBy": 0,
                      "packageEventId": {
                        "id": "string",
                        "type": "string"
                      },
                      "revExpected": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "revForecast": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "revType": "string"
                    }
                  ]
                },
                "links": [
                  {
                    "href": "string",
                    "method": "GET",
                    "operationId": "string",
                    "rel": "string",
                    "targetSchema": "string",
                    "templated": false,
                    "title": "string"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "CateringPackageRevenue not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Add catering package revenue to a block <p><strong>OperationId:</strong>postCateringPackageRevenue</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Add catering package revenue to a block",
        "operationId": "postCateringPackageRevenue",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the catering package",
            "name": "cateringpackageId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the block",
            "name": "blockId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating revenue details of the associated catering package.",
            "name": "cateringPackageRevenue",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cateringPackageRevenue"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/blocks/{blockId}/events/{eventId}/resources/copy": {
      "put": {
        "description": "You can use this API to copy one/more existing event resources to one/more events for the same/different block. <p><strong>OperationId:</strong>copyEventResources</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Copy event resources",
        "operationId": "copyEventResources",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the event",
            "name": "eventId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the block",
            "name": "blockId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for copying event resources.",
            "name": "eventResources",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/eventResources"
                },
                {
                  "example": {
                    "eventsResourcesList": [
                      {
                        "altEventsDetail": [
                          {
                            "eventDetail": {
                              "alternateEvent": true,
                              "attendees": {
                                "actual": 0,
                                "billed": 0,
                                "expected": 0,
                                "guaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "set": 0
                              },
                              "cateringDeductInventory": true,
                              "cateringStatusType": "Waitlist",
                              "createDateTime": "2020-07-16T16:22:23.462Z",
                              "creatorId": "string",
                              "displayDoorcard": true,
                              "doorcard": "string",
                              "eventLevelRevenueActualization": true,
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "masterEventDates": {
                                  "endDateTime": "2020-07-16T16:22:23.462Z",
                                  "startDateTime": "2020-07-16T16:22:23.462Z"
                                },
                                "type": "SubEvent"
                              },
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "eventShared": true,
                              "eventStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "eventTimeSpan": {
                                "endDateTime": "2020-07-16T16:22:23.462Z",
                                "startDateTime": "2020-07-16T16:22:23.462Z"
                              },
                              "eventType": "string",
                              "hasPostings": true,
                              "inactiveDate": "2020-07-16",
                              "includeSpaceInPackage": true,
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-16T16:22:23.462Z",
                              "loudEvent": true,
                              "masterEvent": true,
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "notMoveable": true,
                              "packageEvent": true,
                              "packageId": 0,
                              "packageName": "string",
                              "purgeDate": "2020-07-16",
                              "subEvent": true,
                              "waitlistReturnStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "waitlisted": true
                            },
                            "eventPrimaryInfo": {
                              "eventId": {
                                "id": "string",
                                "idContext": "string",
                                "idExtension": 0,
                                "instance": "string",
                                "type": "string",
                                "url": "string"
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "functionSpaceInformation": {
                              "comboSpace": true,
                              "discountPercentage": 0,
                              "elementSpace": true,
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "maximumOccupancy": 0,
                              "minimumOccupancy": 0,
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "rentalCode": "string",
                              "setdownTime": 0,
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "shareable": true
                            }
                          }
                        ],
                        "eventBlockInfo": {
                          "blockIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ]
                        },
                        "eventDetail": {
                          "alternateEvent": true,
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "cateringDeductInventory": true,
                          "cateringStatusType": "Waitlist",
                          "createDateTime": "2020-07-16T16:22:23.437Z",
                          "creatorId": "string",
                          "displayDoorcard": true,
                          "doorcard": "string",
                          "eventLevelRevenueActualization": true,
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "masterEventDates": {
                              "endDateTime": "2020-07-16T16:22:23.437Z",
                              "startDateTime": "2020-07-16T16:22:23.437Z"
                            },
                            "type": "SubEvent"
                          },
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "eventShared": true,
                          "eventStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "eventTimeSpan": {
                            "endDateTime": "2020-07-16T16:22:23.437Z",
                            "startDateTime": "2020-07-16T16:22:23.437Z"
                          },
                          "eventType": "string",
                          "hasPostings": true,
                          "inactiveDate": "2020-07-16",
                          "includeSpaceInPackage": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-16T16:22:23.437Z",
                          "loudEvent": true,
                          "masterEvent": true,
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "notMoveable": true,
                          "packageEvent": true,
                          "packageId": 0,
                          "packageName": "string",
                          "purgeDate": "2020-07-16",
                          "subEvent": true,
                          "waitlistReturnStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "waitlisted": true
                        },
                        "eventIndicators": [
                          {
                            "count": 0,
                            "indicatorName": "string"
                          }
                        ],
                        "eventNotes": [
                          {
                            "comment": "string",
                            "createDateTime": "2020-07-16T16:22:23.461Z",
                            "creatorId": "string",
                            "internal": true,
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-07-16T16:22:23.461Z",
                            "noteCode": "string",
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteTitle": "string",
                            "purgeDate": "2020-07-16",
                            "sequence": 0
                          }
                        ],
                        "eventPrimaryInfo": {
                          "eventId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventResources": [
                          {
                            "consumptionBased": true,
                            "custom": true,
                            "discount": 0,
                            "eventEndDate": "2020-07-16",
                            "eventResourceNotes": [
                              {
                                "comment": "string",
                                "createDateTime": "2020-07-16T16:22:23.437Z",
                                "creatorId": "string",
                                "internal": true,
                                "lastModifierId": "string",
                                "lastModifyDateTime": "2020-07-16T16:22:23.437Z",
                                "noteCode": "string",
                                "noteId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "noteTitle": "string",
                                "purgeDate": "2020-07-16",
                                "sequence": 0
                              }
                            ],
                            "eventStartDate": "2020-07-16",
                            "external": true,
                            "hasDiscountMenuItem": true,
                            "hasNotes": true,
                            "hotelId": "string",
                            "hours": 0,
                            "itemAttribute": "string",
                            "multiChoice": true,
                            "order": "string",
                            "packaged": true,
                            "persons": 0,
                            "quantity": 0,
                            "quantityExcluded": 0,
                            "quantityIncluded": 0,
                            "rentalCode": "string",
                            "resourceId": {
                              "id": "string",
                              "idContext": "string",
                              "idExtension": 0,
                              "instance": "string",
                              "type": "string",
                              "url": "string"
                            },
                            "resourceName": "string",
                            "resourceType": "FunctionSpace",
                            "revenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "sellEndDate": "2020-07-16",
                            "sellStartDate": "2020-07-16",
                            "setupCode": "string",
                            "unitPrice": {
                              "amount": 0,
                              "currencyCode": "string"
                            }
                          }
                        ],
                        "eventRevenues": {
                          "currencyCode": "string",
                          "eventLevelRevenueActualization": true,
                          "eventRevenueInformation": [
                            {
                              "actualRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "billedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "custom": true,
                              "expectedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "flatForecastRevenue": true,
                              "forecastRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "guaranteedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "ignoreForecast": true,
                              "onTheBooksRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "orderBy": 0,
                              "packaged": true,
                              "revenueType": {
                                "code": "string",
                                "displaySequence": 0,
                                "foodAndBeverage": true,
                                "inactive": true,
                                "revenueDetails": [
                                  {
                                    "hotelId": "string",
                                    "revenueMinimum": true,
                                    "tax": 0
                                  }
                                ],
                                "revenueGroup": "string",
                                "translatableDescription": {
                                  "defaultText": "string",
                                  "translations": {
                                    "text": [
                                      {
                                        "language": "string",
                                        "value": "string"
                                      }
                                    ]
                                  }
                                }
                              },
                              "totalCost": {
                                "amount": 0,
                                "currencyCode": "string"
                              }
                            }
                          ],
                          "excludeFromForecast": true,
                          "useForecastRevenue": true
                        },
                        "functionSpaceInformation": {
                          "comboSpace": true,
                          "discountPercentage": 0,
                          "elementSpace": true,
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "maximumOccupancy": 0,
                          "minimumOccupancy": 0,
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "rentalCode": "string",
                          "setdownTime": 0,
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "shareable": true
                        },
                        "masterEventDetail": {
                          "eventDetail": {
                            "alternateEvent": true,
                            "attendees": {
                              "actual": 0,
                              "billed": 0,
                              "expected": 0,
                              "guaranteed": 0,
                              "packageActual": 0,
                              "packageBilled": 0,
                              "packageExpected": 0,
                              "packageGuaranteed": 0,
                              "set": 0
                            },
                            "cateringDeductInventory": true,
                            "cateringStatusType": "Waitlist",
                            "createDateTime": "2020-07-16T16:22:23.462Z",
                            "creatorId": "string",
                            "displayDoorcard": true,
                            "doorcard": "string",
                            "eventLevelRevenueActualization": true,
                            "eventLink": {
                              "id": {
                                "id": "string",
                                "type": "string"
                              },
                              "masterEventDates": {
                                "endDateTime": "2020-07-16T16:22:23.462Z",
                                "startDateTime": "2020-07-16T16:22:23.462Z"
                              },
                              "type": "SubEvent"
                            },
                            "eventName": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "language": "string",
                                    "value": "string"
                                  }
                                ]
                              }
                            },
                            "eventShared": true,
                            "eventStatus": {
                              "color": "White",
                              "status": {
                                "code": "string",
                                "description": "string"
                              }
                            },
                            "eventTimeSpan": {
                              "endDateTime": "2020-07-16T16:22:23.462Z",
                              "startDateTime": "2020-07-16T16:22:23.462Z"
                            },
                            "eventType": "string",
                            "hasPostings": true,
                            "inactiveDate": "2020-07-16",
                            "includeSpaceInPackage": true,
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-07-16T16:22:23.462Z",
                            "loudEvent": true,
                            "masterEvent": true,
                            "masterEventId": {
                              "id": "string",
                              "type": "string"
                            },
                            "notMoveable": true,
                            "packageEvent": true,
                            "packageId": 0,
                            "packageName": "string",
                            "purgeDate": "2020-07-16",
                            "subEvent": true,
                            "waitlistReturnStatus": {
                              "color": "White",
                              "status": {
                                "code": "string",
                                "description": "string"
                              }
                            },
                            "waitlisted": true
                          },
                          "eventPrimaryInfo": {
                            "eventId": {
                              "id": "string",
                              "idContext": "string",
                              "idExtension": 0,
                              "instance": "string",
                              "type": "string",
                              "url": "string"
                            },
                            "hotelId": "string",
                            "includeSubEvents": true
                          },
                          "functionSpaceInformation": {
                            "comboSpace": true,
                            "discountPercentage": 0,
                            "elementSpace": true,
                            "functionSpaceCode": "string",
                            "functionSpaceDescription": "string",
                            "maximumOccupancy": 0,
                            "minimumOccupancy": 0,
                            "rateDesc": "string",
                            "rentalAmount": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "rentalCode": "string",
                            "setdownTime": 0,
                            "setupCode": "string",
                            "setupDescription": "string",
                            "setupTime": 0,
                            "shareable": true
                          }
                        },
                        "onTheBooksRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "processInstructions": {
                          "overbook": true,
                          "overrideCapacity": true,
                          "overrideMaxgroups": true,
                          "shareable": true,
                          "waitList": true,
                          "warnFunctionSpace": true
                        },
                        "subEventsDetail": [
                          {
                            "eventDetail": {
                              "alternateEvent": true,
                              "attendees": {
                                "actual": 0,
                                "billed": 0,
                                "expected": 0,
                                "guaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "set": 0
                              },
                              "cateringDeductInventory": true,
                              "cateringStatusType": "Waitlist",
                              "createDateTime": "2020-07-16T16:22:23.461Z",
                              "creatorId": "string",
                              "displayDoorcard": true,
                              "doorcard": "string",
                              "eventLevelRevenueActualization": true,
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "masterEventDates": {
                                  "endDateTime": "2020-07-16T16:22:23.461Z",
                                  "startDateTime": "2020-07-16T16:22:23.461Z"
                                },
                                "type": "SubEvent"
                              },
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "eventShared": true,
                              "eventStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "eventTimeSpan": {
                                "endDateTime": "2020-07-16T16:22:23.461Z",
                                "startDateTime": "2020-07-16T16:22:23.461Z"
                              },
                              "eventType": "string",
                              "hasPostings": true,
                              "inactiveDate": "2020-07-16",
                              "includeSpaceInPackage": true,
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-16T16:22:23.461Z",
                              "loudEvent": true,
                              "masterEvent": true,
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "notMoveable": true,
                              "packageEvent": true,
                              "packageId": 0,
                              "packageName": "string",
                              "purgeDate": "2020-07-16",
                              "subEvent": true,
                              "waitlistReturnStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "waitlisted": true
                            },
                            "eventPrimaryInfo": {
                              "eventId": {
                                "id": "string",
                                "idContext": "string",
                                "idExtension": 0,
                                "instance": "string",
                                "type": "string",
                                "url": "string"
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "functionSpaceInformation": {
                              "comboSpace": true,
                              "discountPercentage": 0,
                              "elementSpace": true,
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "maximumOccupancy": 0,
                              "minimumOccupancy": 0,
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "rentalCode": "string",
                              "setdownTime": 0,
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "shareable": true
                            }
                          }
                        ]
                      }
                    ],
                    "links": [
                      {
                        "href": "string",
                        "method": "GET",
                        "operationId": "string",
                        "rel": "string",
                        "targetSchema": "string",
                        "templated": false,
                        "title": "string"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for copying event resources.",
            "schema": {
              "$ref": "#/definitions/eventResourcesResponse"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/blocks/{blockId}/events/{eventId}/resources/move": {
      "put": {
        "description": "You can use this API to move one/more existing event resources to an event for the same/different block. <p><strong>OperationId:</strong>moveEventResources</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Move event resources",
        "operationId": "moveEventResources",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the event",
            "name": "eventId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the block",
            "name": "blockId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for moving event resources.",
            "name": "eventResources",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/eventResources"
                },
                {
                  "example": {
                    "eventsResourcesList": [
                      {
                        "altEventsDetail": [
                          {
                            "eventDetail": {
                              "alternateEvent": true,
                              "attendees": {
                                "actual": 0,
                                "billed": 0,
                                "expected": 0,
                                "guaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "set": 0
                              },
                              "cateringDeductInventory": true,
                              "cateringStatusType": "Waitlist",
                              "createDateTime": "2020-07-16T16:22:23.462Z",
                              "creatorId": "string",
                              "displayDoorcard": true,
                              "doorcard": "string",
                              "eventLevelRevenueActualization": true,
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "masterEventDates": {
                                  "endDateTime": "2020-07-16T16:22:23.462Z",
                                  "startDateTime": "2020-07-16T16:22:23.462Z"
                                },
                                "type": "SubEvent"
                              },
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "eventShared": true,
                              "eventStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "eventTimeSpan": {
                                "endDateTime": "2020-07-16T16:22:23.462Z",
                                "startDateTime": "2020-07-16T16:22:23.462Z"
                              },
                              "eventType": "string",
                              "hasPostings": true,
                              "inactiveDate": "2020-07-16",
                              "includeSpaceInPackage": true,
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-16T16:22:23.462Z",
                              "loudEvent": true,
                              "masterEvent": true,
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "notMoveable": true,
                              "packageEvent": true,
                              "packageId": 0,
                              "packageName": "string",
                              "purgeDate": "2020-07-16",
                              "subEvent": true,
                              "waitlistReturnStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "waitlisted": true
                            },
                            "eventPrimaryInfo": {
                              "eventId": {
                                "id": "string",
                                "idContext": "string",
                                "idExtension": 0,
                                "instance": "string",
                                "type": "string",
                                "url": "string"
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "functionSpaceInformation": {
                              "comboSpace": true,
                              "discountPercentage": 0,
                              "elementSpace": true,
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "maximumOccupancy": 0,
                              "minimumOccupancy": 0,
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "rentalCode": "string",
                              "setdownTime": 0,
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "shareable": true
                            }
                          }
                        ],
                        "eventBlockInfo": {
                          "blockIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ]
                        },
                        "eventDetail": {
                          "alternateEvent": true,
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "cateringDeductInventory": true,
                          "cateringStatusType": "Waitlist",
                          "createDateTime": "2020-07-16T16:22:23.437Z",
                          "creatorId": "string",
                          "displayDoorcard": true,
                          "doorcard": "string",
                          "eventLevelRevenueActualization": true,
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "masterEventDates": {
                              "endDateTime": "2020-07-16T16:22:23.437Z",
                              "startDateTime": "2020-07-16T16:22:23.437Z"
                            },
                            "type": "SubEvent"
                          },
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "eventShared": true,
                          "eventStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "eventTimeSpan": {
                            "endDateTime": "2020-07-16T16:22:23.437Z",
                            "startDateTime": "2020-07-16T16:22:23.437Z"
                          },
                          "eventType": "string",
                          "hasPostings": true,
                          "inactiveDate": "2020-07-16",
                          "includeSpaceInPackage": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-16T16:22:23.437Z",
                          "loudEvent": true,
                          "masterEvent": true,
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "notMoveable": true,
                          "packageEvent": true,
                          "packageId": 0,
                          "packageName": "string",
                          "purgeDate": "2020-07-16",
                          "subEvent": true,
                          "waitlistReturnStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "waitlisted": true
                        },
                        "eventIndicators": [
                          {
                            "count": 0,
                            "indicatorName": "string"
                          }
                        ],
                        "eventNotes": [
                          {
                            "comment": "string",
                            "createDateTime": "2020-07-16T16:22:23.461Z",
                            "creatorId": "string",
                            "internal": true,
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-07-16T16:22:23.461Z",
                            "noteCode": "string",
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteTitle": "string",
                            "purgeDate": "2020-07-16",
                            "sequence": 0
                          }
                        ],
                        "eventPrimaryInfo": {
                          "eventId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventResources": [
                          {
                            "consumptionBased": true,
                            "custom": true,
                            "discount": 0,
                            "eventEndDate": "2020-07-16",
                            "eventResourceNotes": [
                              {
                                "comment": "string",
                                "createDateTime": "2020-07-16T16:22:23.437Z",
                                "creatorId": "string",
                                "internal": true,
                                "lastModifierId": "string",
                                "lastModifyDateTime": "2020-07-16T16:22:23.437Z",
                                "noteCode": "string",
                                "noteId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "noteTitle": "string",
                                "purgeDate": "2020-07-16",
                                "sequence": 0
                              }
                            ],
                            "eventStartDate": "2020-07-16",
                            "external": true,
                            "hasDiscountMenuItem": true,
                            "hasNotes": true,
                            "hotelId": "string",
                            "hours": 0,
                            "itemAttribute": "string",
                            "multiChoice": true,
                            "order": "string",
                            "packaged": true,
                            "persons": 0,
                            "quantity": 0,
                            "quantityExcluded": 0,
                            "quantityIncluded": 0,
                            "rentalCode": "string",
                            "resourceId": {
                              "id": "string",
                              "idContext": "string",
                              "idExtension": 0,
                              "instance": "string",
                              "type": "string",
                              "url": "string"
                            },
                            "resourceName": "string",
                            "resourceType": "FunctionSpace",
                            "revenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "sellEndDate": "2020-07-16",
                            "sellStartDate": "2020-07-16",
                            "setupCode": "string",
                            "unitPrice": {
                              "amount": 0,
                              "currencyCode": "string"
                            }
                          }
                        ],
                        "eventRevenues": {
                          "currencyCode": "string",
                          "eventLevelRevenueActualization": true,
                          "eventRevenueInformation": [
                            {
                              "actualRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "billedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "custom": true,
                              "expectedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "flatForecastRevenue": true,
                              "forecastRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "guaranteedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "ignoreForecast": true,
                              "onTheBooksRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "orderBy": 0,
                              "packaged": true,
                              "revenueType": {
                                "code": "string",
                                "displaySequence": 0,
                                "foodAndBeverage": true,
                                "inactive": true,
                                "revenueDetails": [
                                  {
                                    "hotelId": "string",
                                    "revenueMinimum": true,
                                    "tax": 0
                                  }
                                ],
                                "revenueGroup": "string",
                                "translatableDescription": {
                                  "defaultText": "string",
                                  "translations": {
                                    "text": [
                                      {
                                        "language": "string",
                                        "value": "string"
                                      }
                                    ]
                                  }
                                }
                              },
                              "totalCost": {
                                "amount": 0,
                                "currencyCode": "string"
                              }
                            }
                          ],
                          "excludeFromForecast": true,
                          "useForecastRevenue": true
                        },
                        "functionSpaceInformation": {
                          "comboSpace": true,
                          "discountPercentage": 0,
                          "elementSpace": true,
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "maximumOccupancy": 0,
                          "minimumOccupancy": 0,
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "rentalCode": "string",
                          "setdownTime": 0,
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "shareable": true
                        },
                        "masterEventDetail": {
                          "eventDetail": {
                            "alternateEvent": true,
                            "attendees": {
                              "actual": 0,
                              "billed": 0,
                              "expected": 0,
                              "guaranteed": 0,
                              "packageActual": 0,
                              "packageBilled": 0,
                              "packageExpected": 0,
                              "packageGuaranteed": 0,
                              "set": 0
                            },
                            "cateringDeductInventory": true,
                            "cateringStatusType": "Waitlist",
                            "createDateTime": "2020-07-16T16:22:23.462Z",
                            "creatorId": "string",
                            "displayDoorcard": true,
                            "doorcard": "string",
                            "eventLevelRevenueActualization": true,
                            "eventLink": {
                              "id": {
                                "id": "string",
                                "type": "string"
                              },
                              "masterEventDates": {
                                "endDateTime": "2020-07-16T16:22:23.462Z",
                                "startDateTime": "2020-07-16T16:22:23.462Z"
                              },
                              "type": "SubEvent"
                            },
                            "eventName": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "language": "string",
                                    "value": "string"
                                  }
                                ]
                              }
                            },
                            "eventShared": true,
                            "eventStatus": {
                              "color": "White",
                              "status": {
                                "code": "string",
                                "description": "string"
                              }
                            },
                            "eventTimeSpan": {
                              "endDateTime": "2020-07-16T16:22:23.462Z",
                              "startDateTime": "2020-07-16T16:22:23.462Z"
                            },
                            "eventType": "string",
                            "hasPostings": true,
                            "inactiveDate": "2020-07-16",
                            "includeSpaceInPackage": true,
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-07-16T16:22:23.462Z",
                            "loudEvent": true,
                            "masterEvent": true,
                            "masterEventId": {
                              "id": "string",
                              "type": "string"
                            },
                            "notMoveable": true,
                            "packageEvent": true,
                            "packageId": 0,
                            "packageName": "string",
                            "purgeDate": "2020-07-16",
                            "subEvent": true,
                            "waitlistReturnStatus": {
                              "color": "White",
                              "status": {
                                "code": "string",
                                "description": "string"
                              }
                            },
                            "waitlisted": true
                          },
                          "eventPrimaryInfo": {
                            "eventId": {
                              "id": "string",
                              "idContext": "string",
                              "idExtension": 0,
                              "instance": "string",
                              "type": "string",
                              "url": "string"
                            },
                            "hotelId": "string",
                            "includeSubEvents": true
                          },
                          "functionSpaceInformation": {
                            "comboSpace": true,
                            "discountPercentage": 0,
                            "elementSpace": true,
                            "functionSpaceCode": "string",
                            "functionSpaceDescription": "string",
                            "maximumOccupancy": 0,
                            "minimumOccupancy": 0,
                            "rateDesc": "string",
                            "rentalAmount": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "rentalCode": "string",
                            "setdownTime": 0,
                            "setupCode": "string",
                            "setupDescription": "string",
                            "setupTime": 0,
                            "shareable": true
                          }
                        },
                        "onTheBooksRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "processInstructions": {
                          "overbook": true,
                          "overrideCapacity": true,
                          "overrideMaxgroups": true,
                          "shareable": true,
                          "waitList": true,
                          "warnFunctionSpace": true
                        },
                        "subEventsDetail": [
                          {
                            "eventDetail": {
                              "alternateEvent": true,
                              "attendees": {
                                "actual": 0,
                                "billed": 0,
                                "expected": 0,
                                "guaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "set": 0
                              },
                              "cateringDeductInventory": true,
                              "cateringStatusType": "Waitlist",
                              "createDateTime": "2020-07-16T16:22:23.461Z",
                              "creatorId": "string",
                              "displayDoorcard": true,
                              "doorcard": "string",
                              "eventLevelRevenueActualization": true,
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "masterEventDates": {
                                  "endDateTime": "2020-07-16T16:22:23.461Z",
                                  "startDateTime": "2020-07-16T16:22:23.461Z"
                                },
                                "type": "SubEvent"
                              },
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "eventShared": true,
                              "eventStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "eventTimeSpan": {
                                "endDateTime": "2020-07-16T16:22:23.461Z",
                                "startDateTime": "2020-07-16T16:22:23.461Z"
                              },
                              "eventType": "string",
                              "hasPostings": true,
                              "inactiveDate": "2020-07-16",
                              "includeSpaceInPackage": true,
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-16T16:22:23.461Z",
                              "loudEvent": true,
                              "masterEvent": true,
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "notMoveable": true,
                              "packageEvent": true,
                              "packageId": 0,
                              "packageName": "string",
                              "purgeDate": "2020-07-16",
                              "subEvent": true,
                              "waitlistReturnStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "waitlisted": true
                            },
                            "eventPrimaryInfo": {
                              "eventId": {
                                "id": "string",
                                "idContext": "string",
                                "idExtension": 0,
                                "instance": "string",
                                "type": "string",
                                "url": "string"
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "functionSpaceInformation": {
                              "comboSpace": true,
                              "discountPercentage": 0,
                              "elementSpace": true,
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "maximumOccupancy": 0,
                              "minimumOccupancy": 0,
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "rentalCode": "string",
                              "setdownTime": 0,
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "shareable": true
                            }
                          }
                        ]
                      }
                    ],
                    "links": [
                      {
                        "href": "string",
                        "method": "GET",
                        "operationId": "string",
                        "rel": "string",
                        "targetSchema": "string",
                        "templated": false,
                        "title": "string"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for moving event resources.",
            "schema": {
              "$ref": "#/definitions/eventResourcesResponse"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/blocks/{blockId}/events/{eventId}/resources/{resourceId}": {
      "get": {
        "description": "Retrieve a resource that exist for an Event, using block ID, event ID and resource ID as parameters in the path  This will give you information on the quantity, expected revenue, discounts, notes, and so on for that resource. <p><strong>OperationId:</strong>getEventResourceByMenu</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Get Resources for an Event",
        "operationId": "getEventResourceByMenu",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the resource",
            "name": "resourceId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the event",
            "name": "eventId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the block",
            "name": "blockId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Hotel code of the Resource.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "blockIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "blockIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "eventIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "eventIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "resourceIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "resourceIdType",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "BlockInfo",
                "Notes"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fetch instructions that can be used in Event Resource maintenance.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching event resource details.",
            "schema": {
              "$ref": "#/definitions/eventResource"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "eventResourceDetails": {
                  "eventDetailInfo": {
                    "altEventsDetail": [
                      {
                        "eventDetail": {
                          "alternateEvent": true,
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "cateringDeductInventory": true,
                          "cateringStatusType": "Waitlist",
                          "createDateTime": "2020-07-13T15:33:16.512Z",
                          "creatorId": "string",
                          "displayDoorcard": true,
                          "doorcard": "string",
                          "eventLevelRevenueActualization": true,
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "masterEventDates": {
                              "endDateTime": "2020-07-13T15:33:16.512Z",
                              "startDateTime": "2020-07-13T15:33:16.512Z"
                            },
                            "type": "SubEvent"
                          },
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "eventShared": true,
                          "eventStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "eventTimeSpan": {
                            "endDateTime": "2020-07-13T15:33:16.512Z",
                            "startDateTime": "2020-07-13T15:33:16.512Z"
                          },
                          "eventType": "string",
                          "hasPostings": true,
                          "inactiveDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                          "loudEvent": true,
                          "masterEvent": true,
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "notMoveable": true,
                          "packageEvent": true,
                          "packageId": 0,
                          "packageName": "string",
                          "purgeDate": "2020-07-13",
                          "subEvent": true,
                          "waitlistReturnStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "waitlisted": true
                        },
                        "eventPrimaryInfo": {
                          "eventId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "functionSpaceInformation": {
                          "comboSpace": true,
                          "discountPercentage": 0,
                          "elementSpace": true,
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "maximumOccupancy": 0,
                          "minimumOccupancy": 0,
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "rentalCode": "string",
                          "setdownTime": 0,
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "shareable": true
                        }
                      }
                    ],
                    "eventBlockInfo": {
                      "blockIdList": [
                        {
                          "id": "string",
                          "type": "string"
                        }
                      ]
                    },
                    "eventDetail": {
                      "alternateEvent": true,
                      "attendees": {
                        "actual": 0,
                        "billed": 0,
                        "expected": 0,
                        "guaranteed": 0,
                        "packageActual": 0,
                        "packageBilled": 0,
                        "packageExpected": 0,
                        "packageGuaranteed": 0,
                        "set": 0
                      },
                      "cateringDeductInventory": true,
                      "cateringStatusType": "Waitlist",
                      "createDateTime": "2020-07-13T15:33:16.494Z",
                      "creatorId": "string",
                      "displayDoorcard": true,
                      "doorcard": "string",
                      "eventLevelRevenueActualization": true,
                      "eventLink": {
                        "id": {
                          "id": "string",
                          "type": "string"
                        },
                        "masterEventDates": {
                          "endDateTime": "2020-07-13T15:33:16.494Z",
                          "startDateTime": "2020-07-13T15:33:16.494Z"
                        },
                        "type": "SubEvent"
                      },
                      "eventName": {
                        "defaultText": "string",
                        "translations": {
                          "text": [
                            {
                              "language": "string",
                              "value": "string"
                            }
                          ]
                        }
                      },
                      "eventShared": true,
                      "eventStatus": {
                        "color": "White",
                        "status": {
                          "code": "string",
                          "description": "string"
                        }
                      },
                      "eventTimeSpan": {
                        "endDateTime": "2020-07-13T15:33:16.494Z",
                        "startDateTime": "2020-07-13T15:33:16.494Z"
                      },
                      "eventType": "string",
                      "hasPostings": true,
                      "inactiveDate": "2020-07-13",
                      "includeSpaceInPackage": true,
                      "lastModifierId": "string",
                      "lastModifyDateTime": "2020-07-13T15:33:16.494Z",
                      "loudEvent": true,
                      "masterEvent": true,
                      "masterEventId": {
                        "id": "string",
                        "type": "string"
                      },
                      "notMoveable": true,
                      "packageEvent": true,
                      "packageId": 0,
                      "packageName": "string",
                      "purgeDate": "2020-07-13",
                      "subEvent": true,
                      "waitlistReturnStatus": {
                        "color": "White",
                        "status": {
                          "code": "string",
                          "description": "string"
                        }
                      },
                      "waitlisted": true
                    },
                    "eventIndicators": [
                      {
                        "count": 0,
                        "indicatorName": "string"
                      }
                    ],
                    "eventNotes": [
                      {
                        "comment": "string",
                        "createDateTime": "2020-07-13T15:33:16.511Z",
                        "creatorId": "string",
                        "internal": true,
                        "lastModifierId": "string",
                        "lastModifyDateTime": "2020-07-13T15:33:16.511Z",
                        "noteCode": "string",
                        "noteId": {
                          "id": "string",
                          "type": "string"
                        },
                        "noteTitle": "string",
                        "purgeDate": "2020-07-13",
                        "sequence": 0
                      }
                    ],
                    "eventPrimaryInfo": {
                      "eventId": {
                        "id": "string",
                        "idContext": "string",
                        "idExtension": 0,
                        "instance": "string",
                        "type": "string",
                        "url": "string"
                      },
                      "hotelId": "string",
                      "includeSubEvents": true
                    },
                    "eventResources": [
                      {
                        "consumptionBased": true,
                        "custom": true,
                        "discount": 0,
                        "eventEndDate": "2020-07-13",
                        "eventResourceNotes": [
                          {
                            "comment": "string",
                            "createDateTime": "2020-07-13T15:33:16.494Z",
                            "creatorId": "string",
                            "internal": true,
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-07-13T15:33:16.494Z",
                            "noteCode": "string",
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteTitle": "string",
                            "purgeDate": "2020-07-13",
                            "sequence": 0
                          }
                        ],
                        "eventStartDate": "2020-07-13",
                        "external": true,
                        "hasDiscountMenuItem": true,
                        "hasNotes": true,
                        "hotelId": "string",
                        "hours": 0,
                        "itemAttribute": "string",
                        "multiChoice": true,
                        "order": "string",
                        "packaged": true,
                        "persons": 0,
                        "quantity": 0,
                        "quantityExcluded": 0,
                        "quantityIncluded": 0,
                        "rentalCode": "string",
                        "resourceId": {
                          "id": "string",
                          "idContext": "string",
                          "idExtension": 0,
                          "instance": "string",
                          "type": "string",
                          "url": "string"
                        },
                        "resourceName": "string",
                        "resourceType": "FunctionSpace",
                        "revenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "sellEndDate": "2020-07-13",
                        "sellStartDate": "2020-07-13",
                        "setupCode": "string",
                        "unitPrice": {
                          "amount": 0,
                          "currencyCode": "string"
                        }
                      }
                    ],
                    "eventRevenues": {
                      "currencyCode": "string",
                      "eventLevelRevenueActualization": true,
                      "eventRevenueInformation": [
                        {
                          "actualRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "billedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "custom": true,
                          "expectedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "flatForecastRevenue": true,
                          "forecastRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "guaranteedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "ignoreForecast": true,
                          "onTheBooksRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "orderBy": 0,
                          "packaged": true,
                          "revenueType": {
                            "code": "string",
                            "displaySequence": 0,
                            "foodAndBeverage": true,
                            "inactive": true,
                            "revenueDetails": [
                              {
                                "hotelId": "string",
                                "revenueMinimum": true,
                                "tax": 0
                              }
                            ],
                            "revenueGroup": "string",
                            "translatableDescription": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "language": "string",
                                    "value": "string"
                                  }
                                ]
                              }
                            }
                          },
                          "totalCost": {
                            "amount": 0,
                            "currencyCode": "string"
                          }
                        }
                      ],
                      "excludeFromForecast": true,
                      "useForecastRevenue": true
                    },
                    "functionSpaceInformation": {
                      "comboSpace": true,
                      "discountPercentage": 0,
                      "elementSpace": true,
                      "functionSpaceCode": "string",
                      "functionSpaceDescription": "string",
                      "maximumOccupancy": 0,
                      "minimumOccupancy": 0,
                      "rateDesc": "string",
                      "rentalAmount": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "rentalCode": "string",
                      "setdownTime": 0,
                      "setupCode": "string",
                      "setupDescription": "string",
                      "setupTime": 0,
                      "shareable": true
                    },
                    "masterEventDetail": {
                      "eventDetail": {
                        "alternateEvent": true,
                        "attendees": {
                          "actual": 0,
                          "billed": 0,
                          "expected": 0,
                          "guaranteed": 0,
                          "packageActual": 0,
                          "packageBilled": 0,
                          "packageExpected": 0,
                          "packageGuaranteed": 0,
                          "set": 0
                        },
                        "cateringDeductInventory": true,
                        "cateringStatusType": "Waitlist",
                        "createDateTime": "2020-07-13T15:33:16.512Z",
                        "creatorId": "string",
                        "displayDoorcard": true,
                        "doorcard": "string",
                        "eventLevelRevenueActualization": true,
                        "eventLink": {
                          "id": {
                            "id": "string",
                            "type": "string"
                          },
                          "masterEventDates": {
                            "endDateTime": "2020-07-13T15:33:16.512Z",
                            "startDateTime": "2020-07-13T15:33:16.512Z"
                          },
                          "type": "SubEvent"
                        },
                        "eventName": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "eventShared": true,
                        "eventStatus": {
                          "color": "White",
                          "status": {
                            "code": "string",
                            "description": "string"
                          }
                        },
                        "eventTimeSpan": {
                          "endDateTime": "2020-07-13T15:33:16.512Z",
                          "startDateTime": "2020-07-13T15:33:16.512Z"
                        },
                        "eventType": "string",
                        "hasPostings": true,
                        "inactiveDate": "2020-07-13",
                        "includeSpaceInPackage": true,
                        "lastModifierId": "string",
                        "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                        "loudEvent": true,
                        "masterEvent": true,
                        "masterEventId": {
                          "id": "string",
                          "type": "string"
                        },
                        "notMoveable": true,
                        "packageEvent": true,
                        "packageId": 0,
                        "packageName": "string",
                        "purgeDate": "2020-07-13",
                        "subEvent": true,
                        "waitlistReturnStatus": {
                          "color": "White",
                          "status": {
                            "code": "string",
                            "description": "string"
                          }
                        },
                        "waitlisted": true
                      },
                      "eventPrimaryInfo": {
                        "eventId": {
                          "id": "string",
                          "idContext": "string",
                          "idExtension": 0,
                          "instance": "string",
                          "type": "string",
                          "url": "string"
                        },
                        "hotelId": "string",
                        "includeSubEvents": true
                      },
                      "functionSpaceInformation": {
                        "comboSpace": true,
                        "discountPercentage": 0,
                        "elementSpace": true,
                        "functionSpaceCode": "string",
                        "functionSpaceDescription": "string",
                        "maximumOccupancy": 0,
                        "minimumOccupancy": 0,
                        "rateDesc": "string",
                        "rentalAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "rentalCode": "string",
                        "setdownTime": 0,
                        "setupCode": "string",
                        "setupDescription": "string",
                        "setupTime": 0,
                        "shareable": true
                      }
                    },
                    "onTheBooksRevenue": {
                      "amount": 0,
                      "currencyCode": "string"
                    },
                    "processInstructions": {
                      "overbook": true,
                      "overrideCapacity": true,
                      "overrideMaxgroups": true,
                      "shareable": true,
                      "waitList": true,
                      "warnFunctionSpace": true
                    },
                    "subEventsDetail": [
                      {
                        "eventDetail": {
                          "alternateEvent": true,
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "cateringDeductInventory": true,
                          "cateringStatusType": "Waitlist",
                          "createDateTime": "2020-07-13T15:33:16.512Z",
                          "creatorId": "string",
                          "displayDoorcard": true,
                          "doorcard": "string",
                          "eventLevelRevenueActualization": true,
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "masterEventDates": {
                              "endDateTime": "2020-07-13T15:33:16.512Z",
                              "startDateTime": "2020-07-13T15:33:16.512Z"
                            },
                            "type": "SubEvent"
                          },
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "eventShared": true,
                          "eventStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "eventTimeSpan": {
                            "endDateTime": "2020-07-13T15:33:16.512Z",
                            "startDateTime": "2020-07-13T15:33:16.512Z"
                          },
                          "eventType": "string",
                          "hasPostings": true,
                          "inactiveDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                          "loudEvent": true,
                          "masterEvent": true,
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "notMoveable": true,
                          "packageEvent": true,
                          "packageId": 0,
                          "packageName": "string",
                          "purgeDate": "2020-07-13",
                          "subEvent": true,
                          "waitlistReturnStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "waitlisted": true
                        },
                        "eventPrimaryInfo": {
                          "eventId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "functionSpaceInformation": {
                          "comboSpace": true,
                          "discountPercentage": 0,
                          "elementSpace": true,
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "maximumOccupancy": 0,
                          "minimumOccupancy": 0,
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "rentalCode": "string",
                          "setdownTime": 0,
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "shareable": true
                        }
                      }
                    ]
                  },
                  "item": {
                    "eventItem": {
                      "actualExternalCostPerUnit": 0,
                      "actualExternalQuantity": 0,
                      "actualInternalCostPerUnit": 0,
                      "actualInternalQuantity": 0,
                      "actualQuantity": 0,
                      "attributeId": {
                        "id": "string",
                        "type": "string"
                      },
                      "attributes": [
                        {
                          "default": true,
                          "itemAttributeId": {
                            "id": "string",
                            "type": "string"
                          },
                          "setdownTime": 0,
                          "setupTime": 0,
                          "translatableName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "departments": [
                        "string"
                      ],
                      "discount": 0,
                      "displaySequence": 0,
                      "eventEndDate": "2020-07-13T15:33:16.512Z",
                      "eventStartDate": "2020-07-13T15:33:16.512Z",
                      "eventTypes": [
                        "string"
                      ],
                      "externalCostPerUnit": 0,
                      "externalOrder": true,
                      "externalQuantity": 0,
                      "hotelId": "string",
                      "internalCostPerUnit": 0,
                      "internalQuantity": 0,
                      "isExcludeNonDeduct": true,
                      "isNameCustom": true,
                      "itemClassCode": "string",
                      "itemClassDescription": "string",
                      "itemClassId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemCode": "string",
                      "itemDescription": "string",
                      "itemId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemName": {
                        "defaultText": "string",
                        "translations": {
                          "text": [
                            {
                              "language": "string",
                              "value": "string"
                            }
                          ]
                        }
                      },
                      "itemPool": "string",
                      "itemRateId": {
                        "id": "string",
                        "type": "string"
                      },
                      "order": 0,
                      "packageId": {
                        "id": "string",
                        "type": "string"
                      },
                      "price": 0,
                      "priceCode": "string",
                      "print": true,
                      "quantity": 0,
                      "rates": [
                        {
                          "default": true,
                          "hourly": true,
                          "itemRateCode": "string",
                          "itemRateId": {
                            "id": "string",
                            "type": "string"
                          },
                          "name": "string",
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          }
                        }
                      ],
                      "resourceNotes": [
                        {
                          "comment": "string",
                          "createDateTime": "2020-07-13T15:33:16.512Z",
                          "creatorId": "string",
                          "internal": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                          "noteCode": "string",
                          "noteId": {
                            "id": "string",
                            "type": "string"
                          },
                          "noteTitle": "string",
                          "purgeDate": "2020-07-13",
                          "sequence": 0
                        }
                      ],
                      "revenueType": "string",
                      "revenueTypeEditable": true,
                      "sellInfo": {
                        "available": {
                          "endDateTime": "2020-07-13T15:33:16.512Z",
                          "startDateTime": "2020-07-13T15:33:16.512Z"
                        },
                        "availableQty": 0,
                        "criticalInventory": true,
                        "defaultDuration": 0,
                        "defaultQty": 0,
                        "discountable": true,
                        "fixedCharge": true,
                        "itemClassDiscountable": true,
                        "itemClassWebBookable": true,
                        "outsideStay": true,
                        "price": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "qtyInStock": 0,
                        "sellControl": true,
                        "sellSeparate": true,
                        "webBookable": true,
                        "welcomeOffer": true
                      },
                      "setdownTime": 0,
                      "setupTime": 0,
                      "traceText": "string",
                      "usedForEvents": true,
                      "usedForReservation": true,
                      "vendorPrice": 0,
                      "vendors": [
                        {
                          "email": "string",
                          "fax": "string",
                          "leadTime": "string",
                          "name": "string",
                          "phone": "string",
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "priority": 0,
                          "profileId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          }
                        }
                      ]
                    },
                    "eventItemId": {
                      "id": "string",
                      "type": "string"
                    }
                  },
                  "menu": {
                    "eventMenu": {
                      "basicInfo": {
                        "attendees": {
                          "actual": 0,
                          "billed": 0,
                          "expected": 0,
                          "guaranteed": 0,
                          "packageActual": 0,
                          "packageBilled": 0,
                          "packageExpected": 0,
                          "packageGuaranteed": 0,
                          "set": 0
                        },
                        "className": "string",
                        "consumptionBased": true,
                        "courseCount": 0,
                        "description": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "dietaryList": [
                          "string"
                        ],
                        "discountPercentage": 0,
                        "eventDateRange": {
                          "eventEndDate": "2020-07-13",
                          "eventStartDate": "2020-07-13"
                        },
                        "eventTypes": [
                          "string"
                        ],
                        "hotelId": "string",
                        "inactive": true,
                        "includedInMenu": true,
                        "includedInPrice": true,
                        "menuId": {
                          "id": "string",
                          "type": "string"
                        },
                        "menusSold": 0,
                        "multiChoice": true,
                        "name": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "order": 0,
                        "quickInsertCode": "string",
                        "restriction": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "salesPrice": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "sellDateRange": {
                          "eventEndDate": "2020-07-13",
                          "eventStartDate": "2020-07-13"
                        },
                        "serveStartEndTime": {
                          "eventEndDate": "2020-07-13T15:33:16.512Z",
                          "eventStartDate": "2020-07-13T15:33:16.512Z"
                        },
                        "servingSize": "string",
                        "servingType": "Pp",
                        "type": "Food",
                        "webBookable": true
                      },
                      "hotelId": "string",
                      "menuItems": [
                        {
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "classInfo": {
                            "code": "string",
                            "description": "string"
                          },
                          "container": {
                            "code": "string",
                            "description": "string"
                          },
                          "cost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "course": 0,
                          "courseOrder": 0,
                          "custom": true,
                          "demandFactor": 0,
                          "description": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "discountPercentage": 0,
                          "eventMenuDetailID": {
                            "id": "string",
                            "type": "string"
                          },
                          "eventTypes": [
                            "string"
                          ],
                          "hotelId": "string",
                          "id": {
                            "id": "string",
                            "type": "string"
                          },
                          "inactive": true,
                          "includedYN": true,
                          "itemConsumption": true,
                          "mandatoryYN": true,
                          "menuType": "Food",
                          "name1": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "name2": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "name3": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "origin1": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "origin2": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "portion": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "print": true,
                          "quickInsertCode": "string",
                          "responsibleDepartments": [
                            "string"
                          ],
                          "restriction": "string",
                          "revenueType": "string",
                          "salesPrice": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "servings": 0,
                          "webBookable": true,
                          "year": 0
                        }
                      ],
                      "revenues": [
                        {
                          "cost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "costMargin": 0,
                          "custom": true,
                          "internalQuote": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "priceMargin": 0,
                          "resourceId": {
                            "id": "string",
                            "type": "string"
                          },
                          "revenueType": "string",
                          "type": "Food"
                        }
                      ]
                    },
                    "eventMenuId": {
                      "id": "string",
                      "type": "string"
                    }
                  }
                },
                "links": [
                  {
                    "href": "string",
                    "method": "GET",
                    "operationId": "string",
                    "rel": "string",
                    "targetSchema": "string",
                    "templated": false,
                    "title": "string"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "EventResourceByMenu not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/cateringEvents": {
      "put": {
        "description": "You can use this API to update one/more catering events for the same block <p><strong>OperationId:</strong>cateringEventsBulkUpdate</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Update multiple catering events",
        "operationId": "cateringEventsBulkUpdate",
        "parameters": [
          {
            "description": "Request object that will Change a list of events.",
            "name": "cateringEventsBulkUpdate",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cateringEventsBulkUpdate"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Status/Info of the processed event(s).",
            "schema": {
              "$ref": "#/definitions/cateringEventsBulkUpdateStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/cateringPackagesRevenue": {
      "put": {
        "description": "Update the catering package revenue on a block. <p><strong>OperationId:</strong>changeCateringPackageRevenue</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Update Catering package revenue",
        "operationId": "changeCateringPackageRevenue",
        "parameters": [
          {
            "description": "Request object for changing revenue details of the associated catering package.",
            "name": "cateringPackageRevenue",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cateringPackageRevenue"
                },
                {
                  "example": {
                    "cateringPackageRevenueDetails": {
                      "blockInfo": {
                        "blockIdList": [
                          {
                            "id": "string",
                            "type": "string"
                          }
                        ]
                      },
                      "flatPrice": true,
                      "packageDetail": {
                        "description": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "duration": 0,
                        "isTemplate": true,
                        "pkgCode": "string",
                        "webBookable": true
                      },
                      "packageId": {
                        "id": "string",
                        "type": "string"
                      },
                      "priceCode": "string",
                      "priceDescription": "string",
                      "revenues": [
                        {
                          "costExpected": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "eventName": "string",
                          "eventTimeSpan": {
                            "endDateTime": "2020-07-17T09:13:02.425Z",
                            "startDateTime": "2020-07-17T09:13:02.425Z"
                          },
                          "eventType": "string",
                          "orderBy": 0,
                          "packageEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "revExpected": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "revForecast": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "revType": "string"
                        }
                      ]
                    },
                    "links": [
                      {
                        "href": "string",
                        "method": "GET",
                        "operationId": "string",
                        "rel": "string",
                        "targetSchema": "string",
                        "templated": false,
                        "title": "string"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/cateringPackageRevenue"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Delete the catering package revenue on a block. <p><strong>OperationId:</strong>deleteCateringPackageRevenue</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Delete Catering package revenue",
        "operationId": "deleteCateringPackageRevenue",
        "parameters": [
          {
            "type": "string",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "cateringPackageEventId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Revenue Type associated with the Catering Package Price Code.",
            "name": "cateringPackageRevenueType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/eventResource": {
      "put": {
        "description": "Use this API to update the Event Resources by specifying the block ID, and event ID in the request. <p><strong>OperationId:</strong>changeEventResourceByMenu</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Update Event Resource ",
        "operationId": "changeEventResourceByMenu",
        "parameters": [
          {
            "description": "Request object for modifying event resource details.",
            "name": "eventResource",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/eventResource"
                },
                {
                  "example": {
                    "eventResourceDetails": {
                      "eventDetailInfo": {
                        "altEventsDetail": [
                          {
                            "eventDetail": {
                              "alternateEvent": true,
                              "attendees": {
                                "actual": 0,
                                "billed": 0,
                                "expected": 0,
                                "guaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "set": 0
                              },
                              "cateringDeductInventory": true,
                              "cateringStatusType": "Waitlist",
                              "createDateTime": "2020-07-13T15:33:16.512Z",
                              "creatorId": "string",
                              "displayDoorcard": true,
                              "doorcard": "string",
                              "eventLevelRevenueActualization": true,
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "masterEventDates": {
                                  "endDateTime": "2020-07-13T15:33:16.512Z",
                                  "startDateTime": "2020-07-13T15:33:16.512Z"
                                },
                                "type": "SubEvent"
                              },
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "eventShared": true,
                              "eventStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "eventTimeSpan": {
                                "endDateTime": "2020-07-13T15:33:16.512Z",
                                "startDateTime": "2020-07-13T15:33:16.512Z"
                              },
                              "eventType": "string",
                              "hasPostings": true,
                              "inactiveDate": "2020-07-13",
                              "includeSpaceInPackage": true,
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                              "loudEvent": true,
                              "masterEvent": true,
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "notMoveable": true,
                              "packageEvent": true,
                              "packageId": 0,
                              "packageName": "string",
                              "purgeDate": "2020-07-13",
                              "subEvent": true,
                              "waitlistReturnStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "waitlisted": true
                            },
                            "eventPrimaryInfo": {
                              "eventId": {
                                "id": "string",
                                "idContext": "string",
                                "idExtension": 0,
                                "instance": "string",
                                "type": "string",
                                "url": "string"
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "functionSpaceInformation": {
                              "comboSpace": true,
                              "discountPercentage": 0,
                              "elementSpace": true,
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "maximumOccupancy": 0,
                              "minimumOccupancy": 0,
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "rentalCode": "string",
                              "setdownTime": 0,
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "shareable": true
                            }
                          }
                        ],
                        "eventBlockInfo": {
                          "blockIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ]
                        },
                        "eventDetail": {
                          "alternateEvent": true,
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "cateringDeductInventory": true,
                          "cateringStatusType": "Waitlist",
                          "createDateTime": "2020-07-13T15:33:16.494Z",
                          "creatorId": "string",
                          "displayDoorcard": true,
                          "doorcard": "string",
                          "eventLevelRevenueActualization": true,
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "masterEventDates": {
                              "endDateTime": "2020-07-13T15:33:16.494Z",
                              "startDateTime": "2020-07-13T15:33:16.494Z"
                            },
                            "type": "SubEvent"
                          },
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "eventShared": true,
                          "eventStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "eventTimeSpan": {
                            "endDateTime": "2020-07-13T15:33:16.494Z",
                            "startDateTime": "2020-07-13T15:33:16.494Z"
                          },
                          "eventType": "string",
                          "hasPostings": true,
                          "inactiveDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-13T15:33:16.494Z",
                          "loudEvent": true,
                          "masterEvent": true,
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "notMoveable": true,
                          "packageEvent": true,
                          "packageId": 0,
                          "packageName": "string",
                          "purgeDate": "2020-07-13",
                          "subEvent": true,
                          "waitlistReturnStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "waitlisted": true
                        },
                        "eventIndicators": [
                          {
                            "count": 0,
                            "indicatorName": "string"
                          }
                        ],
                        "eventNotes": [
                          {
                            "comment": "string",
                            "createDateTime": "2020-07-13T15:33:16.511Z",
                            "creatorId": "string",
                            "internal": true,
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-07-13T15:33:16.511Z",
                            "noteCode": "string",
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteTitle": "string",
                            "purgeDate": "2020-07-13",
                            "sequence": 0
                          }
                        ],
                        "eventPrimaryInfo": {
                          "eventId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventResources": [
                          {
                            "consumptionBased": true,
                            "custom": true,
                            "discount": 0,
                            "eventEndDate": "2020-07-13",
                            "eventResourceNotes": [
                              {
                                "comment": "string",
                                "createDateTime": "2020-07-13T15:33:16.494Z",
                                "creatorId": "string",
                                "internal": true,
                                "lastModifierId": "string",
                                "lastModifyDateTime": "2020-07-13T15:33:16.494Z",
                                "noteCode": "string",
                                "noteId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "noteTitle": "string",
                                "purgeDate": "2020-07-13",
                                "sequence": 0
                              }
                            ],
                            "eventStartDate": "2020-07-13",
                            "external": true,
                            "hasDiscountMenuItem": true,
                            "hasNotes": true,
                            "hotelId": "string",
                            "hours": 0,
                            "itemAttribute": "string",
                            "multiChoice": true,
                            "order": "string",
                            "packaged": true,
                            "persons": 0,
                            "quantity": 0,
                            "quantityExcluded": 0,
                            "quantityIncluded": 0,
                            "rentalCode": "string",
                            "resourceId": {
                              "id": "string",
                              "idContext": "string",
                              "idExtension": 0,
                              "instance": "string",
                              "type": "string",
                              "url": "string"
                            },
                            "resourceName": "string",
                            "resourceType": "FunctionSpace",
                            "revenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "sellEndDate": "2020-07-13",
                            "sellStartDate": "2020-07-13",
                            "setupCode": "string",
                            "unitPrice": {
                              "amount": 0,
                              "currencyCode": "string"
                            }
                          }
                        ],
                        "eventRevenues": {
                          "currencyCode": "string",
                          "eventLevelRevenueActualization": true,
                          "eventRevenueInformation": [
                            {
                              "actualRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "billedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "custom": true,
                              "expectedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "flatForecastRevenue": true,
                              "forecastRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "guaranteedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "ignoreForecast": true,
                              "onTheBooksRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "orderBy": 0,
                              "packaged": true,
                              "revenueType": {
                                "code": "string",
                                "displaySequence": 0,
                                "foodAndBeverage": true,
                                "inactive": true,
                                "revenueDetails": [
                                  {
                                    "hotelId": "string",
                                    "revenueMinimum": true,
                                    "tax": 0
                                  }
                                ],
                                "revenueGroup": "string",
                                "translatableDescription": {
                                  "defaultText": "string",
                                  "translations": {
                                    "text": [
                                      {
                                        "language": "string",
                                        "value": "string"
                                      }
                                    ]
                                  }
                                }
                              },
                              "totalCost": {
                                "amount": 0,
                                "currencyCode": "string"
                              }
                            }
                          ],
                          "excludeFromForecast": true,
                          "useForecastRevenue": true
                        },
                        "functionSpaceInformation": {
                          "comboSpace": true,
                          "discountPercentage": 0,
                          "elementSpace": true,
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "maximumOccupancy": 0,
                          "minimumOccupancy": 0,
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "rentalCode": "string",
                          "setdownTime": 0,
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "shareable": true
                        },
                        "masterEventDetail": {
                          "eventDetail": {
                            "alternateEvent": true,
                            "attendees": {
                              "actual": 0,
                              "billed": 0,
                              "expected": 0,
                              "guaranteed": 0,
                              "packageActual": 0,
                              "packageBilled": 0,
                              "packageExpected": 0,
                              "packageGuaranteed": 0,
                              "set": 0
                            },
                            "cateringDeductInventory": true,
                            "cateringStatusType": "Waitlist",
                            "createDateTime": "2020-07-13T15:33:16.512Z",
                            "creatorId": "string",
                            "displayDoorcard": true,
                            "doorcard": "string",
                            "eventLevelRevenueActualization": true,
                            "eventLink": {
                              "id": {
                                "id": "string",
                                "type": "string"
                              },
                              "masterEventDates": {
                                "endDateTime": "2020-07-13T15:33:16.512Z",
                                "startDateTime": "2020-07-13T15:33:16.512Z"
                              },
                              "type": "SubEvent"
                            },
                            "eventName": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "language": "string",
                                    "value": "string"
                                  }
                                ]
                              }
                            },
                            "eventShared": true,
                            "eventStatus": {
                              "color": "White",
                              "status": {
                                "code": "string",
                                "description": "string"
                              }
                            },
                            "eventTimeSpan": {
                              "endDateTime": "2020-07-13T15:33:16.512Z",
                              "startDateTime": "2020-07-13T15:33:16.512Z"
                            },
                            "eventType": "string",
                            "hasPostings": true,
                            "inactiveDate": "2020-07-13",
                            "includeSpaceInPackage": true,
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                            "loudEvent": true,
                            "masterEvent": true,
                            "masterEventId": {
                              "id": "string",
                              "type": "string"
                            },
                            "notMoveable": true,
                            "packageEvent": true,
                            "packageId": 0,
                            "packageName": "string",
                            "purgeDate": "2020-07-13",
                            "subEvent": true,
                            "waitlistReturnStatus": {
                              "color": "White",
                              "status": {
                                "code": "string",
                                "description": "string"
                              }
                            },
                            "waitlisted": true
                          },
                          "eventPrimaryInfo": {
                            "eventId": {
                              "id": "string",
                              "idContext": "string",
                              "idExtension": 0,
                              "instance": "string",
                              "type": "string",
                              "url": "string"
                            },
                            "hotelId": "string",
                            "includeSubEvents": true
                          },
                          "functionSpaceInformation": {
                            "comboSpace": true,
                            "discountPercentage": 0,
                            "elementSpace": true,
                            "functionSpaceCode": "string",
                            "functionSpaceDescription": "string",
                            "maximumOccupancy": 0,
                            "minimumOccupancy": 0,
                            "rateDesc": "string",
                            "rentalAmount": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "rentalCode": "string",
                            "setdownTime": 0,
                            "setupCode": "string",
                            "setupDescription": "string",
                            "setupTime": 0,
                            "shareable": true
                          }
                        },
                        "onTheBooksRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "processInstructions": {
                          "overbook": true,
                          "overrideCapacity": true,
                          "overrideMaxgroups": true,
                          "shareable": true,
                          "waitList": true,
                          "warnFunctionSpace": true
                        },
                        "subEventsDetail": [
                          {
                            "eventDetail": {
                              "alternateEvent": true,
                              "attendees": {
                                "actual": 0,
                                "billed": 0,
                                "expected": 0,
                                "guaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "set": 0
                              },
                              "cateringDeductInventory": true,
                              "cateringStatusType": "Waitlist",
                              "createDateTime": "2020-07-13T15:33:16.512Z",
                              "creatorId": "string",
                              "displayDoorcard": true,
                              "doorcard": "string",
                              "eventLevelRevenueActualization": true,
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "masterEventDates": {
                                  "endDateTime": "2020-07-13T15:33:16.512Z",
                                  "startDateTime": "2020-07-13T15:33:16.512Z"
                                },
                                "type": "SubEvent"
                              },
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "eventShared": true,
                              "eventStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "eventTimeSpan": {
                                "endDateTime": "2020-07-13T15:33:16.512Z",
                                "startDateTime": "2020-07-13T15:33:16.512Z"
                              },
                              "eventType": "string",
                              "hasPostings": true,
                              "inactiveDate": "2020-07-13",
                              "includeSpaceInPackage": true,
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                              "loudEvent": true,
                              "masterEvent": true,
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "notMoveable": true,
                              "packageEvent": true,
                              "packageId": 0,
                              "packageName": "string",
                              "purgeDate": "2020-07-13",
                              "subEvent": true,
                              "waitlistReturnStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "waitlisted": true
                            },
                            "eventPrimaryInfo": {
                              "eventId": {
                                "id": "string",
                                "idContext": "string",
                                "idExtension": 0,
                                "instance": "string",
                                "type": "string",
                                "url": "string"
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "functionSpaceInformation": {
                              "comboSpace": true,
                              "discountPercentage": 0,
                              "elementSpace": true,
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "maximumOccupancy": 0,
                              "minimumOccupancy": 0,
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "rentalCode": "string",
                              "setdownTime": 0,
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "shareable": true
                            }
                          }
                        ]
                      },
                      "item": {
                        "eventItem": {
                          "actualExternalCostPerUnit": 0,
                          "actualExternalQuantity": 0,
                          "actualInternalCostPerUnit": 0,
                          "actualInternalQuantity": 0,
                          "actualQuantity": 0,
                          "attributeId": {
                            "id": "string",
                            "type": "string"
                          },
                          "attributes": [
                            {
                              "default": true,
                              "itemAttributeId": {
                                "id": "string",
                                "type": "string"
                              },
                              "setdownTime": 0,
                              "setupTime": 0,
                              "translatableName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "departments": [
                            "string"
                          ],
                          "discount": 0,
                          "displaySequence": 0,
                          "eventEndDate": "2020-07-13T15:33:16.512Z",
                          "eventStartDate": "2020-07-13T15:33:16.512Z",
                          "eventTypes": [
                            "string"
                          ],
                          "externalCostPerUnit": 0,
                          "externalOrder": true,
                          "externalQuantity": 0,
                          "hotelId": "string",
                          "internalCostPerUnit": 0,
                          "internalQuantity": 0,
                          "isExcludeNonDeduct": true,
                          "isNameCustom": true,
                          "itemClassCode": "string",
                          "itemClassDescription": "string",
                          "itemClassId": {
                            "id": "string",
                            "type": "string"
                          },
                          "itemCode": "string",
                          "itemDescription": "string",
                          "itemId": {
                            "id": "string",
                            "type": "string"
                          },
                          "itemName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "itemPool": "string",
                          "itemRateId": {
                            "id": "string",
                            "type": "string"
                          },
                          "order": 0,
                          "packageId": {
                            "id": "string",
                            "type": "string"
                          },
                          "price": 0,
                          "priceCode": "string",
                          "print": true,
                          "quantity": 0,
                          "rates": [
                            {
                              "default": true,
                              "hourly": true,
                              "itemRateCode": "string",
                              "itemRateId": {
                                "id": "string",
                                "type": "string"
                              },
                              "name": "string",
                              "price": {
                                "amount": 0,
                                "currencyCode": "string"
                              }
                            }
                          ],
                          "resourceNotes": [
                            {
                              "comment": "string",
                              "createDateTime": "2020-07-13T15:33:16.512Z",
                              "creatorId": "string",
                              "internal": true,
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                              "noteCode": "string",
                              "noteId": {
                                "id": "string",
                                "type": "string"
                              },
                              "noteTitle": "string",
                              "purgeDate": "2020-07-13",
                              "sequence": 0
                            }
                          ],
                          "revenueType": "string",
                          "revenueTypeEditable": true,
                          "sellInfo": {
                            "available": {
                              "endDateTime": "2020-07-13T15:33:16.512Z",
                              "startDateTime": "2020-07-13T15:33:16.512Z"
                            },
                            "availableQty": 0,
                            "criticalInventory": true,
                            "defaultDuration": 0,
                            "defaultQty": 0,
                            "discountable": true,
                            "fixedCharge": true,
                            "itemClassDiscountable": true,
                            "itemClassWebBookable": true,
                            "outsideStay": true,
                            "price": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "qtyInStock": 0,
                            "sellControl": true,
                            "sellSeparate": true,
                            "webBookable": true,
                            "welcomeOffer": true
                          },
                          "setdownTime": 0,
                          "setupTime": 0,
                          "traceText": "string",
                          "usedForEvents": true,
                          "usedForReservation": true,
                          "vendorPrice": 0,
                          "vendors": [
                            {
                              "email": "string",
                              "fax": "string",
                              "leadTime": "string",
                              "name": "string",
                              "phone": "string",
                              "price": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "priority": 0,
                              "profileId": {
                                "id": "string",
                                "idContext": "string",
                                "idExtension": 0,
                                "instance": "string",
                                "type": "string",
                                "url": "string"
                              }
                            }
                          ]
                        },
                        "eventItemId": {
                          "id": "string",
                          "type": "string"
                        }
                      },
                      "menu": {
                        "eventMenu": {
                          "basicInfo": {
                            "attendees": {
                              "actual": 0,
                              "billed": 0,
                              "expected": 0,
                              "guaranteed": 0,
                              "packageActual": 0,
                              "packageBilled": 0,
                              "packageExpected": 0,
                              "packageGuaranteed": 0,
                              "set": 0
                            },
                            "className": "string",
                            "consumptionBased": true,
                            "courseCount": 0,
                            "description": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "language": "string",
                                    "value": "string"
                                  }
                                ]
                              }
                            },
                            "dietaryList": [
                              "string"
                            ],
                            "discountPercentage": 0,
                            "eventDateRange": {
                              "eventEndDate": "2020-07-13",
                              "eventStartDate": "2020-07-13"
                            },
                            "eventTypes": [
                              "string"
                            ],
                            "hotelId": "string",
                            "inactive": true,
                            "includedInMenu": true,
                            "includedInPrice": true,
                            "menuId": {
                              "id": "string",
                              "type": "string"
                            },
                            "menusSold": 0,
                            "multiChoice": true,
                            "name": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "language": "string",
                                    "value": "string"
                                  }
                                ]
                              }
                            },
                            "order": 0,
                            "quickInsertCode": "string",
                            "restriction": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "language": "string",
                                    "value": "string"
                                  }
                                ]
                              }
                            },
                            "salesPrice": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "sellDateRange": {
                              "eventEndDate": "2020-07-13",
                              "eventStartDate": "2020-07-13"
                            },
                            "serveStartEndTime": {
                              "eventEndDate": "2020-07-13T15:33:16.512Z",
                              "eventStartDate": "2020-07-13T15:33:16.512Z"
                            },
                            "servingSize": "string",
                            "servingType": "Pp",
                            "type": "Food",
                            "webBookable": true
                          },
                          "hotelId": "string",
                          "menuItems": [
                            {
                              "attendees": {
                                "actual": 0,
                                "billed": 0,
                                "expected": 0,
                                "guaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "set": 0
                              },
                              "classInfo": {
                                "code": "string",
                                "description": "string"
                              },
                              "container": {
                                "code": "string",
                                "description": "string"
                              },
                              "cost": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "course": 0,
                              "courseOrder": 0,
                              "custom": true,
                              "demandFactor": 0,
                              "description": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "discountPercentage": 0,
                              "eventMenuDetailID": {
                                "id": "string",
                                "type": "string"
                              },
                              "eventTypes": [
                                "string"
                              ],
                              "hotelId": "string",
                              "id": {
                                "id": "string",
                                "type": "string"
                              },
                              "inactive": true,
                              "includedYN": true,
                              "itemConsumption": true,
                              "mandatoryYN": true,
                              "menuType": "Food",
                              "name1": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "name2": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "name3": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "origin1": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "origin2": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "portion": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "print": true,
                              "quickInsertCode": "string",
                              "responsibleDepartments": [
                                "string"
                              ],
                              "restriction": "string",
                              "revenueType": "string",
                              "salesPrice": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "servings": 0,
                              "webBookable": true,
                              "year": 0
                            }
                          ],
                          "revenues": [
                            {
                              "cost": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "costMargin": 0,
                              "custom": true,
                              "internalQuote": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "price": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "priceMargin": 0,
                              "resourceId": {
                                "id": "string",
                                "type": "string"
                              },
                              "revenueType": "string",
                              "type": "Food"
                            }
                          ]
                        },
                        "eventMenuId": {
                          "id": "string",
                          "type": "string"
                        }
                      }
                    },
                    "links": [
                      {
                        "href": "string",
                        "method": "GET",
                        "operationId": "string",
                        "rel": "string",
                        "targetSchema": "string",
                        "templated": false,
                        "title": "string"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/eventResource"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "examples": {
              "application/json": {
                "eventResourceDetails": {
                  "eventDetailInfo": {
                    "altEventsDetail": [
                      {
                        "eventDetail": {
                          "alternateEvent": true,
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "cateringDeductInventory": true,
                          "cateringStatusType": "Waitlist",
                          "createDateTime": "2020-07-13T15:33:16.512Z",
                          "creatorId": "string",
                          "displayDoorcard": true,
                          "doorcard": "string",
                          "eventLevelRevenueActualization": true,
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "masterEventDates": {
                              "endDateTime": "2020-07-13T15:33:16.512Z",
                              "startDateTime": "2020-07-13T15:33:16.512Z"
                            },
                            "type": "SubEvent"
                          },
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "eventShared": true,
                          "eventStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "eventTimeSpan": {
                            "endDateTime": "2020-07-13T15:33:16.512Z",
                            "startDateTime": "2020-07-13T15:33:16.512Z"
                          },
                          "eventType": "string",
                          "hasPostings": true,
                          "inactiveDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                          "loudEvent": true,
                          "masterEvent": true,
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "notMoveable": true,
                          "packageEvent": true,
                          "packageId": 0,
                          "packageName": "string",
                          "purgeDate": "2020-07-13",
                          "subEvent": true,
                          "waitlistReturnStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "waitlisted": true
                        },
                        "eventPrimaryInfo": {
                          "eventId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "functionSpaceInformation": {
                          "comboSpace": true,
                          "discountPercentage": 0,
                          "elementSpace": true,
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "maximumOccupancy": 0,
                          "minimumOccupancy": 0,
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "rentalCode": "string",
                          "setdownTime": 0,
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "shareable": true
                        }
                      }
                    ],
                    "eventBlockInfo": {
                      "blockIdList": [
                        {
                          "id": "string",
                          "type": "string"
                        }
                      ]
                    },
                    "eventDetail": {
                      "alternateEvent": true,
                      "attendees": {
                        "actual": 0,
                        "billed": 0,
                        "expected": 0,
                        "guaranteed": 0,
                        "packageActual": 0,
                        "packageBilled": 0,
                        "packageExpected": 0,
                        "packageGuaranteed": 0,
                        "set": 0
                      },
                      "cateringDeductInventory": true,
                      "cateringStatusType": "Waitlist",
                      "createDateTime": "2020-07-13T15:33:16.494Z",
                      "creatorId": "string",
                      "displayDoorcard": true,
                      "doorcard": "string",
                      "eventLevelRevenueActualization": true,
                      "eventLink": {
                        "id": {
                          "id": "string",
                          "type": "string"
                        },
                        "masterEventDates": {
                          "endDateTime": "2020-07-13T15:33:16.494Z",
                          "startDateTime": "2020-07-13T15:33:16.494Z"
                        },
                        "type": "SubEvent"
                      },
                      "eventName": {
                        "defaultText": "string",
                        "translations": {
                          "text": [
                            {
                              "language": "string",
                              "value": "string"
                            }
                          ]
                        }
                      },
                      "eventShared": true,
                      "eventStatus": {
                        "color": "White",
                        "status": {
                          "code": "string",
                          "description": "string"
                        }
                      },
                      "eventTimeSpan": {
                        "endDateTime": "2020-07-13T15:33:16.494Z",
                        "startDateTime": "2020-07-13T15:33:16.494Z"
                      },
                      "eventType": "string",
                      "hasPostings": true,
                      "inactiveDate": "2020-07-13",
                      "includeSpaceInPackage": true,
                      "lastModifierId": "string",
                      "lastModifyDateTime": "2020-07-13T15:33:16.494Z",
                      "loudEvent": true,
                      "masterEvent": true,
                      "masterEventId": {
                        "id": "string",
                        "type": "string"
                      },
                      "notMoveable": true,
                      "packageEvent": true,
                      "packageId": 0,
                      "packageName": "string",
                      "purgeDate": "2020-07-13",
                      "subEvent": true,
                      "waitlistReturnStatus": {
                        "color": "White",
                        "status": {
                          "code": "string",
                          "description": "string"
                        }
                      },
                      "waitlisted": true
                    },
                    "eventIndicators": [
                      {
                        "count": 0,
                        "indicatorName": "string"
                      }
                    ],
                    "eventNotes": [
                      {
                        "comment": "string",
                        "createDateTime": "2020-07-13T15:33:16.511Z",
                        "creatorId": "string",
                        "internal": true,
                        "lastModifierId": "string",
                        "lastModifyDateTime": "2020-07-13T15:33:16.511Z",
                        "noteCode": "string",
                        "noteId": {
                          "id": "string",
                          "type": "string"
                        },
                        "noteTitle": "string",
                        "purgeDate": "2020-07-13",
                        "sequence": 0
                      }
                    ],
                    "eventPrimaryInfo": {
                      "eventId": {
                        "id": "string",
                        "idContext": "string",
                        "idExtension": 0,
                        "instance": "string",
                        "type": "string",
                        "url": "string"
                      },
                      "hotelId": "string",
                      "includeSubEvents": true
                    },
                    "eventResources": [
                      {
                        "consumptionBased": true,
                        "custom": true,
                        "discount": 0,
                        "eventEndDate": "2020-07-13",
                        "eventResourceNotes": [
                          {
                            "comment": "string",
                            "createDateTime": "2020-07-13T15:33:16.494Z",
                            "creatorId": "string",
                            "internal": true,
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-07-13T15:33:16.494Z",
                            "noteCode": "string",
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteTitle": "string",
                            "purgeDate": "2020-07-13",
                            "sequence": 0
                          }
                        ],
                        "eventStartDate": "2020-07-13",
                        "external": true,
                        "hasDiscountMenuItem": true,
                        "hasNotes": true,
                        "hotelId": "string",
                        "hours": 0,
                        "itemAttribute": "string",
                        "multiChoice": true,
                        "order": "string",
                        "packaged": true,
                        "persons": 0,
                        "quantity": 0,
                        "quantityExcluded": 0,
                        "quantityIncluded": 0,
                        "rentalCode": "string",
                        "resourceId": {
                          "id": "string",
                          "idContext": "string",
                          "idExtension": 0,
                          "instance": "string",
                          "type": "string",
                          "url": "string"
                        },
                        "resourceName": "string",
                        "resourceType": "FunctionSpace",
                        "revenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "sellEndDate": "2020-07-13",
                        "sellStartDate": "2020-07-13",
                        "setupCode": "string",
                        "unitPrice": {
                          "amount": 0,
                          "currencyCode": "string"
                        }
                      }
                    ],
                    "eventRevenues": {
                      "currencyCode": "string",
                      "eventLevelRevenueActualization": true,
                      "eventRevenueInformation": [
                        {
                          "actualRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "billedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "custom": true,
                          "expectedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "flatForecastRevenue": true,
                          "forecastRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "guaranteedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "ignoreForecast": true,
                          "onTheBooksRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "orderBy": 0,
                          "packaged": true,
                          "revenueType": {
                            "code": "string",
                            "displaySequence": 0,
                            "foodAndBeverage": true,
                            "inactive": true,
                            "revenueDetails": [
                              {
                                "hotelId": "string",
                                "revenueMinimum": true,
                                "tax": 0
                              }
                            ],
                            "revenueGroup": "string",
                            "translatableDescription": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "language": "string",
                                    "value": "string"
                                  }
                                ]
                              }
                            }
                          },
                          "totalCost": {
                            "amount": 0,
                            "currencyCode": "string"
                          }
                        }
                      ],
                      "excludeFromForecast": true,
                      "useForecastRevenue": true
                    },
                    "functionSpaceInformation": {
                      "comboSpace": true,
                      "discountPercentage": 0,
                      "elementSpace": true,
                      "functionSpaceCode": "string",
                      "functionSpaceDescription": "string",
                      "maximumOccupancy": 0,
                      "minimumOccupancy": 0,
                      "rateDesc": "string",
                      "rentalAmount": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "rentalCode": "string",
                      "setdownTime": 0,
                      "setupCode": "string",
                      "setupDescription": "string",
                      "setupTime": 0,
                      "shareable": true
                    },
                    "masterEventDetail": {
                      "eventDetail": {
                        "alternateEvent": true,
                        "attendees": {
                          "actual": 0,
                          "billed": 0,
                          "expected": 0,
                          "guaranteed": 0,
                          "packageActual": 0,
                          "packageBilled": 0,
                          "packageExpected": 0,
                          "packageGuaranteed": 0,
                          "set": 0
                        },
                        "cateringDeductInventory": true,
                        "cateringStatusType": "Waitlist",
                        "createDateTime": "2020-07-13T15:33:16.512Z",
                        "creatorId": "string",
                        "displayDoorcard": true,
                        "doorcard": "string",
                        "eventLevelRevenueActualization": true,
                        "eventLink": {
                          "id": {
                            "id": "string",
                            "type": "string"
                          },
                          "masterEventDates": {
                            "endDateTime": "2020-07-13T15:33:16.512Z",
                            "startDateTime": "2020-07-13T15:33:16.512Z"
                          },
                          "type": "SubEvent"
                        },
                        "eventName": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "eventShared": true,
                        "eventStatus": {
                          "color": "White",
                          "status": {
                            "code": "string",
                            "description": "string"
                          }
                        },
                        "eventTimeSpan": {
                          "endDateTime": "2020-07-13T15:33:16.512Z",
                          "startDateTime": "2020-07-13T15:33:16.512Z"
                        },
                        "eventType": "string",
                        "hasPostings": true,
                        "inactiveDate": "2020-07-13",
                        "includeSpaceInPackage": true,
                        "lastModifierId": "string",
                        "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                        "loudEvent": true,
                        "masterEvent": true,
                        "masterEventId": {
                          "id": "string",
                          "type": "string"
                        },
                        "notMoveable": true,
                        "packageEvent": true,
                        "packageId": 0,
                        "packageName": "string",
                        "purgeDate": "2020-07-13",
                        "subEvent": true,
                        "waitlistReturnStatus": {
                          "color": "White",
                          "status": {
                            "code": "string",
                            "description": "string"
                          }
                        },
                        "waitlisted": true
                      },
                      "eventPrimaryInfo": {
                        "eventId": {
                          "id": "string",
                          "idContext": "string",
                          "idExtension": 0,
                          "instance": "string",
                          "type": "string",
                          "url": "string"
                        },
                        "hotelId": "string",
                        "includeSubEvents": true
                      },
                      "functionSpaceInformation": {
                        "comboSpace": true,
                        "discountPercentage": 0,
                        "elementSpace": true,
                        "functionSpaceCode": "string",
                        "functionSpaceDescription": "string",
                        "maximumOccupancy": 0,
                        "minimumOccupancy": 0,
                        "rateDesc": "string",
                        "rentalAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "rentalCode": "string",
                        "setdownTime": 0,
                        "setupCode": "string",
                        "setupDescription": "string",
                        "setupTime": 0,
                        "shareable": true
                      }
                    },
                    "onTheBooksRevenue": {
                      "amount": 0,
                      "currencyCode": "string"
                    },
                    "processInstructions": {
                      "overbook": true,
                      "overrideCapacity": true,
                      "overrideMaxgroups": true,
                      "shareable": true,
                      "waitList": true,
                      "warnFunctionSpace": true
                    },
                    "subEventsDetail": [
                      {
                        "eventDetail": {
                          "alternateEvent": true,
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "cateringDeductInventory": true,
                          "cateringStatusType": "Waitlist",
                          "createDateTime": "2020-07-13T15:33:16.512Z",
                          "creatorId": "string",
                          "displayDoorcard": true,
                          "doorcard": "string",
                          "eventLevelRevenueActualization": true,
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "masterEventDates": {
                              "endDateTime": "2020-07-13T15:33:16.512Z",
                              "startDateTime": "2020-07-13T15:33:16.512Z"
                            },
                            "type": "SubEvent"
                          },
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "eventShared": true,
                          "eventStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "eventTimeSpan": {
                            "endDateTime": "2020-07-13T15:33:16.512Z",
                            "startDateTime": "2020-07-13T15:33:16.512Z"
                          },
                          "eventType": "string",
                          "hasPostings": true,
                          "inactiveDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                          "loudEvent": true,
                          "masterEvent": true,
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "notMoveable": true,
                          "packageEvent": true,
                          "packageId": 0,
                          "packageName": "string",
                          "purgeDate": "2020-07-13",
                          "subEvent": true,
                          "waitlistReturnStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "waitlisted": true
                        },
                        "eventPrimaryInfo": {
                          "eventId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "functionSpaceInformation": {
                          "comboSpace": true,
                          "discountPercentage": 0,
                          "elementSpace": true,
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "maximumOccupancy": 0,
                          "minimumOccupancy": 0,
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "rentalCode": "string",
                          "setdownTime": 0,
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "shareable": true
                        }
                      }
                    ]
                  },
                  "item": {
                    "eventItem": {
                      "actualExternalCostPerUnit": 0,
                      "actualExternalQuantity": 0,
                      "actualInternalCostPerUnit": 0,
                      "actualInternalQuantity": 0,
                      "actualQuantity": 0,
                      "attributeId": {
                        "id": "string",
                        "type": "string"
                      },
                      "attributes": [
                        {
                          "default": true,
                          "itemAttributeId": {
                            "id": "string",
                            "type": "string"
                          },
                          "setdownTime": 0,
                          "setupTime": 0,
                          "translatableName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "departments": [
                        "string"
                      ],
                      "discount": 0,
                      "displaySequence": 0,
                      "eventEndDate": "2020-07-13T15:33:16.512Z",
                      "eventStartDate": "2020-07-13T15:33:16.512Z",
                      "eventTypes": [
                        "string"
                      ],
                      "externalCostPerUnit": 0,
                      "externalOrder": true,
                      "externalQuantity": 0,
                      "hotelId": "string",
                      "internalCostPerUnit": 0,
                      "internalQuantity": 0,
                      "isExcludeNonDeduct": true,
                      "isNameCustom": true,
                      "itemClassCode": "string",
                      "itemClassDescription": "string",
                      "itemClassId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemCode": "string",
                      "itemDescription": "string",
                      "itemId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemName": {
                        "defaultText": "string",
                        "translations": {
                          "text": [
                            {
                              "language": "string",
                              "value": "string"
                            }
                          ]
                        }
                      },
                      "itemPool": "string",
                      "itemRateId": {
                        "id": "string",
                        "type": "string"
                      },
                      "order": 0,
                      "packageId": {
                        "id": "string",
                        "type": "string"
                      },
                      "price": 0,
                      "priceCode": "string",
                      "print": true,
                      "quantity": 0,
                      "rates": [
                        {
                          "default": true,
                          "hourly": true,
                          "itemRateCode": "string",
                          "itemRateId": {
                            "id": "string",
                            "type": "string"
                          },
                          "name": "string",
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          }
                        }
                      ],
                      "resourceNotes": [
                        {
                          "comment": "string",
                          "createDateTime": "2020-07-13T15:33:16.512Z",
                          "creatorId": "string",
                          "internal": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                          "noteCode": "string",
                          "noteId": {
                            "id": "string",
                            "type": "string"
                          },
                          "noteTitle": "string",
                          "purgeDate": "2020-07-13",
                          "sequence": 0
                        }
                      ],
                      "revenueType": "string",
                      "revenueTypeEditable": true,
                      "sellInfo": {
                        "available": {
                          "endDateTime": "2020-07-13T15:33:16.512Z",
                          "startDateTime": "2020-07-13T15:33:16.512Z"
                        },
                        "availableQty": 0,
                        "criticalInventory": true,
                        "defaultDuration": 0,
                        "defaultQty": 0,
                        "discountable": true,
                        "fixedCharge": true,
                        "itemClassDiscountable": true,
                        "itemClassWebBookable": true,
                        "outsideStay": true,
                        "price": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "qtyInStock": 0,
                        "sellControl": true,
                        "sellSeparate": true,
                        "webBookable": true,
                        "welcomeOffer": true
                      },
                      "setdownTime": 0,
                      "setupTime": 0,
                      "traceText": "string",
                      "usedForEvents": true,
                      "usedForReservation": true,
                      "vendorPrice": 0,
                      "vendors": [
                        {
                          "email": "string",
                          "fax": "string",
                          "leadTime": "string",
                          "name": "string",
                          "phone": "string",
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "priority": 0,
                          "profileId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          }
                        }
                      ]
                    },
                    "eventItemId": {
                      "id": "string",
                      "type": "string"
                    }
                  },
                  "menu": {
                    "eventMenu": {
                      "basicInfo": {
                        "attendees": {
                          "actual": 0,
                          "billed": 0,
                          "expected": 0,
                          "guaranteed": 0,
                          "packageActual": 0,
                          "packageBilled": 0,
                          "packageExpected": 0,
                          "packageGuaranteed": 0,
                          "set": 0
                        },
                        "className": "string",
                        "consumptionBased": true,
                        "courseCount": 0,
                        "description": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "dietaryList": [
                          "string"
                        ],
                        "discountPercentage": 0,
                        "eventDateRange": {
                          "eventEndDate": "2020-07-13",
                          "eventStartDate": "2020-07-13"
                        },
                        "eventTypes": [
                          "string"
                        ],
                        "hotelId": "string",
                        "inactive": true,
                        "includedInMenu": true,
                        "includedInPrice": true,
                        "menuId": {
                          "id": "string",
                          "type": "string"
                        },
                        "menusSold": 0,
                        "multiChoice": true,
                        "name": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "order": 0,
                        "quickInsertCode": "string",
                        "restriction": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "salesPrice": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "sellDateRange": {
                          "eventEndDate": "2020-07-13",
                          "eventStartDate": "2020-07-13"
                        },
                        "serveStartEndTime": {
                          "eventEndDate": "2020-07-13T15:33:16.512Z",
                          "eventStartDate": "2020-07-13T15:33:16.512Z"
                        },
                        "servingSize": "string",
                        "servingType": "Pp",
                        "type": "Food",
                        "webBookable": true
                      },
                      "hotelId": "string",
                      "menuItems": [
                        {
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "classInfo": {
                            "code": "string",
                            "description": "string"
                          },
                          "container": {
                            "code": "string",
                            "description": "string"
                          },
                          "cost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "course": 0,
                          "courseOrder": 0,
                          "custom": true,
                          "demandFactor": 0,
                          "description": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "discountPercentage": 0,
                          "eventMenuDetailID": {
                            "id": "string",
                            "type": "string"
                          },
                          "eventTypes": [
                            "string"
                          ],
                          "hotelId": "string",
                          "id": {
                            "id": "string",
                            "type": "string"
                          },
                          "inactive": true,
                          "includedYN": true,
                          "itemConsumption": true,
                          "mandatoryYN": true,
                          "menuType": "Food",
                          "name1": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "name2": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "name3": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "origin1": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "origin2": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "portion": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "print": true,
                          "quickInsertCode": "string",
                          "responsibleDepartments": [
                            "string"
                          ],
                          "restriction": "string",
                          "revenueType": "string",
                          "salesPrice": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "servings": 0,
                          "webBookable": true,
                          "year": 0
                        }
                      ],
                      "revenues": [
                        {
                          "cost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "costMargin": 0,
                          "custom": true,
                          "internalQuote": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "priceMargin": 0,
                          "resourceId": {
                            "id": "string",
                            "type": "string"
                          },
                          "revenueType": "string",
                          "type": "Food"
                        }
                      ]
                    },
                    "eventMenuId": {
                      "id": "string",
                      "type": "string"
                    }
                  }
                },
                "links": [
                  {
                    "href": "string",
                    "method": "GET",
                    "operationId": "string",
                    "rel": "string",
                    "targetSchema": "string",
                    "templated": false,
                    "title": "string"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/eventcalendar": {
      "get": {
        "description": "You will be able to retrieve all events on the calendar for a specified property.  Narrow the results down by using the available parameters, such as Event Status, Event eventStartDate date, Location, Number of Attendees and so on. <p><strong>OperationId:</strong>getEventCalendarMultipleHotelIds</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Get the event calendar for Multiple Properties",
        "operationId": "getEventCalendarMultipleHotelIds",
        "parameters": [
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "eventEndDate",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "includeHidden",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If set to true, the results will include opportunities. If this flag is not provided it will be considered false and exclude opportunities.",
            "name": "includeOpportunities",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Determines whether to fetch only available rooms(Spaces with NON-DEDUCT events) or not.",
            "name": "showAvailableRooms",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Determines whether to fetch guest reservations or not.",
            "name": "showReservations",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "isHotelSort",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "isSortDescending",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Page index to be retrieved.",
            "name": "pageIndex",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "recordsPerPage",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Name",
              "AttendeeCapacity",
              "AreaSize",
              "CustomOrder1",
              "CustomOrder2",
              "CustomOrder3"
            ],
            "type": "string",
            "description": "A collection of supported sorting for Event Calendar Function Space.",
            "name": "sortingBy",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "eventStartDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room filter for the events returned.",
            "name": "functionSpaceDetails",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Status filter for the events returned.",
            "name": "status",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Setup Style filter for the events returned.",
            "name": "setupStyle",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Function space location filter for the events returned.",
            "name": "location",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Event Bar Label filter for the events returned.",
            "name": "eventLabel",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room type filter for the events returned.",
            "name": "spaceType",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Sqft",
              "Sqm"
            ],
            "type": "string",
            "description": "Determines the measuring unit.",
            "name": "areaMeasurement",
            "in": "query"
          },
          {
            "type": "number",
            "name": "minimumArea",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Type of function space filter for the events returned. Possible values include Individual, Combo and All.",
            "name": "display",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "from",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "to",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "friday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "monday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "saturday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "sunday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "thursday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "tuesday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "wednesday",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Return object to the request for the Events Booked/Scheduled for the function spaces in the Hotel for the particular time period.",
            "schema": {
              "$ref": "#/definitions/eventCalendar"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "EventCalendarMultipleHotelIds not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/events": {
      "get": {
        "description": "This API fetches catering events for multiple hotels, based on search criteria such as dates, linked block, status, function space, and more. The data returned in the result contains, event type, description, dates and times, attendees, function space, setup style and more. <p><strong>OperationId:</strong>getEventsMultipleHotels</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Get Events ",
        "operationId": "getEventsMultipleHotels",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": [
              "BHOTEL",
              "WORLDHOTEL"
            ],
            "description": "This is the Hotel Code of the Event",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "x-example": "2020-12-30",
            "description": "The starting value of the date range.",
            "name": "eventStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "x-example": "2020-12-30",
            "description": "The ending value of the date range.",
            "name": "eventEndDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": [
              "52346234"
            ],
            "description": "Block ID linked to the Catering Event",
            "name": "blockId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": [
              "823814534"
            ],
            "description": "Unique ID for the catering event",
            "name": "eventId",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Group",
                "Source",
                "Agent",
                "Contact",
                "Company",
                "Account"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for block instructions to be used in requests for fetching blocks. Valid status values are Group, Source, TravelAgent, Contact, Company.",
            "name": "category",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Attached profile name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": [
              "323816531"
            ],
            "description": "A unique identifying numeric value assigned to a profile utilized to fetch events associated to blocks linked to the profile.",
            "name": "attachedProfileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Block Name.",
            "name": "blockName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": [
              "ACT",
              "DEF"
            ],
            "description": "Status Codes associated with the events to be fetched.",
            "name": "eventStatusCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": [
              "BRK",
              "COF"
            ],
            "description": "Event Type Codes associated with the events to be fetched.",
            "name": "eventTypeCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": [
              "SPACE01",
              "SPACE02"
            ],
            "name": "functionSpaceCodes",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "x-example": false,
            "description": "Indicates whether to include inactive events in search result.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "x-example": false,
            "description": "Indicates whether to include the alternate events in the search result.",
            "name": "includeAlternateEvents",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "x-example": false,
            "description": "If set to true, the results will include opportunities. If this flag is not provided it will be considered false and exclude opportunities.",
            "name": "includeOpportunities",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "x-example": false,
            "description": "Indicates whether to include the sub events in the search result.",
            "name": "includeSubEvents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "StartDateTimeAsc",
              "StartDateTimeMasterSubAsc"
            ],
            "type": "string",
            "default": "StartDateTimeAsc",
            "x-example": "StartDateTimeAsc",
            "description": "A collection of supported list of order by for search catering events.",
            "name": "cateringEventOrderBy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "EventDetails",
                "BlocksInfo",
                "Indicators",
                "Notes",
                "SubEventsInfo",
                "AlternateEventsInfo",
                "MasterEventInfo",
                "Revenues",
                "IncludeInactiveSubEventsInfo",
                "IncludeInactiveMasterEventInfo",
                "ActualEventDetails",
                "EligibleMasterEventDetails"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": [
              "Indicators"
            ],
            "description": "Instructions to fetch details information about the selected event. The BlocksInfo fetch instructions will retain a limited amount of data for the associated block.  The Indicators instruction will provide a count.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 200,
            "x-example": 200,
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "x-example": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching events.",
            "schema": {
              "$ref": "#/definitions/events"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "eventSummaries": {
                  "eventSummary": [
                    {
                      "allPosted": false,
                      "alternateEvent": false,
                      "attendees": "10",
                      "blockHasPostings": false,
                      "blockHotelCode": "TAIPEI",
                      "blockIdList": [
                        {
                          "id": "18450"
                        }
                      ],
                      "blockName": "ACME Convention",
                      "cateringCurrency": "USD",
                      "cateringQuotedCurrency": "USD",
                      "cateringStatusDeductInventory": false,
                      "cateringStatusReturnToInventory": false,
                      "cateringStatusType": "Inquiry",
                      "displayDoorCard": true,
                      "doorCard": "ACME Convention",
                      "eventEndDate": "2014-10-07 18:00:00.0",
                      "eventId": {
                        "id": "121294"
                      },
                      "eventName": "Meeting",
                      "eventShared": false,
                      "eventStartDate": "2014-10-07 09:00:00.0",
                      "eventStatus": {
                        "color": "Cyan",
                        "status": {
                          "code": "INQ",
                          "description": "Inquiry"
                        }
                      },
                      "excludeFromForecast": false,
                      "hasPartialPostings": false,
                      "hasPostings": false,
                      "hotelId": "TOKYO",
                      "loudEvent": false,
                      "masterEvent": true,
                      "nothingPosted": false,
                      "packageCode": "MTGBRK",
                      "packageEvent": true,
                      "packageName": "Meeting Break Package",
                      "shareable": false,
                      "subEvent": false,
                      "type": "MTG",
                      "useForecastRevenue": true
                    },
                    {
                      "allPosted": false,
                      "alternateEvent": false,
                      "attendees": "1",
                      "blockHasPostings": false,
                      "blockHotelCode": "TOKYO",
                      "blockIdList": [
                        {
                          "id": "11298"
                        }
                      ],
                      "blockName": "The Convention",
                      "cateringCurrency": "USD",
                      "cateringQuotedCurrency": "USD",
                      "cateringStatusDeductInventory": true,
                      "cateringStatusReturnToInventory": false,
                      "displayDoorCard": true,
                      "eventEndDate": "2015-12-05 18:00:00.0",
                      "eventId": {
                        "id": "108541"
                      },
                      "eventLink": {
                        "id": {
                          "id": "1090"
                        },
                        "masterEventDates": {
                          "endDateTime": "2015-12-05 13:00:00.0",
                          "startDateTime": "2015-12-05 12:00:00.0"
                        },
                        "type": "SubEvent"
                      },
                      "eventName": "Meeting",
                      "eventShared": false,
                      "eventStartDate": "2015-12-05 09:00:00.0",
                      "eventStatus": {
                        "color": "Red",
                        "status": {
                          "code": "DEF",
                          "description": "Definite-1"
                        }
                      },
                      "excludeFromForecast": false,
                      "functionSpaceCode": {
                        "code": "ANNA",
                        "description": "Annapolis Room"
                      },
                      "functionSpaceSetup": {
                        "code": "BOA",
                        "description": "Boardroom Style"
                      },
                      "hasPartialPostings": false,
                      "hasPostings": false,
                      "hotelId": "TOKYO",
                      "loudEvent": false,
                      "masterEvent": false,
                      "nothingPosted": false,
                      "packageEvent": false,
                      "rentalAmount": "20",
                      "rentalCode": "FULL",
                      "setupTime": "5",
                      "shareable": false,
                      "subEvent": true,
                      "tearDownTime": "5",
                      "type": "MTG",
                      "useForecastRevenue": true
                    },
                    {
                      "allPosted": false,
                      "alternateEvent": false,
                      "attendees": "1",
                      "blockHasPostings": false,
                      "blockHotelCode": "TOKYO",
                      "blockIdList": [
                        {
                          "id": "11298"
                        }
                      ],
                      "blockName": "The Convention",
                      "cateringCurrency": "USD",
                      "cateringQuotedCurrency": "USD",
                      "cateringStatusDeductInventory": true,
                      "cateringStatusReturnToInventory": false,
                      "displayDoorCard": true,
                      "doorCard": "The Convention",
                      "eventEndDate": "2015-12-05 13:00:00.0",
                      "eventId": {
                        "id": "1090"
                      },
                      "eventName": "Lunch",
                      "eventShared": false,
                      "eventStartDate": "2015-12-05 12:00:00.0",
                      "eventStatus": {
                        "color": "Red",
                        "status": {
                          "code": "DEF",
                          "description": "Definite-1"
                        }
                      },
                      "excludeFromForecast": false,
                      "hasPartialPostings": false,
                      "hasPostings": false,
                      "hotelId": "TOKYO",
                      "loudEvent": false,
                      "masterEvent": true,
                      "nothingPosted": false,
                      "packageEvent": false,
                      "shareable": false,
                      "subEvent": false,
                      "type": "LUN",
                      "useForecastRevenue": false
                    },
                    {
                      "allPosted": false,
                      "alternateEvent": false,
                      "attendees": "11",
                      "blockHasPostings": false,
                      "blockHotelCode": "TOKYO",
                      "blockIdList": [
                        {
                          "id": "251730",
                          "type": "Block"
                        }
                      ],
                      "blockName": "27 issue",
                      "cateringCurrency": "USD",
                      "cateringQuotedCurrency": "EUR",
                      "cateringStatusDeductInventory": true,
                      "cateringStatusReturnToInventory": false,
                      "cateringStatusType": "Actual",
                      "displayDoorCard": true,
                      "doorCard": "27 issue",
                      "eventEndDate": "2017-01-06 18:00:00.0",
                      "eventId": {
                        "id": "401315",
                        "idContext": "OPERA",
                        "type": "EventId"
                      },
                      "eventName": "Meeting",
                      "eventShared": false,
                      "eventStartDate": "2017-01-06 09:00:00.0",
                      "eventStatus": {
                        "color": "Brown",
                        "status": {
                          "code": "ACT",
                          "description": "Actual"
                        }
                      },
                      "excludeFromForecast": false,
                      "functionSpaceDetails": {
                        "code": "ANNA",
                        "description": "Annapolis Room"
                      },
                      "functionSpaceSetup": {
                        "code": "CON",
                        "description": "Conference"
                      },
                      "hasPartialPostings": false,
                      "hasPostings": false,
                      "hotelId": "TOKYO",
                      "loudEvent": false,
                      "masterEvent": false,
                      "maximumOccupancy": "55",
                      "minimumOccupancy": "1",
                      "nothingPosted": true,
                      "packageEvent": false,
                      "rentalAmount": "122",
                      "rentalCode": "CMP",
                      "setupTime": "0",
                      "shareable": false,
                      "subEvent": false,
                      "tearDownTime": "0",
                      "type": "MTG"
                    }
                  ],
                  "hasMore": false,
                  "limit": "4",
                  "offset": "4",
                  "totalPages": "1000",
                  "totalResults": "1000"
                }
              }
            }
          },
          "204": {
            "description": "EventsMultipleHotels not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "This API allows the creation of a catering event with event type, description, start date / time. end date / time, attendees, function space, setup style, rate, and more. A catering event must always be linked to a block. It cannot exist on its own. <p><strong>OperationId:</strong>postEvents</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Create an Event",
        "operationId": "postEvents",
        "parameters": [
          {
            "description": "Request object for creating new event.",
            "name": "event",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/event"
                },
                {
                  "example": {
                    "eventDetails": [
                      {
                        "altEventsDetail": [
                          {
                            "eventDetail": {
                              "alternateEvent": true,
                              "attendees": {
                                "actual": 0,
                                "billed": 0,
                                "expected": 0,
                                "guaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "set": 0
                              },
                              "cateringDeductInventory": true,
                              "cateringStatusType": "Waitlist",
                              "createDateTime": "2020-07-17T09:19:00.373Z",
                              "creatorId": "string",
                              "displayDoorcard": true,
                              "doorcard": "string",
                              "eventLevelRevenueActualization": true,
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "masterEventDates": {
                                  "endDateTime": "2020-07-17T09:19:00.373Z",
                                  "startDateTime": "2020-07-17T09:19:00.373Z"
                                },
                                "type": "SubEvent"
                              },
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "eventShared": true,
                              "eventStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "eventTimeSpan": {
                                "endDateTime": "2020-07-17T09:19:00.372Z",
                                "startDateTime": "2020-07-17T09:19:00.372Z"
                              },
                              "eventType": "string",
                              "hasPostings": true,
                              "inactiveDate": "2020-07-17",
                              "includeSpaceInPackage": true,
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-17T09:19:00.373Z",
                              "loudEvent": true,
                              "masterEvent": true,
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "notMoveable": true,
                              "packageEvent": true,
                              "packageId": 0,
                              "packageName": "string",
                              "purgeDate": "2020-07-17",
                              "subEvent": true,
                              "waitlistReturnStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "waitlisted": true
                            },
                            "eventPrimaryInfo": {
                              "eventId": {
                                "id": "string",
                                "idContext": "string",
                                "idExtension": 0,
                                "instance": "string",
                                "type": "string",
                                "url": "string"
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "functionSpaceInformation": {
                              "comboSpace": true,
                              "discountPercentage": 0,
                              "elementSpace": true,
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "maximumOccupancy": 0,
                              "minimumOccupancy": 0,
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "rentalCode": "string",
                              "setdownTime": 0,
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "shareable": true
                            }
                          }
                        ],
                        "eventBlockInfo": {
                          "blockDetails": {
                            "blockCode": "180220DIVB",
                            "blockDates": {
                              "endDate": "2021-06-01",
                              "startDate": "2021-06-01"
                            },
                            "blockName": "Name of the  Block",
                            "marketCode": {
                              "marketCode": "CORPC1"
                            },
                            "sourceOfSale": {
                              "sourceCode": {
                                "sourceCode": "REF"
                              }
                            }
                          },
                          "blockIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ],
                          "blockProfiles": {
                            "blockProfile": [
                              {
                                "blockProfileType": "Company",
                                "primary": true,
                                "profile": {
                                  "company": {
                                    "companyName": "company name"
                                  },
                                  "profileType": "Guest"
                                },
                                "profileIdList": [
                                  {
                                    "id": "122515",
                                    "type": "ContactId"
                                  }
                                ]
                              }
                            ]
                          },
                          "hotelId": "TOKYO"
                        },
                        "eventDetail": {
                          "alternateEvent": true,
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "cateringDeductInventory": true,
                          "cateringStatusType": "Waitlist",
                          "createDateTime": "2020-07-17T09:19:00.356Z",
                          "creatorId": "string",
                          "displayDoorcard": true,
                          "doorcard": "string",
                          "eventLevelRevenueActualization": true,
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "masterEventDates": {
                              "endDateTime": "2020-07-17T09:19:00.356Z",
                              "startDateTime": "2020-07-17T09:19:00.356Z"
                            },
                            "type": "SubEvent"
                          },
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "eventShared": true,
                          "eventStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "eventTimeSpan": {
                            "endDateTime": "2020-07-17T09:19:00.356Z",
                            "startDateTime": "2020-07-17T09:19:00.356Z"
                          },
                          "eventType": "string",
                          "hasPostings": true,
                          "inactiveDate": "2020-07-17",
                          "includeSpaceInPackage": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-17T09:19:00.356Z",
                          "loudEvent": true,
                          "masterEvent": true,
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "notMoveable": true,
                          "packageEvent": true,
                          "packageId": 0,
                          "packageName": "string",
                          "purgeDate": "2020-07-17",
                          "subEvent": true,
                          "waitlistReturnStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "waitlisted": true
                        },
                        "eventIndicators": [
                          {
                            "count": 0,
                            "indicatorName": "string"
                          }
                        ],
                        "eventNotes": [
                          {
                            "comment": "string",
                            "createDateTime": "2020-07-17T09:19:00.372Z",
                            "creatorId": "string",
                            "internal": true,
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-07-17T09:19:00.372Z",
                            "noteCode": "string",
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteTitle": "string",
                            "purgeDate": "2020-07-17",
                            "sequence": 0
                          }
                        ],
                        "eventPrimaryInfo": {
                          "eventId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventResources": [
                          {
                            "consumptionBased": true,
                            "custom": true,
                            "discount": 0,
                            "eventEndDate": "2020-07-17",
                            "eventResourceNotes": [
                              {
                                "comment": "string",
                                "createDateTime": "2020-07-17T09:19:00.356Z",
                                "creatorId": "string",
                                "internal": true,
                                "lastModifierId": "string",
                                "lastModifyDateTime": "2020-07-17T09:19:00.356Z",
                                "noteCode": "string",
                                "noteId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "noteTitle": "string",
                                "purgeDate": "2020-07-17",
                                "sequence": 0
                              }
                            ],
                            "eventStartDate": "2020-07-17",
                            "external": true,
                            "hasDiscountMenuItem": true,
                            "hasNotes": true,
                            "hotelId": "string",
                            "hours": 0,
                            "itemAttribute": "string",
                            "multiChoice": true,
                            "order": "string",
                            "packaged": true,
                            "persons": 0,
                            "quantity": 0,
                            "quantityExcluded": 0,
                            "quantityIncluded": 0,
                            "rentalCode": "string",
                            "resourceId": {
                              "id": "string",
                              "idContext": "string",
                              "idExtension": 0,
                              "instance": "string",
                              "type": "string",
                              "url": "string"
                            },
                            "resourceName": "string",
                            "resourceType": "FunctionSpace",
                            "revenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "sellEndDate": "2020-07-17",
                            "sellStartDate": "2020-07-17",
                            "setupCode": "string",
                            "unitPrice": {
                              "amount": 0,
                              "currencyCode": "string"
                            }
                          }
                        ],
                        "eventRevenues": {
                          "currencyCode": "string",
                          "eventLevelRevenueActualization": true,
                          "eventRevenueInformation": [
                            {
                              "actualRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "billedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "custom": true,
                              "expectedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "flatForecastRevenue": true,
                              "forecastRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "guaranteedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "ignoreForecast": true,
                              "onTheBooksRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "orderBy": 0,
                              "packaged": true,
                              "revenueType": {
                                "code": "string",
                                "displaySequence": 0,
                                "foodAndBeverage": true,
                                "inactive": true,
                                "revenueDetails": [
                                  {
                                    "hotelId": "string",
                                    "revenueMinimum": true,
                                    "tax": 0
                                  }
                                ],
                                "revenueGroup": "string",
                                "translatableDescription": {
                                  "defaultText": "string",
                                  "translations": {
                                    "text": [
                                      {
                                        "language": "string",
                                        "value": "string"
                                      }
                                    ]
                                  }
                                }
                              },
                              "totalCost": {
                                "amount": 0,
                                "currencyCode": "string"
                              }
                            }
                          ],
                          "excludeFromForecast": true,
                          "useForecastRevenue": true
                        },
                        "functionSpaceInformation": {
                          "comboSpace": true,
                          "discountPercentage": 0,
                          "elementSpace": true,
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "maximumOccupancy": 0,
                          "minimumOccupancy": 0,
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "rentalCode": "string",
                          "setdownTime": 0,
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "shareable": true
                        },
                        "masterEventDetail": {
                          "eventDetail": {
                            "alternateEvent": true,
                            "attendees": {
                              "actual": 0,
                              "billed": 0,
                              "expected": 0,
                              "guaranteed": 0,
                              "packageActual": 0,
                              "packageBilled": 0,
                              "packageExpected": 0,
                              "packageGuaranteed": 0,
                              "set": 0
                            },
                            "cateringDeductInventory": true,
                            "cateringStatusType": "Waitlist",
                            "createDateTime": "2020-07-17T09:19:00.373Z",
                            "creatorId": "string",
                            "displayDoorcard": true,
                            "doorcard": "string",
                            "eventLevelRevenueActualization": true,
                            "eventLink": {
                              "id": {
                                "id": "string",
                                "type": "string"
                              },
                              "masterEventDates": {
                                "endDateTime": "2020-07-17T09:19:00.373Z",
                                "startDateTime": "2020-07-17T09:19:00.373Z"
                              },
                              "type": "SubEvent"
                            },
                            "eventName": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "language": "string",
                                    "value": "string"
                                  }
                                ]
                              }
                            },
                            "eventShared": true,
                            "eventStatus": {
                              "color": "White",
                              "status": {
                                "code": "string",
                                "description": "string"
                              }
                            },
                            "eventTimeSpan": {
                              "endDateTime": "2020-07-17T09:19:00.373Z",
                              "startDateTime": "2020-07-17T09:19:00.373Z"
                            },
                            "eventType": "string",
                            "hasPostings": true,
                            "inactiveDate": "2020-07-17",
                            "includeSpaceInPackage": true,
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-07-17T09:19:00.373Z",
                            "loudEvent": true,
                            "masterEvent": true,
                            "masterEventId": {
                              "id": "string",
                              "type": "string"
                            },
                            "notMoveable": true,
                            "packageEvent": true,
                            "packageId": 0,
                            "packageName": "string",
                            "purgeDate": "2020-07-17",
                            "subEvent": true,
                            "waitlistReturnStatus": {
                              "color": "White",
                              "status": {
                                "code": "string",
                                "description": "string"
                              }
                            },
                            "waitlisted": true
                          },
                          "eventPrimaryInfo": {
                            "eventId": {
                              "id": "string",
                              "idContext": "string",
                              "idExtension": 0,
                              "instance": "string",
                              "type": "string",
                              "url": "string"
                            },
                            "hotelId": "string",
                            "includeSubEvents": true
                          },
                          "functionSpaceInformation": {
                            "comboSpace": true,
                            "discountPercentage": 0,
                            "elementSpace": true,
                            "functionSpaceCode": "string",
                            "functionSpaceDescription": "string",
                            "maximumOccupancy": 0,
                            "minimumOccupancy": 0,
                            "rateDesc": "string",
                            "rentalAmount": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "rentalCode": "string",
                            "setdownTime": 0,
                            "setupCode": "string",
                            "setupDescription": "string",
                            "setupTime": 0,
                            "shareable": true
                          }
                        },
                        "onTheBooksRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "processInstructions": {
                          "overbook": true,
                          "overrideCapacity": true,
                          "overrideMaxgroups": true,
                          "quickEvent": true,
                          "shareable": true,
                          "waitList": true,
                          "warnFunctionSpace": true
                        },
                        "subEventsDetail": [
                          {
                            "eventDetail": {
                              "alternateEvent": true,
                              "attendees": {
                                "actual": 0,
                                "billed": 0,
                                "expected": 0,
                                "guaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "set": 0
                              },
                              "cateringDeductInventory": true,
                              "cateringStatusType": "Waitlist",
                              "createDateTime": "2020-07-17T09:19:00.372Z",
                              "creatorId": "string",
                              "displayDoorcard": true,
                              "doorcard": "string",
                              "eventLevelRevenueActualization": true,
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "masterEventDates": {
                                  "endDateTime": "2020-07-17T09:19:00.372Z",
                                  "startDateTime": "2020-07-17T09:19:00.372Z"
                                },
                                "type": "SubEvent"
                              },
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "eventShared": true,
                              "eventStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "eventTimeSpan": {
                                "endDateTime": "2020-07-17T09:19:00.372Z",
                                "startDateTime": "2020-07-17T09:19:00.372Z"
                              },
                              "eventType": "string",
                              "hasPostings": true,
                              "inactiveDate": "2020-07-17",
                              "includeSpaceInPackage": true,
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-17T09:19:00.372Z",
                              "loudEvent": true,
                              "masterEvent": true,
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "notMoveable": true,
                              "packageEvent": true,
                              "packageId": 0,
                              "packageName": "string",
                              "purgeDate": "2020-07-17",
                              "subEvent": true,
                              "waitlistReturnStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "waitlisted": true
                            },
                            "eventPrimaryInfo": {
                              "eventId": {
                                "id": "string",
                                "idContext": "string",
                                "idExtension": 0,
                                "instance": "string",
                                "type": "string",
                                "url": "string"
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "functionSpaceInformation": {
                              "comboSpace": true,
                              "discountPercentage": 0,
                              "elementSpace": true,
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "maximumOccupancy": 0,
                              "minimumOccupancy": 0,
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "rentalCode": "string",
                              "setdownTime": 0,
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "shareable": true
                            }
                          }
                        ]
                      }
                    ],
                    "links": [
                      {
                        "href": "string",
                        "method": "GET",
                        "operationId": "string",
                        "rel": "string",
                        "targetSchema": "string",
                        "templated": false,
                        "title": "string"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response object for creating new event.",
            "schema": {
              "$ref": "#/definitions/event"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/events/{eventId}/splitQuantity": {
      "get": {
        "description": "Retrieve the event item split quantity for an event. <p><strong>OperationId:</strong>getEventItemSplitQuantity</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Get Event item split quantity",
        "operationId": "getEventItemSplitQuantity",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the event",
            "name": "eventId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Hotel code where event will be organized.",
            "name": "eventPrimaryHotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "eventItemId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The ending value of the time span.",
            "name": "eventEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The starting value of the time span.",
            "name": "eventStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "itemId",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The quantity of this item required by the event.",
            "name": "quantity",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to check if the Event Item is ExcludeNonDeduct",
            "name": "isExcludeNonDeduct",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching event resource details.",
            "schema": {
              "$ref": "#/definitions/eventResource"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "eventResourceDetails": {
                  "eventDetailInfo": {
                    "altEventsDetail": [
                      {
                        "eventDetail": {
                          "alternateEvent": true,
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "cateringDeductInventory": true,
                          "cateringStatusType": "Waitlist",
                          "createDateTime": "2020-07-13T15:33:16.512Z",
                          "creatorId": "string",
                          "displayDoorcard": true,
                          "doorcard": "string",
                          "eventLevelRevenueActualization": true,
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "masterEventDates": {
                              "endDateTime": "2020-07-13T15:33:16.512Z",
                              "startDateTime": "2020-07-13T15:33:16.512Z"
                            },
                            "type": "SubEvent"
                          },
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "eventShared": true,
                          "eventStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "eventTimeSpan": {
                            "endDateTime": "2020-07-13T15:33:16.512Z",
                            "startDateTime": "2020-07-13T15:33:16.512Z"
                          },
                          "eventType": "string",
                          "hasPostings": true,
                          "inactiveDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                          "loudEvent": true,
                          "masterEvent": true,
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "notMoveable": true,
                          "packageEvent": true,
                          "packageId": 0,
                          "packageName": "string",
                          "purgeDate": "2020-07-13",
                          "subEvent": true,
                          "waitlistReturnStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "waitlisted": true
                        },
                        "eventPrimaryInfo": {
                          "eventId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "functionSpaceInformation": {
                          "comboSpace": true,
                          "discountPercentage": 0,
                          "elementSpace": true,
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "maximumOccupancy": 0,
                          "minimumOccupancy": 0,
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "rentalCode": "string",
                          "setdownTime": 0,
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "shareable": true
                        }
                      }
                    ],
                    "eventBlockInfo": {
                      "blockIdList": [
                        {
                          "id": "string",
                          "type": "string"
                        }
                      ]
                    },
                    "eventDetail": {
                      "alternateEvent": true,
                      "attendees": {
                        "actual": 0,
                        "billed": 0,
                        "expected": 0,
                        "guaranteed": 0,
                        "packageActual": 0,
                        "packageBilled": 0,
                        "packageExpected": 0,
                        "packageGuaranteed": 0,
                        "set": 0
                      },
                      "cateringDeductInventory": true,
                      "cateringStatusType": "Waitlist",
                      "createDateTime": "2020-07-13T15:33:16.494Z",
                      "creatorId": "string",
                      "displayDoorcard": true,
                      "doorcard": "string",
                      "eventLevelRevenueActualization": true,
                      "eventLink": {
                        "id": {
                          "id": "string",
                          "type": "string"
                        },
                        "masterEventDates": {
                          "endDateTime": "2020-07-13T15:33:16.494Z",
                          "startDateTime": "2020-07-13T15:33:16.494Z"
                        },
                        "type": "SubEvent"
                      },
                      "eventName": {
                        "defaultText": "string",
                        "translations": {
                          "text": [
                            {
                              "language": "string",
                              "value": "string"
                            }
                          ]
                        }
                      },
                      "eventShared": true,
                      "eventStatus": {
                        "color": "White",
                        "status": {
                          "code": "string",
                          "description": "string"
                        }
                      },
                      "eventTimeSpan": {
                        "endDateTime": "2020-07-13T15:33:16.494Z",
                        "startDateTime": "2020-07-13T15:33:16.494Z"
                      },
                      "eventType": "string",
                      "hasPostings": true,
                      "inactiveDate": "2020-07-13",
                      "includeSpaceInPackage": true,
                      "lastModifierId": "string",
                      "lastModifyDateTime": "2020-07-13T15:33:16.494Z",
                      "loudEvent": true,
                      "masterEvent": true,
                      "masterEventId": {
                        "id": "string",
                        "type": "string"
                      },
                      "notMoveable": true,
                      "packageEvent": true,
                      "packageId": 0,
                      "packageName": "string",
                      "purgeDate": "2020-07-13",
                      "subEvent": true,
                      "waitlistReturnStatus": {
                        "color": "White",
                        "status": {
                          "code": "string",
                          "description": "string"
                        }
                      },
                      "waitlisted": true
                    },
                    "eventIndicators": [
                      {
                        "count": 0,
                        "indicatorName": "string"
                      }
                    ],
                    "eventNotes": [
                      {
                        "comment": "string",
                        "createDateTime": "2020-07-13T15:33:16.511Z",
                        "creatorId": "string",
                        "internal": true,
                        "lastModifierId": "string",
                        "lastModifyDateTime": "2020-07-13T15:33:16.511Z",
                        "noteCode": "string",
                        "noteId": {
                          "id": "string",
                          "type": "string"
                        },
                        "noteTitle": "string",
                        "purgeDate": "2020-07-13",
                        "sequence": 0
                      }
                    ],
                    "eventPrimaryInfo": {
                      "eventId": {
                        "id": "string",
                        "idContext": "string",
                        "idExtension": 0,
                        "instance": "string",
                        "type": "string",
                        "url": "string"
                      },
                      "hotelId": "string",
                      "includeSubEvents": true
                    },
                    "eventResources": [
                      {
                        "consumptionBased": true,
                        "custom": true,
                        "discount": 0,
                        "eventEndDate": "2020-07-13",
                        "eventResourceNotes": [
                          {
                            "comment": "string",
                            "createDateTime": "2020-07-13T15:33:16.494Z",
                            "creatorId": "string",
                            "internal": true,
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-07-13T15:33:16.494Z",
                            "noteCode": "string",
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteTitle": "string",
                            "purgeDate": "2020-07-13",
                            "sequence": 0
                          }
                        ],
                        "eventStartDate": "2020-07-13",
                        "external": true,
                        "hasDiscountMenuItem": true,
                        "hasNotes": true,
                        "hotelId": "string",
                        "hours": 0,
                        "itemAttribute": "string",
                        "multiChoice": true,
                        "order": "string",
                        "packaged": true,
                        "persons": 0,
                        "quantity": 0,
                        "quantityExcluded": 0,
                        "quantityIncluded": 0,
                        "rentalCode": "string",
                        "resourceId": {
                          "id": "string",
                          "idContext": "string",
                          "idExtension": 0,
                          "instance": "string",
                          "type": "string",
                          "url": "string"
                        },
                        "resourceName": "string",
                        "resourceType": "FunctionSpace",
                        "revenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "sellEndDate": "2020-07-13",
                        "sellStartDate": "2020-07-13",
                        "setupCode": "string",
                        "unitPrice": {
                          "amount": 0,
                          "currencyCode": "string"
                        }
                      }
                    ],
                    "eventRevenues": {
                      "currencyCode": "string",
                      "eventLevelRevenueActualization": true,
                      "eventRevenueInformation": [
                        {
                          "actualRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "billedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "custom": true,
                          "expectedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "flatForecastRevenue": true,
                          "forecastRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "guaranteedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "ignoreForecast": true,
                          "onTheBooksRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "orderBy": 0,
                          "packaged": true,
                          "revenueType": {
                            "code": "string",
                            "displaySequence": 0,
                            "foodAndBeverage": true,
                            "inactive": true,
                            "revenueDetails": [
                              {
                                "hotelId": "string",
                                "revenueMinimum": true,
                                "tax": 0
                              }
                            ],
                            "revenueGroup": "string",
                            "translatableDescription": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "language": "string",
                                    "value": "string"
                                  }
                                ]
                              }
                            }
                          },
                          "totalCost": {
                            "amount": 0,
                            "currencyCode": "string"
                          }
                        }
                      ],
                      "excludeFromForecast": true,
                      "useForecastRevenue": true
                    },
                    "functionSpaceInformation": {
                      "comboSpace": true,
                      "discountPercentage": 0,
                      "elementSpace": true,
                      "functionSpaceCode": "string",
                      "functionSpaceDescription": "string",
                      "maximumOccupancy": 0,
                      "minimumOccupancy": 0,
                      "rateDesc": "string",
                      "rentalAmount": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "rentalCode": "string",
                      "setdownTime": 0,
                      "setupCode": "string",
                      "setupDescription": "string",
                      "setupTime": 0,
                      "shareable": true
                    },
                    "masterEventDetail": {
                      "eventDetail": {
                        "alternateEvent": true,
                        "attendees": {
                          "actual": 0,
                          "billed": 0,
                          "expected": 0,
                          "guaranteed": 0,
                          "packageActual": 0,
                          "packageBilled": 0,
                          "packageExpected": 0,
                          "packageGuaranteed": 0,
                          "set": 0
                        },
                        "cateringDeductInventory": true,
                        "cateringStatusType": "Waitlist",
                        "createDateTime": "2020-07-13T15:33:16.512Z",
                        "creatorId": "string",
                        "displayDoorcard": true,
                        "doorcard": "string",
                        "eventLevelRevenueActualization": true,
                        "eventLink": {
                          "id": {
                            "id": "string",
                            "type": "string"
                          },
                          "masterEventDates": {
                            "endDateTime": "2020-07-13T15:33:16.512Z",
                            "startDateTime": "2020-07-13T15:33:16.512Z"
                          },
                          "type": "SubEvent"
                        },
                        "eventName": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "eventShared": true,
                        "eventStatus": {
                          "color": "White",
                          "status": {
                            "code": "string",
                            "description": "string"
                          }
                        },
                        "eventTimeSpan": {
                          "endDateTime": "2020-07-13T15:33:16.512Z",
                          "startDateTime": "2020-07-13T15:33:16.512Z"
                        },
                        "eventType": "string",
                        "hasPostings": true,
                        "inactiveDate": "2020-07-13",
                        "includeSpaceInPackage": true,
                        "lastModifierId": "string",
                        "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                        "loudEvent": true,
                        "masterEvent": true,
                        "masterEventId": {
                          "id": "string",
                          "type": "string"
                        },
                        "notMoveable": true,
                        "packageEvent": true,
                        "packageId": 0,
                        "packageName": "string",
                        "purgeDate": "2020-07-13",
                        "subEvent": true,
                        "waitlistReturnStatus": {
                          "color": "White",
                          "status": {
                            "code": "string",
                            "description": "string"
                          }
                        },
                        "waitlisted": true
                      },
                      "eventPrimaryInfo": {
                        "eventId": {
                          "id": "string",
                          "idContext": "string",
                          "idExtension": 0,
                          "instance": "string",
                          "type": "string",
                          "url": "string"
                        },
                        "hotelId": "string",
                        "includeSubEvents": true
                      },
                      "functionSpaceInformation": {
                        "comboSpace": true,
                        "discountPercentage": 0,
                        "elementSpace": true,
                        "functionSpaceCode": "string",
                        "functionSpaceDescription": "string",
                        "maximumOccupancy": 0,
                        "minimumOccupancy": 0,
                        "rateDesc": "string",
                        "rentalAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "rentalCode": "string",
                        "setdownTime": 0,
                        "setupCode": "string",
                        "setupDescription": "string",
                        "setupTime": 0,
                        "shareable": true
                      }
                    },
                    "onTheBooksRevenue": {
                      "amount": 0,
                      "currencyCode": "string"
                    },
                    "processInstructions": {
                      "overbook": true,
                      "overrideCapacity": true,
                      "overrideMaxgroups": true,
                      "shareable": true,
                      "waitList": true,
                      "warnFunctionSpace": true
                    },
                    "subEventsDetail": [
                      {
                        "eventDetail": {
                          "alternateEvent": true,
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "cateringDeductInventory": true,
                          "cateringStatusType": "Waitlist",
                          "createDateTime": "2020-07-13T15:33:16.512Z",
                          "creatorId": "string",
                          "displayDoorcard": true,
                          "doorcard": "string",
                          "eventLevelRevenueActualization": true,
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "masterEventDates": {
                              "endDateTime": "2020-07-13T15:33:16.512Z",
                              "startDateTime": "2020-07-13T15:33:16.512Z"
                            },
                            "type": "SubEvent"
                          },
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "eventShared": true,
                          "eventStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "eventTimeSpan": {
                            "endDateTime": "2020-07-13T15:33:16.512Z",
                            "startDateTime": "2020-07-13T15:33:16.512Z"
                          },
                          "eventType": "string",
                          "hasPostings": true,
                          "inactiveDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                          "loudEvent": true,
                          "masterEvent": true,
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "notMoveable": true,
                          "packageEvent": true,
                          "packageId": 0,
                          "packageName": "string",
                          "purgeDate": "2020-07-13",
                          "subEvent": true,
                          "waitlistReturnStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "waitlisted": true
                        },
                        "eventPrimaryInfo": {
                          "eventId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "functionSpaceInformation": {
                          "comboSpace": true,
                          "discountPercentage": 0,
                          "elementSpace": true,
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "maximumOccupancy": 0,
                          "minimumOccupancy": 0,
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "rentalCode": "string",
                          "setdownTime": 0,
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "shareable": true
                        }
                      }
                    ]
                  },
                  "item": {
                    "eventItem": {
                      "actualExternalCostPerUnit": 0,
                      "actualExternalQuantity": 0,
                      "actualInternalCostPerUnit": 0,
                      "actualInternalQuantity": 0,
                      "actualQuantity": 0,
                      "attributeId": {
                        "id": "string",
                        "type": "string"
                      },
                      "attributes": [
                        {
                          "default": true,
                          "itemAttributeId": {
                            "id": "string",
                            "type": "string"
                          },
                          "setdownTime": 0,
                          "setupTime": 0,
                          "translatableName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "departments": [
                        "string"
                      ],
                      "discount": 0,
                      "displaySequence": 0,
                      "eventEndDate": "2020-07-13T15:33:16.512Z",
                      "eventStartDate": "2020-07-13T15:33:16.512Z",
                      "eventTypes": [
                        "string"
                      ],
                      "externalCostPerUnit": 0,
                      "externalOrder": true,
                      "externalQuantity": 0,
                      "hotelId": "string",
                      "internalCostPerUnit": 0,
                      "internalQuantity": 0,
                      "isExcludeNonDeduct": true,
                      "isNameCustom": true,
                      "itemClassCode": "string",
                      "itemClassDescription": "string",
                      "itemClassId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemCode": "string",
                      "itemDescription": "string",
                      "itemId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemName": {
                        "defaultText": "string",
                        "translations": {
                          "text": [
                            {
                              "language": "string",
                              "value": "string"
                            }
                          ]
                        }
                      },
                      "itemPool": "string",
                      "itemRateId": {
                        "id": "string",
                        "type": "string"
                      },
                      "order": 0,
                      "packageId": {
                        "id": "string",
                        "type": "string"
                      },
                      "price": 0,
                      "priceCode": "string",
                      "print": true,
                      "quantity": 0,
                      "rates": [
                        {
                          "default": true,
                          "hourly": true,
                          "itemRateCode": "string",
                          "itemRateId": {
                            "id": "string",
                            "type": "string"
                          },
                          "name": "string",
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          }
                        }
                      ],
                      "resourceNotes": [
                        {
                          "comment": "string",
                          "createDateTime": "2020-07-13T15:33:16.512Z",
                          "creatorId": "string",
                          "internal": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                          "noteCode": "string",
                          "noteId": {
                            "id": "string",
                            "type": "string"
                          },
                          "noteTitle": "string",
                          "purgeDate": "2020-07-13",
                          "sequence": 0
                        }
                      ],
                      "revenueType": "string",
                      "revenueTypeEditable": true,
                      "sellInfo": {
                        "available": {
                          "endDateTime": "2020-07-13T15:33:16.512Z",
                          "startDateTime": "2020-07-13T15:33:16.512Z"
                        },
                        "availableQty": 0,
                        "criticalInventory": true,
                        "defaultDuration": 0,
                        "defaultQty": 0,
                        "discountable": true,
                        "fixedCharge": true,
                        "itemClassDiscountable": true,
                        "itemClassWebBookable": true,
                        "outsideStay": true,
                        "price": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "qtyInStock": 0,
                        "sellControl": true,
                        "sellSeparate": true,
                        "webBookable": true,
                        "welcomeOffer": true
                      },
                      "setdownTime": 0,
                      "setupTime": 0,
                      "traceText": "string",
                      "usedForEvents": true,
                      "usedForReservation": true,
                      "vendorPrice": 0,
                      "vendors": [
                        {
                          "email": "string",
                          "fax": "string",
                          "leadTime": "string",
                          "name": "string",
                          "phone": "string",
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "priority": 0,
                          "profileId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          }
                        }
                      ]
                    },
                    "eventItemId": {
                      "id": "string",
                      "type": "string"
                    }
                  },
                  "menu": {
                    "eventMenu": {
                      "basicInfo": {
                        "attendees": {
                          "actual": 0,
                          "billed": 0,
                          "expected": 0,
                          "guaranteed": 0,
                          "packageActual": 0,
                          "packageBilled": 0,
                          "packageExpected": 0,
                          "packageGuaranteed": 0,
                          "set": 0
                        },
                        "className": "string",
                        "consumptionBased": true,
                        "courseCount": 0,
                        "description": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "dietaryList": [
                          "string"
                        ],
                        "discountPercentage": 0,
                        "eventDateRange": {
                          "eventEndDate": "2020-07-13",
                          "eventStartDate": "2020-07-13"
                        },
                        "eventTypes": [
                          "string"
                        ],
                        "hotelId": "string",
                        "inactive": true,
                        "includedInMenu": true,
                        "includedInPrice": true,
                        "menuId": {
                          "id": "string",
                          "type": "string"
                        },
                        "menusSold": 0,
                        "multiChoice": true,
                        "name": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "order": 0,
                        "quickInsertCode": "string",
                        "restriction": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "salesPrice": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "sellDateRange": {
                          "eventEndDate": "2020-07-13",
                          "eventStartDate": "2020-07-13"
                        },
                        "serveStartEndTime": {
                          "eventEndDate": "2020-07-13T15:33:16.512Z",
                          "eventStartDate": "2020-07-13T15:33:16.512Z"
                        },
                        "servingSize": "string",
                        "servingType": "Pp",
                        "type": "Food",
                        "webBookable": true
                      },
                      "hotelId": "string",
                      "menuItems": [
                        {
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "classInfo": {
                            "code": "string",
                            "description": "string"
                          },
                          "container": {
                            "code": "string",
                            "description": "string"
                          },
                          "cost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "course": 0,
                          "courseOrder": 0,
                          "custom": true,
                          "demandFactor": 0,
                          "description": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "discountPercentage": 0,
                          "eventMenuDetailID": {
                            "id": "string",
                            "type": "string"
                          },
                          "eventTypes": [
                            "string"
                          ],
                          "hotelId": "string",
                          "id": {
                            "id": "string",
                            "type": "string"
                          },
                          "inactive": true,
                          "includedYN": true,
                          "itemConsumption": true,
                          "mandatoryYN": true,
                          "menuType": "Food",
                          "name1": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "name2": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "name3": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "origin1": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "origin2": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "portion": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "print": true,
                          "quickInsertCode": "string",
                          "responsibleDepartments": [
                            "string"
                          ],
                          "restriction": "string",
                          "revenueType": "string",
                          "salesPrice": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "servings": 0,
                          "webBookable": true,
                          "year": 0
                        }
                      ],
                      "revenues": [
                        {
                          "cost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "costMargin": 0,
                          "custom": true,
                          "internalQuote": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "priceMargin": 0,
                          "resourceId": {
                            "id": "string",
                            "type": "string"
                          },
                          "revenueType": "string",
                          "type": "Food"
                        }
                      ]
                    },
                    "eventMenuId": {
                      "id": "string",
                      "type": "string"
                    }
                  }
                },
                "links": [
                  {
                    "href": "string",
                    "method": "GET",
                    "operationId": "string",
                    "rel": "string",
                    "targetSchema": "string",
                    "templated": false,
                    "title": "string"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "EventItemSplitQuantity not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/eventsResources": {
      "put": {
        "description": "Update the details of an existing event resource on an event in OPERA Cloud. <p><strong>OperationId:</strong>changeEventsResourcesByChain</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Update Events Resources by chain",
        "operationId": "changeEventsResourcesByChain",
        "parameters": [
          {
            "description": "Request object for managing events resources.",
            "name": "manageEventsResources",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/manageEventsResources"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/manageEventsResources"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/blocks/{blockId}/cateringEvents/copy": {
      "put": {
        "description": "Copy an existing catering event on a block to new dates on that block.  For example there is a catering Event called Lunch for 1st May, select this event, and copy it to a new date within the block date range.  This will result in a second catering event existing on this block.  You can choose to copy certain elements such as event notes, event resources and so on. <p><strong>OperationId:</strong>copyCateringEvents</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Copy Catering Event",
        "operationId": "copyCateringEvents",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the block",
            "name": "blockId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for copying events.",
            "name": "copyCateringEvents",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyCateringEvents"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for copying events.",
            "schema": {
              "$ref": "#/definitions/copyCateringEventsResponse"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/blocks/{blockId}/cateringPackages": {
      "delete": {
        "description": "This allows you to remove an existing catering package from the Block <p><strong>OperationId:</strong>deleteCateringPackages</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Delete one or more catering package(s)",
        "operationId": "deleteCateringPackages",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the block",
            "name": "blockId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "cateringPackageId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/blocks/{blockId}/cateringPackages/{cateringPackageId}": {
      "delete": {
        "description": "This allows you to remove an existing catering package from the Block <p><strong>OperationId:</strong>deleteCateringPackage</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Delete Catering package",
        "operationId": "deleteCateringPackage",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the Catering Package",
            "name": "cateringPackageId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the block",
            "name": "blockId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/cateringEventChanges": {
      "get": {
        "description": "Retrieve the catering event changes on an event. <p><strong>OperationId:</strong>getCateringEventChanges</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Get Catering Event changes",
        "operationId": "getCateringEventChanges",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "EventChanges",
              "StatusChanges",
              "RevenueChanges",
              "AllChanges"
            ],
            "type": "string",
            "description": "A collection of supported list of actions.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "eventId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "eventIdContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "eventIdType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "blockId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "blockIdContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "blockIdType",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Attendee",
                "Event",
                "Item",
                "Menu",
                "Menuitem",
                "Space"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of sources that can cause the event change",
            "name": "changeSource",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "New",
                "Update",
                "Delete",
                "Inactivate"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A collection of supported list of actions.",
            "name": "action",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the Resource",
            "name": "resourceDescription",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fieldNameListCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "userListCode",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date of the Events whose details are fetched",
            "name": "eventDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "eventEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "eventStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Prior Status of the events whose details are fetched",
            "name": "priorStatus",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Current Status of the events whose details are fetched",
            "name": "currentStatus",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "revenueTypeListCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching event change logs.",
            "schema": {
              "$ref": "#/definitions/cateringEventChanges"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CateringEventChanges not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/eventcalendar": {
      "get": {
        "description": "You will be able to retrieve all events on the calendar for a specified property.  Narrow the results down by using the available parameters, such as Event Status, Event eventStartDate date, Location, Number of Attendees and so on. <p><strong>OperationId:</strong>getEventCalendar</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Get the event calendar",
        "operationId": "getEventCalendar",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "eventEndDate",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "includeHidden",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If set to true, the results will include opportunities. If this flag is not provided it will be considered false and exclude opportunities.",
            "name": "includeOpportunities",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Determines whether to fetch only available rooms(Spaces with NON-DEDUCT events) or not.",
            "name": "showAvailableRooms",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Determines whether to fetch guest reservations or not.",
            "name": "showReservations",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "isHotelSort",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "isSortDescending",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Page index to be retrieved.",
            "name": "pageIndex",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "recordsPerPage",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Name",
              "AttendeeCapacity",
              "AreaSize",
              "CustomOrder1",
              "CustomOrder2",
              "CustomOrder3"
            ],
            "type": "string",
            "description": "A collection of supported sorting for Event Calendar Function Space.",
            "name": "sortingBy",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "eventStartDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room filter for the events returned.",
            "name": "functionSpaceDetails",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Status filter for the events returned.",
            "name": "status",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Setup Style filter for the events returned.",
            "name": "setupStyle",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Function space location filter for the events returned.",
            "name": "location",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Event Bar Label filter for the events returned.",
            "name": "eventLabel",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room type filter for the events returned.",
            "name": "spaceType",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Sqft",
              "Sqm"
            ],
            "type": "string",
            "description": "Determines the measuring unit.",
            "name": "areaMeasurement",
            "in": "query"
          },
          {
            "type": "number",
            "name": "minimumArea",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Type of function space filter for the events returned. Possible values include Individual, Combo and All.",
            "name": "display",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "from",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "to",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "friday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "monday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "saturday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "sunday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "thursday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "tuesday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "wednesday",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Return object to the request for the Events Booked/Scheduled for the function spaces in the Hotel for the particular time period.",
            "schema": {
              "$ref": "#/definitions/eventCalendar"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "eventCalendarDetails": {
                  "eventCodes": [
                    {
                      "color": "White",
                      "date": "2020-07-16",
                      "event": {
                        "code": "string",
                        "description": "string"
                      },
                      "eventCodeType": "EventCode",
                      "hotelId": "string"
                    }
                  ],
                  "eventSpace": [
                    {
                      "building": "string",
                      "description": "string",
                      "eventSpaceAttributes": {
                        "alternate": true,
                        "comboElement": true,
                        "comboRoom": "string",
                        "comboSpace": true,
                        "maximumOccupancy": 0,
                        "shareable": true,
                        "spaceArea": {
                          "area": 0,
                          "unit": "SqFeet"
                        }
                      },
                      "events": {
                        "event": [
                          {
                            "attendees": 0,
                            "createdOn": "2020-07-16",
                            "eventBookingInfo": {
                              "blockDates": [
                                {
                                  "duration": "string",
                                  "endDate": "2020-07-16",
                                  "startDate": "2020-07-16"
                                }
                              ],
                              "bookHotelCode": "string",
                              "bookId": 0,
                              "catOwner": 0,
                              "catOwnerName": "string",
                              "companyNameId": 0,
                              "deductInvYn": "string",
                              "eventStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "guarantee": {
                                "guaranteeCode": "string",
                                "onHold": true,
                                "shortDescription": "string"
                              },
                              "masterNameId": 0,
                              "nonCompete": true,
                              "nonCompeteCode": "string",
                              "nonCompeteIndustry": "string",
                              "rateProtect": true,
                              "resvNameId": 0,
                              "salesOwner": 0,
                              "salesOwnerName": "string",
                              "vipStatus": {
                                "code": "string",
                                "value": "string"
                              }
                            },
                            "eventDisplay": {
                              "alternateMasterYn": "string",
                              "bookingName": "string",
                              "cateringOnlyYn": "string",
                              "dontMoveYn": "string",
                              "exclusiveYn": "string",
                              "loudEventYn": "string",
                              "masterYn": "string",
                              "sharedYn": "string",
                              "waitlistedYn": "string"
                            },
                            "eventName": "string",
                            "eventTimeSpan": {
                              "endDateTime": "2020-07-16T15:57:18.826Z",
                              "startDateTime": "2020-07-16T15:57:18.826Z"
                            },
                            "eventType": "string",
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "isComboRoomEventRef": true,
                            "masterEventId": {
                              "id": "string",
                              "type": "string"
                            },
                            "overbookEventsCount": 0,
                            "prospectiveEventsCount": 0,
                            "setdownTime": 0,
                            "setupCode": "string",
                            "setupDescription": "string",
                            "setupTime": 0,
                            "space": {
                              "code": "string",
                              "description": "string"
                            },
                            "spaceTimeSpan": {
                              "duration": "string",
                              "endDate": "2020-07-16",
                              "startDate": "2020-07-16"
                            },
                            "type": "string",
                            "url": "string",
                            "waitListEventsCount": 0
                          }
                        ],
                        "relatedEvents": "string"
                      },
                      "hotelId": "string",
                      "name": "string",
                      "roomId": "string",
                      "roomOrder": 0
                    }
                  ],
                  "pageIndex": 0,
                  "recordsPerPage": 0,
                  "totalRooms": 0
                },
                "links": [
                  {
                    "href": "string",
                    "method": "GET",
                    "operationId": "string",
                    "rel": "string",
                    "targetSchema": "string",
                    "templated": false,
                    "title": "string"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "EventCalendar not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/events": {
      "get": {
        "description": "This API fetches catering events for a specific hotel, based on search criteria such as dates, linked block, status, function space, and more. The data returned in the result contains, event type, description, dates and times, attendees, function space, setup style and more. <p><strong>OperationId:</strong>getEventsOneHotel</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Get Events ",
        "operationId": "getEventsOneHotel",
        "parameters": [
          {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "x-example": "BHOTEL",
            "description": "Unique ID of a hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "x-example": "2020-12-30",
            "description": "The starting value of the date range.",
            "name": "eventStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "x-example": "2020-12-30",
            "description": "The ending value of the date range.",
            "name": "eventEndDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Block ID linked to the Catering Event",
            "name": "blockId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": [
              "823814534"
            ],
            "description": "Unique ID for the catering event",
            "name": "eventId",
            "in": "query"
          },
          {
            "type": "string",
            "x-example": "323816531",
            "description": "A unique identifying numeric value assigned to a profile utilized to fetch events associated to blocks linked to the profile.",
            "name": "attachedProfileId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Block Name.",
            "name": "blockName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": [
              "ACT",
              "DEF"
            ],
            "description": "Status Codes associated with the events to be fetched.",
            "name": "eventStatusCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": [
              "BRK",
              "COF"
            ],
            "description": "Event Type Codes associated with the events to be fetched.",
            "name": "eventTypeCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": [
              "SPACE01",
              "SPACE02"
            ],
            "name": "functionSpaceCodes",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "x-example": false,
            "description": "Indicates whether to include inactive events in search result.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "x-example": false,
            "description": "Indicates whether to include the alternate events in the search result.",
            "name": "includeAlternateEvents",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "x-example": false,
            "description": "If set to true, the results will include opportunities. If this flag is not provided it will be considered false and exclude opportunities.",
            "name": "includeOpportunities",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "x-example": false,
            "description": "Indicates whether to include the sub events in the search result.",
            "name": "includeSubEvents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "StartDateTimeAsc",
              "StartDateTimeMasterSubAsc"
            ],
            "type": "string",
            "default": "StartDateTimeAsc",
            "x-example": "StartDateTimeAsc",
            "description": "A collection of supported list of order by for search catering events.",
            "name": "cateringEventOrderBy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "EventDetails",
                "BlocksInfo",
                "Indicators",
                "Notes",
                "SubEventsInfo",
                "AlternateEventsInfo",
                "MasterEventInfo",
                "Revenues",
                "IncludeInactiveSubEventsInfo",
                "IncludeInactiveMasterEventInfo",
                "ActualEventDetails",
                "EligibleMasterEventDetails"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": [
              "Indicators"
            ],
            "description": "Instruction to fetch all eligible master events for the selected event",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 200,
            "x-example": 200,
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "x-example": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching events.",
            "schema": {
              "$ref": "#/definitions/events"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "eventSummaries": {
                  "eventSummary": [
                    {
                      "allPosted": false,
                      "alternateEvent": false,
                      "attendees": "10",
                      "blockHasPostings": false,
                      "blockHotelCode": "TAIPEI",
                      "blockIdList": [
                        {
                          "id": "18450"
                        }
                      ],
                      "blockName": "ACME Convention",
                      "cateringCurrency": "USD",
                      "cateringQuotedCurrency": "USD",
                      "cateringStatusDeductInventory": false,
                      "cateringStatusReturnToInventory": false,
                      "cateringStatusType": "Inquiry",
                      "displayDoorCard": true,
                      "doorCard": "ACME Convention",
                      "eventEndDate": "2014-10-07 18:00:00.0",
                      "eventId": {
                        "id": "121294"
                      },
                      "eventName": "Meeting",
                      "eventShared": false,
                      "eventStartDate": "2014-10-07 09:00:00.0",
                      "eventStatus": {
                        "color": "Cyan",
                        "status": {
                          "code": "INQ",
                          "description": "Inquiry"
                        }
                      },
                      "excludeFromForecast": false,
                      "hasPartialPostings": false,
                      "hasPostings": false,
                      "hotelId": "TOKYO",
                      "loudEvent": false,
                      "masterEvent": true,
                      "nothingPosted": false,
                      "packageCode": "MTGBRK",
                      "packageEvent": true,
                      "packageName": "Meeting Break Package",
                      "shareable": false,
                      "subEvent": false,
                      "type": "MTG",
                      "useForecastRevenue": true
                    },
                    {
                      "allPosted": false,
                      "alternateEvent": false,
                      "attendees": "1",
                      "blockHasPostings": false,
                      "blockHotelCode": "TOKYO",
                      "blockIdList": [
                        {
                          "id": "11298"
                        }
                      ],
                      "blockName": "The Convention",
                      "cateringCurrency": "USD",
                      "cateringQuotedCurrency": "USD",
                      "cateringStatusDeductInventory": true,
                      "cateringStatusReturnToInventory": false,
                      "displayDoorCard": true,
                      "eventEndDate": "2015-12-05 18:00:00.0",
                      "eventId": {
                        "id": "108541"
                      },
                      "eventLink": {
                        "id": {
                          "id": "1090"
                        },
                        "masterEventDates": {
                          "endDateTime": "2015-12-05 13:00:00.0",
                          "startDateTime": "2015-12-05 12:00:00.0"
                        },
                        "type": "SubEvent"
                      },
                      "eventName": "Meeting",
                      "eventShared": false,
                      "eventStartDate": "2015-12-05 09:00:00.0",
                      "eventStatus": {
                        "color": "Red",
                        "status": {
                          "code": "DEF",
                          "description": "Definite-1"
                        }
                      },
                      "excludeFromForecast": false,
                      "functionSpaceCode": {
                        "code": "ANNA",
                        "description": "Annapolis Room"
                      },
                      "functionSpaceSetup": {
                        "code": "BOA",
                        "description": "Boardroom Style"
                      },
                      "hasPartialPostings": false,
                      "hasPostings": false,
                      "hotelId": "TOKYO",
                      "loudEvent": false,
                      "masterEvent": false,
                      "nothingPosted": false,
                      "packageEvent": false,
                      "rentalAmount": "20",
                      "rentalCode": "FULL",
                      "setupTime": "5",
                      "shareable": false,
                      "subEvent": true,
                      "tearDownTime": "5",
                      "type": "MTG",
                      "useForecastRevenue": true
                    },
                    {
                      "allPosted": false,
                      "alternateEvent": false,
                      "attendees": "1",
                      "blockHasPostings": false,
                      "blockHotelCode": "TOKYO",
                      "blockIdList": [
                        {
                          "id": "11298"
                        }
                      ],
                      "blockName": "The Convention",
                      "cateringCurrency": "USD",
                      "cateringQuotedCurrency": "USD",
                      "cateringStatusDeductInventory": true,
                      "cateringStatusReturnToInventory": false,
                      "displayDoorCard": true,
                      "doorCard": "The Convention",
                      "eventEndDate": "2015-12-05 13:00:00.0",
                      "eventId": {
                        "id": "1090"
                      },
                      "eventName": "Lunch",
                      "eventShared": false,
                      "eventStartDate": "2015-12-05 12:00:00.0",
                      "eventStatus": {
                        "color": "Red",
                        "status": {
                          "code": "DEF",
                          "description": "Definite-1"
                        }
                      },
                      "excludeFromForecast": false,
                      "hasPartialPostings": false,
                      "hasPostings": false,
                      "hotelId": "TOKYO",
                      "loudEvent": false,
                      "masterEvent": true,
                      "nothingPosted": false,
                      "packageEvent": false,
                      "shareable": false,
                      "subEvent": false,
                      "type": "LUN",
                      "useForecastRevenue": false
                    },
                    {
                      "allPosted": false,
                      "alternateEvent": false,
                      "attendees": "11",
                      "blockHasPostings": false,
                      "blockHotelCode": "TOKYO",
                      "blockIdList": [
                        {
                          "id": "251730",
                          "type": "Block"
                        }
                      ],
                      "blockName": "27 issue",
                      "cateringCurrency": "USD",
                      "cateringQuotedCurrency": "EUR",
                      "cateringStatusDeductInventory": true,
                      "cateringStatusReturnToInventory": false,
                      "cateringStatusType": "Actual",
                      "displayDoorCard": true,
                      "doorCard": "27 issue",
                      "eventEndDate": "2017-01-06 18:00:00.0",
                      "eventId": {
                        "id": "401315",
                        "idContext": "OPERA",
                        "type": "EventId"
                      },
                      "eventName": "Meeting",
                      "eventShared": false,
                      "eventStartDate": "2017-01-06 09:00:00.0",
                      "eventStatus": {
                        "color": "Brown",
                        "status": {
                          "code": "ACT",
                          "description": "Actual"
                        }
                      },
                      "excludeFromForecast": false,
                      "functionSpaceDetails": {
                        "code": "ANNA",
                        "description": "Annapolis Room"
                      },
                      "functionSpaceSetup": {
                        "code": "CON",
                        "description": "Conference"
                      },
                      "hasPartialPostings": false,
                      "hasPostings": false,
                      "hotelId": "TOKYO",
                      "loudEvent": false,
                      "masterEvent": false,
                      "maximumOccupancy": "55",
                      "minimumOccupancy": "1",
                      "nothingPosted": true,
                      "packageEvent": false,
                      "rentalAmount": "122",
                      "rentalCode": "CMP",
                      "setupTime": "0",
                      "shareable": false,
                      "subEvent": false,
                      "tearDownTime": "0",
                      "type": "MTG"
                    }
                  ],
                  "hasMore": false,
                  "limit": "4",
                  "offset": "4",
                  "totalPages": "1000",
                  "totalResults": "1000"
                }
              }
            }
          },
          "204": {
            "description": "EventsOneHotel not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/events/{eventId}": {
      "get": {
        "description": "This API will allow you to retrieve the details of one event by specifying the event ID in the path. Event details such as event type, event description, start date / time and end date time, attendees, function space, setup style, function space rate, and more  will be returned. You can also add fetch instructions to specify what additional event data, such as block information, revenue information, event notes, and master / sub event information you would like returned in the response. If you don&apos;t know the eventID, please use getEvents API to find the event and its respective eventID. <p><strong>OperationId:</strong>getEvent</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Get an Event",
        "operationId": "getEvent",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "3700516",
            "description": "Unique ID of the event",
            "name": "eventId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "x-example": "BHOTEL",
            "description": "Unique ID of a hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "EventDetails",
                "BlocksInfo",
                "Indicators",
                "Notes",
                "AlternateEventsInfo",
                "SubEventsInfo",
                "MasterEventInfo",
                "Revenues",
                "IncludeInactiveSubEventsInfo",
                "IncludeInactiveMasterEventInfo",
                "ActualEventDetails",
                "EligibleMasterEventDetails"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": [
              "Indicators",
              "Notes"
            ],
            "description": "Instruction to fetch all eligible master events for the selected event",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching event.",
            "schema": {
              "$ref": "#/definitions/event"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "eventDetails": [
                  {
                    "eventBlockInfo": {
                      "blockDetails": {
                        "blockCode": "180220DIVB",
                        "blockDates": {
                          "endDate": "2020-02-26",
                          "startDate": "2020-02-20"
                        },
                        "blockName": "First Company Block with Events"
                      },
                      "blockIdList": [
                        {
                          "id": "427673"
                        }
                      ],
                      "blockProfiles": {
                        "fullOverlay": false
                      },
                      "hotelId": "HOTEL1"
                    },
                    "eventDetail": {
                      "alternateEvent": false,
                      "attendees": {
                        "expected": "10"
                      },
                      "cateringDeductInventory": false,
                      "createDateTime": "2020-03-31 10:30:38.0",
                      "creatorId": "BEN@SFIRST",
                      "displayDoorcard": true,
                      "doorcard": "Buffet Breakfast",
                      "eventLevelRevenueActualization": true,
                      "eventName": {
                        "defaultText": "Breakfast - Buffet and Meeting"
                      },
                      "eventShared": false,
                      "eventStatus": {
                        "status": {
                          "code": "INQ"
                        }
                      },
                      "eventTimeSpan": {
                        "endDateTime": "2020-02-20 07:00:00.0",
                        "startDateTime": "2020-02-20 06:00:00.0"
                      },
                      "eventType": "BRKFTB",
                      "hasPostings": false,
                      "includeSpaceInPackage": false,
                      "lastModifierId": "SAM@VAFIRST",
                      "lastModifyDateTime": "2020-07-13 01:47:29.0",
                      "loudEvent": false,
                      "masterEvent": true,
                      "notMoveable": false,
                      "packageEvent": false,
                      "subEvent": false
                    },
                    "eventNotes": [
                      {
                        "comment": "Change Notes",
                        "createDateTime": "2020-05-14 02:23:23.0",
                        "creatorId": "JEN@SFIRST",
                        "internal": true,
                        "lastModifierId": "JEN@SFIRST",
                        "lastModifyDateTime": "2020-05-14 02:23:23.0",
                        "noteCode": "CH",
                        "noteId": {
                          "id": "57013"
                        },
                        "noteTitle": "Change"
                      },
                      {
                        "comment": "Change comment: non internal Event",
                        "createDateTime": "2020-05-14 02:23:50.0",
                        "creatorId": "JEN@SFIRST",
                        "internal": false,
                        "lastModifierId": "JEN@SFIRST",
                        "lastModifyDateTime": "2020-05-14 02:23:50.0",
                        "noteCode": "CH",
                        "noteId": {
                          "id": "57014"
                        },
                        "noteTitle": "Change"
                      }
                    ],
                    "eventPrimaryInfo": {
                      "eventId": {
                        "id": "238039"
                      },
                      "hotelId": "HOTEL1"
                    },
                    "functionSpaceInformation": {
                      "functionSpaceCode": "103",
                      "functionSpaceDescription": "Conway Room",
                      "maximumOccupancy": "20",
                      "minimumOccupancy": "1",
                      "rentalCode": "CUSTOM",
                      "setdownTime": "0",
                      "setupCode": "CON",
                      "setupDescription": "Conference Room",
                      "setupTime": "7",
                      "shareable": false
                    },
                    "onTheBooksRevenue": {
                      "amount": "250"
                    }
                  }
                ]
              }
            }
          },
          "204": {
            "description": "Event not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "You can use this API to update an existing Event by using the Event ID.  If you don't know the vent ID, use getEvents API to search for an event first. <p><strong>OperationId:</strong>changeEvents</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Update an Event",
        "operationId": "changeEvents",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the event",
            "name": "eventId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "x-example": "BHOTEL",
            "description": "Unique ID of a hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing event.",
            "name": "event",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/event"
                },
                {
                  "example": {
                    "eventDetails": [
                      {
                        "altEventsDetail": [
                          {
                            "eventDetail": {
                              "alternateEvent": true,
                              "attendees": {
                                "actual": 0,
                                "billed": 0,
                                "expected": 0,
                                "guaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "set": 0
                              },
                              "cateringDeductInventory": true,
                              "cateringStatusType": "Waitlist",
                              "createDateTime": "2020-07-17T09:19:00.373Z",
                              "creatorId": "string",
                              "displayDoorcard": true,
                              "doorcard": "string",
                              "eventLevelRevenueActualization": true,
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "masterEventDates": {
                                  "endDateTime": "2020-07-17T09:19:00.373Z",
                                  "startDateTime": "2020-07-17T09:19:00.373Z"
                                },
                                "type": "SubEvent"
                              },
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "eventShared": true,
                              "eventStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "eventTimeSpan": {
                                "endDateTime": "2020-07-17T09:19:00.372Z",
                                "startDateTime": "2020-07-17T09:19:00.372Z"
                              },
                              "eventType": "string",
                              "hasPostings": true,
                              "inactiveDate": "2020-07-17",
                              "includeSpaceInPackage": true,
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-17T09:19:00.373Z",
                              "loudEvent": true,
                              "masterEvent": true,
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "notMoveable": true,
                              "packageEvent": true,
                              "packageId": 0,
                              "packageName": "string",
                              "purgeDate": "2020-07-17",
                              "subEvent": true,
                              "waitlistReturnStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "waitlisted": true
                            },
                            "eventPrimaryInfo": {
                              "eventId": {
                                "id": "string",
                                "idContext": "string",
                                "idExtension": 0,
                                "instance": "string",
                                "type": "string",
                                "url": "string"
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "functionSpaceInformation": {
                              "comboSpace": true,
                              "discountPercentage": 0,
                              "elementSpace": true,
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "maximumOccupancy": 0,
                              "minimumOccupancy": 0,
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "rentalCode": "string",
                              "setdownTime": 0,
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "shareable": true
                            }
                          }
                        ],
                        "eventBlockInfo": {
                          "blockIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ]
                        },
                        "eventDetail": {
                          "alternateEvent": true,
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "cateringDeductInventory": true,
                          "cateringStatusType": "Waitlist",
                          "createDateTime": "2020-07-17T09:19:00.356Z",
                          "creatorId": "string",
                          "displayDoorcard": true,
                          "doorcard": "string",
                          "eventLevelRevenueActualization": true,
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "masterEventDates": {
                              "endDateTime": "2020-07-17T09:19:00.356Z",
                              "startDateTime": "2020-07-17T09:19:00.356Z"
                            },
                            "type": "SubEvent"
                          },
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "eventShared": true,
                          "eventStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "eventTimeSpan": {
                            "endDateTime": "2020-07-17T09:19:00.356Z",
                            "startDateTime": "2020-07-17T09:19:00.356Z"
                          },
                          "eventType": "string",
                          "hasPostings": true,
                          "inactiveDate": "2020-07-17",
                          "includeSpaceInPackage": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-17T09:19:00.356Z",
                          "loudEvent": true,
                          "masterEvent": true,
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "notMoveable": true,
                          "packageEvent": true,
                          "packageId": 0,
                          "packageName": "string",
                          "purgeDate": "2020-07-17",
                          "subEvent": true,
                          "waitlistReturnStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "waitlisted": true
                        },
                        "eventIndicators": [
                          {
                            "count": 0,
                            "indicatorName": "string"
                          }
                        ],
                        "eventNotes": [
                          {
                            "comment": "string",
                            "createDateTime": "2020-07-17T09:19:00.372Z",
                            "creatorId": "string",
                            "internal": true,
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-07-17T09:19:00.372Z",
                            "noteCode": "string",
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteTitle": "string",
                            "purgeDate": "2020-07-17",
                            "sequence": 0
                          }
                        ],
                        "eventPrimaryInfo": {
                          "eventId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventResources": [
                          {
                            "consumptionBased": true,
                            "custom": true,
                            "discount": 0,
                            "eventEndDate": "2020-07-17",
                            "eventResourceNotes": [
                              {
                                "comment": "string",
                                "createDateTime": "2020-07-17T09:19:00.356Z",
                                "creatorId": "string",
                                "internal": true,
                                "lastModifierId": "string",
                                "lastModifyDateTime": "2020-07-17T09:19:00.356Z",
                                "noteCode": "string",
                                "noteId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "noteTitle": "string",
                                "purgeDate": "2020-07-17",
                                "sequence": 0
                              }
                            ],
                            "eventStartDate": "2020-07-17",
                            "external": true,
                            "hasDiscountMenuItem": true,
                            "hasNotes": true,
                            "hotelId": "string",
                            "hours": 0,
                            "itemAttribute": "string",
                            "multiChoice": true,
                            "order": "string",
                            "packaged": true,
                            "persons": 0,
                            "quantity": 0,
                            "quantityExcluded": 0,
                            "quantityIncluded": 0,
                            "rentalCode": "string",
                            "resourceId": {
                              "id": "string",
                              "idContext": "string",
                              "idExtension": 0,
                              "instance": "string",
                              "type": "string",
                              "url": "string"
                            },
                            "resourceName": "string",
                            "resourceType": "FunctionSpace",
                            "revenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "sellEndDate": "2020-07-17",
                            "sellStartDate": "2020-07-17",
                            "setupCode": "string",
                            "unitPrice": {
                              "amount": 0,
                              "currencyCode": "string"
                            }
                          }
                        ],
                        "eventRevenues": {
                          "currencyCode": "string",
                          "eventLevelRevenueActualization": true,
                          "eventRevenueInformation": [
                            {
                              "actualRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "billedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "custom": true,
                              "expectedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "flatForecastRevenue": true,
                              "forecastRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "guaranteedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "ignoreForecast": true,
                              "onTheBooksRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "orderBy": 0,
                              "packaged": true,
                              "revenueType": {
                                "code": "string",
                                "displaySequence": 0,
                                "foodAndBeverage": true,
                                "inactive": true,
                                "revenueDetails": [
                                  {
                                    "hotelId": "string",
                                    "revenueMinimum": true,
                                    "tax": 0
                                  }
                                ],
                                "revenueGroup": "string",
                                "translatableDescription": {
                                  "defaultText": "string",
                                  "translations": {
                                    "text": [
                                      {
                                        "language": "string",
                                        "value": "string"
                                      }
                                    ]
                                  }
                                }
                              },
                              "totalCost": {
                                "amount": 0,
                                "currencyCode": "string"
                              }
                            }
                          ],
                          "excludeFromForecast": true,
                          "useForecastRevenue": true
                        },
                        "functionSpaceInformation": {
                          "comboSpace": true,
                          "discountPercentage": 0,
                          "elementSpace": true,
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "maximumOccupancy": 0,
                          "minimumOccupancy": 0,
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "rentalCode": "string",
                          "setdownTime": 0,
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "shareable": true
                        },
                        "masterEventDetail": {
                          "eventDetail": {
                            "alternateEvent": true,
                            "attendees": {
                              "actual": 0,
                              "billed": 0,
                              "expected": 0,
                              "guaranteed": 0,
                              "packageActual": 0,
                              "packageBilled": 0,
                              "packageExpected": 0,
                              "packageGuaranteed": 0,
                              "set": 0
                            },
                            "cateringDeductInventory": true,
                            "cateringStatusType": "Waitlist",
                            "createDateTime": "2020-07-17T09:19:00.373Z",
                            "creatorId": "string",
                            "displayDoorcard": true,
                            "doorcard": "string",
                            "eventLevelRevenueActualization": true,
                            "eventLink": {
                              "id": {
                                "id": "string",
                                "type": "string"
                              },
                              "masterEventDates": {
                                "endDateTime": "2020-07-17T09:19:00.373Z",
                                "startDateTime": "2020-07-17T09:19:00.373Z"
                              },
                              "type": "SubEvent"
                            },
                            "eventName": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "language": "string",
                                    "value": "string"
                                  }
                                ]
                              }
                            },
                            "eventShared": true,
                            "eventStatus": {
                              "color": "White",
                              "status": {
                                "code": "string",
                                "description": "string"
                              }
                            },
                            "eventTimeSpan": {
                              "endDateTime": "2020-07-17T09:19:00.373Z",
                              "startDateTime": "2020-07-17T09:19:00.373Z"
                            },
                            "eventType": "string",
                            "hasPostings": true,
                            "inactiveDate": "2020-07-17",
                            "includeSpaceInPackage": true,
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-07-17T09:19:00.373Z",
                            "loudEvent": true,
                            "masterEvent": true,
                            "masterEventId": {
                              "id": "string",
                              "type": "string"
                            },
                            "notMoveable": true,
                            "packageEvent": true,
                            "packageId": 0,
                            "packageName": "string",
                            "purgeDate": "2020-07-17",
                            "subEvent": true,
                            "waitlistReturnStatus": {
                              "color": "White",
                              "status": {
                                "code": "string",
                                "description": "string"
                              }
                            },
                            "waitlisted": true
                          },
                          "eventPrimaryInfo": {
                            "eventId": {
                              "id": "string",
                              "idContext": "string",
                              "idExtension": 0,
                              "instance": "string",
                              "type": "string",
                              "url": "string"
                            },
                            "hotelId": "string",
                            "includeSubEvents": true
                          },
                          "functionSpaceInformation": {
                            "comboSpace": true,
                            "discountPercentage": 0,
                            "elementSpace": true,
                            "functionSpaceCode": "string",
                            "functionSpaceDescription": "string",
                            "maximumOccupancy": 0,
                            "minimumOccupancy": 0,
                            "rateDesc": "string",
                            "rentalAmount": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "rentalCode": "string",
                            "setdownTime": 0,
                            "setupCode": "string",
                            "setupDescription": "string",
                            "setupTime": 0,
                            "shareable": true
                          }
                        },
                        "onTheBooksRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "processInstructions": {
                          "overbook": true,
                          "overrideCapacity": true,
                          "overrideMaxgroups": true,
                          "shareable": true,
                          "waitList": true,
                          "warnFunctionSpace": true
                        },
                        "subEventsDetail": [
                          {
                            "eventDetail": {
                              "alternateEvent": true,
                              "attendees": {
                                "actual": 0,
                                "billed": 0,
                                "expected": 0,
                                "guaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "set": 0
                              },
                              "cateringDeductInventory": true,
                              "cateringStatusType": "Waitlist",
                              "createDateTime": "2020-07-17T09:19:00.372Z",
                              "creatorId": "string",
                              "displayDoorcard": true,
                              "doorcard": "string",
                              "eventLevelRevenueActualization": true,
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "masterEventDates": {
                                  "endDateTime": "2020-07-17T09:19:00.372Z",
                                  "startDateTime": "2020-07-17T09:19:00.372Z"
                                },
                                "type": "SubEvent"
                              },
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "eventShared": true,
                              "eventStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "eventTimeSpan": {
                                "endDateTime": "2020-07-17T09:19:00.372Z",
                                "startDateTime": "2020-07-17T09:19:00.372Z"
                              },
                              "eventType": "string",
                              "hasPostings": true,
                              "inactiveDate": "2020-07-17",
                              "includeSpaceInPackage": true,
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-17T09:19:00.372Z",
                              "loudEvent": true,
                              "masterEvent": true,
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "notMoveable": true,
                              "packageEvent": true,
                              "packageId": 0,
                              "packageName": "string",
                              "purgeDate": "2020-07-17",
                              "subEvent": true,
                              "waitlistReturnStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "waitlisted": true
                            },
                            "eventPrimaryInfo": {
                              "eventId": {
                                "id": "string",
                                "idContext": "string",
                                "idExtension": 0,
                                "instance": "string",
                                "type": "string",
                                "url": "string"
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "functionSpaceInformation": {
                              "comboSpace": true,
                              "discountPercentage": 0,
                              "elementSpace": true,
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "maximumOccupancy": 0,
                              "minimumOccupancy": 0,
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "rentalCode": "string",
                              "setdownTime": 0,
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "shareable": true
                            }
                          }
                        ]
                      }
                    ],
                    "links": [
                      {
                        "href": "string",
                        "method": "GET",
                        "operationId": "string",
                        "rel": "string",
                        "targetSchema": "string",
                        "templated": false,
                        "title": "string"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/event"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "This API will delete an existing event <p><strong>OperationId:</strong>deleteEvents</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Delete an Event",
        "operationId": "deleteEvents",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the event",
            "name": "eventId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "x-example": "BHOTEL",
            "description": "Unique ID of a hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Indicates whether to delete/inactive the sub event(s) of the master event.",
            "name": "includeSubEvents",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/events/{eventId}/cateringEventPostings": {
      "get": {
        "description": "Retrieve the catering event posting on an event. <p><strong>OperationId:</strong>getCateringEventPostings</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Get Catering Event postings",
        "operationId": "getCateringEventPostings",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "name": "eventId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Indicates whether to delete/inactive the sub event(s) of the master event.",
            "name": "includeSubEvents",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "blockId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "blockIdContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "blockIdType",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "EventDetails",
                "BlocksInfo",
                "Indicators",
                "Notes",
                "SubEventsInfo",
                "AlternateEventsInfo",
                "MasterEventInfo",
                "Revenues",
                "IncludeInactiveSubEventsInfo",
                "IncludeInactiveMasterEventInfo",
                "ActualEventDetails",
                "EligibleMasterEventDetails"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Instruction to fetch all eligible master events for the selected event",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for retrieving catering events postings.",
            "schema": {
              "$ref": "#/definitions/cateringEventPostingsDetail"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {}
            }
          },
          "204": {
            "description": "CateringEventPostings not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Update and manage the catering event changes on an event. <p><strong>OperationId:</strong>manageCateringEventPostings</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Manage Catering Event postings",
        "operationId": "manageCateringEventPostings",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "name": "eventId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for retrieving catering events postings.",
            "name": "cateringEventPostings",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cateringEventPostings"
                },
                {
                  "example": {
                    "cateringEventPostings": [
                      {
                        "chequeNumber": "string",
                        "includedRevenue": true,
                        "postId": {
                          "id": "string",
                          "type": "string"
                        },
                        "posted": true,
                        "resourceName": "string",
                        "revenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "revenueType": "string",
                        "transactionCode": "string"
                      }
                    ],
                    "links": [
                      {
                        "href": "string",
                        "method": "GET",
                        "operationId": "string",
                        "rel": "string",
                        "targetSchema": "string",
                        "templated": false,
                        "title": "string"
                      }
                    ],
                    "postingMasterReservations": {
                      "count": 0,
                      "hasMore": true,
                      "reservation": [
                        {
                          "hotelReservation": {
                            "reservationIdList": [
                              {
                                "id": "string",
                                "type": "string"
                              }
                            ]
                          },
                          "routingInstructions": [
                            {
                              "folio": {
                                "aRNumber": "string",
                                "folioWindowNo": 0,
                                "guestInfo": {
                                  "profileIdList": [
                                    {
                                      "id": "string",
                                      "type": "string"
                                    }
                                  ]
                                },
                                "instructions": [
                                  {
                                    "billingInstructions": [
                                      {
                                        "billingCode": "string",
                                        "desc": "string",
                                        "hotelId": "string",
                                        "routingInstructionsId": 0
                                      }
                                    ],
                                    "covers": 0,
                                    "creditLimit": 0,
                                    "duration": {
                                      "blockDates": {
                                        "duration": "string",
                                        "endDate": "2020-07-13",
                                        "startDate": "2020-07-13"
                                      },
                                      "daily": true,
                                      "friday": true,
                                      "monday": true,
                                      "saturday": true,
                                      "sunday": true,
                                      "thursday": true,
                                      "tuesday": true,
                                      "wednesday": true
                                    },
                                    "limitUsed": 0,
                                    "percentageLimit": 0,
                                    "routingLinkId": {
                                      "id": "string",
                                      "type": "string"
                                    },
                                    "transactionCodes": [
                                      {
                                        "articles": [
                                          {
                                            "articleCode": "string",
                                            "description": "string",
                                            "hotelId": "string",
                                            "inactive": true,
                                            "orderSequence": 0,
                                            "postIt": {
                                              "availableForPostIt": true,
                                              "color": "Red"
                                            },
                                            "price": {
                                              "amount": 0,
                                              "currencyCode": "string"
                                            },
                                            "transactionCode": "string",
                                            "universalProductCode": "string"
                                          }
                                        ],
                                        "description": "string",
                                        "hotelId": "string",
                                        "printTrxReceipt": true,
                                        "routingInstructionsId": 0,
                                        "transactionCode": "string",
                                        "transactionGroup": "string",
                                        "transactionSubGroup": "string",
                                        "universalProductCode": "string"
                                      }
                                    ]
                                  }
                                ],
                                "payeeInfo": {
                                  "payeeAccountInfo": {
                                    "accountId": {
                                      "id": "string",
                                      "type": "string"
                                    },
                                    "accountName": "string",
                                    "accountNo": "string",
                                    "status": {
                                      "description": "string",
                                      "restricted": true,
                                      "restriction": "string"
                                    }
                                  },
                                  "payeeAddress": {
                                    "address": {
                                      "addressLine": [
                                        "string"
                                      ],
                                      "barCode": "string",
                                      "cityExtension": "string",
                                      "cityName": "string",
                                      "country": {
                                        "code": "string",
                                        "value": "string"
                                      },
                                      "county": "string",
                                      "createDateTime": "2020-07-13T15:23:14.694Z",
                                      "creatorId": "string",
                                      "language": "string",
                                      "lastModifierId": "string",
                                      "lastModifyDateTime": "2020-07-13T15:23:14.694Z",
                                      "postalCode": "string",
                                      "primaryInd": true,
                                      "purgeDate": "2020-07-13",
                                      "state": "string",
                                      "type": "string",
                                      "typeDescription": "string",
                                      "updateReservations": true
                                    },
                                    "id": "string",
                                    "type": "string"
                                  },
                                  "payeeAddressCount": 0,
                                  "payeeId": {
                                    "id": "string",
                                    "type": "string"
                                  },
                                  "payeeName": "string",
                                  "payeeReferenceCurrency": "string",
                                  "payeeTaxNumber": "string"
                                },
                                "paymentMethod": "string"
                              },
                              "functionSpaceDetails": {
                                "guestDisplayName": "string",
                                "guestNameId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "instructions": [
                                  {
                                    "billingInstructions": [
                                      {
                                        "billingCode": "string",
                                        "desc": "string",
                                        "hotelId": "string",
                                        "routingInstructionsId": 0
                                      }
                                    ],
                                    "covers": 0,
                                    "creditLimit": 0,
                                    "duration": {
                                      "blockDates": {
                                        "duration": "string",
                                        "endDate": "2020-07-13",
                                        "startDate": "2020-07-13"
                                      },
                                      "daily": true,
                                      "friday": true,
                                      "monday": true,
                                      "saturday": true,
                                      "sunday": true,
                                      "thursday": true,
                                      "tuesday": true,
                                      "wednesday": true
                                    },
                                    "limitUsed": 0,
                                    "percentageLimit": 0,
                                    "routingLinkId": {
                                      "id": "string",
                                      "type": "string"
                                    },
                                    "transactionCodes": [
                                      {
                                        "articles": [
                                          {
                                            "articleCode": "string",
                                            "description": "string",
                                            "hotelId": "string",
                                            "inactive": true,
                                            "orderSequence": 0,
                                            "postIt": {
                                              "availableForPostIt": true,
                                              "color": "Red"
                                            },
                                            "price": {
                                              "amount": 0,
                                              "currencyCode": "string"
                                            },
                                            "transactionCode": "string",
                                            "universalProductCode": "string"
                                          }
                                        ],
                                        "description": "string",
                                        "hotelId": "string",
                                        "printTrxReceipt": true,
                                        "routingInstructionsId": 0,
                                        "transactionCode": "string",
                                        "transactionGroup": "string",
                                        "transactionSubGroup": "string",
                                        "universalProductCode": "string"
                                      }
                                    ]
                                  }
                                ],
                                "reservationNameId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "roomId": "string"
                              },
                              "request": {
                                "compRequestInfo": {
                                  "comments": "string",
                                  "declinedBy": {
                                    "userId": 0,
                                    "userName": "string"
                                  },
                                  "requestedBy": {
                                    "userId": 0,
                                    "userName": "string"
                                  },
                                  "status": "Request"
                                },
                                "instructions": [
                                  {
                                    "billingInstructions": [
                                      {
                                        "billingCode": "string",
                                        "desc": "string",
                                        "hotelId": "string",
                                        "routingInstructionsId": 0
                                      }
                                    ],
                                    "covers": 0,
                                    "creditLimit": 0,
                                    "duration": {
                                      "blockDates": {
                                        "duration": "string",
                                        "endDate": "2020-07-13",
                                        "startDate": "2020-07-13"
                                      },
                                      "daily": true,
                                      "friday": true,
                                      "monday": true,
                                      "saturday": true,
                                      "sunday": true,
                                      "thursday": true,
                                      "tuesday": true,
                                      "wednesday": true
                                    },
                                    "limitUsed": 0,
                                    "percentageLimit": 0,
                                    "routingLinkId": {
                                      "id": "string",
                                      "type": "string"
                                    },
                                    "transactionCodes": [
                                      {
                                        "articles": [
                                          {
                                            "articleCode": "string",
                                            "description": "string",
                                            "hotelId": "string",
                                            "inactive": true,
                                            "orderSequence": 0,
                                            "postIt": {
                                              "availableForPostIt": true,
                                              "color": "Red"
                                            },
                                            "price": {
                                              "amount": 0,
                                              "currencyCode": "string"
                                            },
                                            "transactionCode": "string",
                                            "universalProductCode": "string"
                                          }
                                        ],
                                        "description": "string",
                                        "hotelId": "string",
                                        "printTrxReceipt": true,
                                        "routingInstructionsId": 0,
                                        "transactionCode": "string",
                                        "transactionGroup": "string",
                                        "transactionSubGroup": "string",
                                        "universalProductCode": "string"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      ],
                      "totalResults": 0
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for retrieving catering events posting after manage them.",
            "schema": {
              "$ref": "#/definitions/cateringEventPostings"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "examples": {
              "application/json": {
                "cateringEventPostings": [
                  {
                    "chequeNumber": "string",
                    "includedRevenue": true,
                    "postId": {
                      "id": "string",
                      "type": "string"
                    },
                    "posted": true,
                    "resourceName": "string",
                    "revenue": {
                      "amount": 0,
                      "currencyCode": "string"
                    },
                    "revenueType": "string",
                    "transactionCode": "string"
                  }
                ],
                "links": [
                  {
                    "href": "string",
                    "method": "GET",
                    "operationId": "string",
                    "rel": "string",
                    "targetSchema": "string",
                    "templated": false,
                    "title": "string"
                  }
                ],
                "postingMasterReservations": {
                  "count": 0,
                  "hasMore": true,
                  "reservation": [
                    {
                      "hotelReservation": {
                        "reservationIdList": [
                          {
                            "id": "string",
                            "type": "string"
                          }
                        ]
                      },
                      "routingInstructions": [
                        {
                          "folio": {
                            "aRNumber": "string",
                            "folioWindowNo": 0,
                            "guestInfo": {
                              "profileIdList": [
                                {
                                  "id": "string",
                                  "type": "string"
                                }
                              ]
                            },
                            "instructions": [
                              {
                                "billingInstructions": [
                                  {
                                    "billingCode": "string",
                                    "desc": "string",
                                    "hotelId": "string",
                                    "routingInstructionsId": 0
                                  }
                                ],
                                "covers": 0,
                                "creditLimit": 0,
                                "duration": {
                                  "blockDates": {
                                    "duration": "string",
                                    "endDate": "2020-07-13",
                                    "startDate": "2020-07-13"
                                  },
                                  "daily": true,
                                  "friday": true,
                                  "monday": true,
                                  "saturday": true,
                                  "sunday": true,
                                  "thursday": true,
                                  "tuesday": true,
                                  "wednesday": true
                                },
                                "limitUsed": 0,
                                "percentageLimit": 0,
                                "routingLinkId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "transactionCodes": [
                                  {
                                    "articles": [
                                      {
                                        "articleCode": "string",
                                        "description": "string",
                                        "hotelId": "string",
                                        "inactive": true,
                                        "orderSequence": 0,
                                        "postIt": {
                                          "availableForPostIt": true,
                                          "color": "Red"
                                        },
                                        "price": {
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "transactionCode": "string",
                                        "universalProductCode": "string"
                                      }
                                    ],
                                    "description": "string",
                                    "hotelId": "string",
                                    "printTrxReceipt": true,
                                    "routingInstructionsId": 0,
                                    "transactionCode": "string",
                                    "transactionGroup": "string",
                                    "transactionSubGroup": "string",
                                    "universalProductCode": "string"
                                  }
                                ]
                              }
                            ],
                            "payeeInfo": {
                              "payeeAccountInfo": {
                                "accountId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "accountName": "string",
                                "accountNo": "string",
                                "status": {
                                  "description": "string",
                                  "restricted": true,
                                  "restriction": "string"
                                }
                              },
                              "payeeAddress": {
                                "address": {
                                  "addressLine": [
                                    "string"
                                  ],
                                  "barCode": "string",
                                  "cityExtension": "string",
                                  "cityName": "string",
                                  "country": {
                                    "code": "string",
                                    "value": "string"
                                  },
                                  "county": "string",
                                  "createDateTime": "2020-07-13T15:23:14.694Z",
                                  "creatorId": "string",
                                  "language": "string",
                                  "lastModifierId": "string",
                                  "lastModifyDateTime": "2020-07-13T15:23:14.694Z",
                                  "postalCode": "string",
                                  "primaryInd": true,
                                  "purgeDate": "2020-07-13",
                                  "state": "string",
                                  "type": "string",
                                  "typeDescription": "string",
                                  "updateReservations": true
                                },
                                "id": "string",
                                "type": "string"
                              },
                              "payeeAddressCount": 0,
                              "payeeId": {
                                "id": "string",
                                "type": "string"
                              },
                              "payeeName": "string",
                              "payeeReferenceCurrency": "string",
                              "payeeTaxNumber": "string"
                            },
                            "paymentMethod": "string"
                          },
                          "functionSpaceDetails": {
                            "guestDisplayName": "string",
                            "guestNameId": {
                              "id": "string",
                              "type": "string"
                            },
                            "instructions": [
                              {
                                "billingInstructions": [
                                  {
                                    "billingCode": "string",
                                    "desc": "string",
                                    "hotelId": "string",
                                    "routingInstructionsId": 0
                                  }
                                ],
                                "covers": 0,
                                "creditLimit": 0,
                                "duration": {
                                  "blockDates": {
                                    "duration": "string",
                                    "endDate": "2020-07-13",
                                    "startDate": "2020-07-13"
                                  },
                                  "daily": true,
                                  "friday": true,
                                  "monday": true,
                                  "saturday": true,
                                  "sunday": true,
                                  "thursday": true,
                                  "tuesday": true,
                                  "wednesday": true
                                },
                                "limitUsed": 0,
                                "percentageLimit": 0,
                                "routingLinkId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "transactionCodes": [
                                  {
                                    "articles": [
                                      {
                                        "articleCode": "string",
                                        "description": "string",
                                        "hotelId": "string",
                                        "inactive": true,
                                        "orderSequence": 0,
                                        "postIt": {
                                          "availableForPostIt": true,
                                          "color": "Red"
                                        },
                                        "price": {
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "transactionCode": "string",
                                        "universalProductCode": "string"
                                      }
                                    ],
                                    "description": "string",
                                    "hotelId": "string",
                                    "printTrxReceipt": true,
                                    "routingInstructionsId": 0,
                                    "transactionCode": "string",
                                    "transactionGroup": "string",
                                    "transactionSubGroup": "string",
                                    "universalProductCode": "string"
                                  }
                                ]
                              }
                            ],
                            "reservationNameId": {
                              "id": "string",
                              "type": "string"
                            },
                            "roomId": "string"
                          },
                          "request": {
                            "compRequestInfo": {
                              "comments": "string",
                              "declinedBy": {
                                "userId": 0,
                                "userName": "string"
                              },
                              "requestedBy": {
                                "userId": 0,
                                "userName": "string"
                              },
                              "status": "Request"
                            },
                            "instructions": [
                              {
                                "billingInstructions": [
                                  {
                                    "billingCode": "string",
                                    "desc": "string",
                                    "hotelId": "string",
                                    "routingInstructionsId": 0
                                  }
                                ],
                                "covers": 0,
                                "creditLimit": 0,
                                "duration": {
                                  "blockDates": {
                                    "duration": "string",
                                    "endDate": "2020-07-13",
                                    "startDate": "2020-07-13"
                                  },
                                  "daily": true,
                                  "friday": true,
                                  "monday": true,
                                  "saturday": true,
                                  "sunday": true,
                                  "thursday": true,
                                  "tuesday": true,
                                  "wednesday": true
                                },
                                "limitUsed": 0,
                                "percentageLimit": 0,
                                "routingLinkId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "transactionCodes": [
                                  {
                                    "articles": [
                                      {
                                        "articleCode": "string",
                                        "description": "string",
                                        "hotelId": "string",
                                        "inactive": true,
                                        "orderSequence": 0,
                                        "postIt": {
                                          "availableForPostIt": true,
                                          "color": "Red"
                                        },
                                        "price": {
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "transactionCode": "string",
                                        "universalProductCode": "string"
                                      }
                                    ],
                                    "description": "string",
                                    "hotelId": "string",
                                    "printTrxReceipt": true,
                                    "routingInstructionsId": 0,
                                    "transactionCode": "string",
                                    "transactionGroup": "string",
                                    "transactionSubGroup": "string",
                                    "universalProductCode": "string"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "totalResults": 0
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/events/{eventId}/eventResources/{quickInsertId}": {
      "post": {
        "description": "Use this to add a configured resource to a Catering Event. The Catering Event ID and Quick Insert number of a Catering Menu or Miscellaneous Item or a Template name must be provided. <p><strong>OperationId:</strong>postQuickInsertResources</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Add Resource to an Event in a hotel by ID",
        "operationId": "postQuickInsertResources",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Menu/Item quick insert ID or Item Template name",
            "name": "quickInsertId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the event",
            "name": "eventId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for quick insert of menu(s),item(s) or item template(s).",
            "name": "quickInsertResources",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/quickInsertResources"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response object for quick insert of menu(s), item(s) or item template(s).",
            "schema": {
              "$ref": "#/definitions/quickInsertResourceStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/eventsResources": {
      "get": {
        "description": "Event Resources are the items and menus the property provides as part of its events offerings. Use this API to retrieve the Event resources as per your requested parameters. <p><strong>OperationId:</strong>getEventsResources</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Get Event Resources",
        "operationId": "getEventsResources",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "blockId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "eventIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching event resources.",
            "schema": {
              "$ref": "#/definitions/eventsResources"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "EventsResources not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Update the details of an existing event resource on an event in OPERA Cloud. <p><strong>OperationId:</strong>changeEventsResources</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Update Events Resources",
        "operationId": "changeEventsResources",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for managing events resources.",
            "name": "manageEventsResources",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/manageEventsResources"
                },
                {
                  "example": {}
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/manageEventsResources"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/fetchBlockPostingAccountReservations": {
      "get": {
        "description": "Retrieve the catering event posting on an event. <p><strong>OperationId:</strong>getBlockPostingAccountReservations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Get Catering Event postings",
        "operationId": "getBlockPostingAccountReservations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "blockId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for retrieving block Posting account reservations.",
            "schema": {
              "$ref": "#/definitions/blockPostingAccountReservationsInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "BlockPostingAccountReservations not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/functionalSpace": {
      "get": {
        "description": "Find the availability of a properties function space. <p><strong>OperationId:</strong>getFunctionSpaceAvailability</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Get hotel's function space availability",
        "operationId": "getFunctionSpaceAvailability",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Flag that indicates if when quering for availability inventory should be checked or not.",
            "name": "checkInventory",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The ending value of the time span.",
            "name": "eventEndDate",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Determines whether to fetch only physical meeting rooms or not.",
            "name": "physicalRoom",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag that indicates if the result includes force alternate function spaces.",
            "name": "showForceAlternate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The starting value of the time span.",
            "name": "eventStartDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room Type where function space belongs to",
            "name": "roomType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Space Type where function space belongs to",
            "name": "spaceType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wild search on Room Code and Function Name.",
            "name": "functionSpaceWildcard",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "floorCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "locationCodes",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "FunctionSpaceCount"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Instruction to fetch only function space count.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Share",
              "Noshare",
              "Both"
            ],
            "type": "string",
            "description": "A collection of prime search modes for fetching Function Space availability",
            "name": "functionSpaceSearchMode",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Individual",
              "Combo",
              "Both"
            ],
            "type": "string",
            "description": "A collection of additional search modes for fetching Function Space availability.",
            "name": "functionSpaceAdditionalSearchMode",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "attendeesFrom",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "attendeesTo",
            "in": "query"
          },
          {
            "type": "number",
            "name": "areaFrom",
            "in": "query"
          },
          {
            "type": "number",
            "name": "areaTo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "setupCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Rate Code used by master function space.",
            "name": "masterRateCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "amount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Setup Code used by master function space.",
            "name": "masterSetupCode",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Setup time in minutes.",
            "name": "setupTime",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Setdown time in minutes.",
            "name": "setdownTime",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Internal ID of reservation, which currently holds the Function Space and which needs to be excluded while checking the Function Space availability",
            "name": "resvNameId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "eventTypeCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for retrieving availability for catering function spaces.",
            "schema": {
              "$ref": "#/definitions/functionSpaceAvailabilityDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FunctionSpaceAvailability not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/functionalSpaceEvents": {
      "get": {
        "description": "This API will allow you to see if events are booked into the same space at the same or overlapping time. <p><strong>OperationId:</strong>getSharedFunctionSpaceEvents</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Get shared function space events",
        "operationId": "getSharedFunctionSpaceEvents",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Function space from which shared events will be fetched.",
            "name": "functionSpaceCode",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "startDateTime",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "endDateTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching events shared by function space.",
            "schema": {
              "$ref": "#/definitions/functionSpaceEvents"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "SharedFunctionSpaceEvents not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/waitListedEvents": {
      "get": {
        "description": "Search for waitlisted events for a specified property.  You can narrow down the results by using filters in the request. <p><strong>OperationId:</strong>getWaitlistedEvents</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Retreve Waitlisted Events ",
        "operationId": "getWaitlistedEvents",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "functionSpaceCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search a specific account's waitlisted events.",
            "name": "accountName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search a specific block's waitlisted events.",
            "name": "blockName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "blockId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "blockIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "blockIdType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "startDateTime",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "endDateTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for retrieving waitlisted and current events holding the function space.",
            "schema": {
              "$ref": "#/definitions/waitlistedEvents"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "eventResourceDetails": {
                  "eventDetailInfo": {
                    "altEventsDetail": [
                      {
                        "eventDetail": {
                          "alternateEvent": true,
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "cateringDeductInventory": true,
                          "cateringStatusType": "Waitlist",
                          "createDateTime": "2020-07-13T15:32:09.654Z",
                          "creatorId": "string",
                          "displayDoorcard": true,
                          "doorcard": "string",
                          "eventLevelRevenueActualization": true,
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "masterEventDates": {
                              "endDateTime": "2020-07-13T15:32:09.654Z",
                              "startDateTime": "2020-07-13T15:32:09.654Z"
                            },
                            "type": "SubEvent"
                          },
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "eventShared": true,
                          "eventStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "eventTimeSpan": {
                            "endDateTime": "2020-07-13T15:32:09.654Z",
                            "startDateTime": "2020-07-13T15:32:09.654Z"
                          },
                          "eventType": "string",
                          "hasPostings": true,
                          "inactiveDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-13T15:32:09.654Z",
                          "loudEvent": true,
                          "masterEvent": true,
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "notMoveable": true,
                          "packageEvent": true,
                          "packageId": 0,
                          "packageName": "string",
                          "purgeDate": "2020-07-13",
                          "subEvent": true,
                          "waitlistReturnStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "waitlisted": true
                        },
                        "eventPrimaryInfo": {
                          "eventId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "functionSpaceInformation": {
                          "comboSpace": true,
                          "discountPercentage": 0,
                          "elementSpace": true,
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "maximumOccupancy": 0,
                          "minimumOccupancy": 0,
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "rentalCode": "string",
                          "setdownTime": 0,
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "shareable": true
                        }
                      }
                    ],
                    "eventBlockInfo": {
                      "blockIdList": [
                        {
                          "id": "string",
                          "type": "string"
                        }
                      ]
                    },
                    "eventDetail": {
                      "alternateEvent": true,
                      "attendees": {
                        "actual": 0,
                        "billed": 0,
                        "expected": 0,
                        "guaranteed": 0,
                        "packageActual": 0,
                        "packageBilled": 0,
                        "packageExpected": 0,
                        "packageGuaranteed": 0,
                        "set": 0
                      },
                      "cateringDeductInventory": true,
                      "cateringStatusType": "Waitlist",
                      "createDateTime": "2020-07-13T15:32:09.635Z",
                      "creatorId": "string",
                      "displayDoorcard": true,
                      "doorcard": "string",
                      "eventLevelRevenueActualization": true,
                      "eventLink": {
                        "id": {
                          "id": "string",
                          "type": "string"
                        },
                        "masterEventDates": {
                          "endDateTime": "2020-07-13T15:32:09.635Z",
                          "startDateTime": "2020-07-13T15:32:09.635Z"
                        },
                        "type": "SubEvent"
                      },
                      "eventName": {
                        "defaultText": "string",
                        "translations": {
                          "text": [
                            {
                              "language": "string",
                              "value": "string"
                            }
                          ]
                        }
                      },
                      "eventShared": true,
                      "eventStatus": {
                        "color": "White",
                        "status": {
                          "code": "string",
                          "description": "string"
                        }
                      },
                      "eventTimeSpan": {
                        "endDateTime": "2020-07-13T15:32:09.635Z",
                        "startDateTime": "2020-07-13T15:32:09.635Z"
                      },
                      "eventType": "string",
                      "hasPostings": true,
                      "inactiveDate": "2020-07-13",
                      "includeSpaceInPackage": true,
                      "lastModifierId": "string",
                      "lastModifyDateTime": "2020-07-13T15:32:09.635Z",
                      "loudEvent": true,
                      "masterEvent": true,
                      "masterEventId": {
                        "id": "string",
                        "type": "string"
                      },
                      "notMoveable": true,
                      "packageEvent": true,
                      "packageId": 0,
                      "packageName": "string",
                      "purgeDate": "2020-07-13",
                      "subEvent": true,
                      "waitlistReturnStatus": {
                        "color": "White",
                        "status": {
                          "code": "string",
                          "description": "string"
                        }
                      },
                      "waitlisted": true
                    },
                    "eventIndicators": [
                      {
                        "count": 0,
                        "indicatorName": "string"
                      }
                    ],
                    "eventNotes": [
                      {
                        "comment": "string",
                        "createDateTime": "2020-07-13T15:32:09.654Z",
                        "creatorId": "string",
                        "internal": true,
                        "lastModifierId": "string",
                        "lastModifyDateTime": "2020-07-13T15:32:09.654Z",
                        "noteCode": "string",
                        "noteId": {
                          "id": "string",
                          "type": "string"
                        },
                        "noteTitle": "string",
                        "purgeDate": "2020-07-13",
                        "sequence": 0
                      }
                    ],
                    "eventPrimaryInfo": {
                      "eventId": {
                        "id": "string",
                        "idContext": "string",
                        "idExtension": 0,
                        "instance": "string",
                        "type": "string",
                        "url": "string"
                      },
                      "hotelId": "string",
                      "includeSubEvents": true
                    },
                    "eventResources": [
                      {
                        "consumptionBased": true,
                        "custom": true,
                        "discount": 0,
                        "eventEndDate": "2020-07-13",
                        "eventResourceNotes": [
                          {
                            "comment": "string",
                            "createDateTime": "2020-07-13T15:32:09.635Z",
                            "creatorId": "string",
                            "internal": true,
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-07-13T15:32:09.635Z",
                            "noteCode": "string",
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteTitle": "string",
                            "purgeDate": "2020-07-13",
                            "sequence": 0
                          }
                        ],
                        "eventStartDate": "2020-07-13",
                        "external": true,
                        "hasDiscountMenuItem": true,
                        "hasNotes": true,
                        "hotelId": "string",
                        "hours": 0,
                        "itemAttribute": "string",
                        "multiChoice": true,
                        "order": "string",
                        "packaged": true,
                        "persons": 0,
                        "quantity": 0,
                        "quantityExcluded": 0,
                        "quantityIncluded": 0,
                        "rentalCode": "string",
                        "resourceId": {
                          "id": "string",
                          "idContext": "string",
                          "idExtension": 0,
                          "instance": "string",
                          "type": "string",
                          "url": "string"
                        },
                        "resourceName": "string",
                        "resourceType": "FunctionSpace",
                        "revenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "sellEndDate": "2020-07-13",
                        "sellStartDate": "2020-07-13",
                        "setupCode": "string",
                        "unitPrice": {
                          "amount": 0,
                          "currencyCode": "string"
                        }
                      }
                    ],
                    "eventRevenues": {
                      "currencyCode": "string",
                      "eventLevelRevenueActualization": true,
                      "eventRevenueInformation": [
                        {
                          "actualRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "billedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "custom": true,
                          "expectedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "flatForecastRevenue": true,
                          "forecastRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "guaranteedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "ignoreForecast": true,
                          "onTheBooksRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "orderBy": 0,
                          "packaged": true,
                          "revenueType": {
                            "code": "string",
                            "displaySequence": 0,
                            "foodAndBeverage": true,
                            "inactive": true,
                            "revenueDetails": [
                              {
                                "hotelId": "string",
                                "revenueMinimum": true,
                                "tax": 0
                              }
                            ],
                            "revenueGroup": "string",
                            "translatableDescription": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "language": "string",
                                    "value": "string"
                                  }
                                ]
                              }
                            }
                          },
                          "totalCost": {
                            "amount": 0,
                            "currencyCode": "string"
                          }
                        }
                      ],
                      "excludeFromForecast": true,
                      "useForecastRevenue": true
                    },
                    "functionSpaceInformation": {
                      "comboSpace": true,
                      "discountPercentage": 0,
                      "elementSpace": true,
                      "functionSpaceCode": "string",
                      "functionSpaceDescription": "string",
                      "maximumOccupancy": 0,
                      "minimumOccupancy": 0,
                      "rateDesc": "string",
                      "rentalAmount": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "rentalCode": "string",
                      "setdownTime": 0,
                      "setupCode": "string",
                      "setupDescription": "string",
                      "setupTime": 0,
                      "shareable": true
                    },
                    "masterEventDetail": {
                      "eventDetail": {
                        "alternateEvent": true,
                        "attendees": {
                          "actual": 0,
                          "billed": 0,
                          "expected": 0,
                          "guaranteed": 0,
                          "packageActual": 0,
                          "packageBilled": 0,
                          "packageExpected": 0,
                          "packageGuaranteed": 0,
                          "set": 0
                        },
                        "cateringDeductInventory": true,
                        "cateringStatusType": "Waitlist",
                        "createDateTime": "2020-07-13T15:32:09.654Z",
                        "creatorId": "string",
                        "displayDoorcard": true,
                        "doorcard": "string",
                        "eventLevelRevenueActualization": true,
                        "eventLink": {
                          "id": {
                            "id": "string",
                            "type": "string"
                          },
                          "masterEventDates": {
                            "endDateTime": "2020-07-13T15:32:09.654Z",
                            "startDateTime": "2020-07-13T15:32:09.654Z"
                          },
                          "type": "SubEvent"
                        },
                        "eventName": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "eventShared": true,
                        "eventStatus": {
                          "color": "White",
                          "status": {
                            "code": "string",
                            "description": "string"
                          }
                        },
                        "eventTimeSpan": {
                          "endDateTime": "2020-07-13T15:32:09.654Z",
                          "startDateTime": "2020-07-13T15:32:09.654Z"
                        },
                        "eventType": "string",
                        "hasPostings": true,
                        "inactiveDate": "2020-07-13",
                        "includeSpaceInPackage": true,
                        "lastModifierId": "string",
                        "lastModifyDateTime": "2020-07-13T15:32:09.654Z",
                        "loudEvent": true,
                        "masterEvent": true,
                        "masterEventId": {
                          "id": "string",
                          "type": "string"
                        },
                        "notMoveable": true,
                        "packageEvent": true,
                        "packageId": 0,
                        "packageName": "string",
                        "purgeDate": "2020-07-13",
                        "subEvent": true,
                        "waitlistReturnStatus": {
                          "color": "White",
                          "status": {
                            "code": "string",
                            "description": "string"
                          }
                        },
                        "waitlisted": true
                      },
                      "eventPrimaryInfo": {
                        "eventId": {
                          "id": "string",
                          "idContext": "string",
                          "idExtension": 0,
                          "instance": "string",
                          "type": "string",
                          "url": "string"
                        },
                        "hotelId": "string",
                        "includeSubEvents": true
                      },
                      "functionSpaceInformation": {
                        "comboSpace": true,
                        "discountPercentage": 0,
                        "elementSpace": true,
                        "functionSpaceCode": "string",
                        "functionSpaceDescription": "string",
                        "maximumOccupancy": 0,
                        "minimumOccupancy": 0,
                        "rateDesc": "string",
                        "rentalAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "rentalCode": "string",
                        "setdownTime": 0,
                        "setupCode": "string",
                        "setupDescription": "string",
                        "setupTime": 0,
                        "shareable": true
                      }
                    },
                    "onTheBooksRevenue": {
                      "amount": 0,
                      "currencyCode": "string"
                    },
                    "processInstructions": {
                      "overbook": true,
                      "overrideCapacity": true,
                      "overrideMaxgroups": true,
                      "shareable": true,
                      "waitList": true,
                      "warnFunctionSpace": true
                    },
                    "subEventsDetail": [
                      {
                        "eventDetail": {
                          "alternateEvent": true,
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "cateringDeductInventory": true,
                          "cateringStatusType": "Waitlist",
                          "createDateTime": "2020-07-13T15:32:09.654Z",
                          "creatorId": "string",
                          "displayDoorcard": true,
                          "doorcard": "string",
                          "eventLevelRevenueActualization": true,
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "masterEventDates": {
                              "endDateTime": "2020-07-13T15:32:09.654Z",
                              "startDateTime": "2020-07-13T15:32:09.654Z"
                            },
                            "type": "SubEvent"
                          },
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "eventShared": true,
                          "eventStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "eventTimeSpan": {
                            "endDateTime": "2020-07-13T15:32:09.654Z",
                            "startDateTime": "2020-07-13T15:32:09.654Z"
                          },
                          "eventType": "string",
                          "hasPostings": true,
                          "inactiveDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-13T15:32:09.654Z",
                          "loudEvent": true,
                          "masterEvent": true,
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "notMoveable": true,
                          "packageEvent": true,
                          "packageId": 0,
                          "packageName": "string",
                          "purgeDate": "2020-07-13",
                          "subEvent": true,
                          "waitlistReturnStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "waitlisted": true
                        },
                        "eventPrimaryInfo": {
                          "eventId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "functionSpaceInformation": {
                          "comboSpace": true,
                          "discountPercentage": 0,
                          "elementSpace": true,
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "maximumOccupancy": 0,
                          "minimumOccupancy": 0,
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "rentalCode": "string",
                          "setdownTime": 0,
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "shareable": true
                        }
                      }
                    ]
                  },
                  "item": {
                    "eventItem": {
                      "actualExternalCostPerUnit": 0,
                      "actualExternalQuantity": 0,
                      "actualInternalCostPerUnit": 0,
                      "actualInternalQuantity": 0,
                      "actualQuantity": 0,
                      "attributeId": {
                        "id": "string",
                        "type": "string"
                      },
                      "attributes": [
                        {
                          "default": true,
                          "itemAttributeId": {
                            "id": "string",
                            "type": "string"
                          },
                          "setdownTime": 0,
                          "setupTime": 0,
                          "translatableName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "departments": [
                        "string"
                      ],
                      "discount": 0,
                      "displaySequence": 0,
                      "eventEndDate": "2020-07-13T15:32:09.655Z",
                      "eventStartDate": "2020-07-13T15:32:09.655Z",
                      "eventTypes": [
                        "string"
                      ],
                      "externalCostPerUnit": 0,
                      "externalOrder": true,
                      "externalQuantity": 0,
                      "hotelId": "string",
                      "internalCostPerUnit": 0,
                      "internalQuantity": 0,
                      "isExcludeNonDeduct": true,
                      "isNameCustom": true,
                      "itemClassCode": "string",
                      "itemClassDescription": "string",
                      "itemClassId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemCode": "string",
                      "itemDescription": "string",
                      "itemId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemName": {
                        "defaultText": "string",
                        "translations": {
                          "text": [
                            {
                              "language": "string",
                              "value": "string"
                            }
                          ]
                        }
                      },
                      "itemPool": "string",
                      "itemRateId": {
                        "id": "string",
                        "type": "string"
                      },
                      "order": 0,
                      "packageId": {
                        "id": "string",
                        "type": "string"
                      },
                      "price": 0,
                      "priceCode": "string",
                      "print": true,
                      "quantity": 0,
                      "rates": [
                        {
                          "default": true,
                          "hourly": true,
                          "itemRateCode": "string",
                          "itemRateId": {
                            "id": "string",
                            "type": "string"
                          },
                          "name": "string",
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          }
                        }
                      ],
                      "resourceNotes": [
                        {
                          "comment": "string",
                          "createDateTime": "2020-07-13T15:32:09.655Z",
                          "creatorId": "string",
                          "internal": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-13T15:32:09.655Z",
                          "noteCode": "string",
                          "noteId": {
                            "id": "string",
                            "type": "string"
                          },
                          "noteTitle": "string",
                          "purgeDate": "2020-07-13",
                          "sequence": 0
                        }
                      ],
                      "revenueType": "string",
                      "revenueTypeEditable": true,
                      "sellInfo": {
                        "available": {
                          "endDateTime": "2020-07-13T15:32:09.655Z",
                          "startDateTime": "2020-07-13T15:32:09.655Z"
                        },
                        "availableQty": 0,
                        "criticalInventory": true,
                        "defaultDuration": 0,
                        "defaultQty": 0,
                        "discountable": true,
                        "fixedCharge": true,
                        "itemClassDiscountable": true,
                        "itemClassWebBookable": true,
                        "outsideStay": true,
                        "price": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "qtyInStock": 0,
                        "sellControl": true,
                        "sellSeparate": true,
                        "webBookable": true,
                        "welcomeOffer": true
                      },
                      "setdownTime": 0,
                      "setupTime": 0,
                      "traceText": "string",
                      "usedForEvents": true,
                      "usedForReservation": true,
                      "vendorPrice": 0,
                      "vendors": [
                        {
                          "email": "string",
                          "fax": "string",
                          "leadTime": "string",
                          "name": "string",
                          "phone": "string",
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "priority": 0,
                          "profileId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          }
                        }
                      ]
                    },
                    "eventItemId": {
                      "id": "string",
                      "type": "string"
                    }
                  },
                  "menu": {
                    "eventMenu": {
                      "basicInfo": {
                        "attendees": {
                          "actual": 0,
                          "billed": 0,
                          "expected": 0,
                          "guaranteed": 0,
                          "packageActual": 0,
                          "packageBilled": 0,
                          "packageExpected": 0,
                          "packageGuaranteed": 0,
                          "set": 0
                        },
                        "className": "string",
                        "consumptionBased": true,
                        "courseCount": 0,
                        "description": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "dietaryList": [
                          "string"
                        ],
                        "discountPercentage": 0,
                        "eventDateRange": {
                          "eventEndDate": "2020-07-13",
                          "eventStartDate": "2020-07-13"
                        },
                        "eventTypes": [
                          "string"
                        ],
                        "hotelId": "string",
                        "inactive": true,
                        "includedInMenu": true,
                        "includedInPrice": true,
                        "menuId": {
                          "id": "string",
                          "type": "string"
                        },
                        "menusSold": 0,
                        "multiChoice": true,
                        "name": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "order": 0,
                        "quickInsertCode": "string",
                        "restriction": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "salesPrice": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "sellDateRange": {
                          "eventEndDate": "2020-07-13",
                          "eventStartDate": "2020-07-13"
                        },
                        "serveStartEndTime": {
                          "eventEndDate": "2020-07-13T15:32:09.655Z",
                          "eventStartDate": "2020-07-13T15:32:09.655Z"
                        },
                        "servingSize": "string",
                        "servingType": "Pp",
                        "type": "Food",
                        "webBookable": true
                      },
                      "hotelId": "string",
                      "menuItems": [
                        {
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "classInfo": {
                            "code": "string",
                            "description": "string"
                          },
                          "container": {
                            "code": "string",
                            "description": "string"
                          },
                          "cost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "course": 0,
                          "courseOrder": 0,
                          "custom": true,
                          "demandFactor": 0,
                          "description": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "discountPercentage": 0,
                          "eventMenuDetailID": {
                            "id": "string",
                            "type": "string"
                          },
                          "eventTypes": [
                            "string"
                          ],
                          "hotelId": "string",
                          "id": {
                            "id": "string",
                            "type": "string"
                          },
                          "inactive": true,
                          "includedYN": true,
                          "itemConsumption": true,
                          "mandatoryYN": true,
                          "menuType": "Food",
                          "name1": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "name2": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "name3": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "origin1": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "origin2": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "portion": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "print": true,
                          "quickInsertCode": "string",
                          "responsibleDepartments": [
                            "string"
                          ],
                          "restriction": "string",
                          "revenueType": "string",
                          "salesPrice": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "servings": 0,
                          "webBookable": true,
                          "year": 0
                        }
                      ],
                      "revenues": [
                        {
                          "cost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "costMargin": 0,
                          "custom": true,
                          "internalQuote": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "priceMargin": 0,
                          "resourceId": {
                            "id": "string",
                            "type": "string"
                          },
                          "revenueType": "string",
                          "type": "Food"
                        }
                      ]
                    },
                    "eventMenuId": {
                      "id": "string",
                      "type": "string"
                    }
                  }
                },
                "links": [
                  {
                    "href": "string",
                    "method": "GET",
                    "operationId": "string",
                    "rel": "string",
                    "targetSchema": "string",
                    "templated": false,
                    "title": "string"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "WaitlistedEvents not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "You can update the waitlisted events such as changing priority of the events on the waitlist. <p><strong>OperationId:</strong>manageWaitlistedEvents</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Manage Waitlisted Events",
        "operationId": "manageWaitlistedEvents",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for managing waitlisted catering events.",
            "name": "manageWaitlistedEvents",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/manageWaitlistedEvents"
                },
                {
                  "example": {
                    "criteria": {
                      "accountName": "string",
                      "blockId": {
                        "id": "string",
                        "type": "string"
                      },
                      "blockName": "string",
                      "functionSpaceCode": [
                        "string"
                      ],
                      "hotelId": "string",
                      "waitlistedTimeSpan": {
                        "endDateTime": "2020-07-20T14:10:20.694Z",
                        "startDateTime": "2020-07-20T14:10:20.694Z"
                      }
                    },
                    "links": [
                      {
                        "href": "string",
                        "method": "GET",
                        "operationId": "string",
                        "rel": "string",
                        "targetSchema": "string",
                        "templated": false,
                        "title": "string"
                      }
                    ],
                    "processingInstructions": "IncreasePriority",
                    "waitlistedEvents": [
                      {
                        "altEventsDetail": [
                          {
                            "eventDetail": {
                              "alternateEvent": true,
                              "attendees": {
                                "actual": 0,
                                "billed": 0,
                                "expected": 0,
                                "guaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "set": 0
                              },
                              "cateringDeductInventory": true,
                              "cateringStatusType": "Waitlist",
                              "createDateTime": "2020-07-20T14:10:20.672Z",
                              "creatorId": "string",
                              "displayDoorcard": true,
                              "doorcard": "string",
                              "eventLevelRevenueActualization": true,
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "masterEventDates": {
                                  "endDateTime": "2020-07-20T14:10:20.672Z",
                                  "startDateTime": "2020-07-20T14:10:20.672Z"
                                },
                                "type": "SubEvent"
                              },
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "eventShared": true,
                              "eventStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "eventTimeSpan": {
                                "endDateTime": "2020-07-20T14:10:20.672Z",
                                "startDateTime": "2020-07-20T14:10:20.672Z"
                              },
                              "eventType": "string",
                              "hasPostings": true,
                              "inactiveDate": "2020-07-20",
                              "includeSpaceInPackage": true,
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-20T14:10:20.672Z",
                              "loudEvent": true,
                              "masterEvent": true,
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "notMoveable": true,
                              "packageEvent": true,
                              "packageId": 0,
                              "packageName": "string",
                              "purgeDate": "2020-07-20",
                              "subEvent": true,
                              "waitlistReturnStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "waitlisted": true
                            },
                            "eventPrimaryInfo": {
                              "eventId": {
                                "id": "string",
                                "idContext": "string",
                                "idExtension": 0,
                                "instance": "string",
                                "type": "string",
                                "url": "string"
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "functionSpaceInformation": {
                              "comboSpace": true,
                              "discountPercentage": 0,
                              "elementSpace": true,
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "maximumOccupancy": 0,
                              "minimumOccupancy": 0,
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "rentalCode": "string",
                              "setdownTime": 0,
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "shareable": true
                            }
                          }
                        ],
                        "currentEventsHoldingFunctionSpace": [
                          {
                            "altEventsDetail": [
                              {
                                "eventDetail": {
                                  "alternateEvent": true,
                                  "attendees": {
                                    "actual": 0,
                                    "billed": 0,
                                    "expected": 0,
                                    "guaranteed": 0,
                                    "packageActual": 0,
                                    "packageBilled": 0,
                                    "packageExpected": 0,
                                    "packageGuaranteed": 0,
                                    "set": 0
                                  },
                                  "cateringDeductInventory": true,
                                  "cateringStatusType": "Waitlist",
                                  "createDateTime": "2020-07-20T14:10:20.693Z",
                                  "creatorId": "string",
                                  "displayDoorcard": true,
                                  "doorcard": "string",
                                  "eventLevelRevenueActualization": true,
                                  "eventLink": {
                                    "id": {
                                      "id": "string",
                                      "type": "string"
                                    },
                                    "masterEventDates": {
                                      "endDateTime": "2020-07-20T14:10:20.693Z",
                                      "startDateTime": "2020-07-20T14:10:20.693Z"
                                    },
                                    "type": "SubEvent"
                                  },
                                  "eventName": {
                                    "defaultText": "string",
                                    "translations": {
                                      "text": [
                                        {
                                          "language": "string",
                                          "value": "string"
                                        }
                                      ]
                                    }
                                  },
                                  "eventShared": true,
                                  "eventStatus": {
                                    "color": "White",
                                    "status": {
                                      "code": "string",
                                      "description": "string"
                                    }
                                  },
                                  "eventTimeSpan": {
                                    "endDateTime": "2020-07-20T14:10:20.693Z",
                                    "startDateTime": "2020-07-20T14:10:20.693Z"
                                  },
                                  "eventType": "string",
                                  "hasPostings": true,
                                  "inactiveDate": "2020-07-20",
                                  "includeSpaceInPackage": true,
                                  "lastModifierId": "string",
                                  "lastModifyDateTime": "2020-07-20T14:10:20.693Z",
                                  "loudEvent": true,
                                  "masterEvent": true,
                                  "masterEventId": {
                                    "id": "string",
                                    "type": "string"
                                  },
                                  "notMoveable": true,
                                  "packageEvent": true,
                                  "packageId": 0,
                                  "packageName": "string",
                                  "purgeDate": "2020-07-20",
                                  "subEvent": true,
                                  "waitlistReturnStatus": {
                                    "color": "White",
                                    "status": {
                                      "code": "string",
                                      "description": "string"
                                    }
                                  },
                                  "waitlisted": true
                                },
                                "eventPrimaryInfo": {
                                  "eventId": {
                                    "id": "string",
                                    "idContext": "string",
                                    "idExtension": 0,
                                    "instance": "string",
                                    "type": "string",
                                    "url": "string"
                                  },
                                  "hotelId": "string",
                                  "includeSubEvents": true
                                },
                                "functionSpaceInformation": {
                                  "comboSpace": true,
                                  "discountPercentage": 0,
                                  "elementSpace": true,
                                  "functionSpaceCode": "string",
                                  "functionSpaceDescription": "string",
                                  "maximumOccupancy": 0,
                                  "minimumOccupancy": 0,
                                  "rateDesc": "string",
                                  "rentalAmount": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "rentalCode": "string",
                                  "setdownTime": 0,
                                  "setupCode": "string",
                                  "setupDescription": "string",
                                  "setupTime": 0,
                                  "shareable": true
                                }
                              }
                            ],
                            "eventBlockInfo": {
                              "blockIdList": [
                                {
                                  "id": "string",
                                  "type": "string"
                                }
                              ]
                            },
                            "eventDetail": {
                              "alternateEvent": true,
                              "attendees": {
                                "actual": 0,
                                "billed": 0,
                                "expected": 0,
                                "guaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "set": 0
                              },
                              "cateringDeductInventory": true,
                              "cateringStatusType": "Waitlist",
                              "createDateTime": "2020-07-20T14:10:20.673Z",
                              "creatorId": "string",
                              "displayDoorcard": true,
                              "doorcard": "string",
                              "eventLevelRevenueActualization": true,
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "masterEventDates": {
                                  "endDateTime": "2020-07-20T14:10:20.673Z",
                                  "startDateTime": "2020-07-20T14:10:20.673Z"
                                },
                                "type": "SubEvent"
                              },
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "eventShared": true,
                              "eventStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "eventTimeSpan": {
                                "endDateTime": "2020-07-20T14:10:20.673Z",
                                "startDateTime": "2020-07-20T14:10:20.673Z"
                              },
                              "eventType": "string",
                              "hasPostings": true,
                              "inactiveDate": "2020-07-20",
                              "includeSpaceInPackage": true,
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-20T14:10:20.673Z",
                              "loudEvent": true,
                              "masterEvent": true,
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "notMoveable": true,
                              "packageEvent": true,
                              "packageId": 0,
                              "packageName": "string",
                              "purgeDate": "2020-07-20",
                              "subEvent": true,
                              "waitlistReturnStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "waitlisted": true
                            },
                            "eventIndicators": [
                              {
                                "count": 0,
                                "indicatorName": "string"
                              }
                            ],
                            "eventNotes": [
                              {
                                "comment": "string",
                                "createDateTime": "2020-07-20T14:10:20.692Z",
                                "creatorId": "string",
                                "internal": true,
                                "lastModifierId": "string",
                                "lastModifyDateTime": "2020-07-20T14:10:20.692Z",
                                "noteCode": "string",
                                "noteId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "noteTitle": "string",
                                "purgeDate": "2020-07-20",
                                "sequence": 0
                              }
                            ],
                            "eventPrimaryInfo": {
                              "eventId": {
                                "id": "string",
                                "idContext": "string",
                                "idExtension": 0,
                                "instance": "string",
                                "type": "string",
                                "url": "string"
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "eventResources": [
                              {
                                "consumptionBased": true,
                                "custom": true,
                                "discount": 0,
                                "eventEndDate": "2020-07-20",
                                "eventResourceNotes": [
                                  {
                                    "comment": "string",
                                    "createDateTime": "2020-07-20T14:10:20.673Z",
                                    "creatorId": "string",
                                    "internal": true,
                                    "lastModifierId": "string",
                                    "lastModifyDateTime": "2020-07-20T14:10:20.673Z",
                                    "noteCode": "string",
                                    "noteId": {
                                      "id": "string",
                                      "type": "string"
                                    },
                                    "noteTitle": "string",
                                    "purgeDate": "2020-07-20",
                                    "sequence": 0
                                  }
                                ],
                                "eventStartDate": "2020-07-20",
                                "external": true,
                                "hasDiscountMenuItem": true,
                                "hasNotes": true,
                                "hotelId": "string",
                                "hours": 0,
                                "itemAttribute": "string",
                                "multiChoice": true,
                                "order": "string",
                                "packaged": true,
                                "persons": 0,
                                "quantity": 0,
                                "quantityExcluded": 0,
                                "quantityIncluded": 0,
                                "rentalCode": "string",
                                "resourceId": {
                                  "id": "string",
                                  "idContext": "string",
                                  "idExtension": 0,
                                  "instance": "string",
                                  "type": "string",
                                  "url": "string"
                                },
                                "resourceName": "string",
                                "resourceType": "FunctionSpace",
                                "revenue": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "sellEndDate": "2020-07-20",
                                "sellStartDate": "2020-07-20",
                                "setupCode": "string",
                                "unitPrice": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                }
                              }
                            ],
                            "eventRevenues": {
                              "currencyCode": "string",
                              "eventLevelRevenueActualization": true,
                              "eventRevenueInformation": [
                                {
                                  "actualRevenue": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "billedRevenue": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "custom": true,
                                  "expectedRevenue": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "flatForecastRevenue": true,
                                  "forecastRevenue": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "guaranteedRevenue": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "ignoreForecast": true,
                                  "onTheBooksRevenue": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "orderBy": 0,
                                  "packaged": true,
                                  "revenueType": {
                                    "code": "string",
                                    "displaySequence": 0,
                                    "foodAndBeverage": true,
                                    "inactive": true,
                                    "revenueDetails": [
                                      {
                                        "hotelId": "string",
                                        "revenueMinimum": true,
                                        "tax": 0
                                      }
                                    ],
                                    "revenueGroup": "string",
                                    "translatableDescription": {
                                      "defaultText": "string",
                                      "translations": {
                                        "text": [
                                          {
                                            "language": "string",
                                            "value": "string"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "totalCost": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  }
                                }
                              ],
                              "excludeFromForecast": true,
                              "useForecastRevenue": true
                            },
                            "functionSpaceInformation": {
                              "comboSpace": true,
                              "discountPercentage": 0,
                              "elementSpace": true,
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "maximumOccupancy": 0,
                              "minimumOccupancy": 0,
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "rentalCode": "string",
                              "setdownTime": 0,
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "shareable": true
                            },
                            "masterEventDetail": {
                              "eventDetail": {
                                "alternateEvent": true,
                                "attendees": {
                                  "actual": 0,
                                  "billed": 0,
                                  "expected": 0,
                                  "guaranteed": 0,
                                  "packageActual": 0,
                                  "packageBilled": 0,
                                  "packageExpected": 0,
                                  "packageGuaranteed": 0,
                                  "set": 0
                                },
                                "cateringDeductInventory": true,
                                "cateringStatusType": "Waitlist",
                                "createDateTime": "2020-07-20T14:10:20.693Z",
                                "creatorId": "string",
                                "displayDoorcard": true,
                                "doorcard": "string",
                                "eventLevelRevenueActualization": true,
                                "eventLink": {
                                  "id": {
                                    "id": "string",
                                    "type": "string"
                                  },
                                  "masterEventDates": {
                                    "endDateTime": "2020-07-20T14:10:20.693Z",
                                    "startDateTime": "2020-07-20T14:10:20.693Z"
                                  },
                                  "type": "SubEvent"
                                },
                                "eventName": {
                                  "defaultText": "string",
                                  "translations": {
                                    "text": [
                                      {
                                        "language": "string",
                                        "value": "string"
                                      }
                                    ]
                                  }
                                },
                                "eventShared": true,
                                "eventStatus": {
                                  "color": "White",
                                  "status": {
                                    "code": "string",
                                    "description": "string"
                                  }
                                },
                                "eventTimeSpan": {
                                  "endDateTime": "2020-07-20T14:10:20.693Z",
                                  "startDateTime": "2020-07-20T14:10:20.693Z"
                                },
                                "eventType": "string",
                                "hasPostings": true,
                                "inactiveDate": "2020-07-20",
                                "includeSpaceInPackage": true,
                                "lastModifierId": "string",
                                "lastModifyDateTime": "2020-07-20T14:10:20.693Z",
                                "loudEvent": true,
                                "masterEvent": true,
                                "masterEventId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "notMoveable": true,
                                "packageEvent": true,
                                "packageId": 0,
                                "packageName": "string",
                                "purgeDate": "2020-07-20",
                                "subEvent": true,
                                "waitlistReturnStatus": {
                                  "color": "White",
                                  "status": {
                                    "code": "string",
                                    "description": "string"
                                  }
                                },
                                "waitlisted": true
                              },
                              "eventPrimaryInfo": {
                                "eventId": {
                                  "id": "string",
                                  "idContext": "string",
                                  "idExtension": 0,
                                  "instance": "string",
                                  "type": "string",
                                  "url": "string"
                                },
                                "hotelId": "string",
                                "includeSubEvents": true
                              },
                              "functionSpaceInformation": {
                                "comboSpace": true,
                                "discountPercentage": 0,
                                "elementSpace": true,
                                "functionSpaceCode": "string",
                                "functionSpaceDescription": "string",
                                "maximumOccupancy": 0,
                                "minimumOccupancy": 0,
                                "rateDesc": "string",
                                "rentalAmount": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "rentalCode": "string",
                                "setdownTime": 0,
                                "setupCode": "string",
                                "setupDescription": "string",
                                "setupTime": 0,
                                "shareable": true
                              }
                            },
                            "onTheBooksRevenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "processInstructions": {
                              "overbook": true,
                              "overrideCapacity": true,
                              "overrideMaxgroups": true,
                              "shareable": true,
                              "waitList": true,
                              "warnFunctionSpace": true
                            },
                            "subEventsDetail": [
                              {
                                "eventDetail": {
                                  "alternateEvent": true,
                                  "attendees": {
                                    "actual": 0,
                                    "billed": 0,
                                    "expected": 0,
                                    "guaranteed": 0,
                                    "packageActual": 0,
                                    "packageBilled": 0,
                                    "packageExpected": 0,
                                    "packageGuaranteed": 0,
                                    "set": 0
                                  },
                                  "cateringDeductInventory": true,
                                  "cateringStatusType": "Waitlist",
                                  "createDateTime": "2020-07-20T14:10:20.692Z",
                                  "creatorId": "string",
                                  "displayDoorcard": true,
                                  "doorcard": "string",
                                  "eventLevelRevenueActualization": true,
                                  "eventLink": {
                                    "id": {
                                      "id": "string",
                                      "type": "string"
                                    },
                                    "masterEventDates": {
                                      "endDateTime": "2020-07-20T14:10:20.692Z",
                                      "startDateTime": "2020-07-20T14:10:20.692Z"
                                    },
                                    "type": "SubEvent"
                                  },
                                  "eventName": {
                                    "defaultText": "string",
                                    "translations": {
                                      "text": [
                                        {
                                          "language": "string",
                                          "value": "string"
                                        }
                                      ]
                                    }
                                  },
                                  "eventShared": true,
                                  "eventStatus": {
                                    "color": "White",
                                    "status": {
                                      "code": "string",
                                      "description": "string"
                                    }
                                  },
                                  "eventTimeSpan": {
                                    "endDateTime": "2020-07-20T14:10:20.692Z",
                                    "startDateTime": "2020-07-20T14:10:20.692Z"
                                  },
                                  "eventType": "string",
                                  "hasPostings": true,
                                  "inactiveDate": "2020-07-20",
                                  "includeSpaceInPackage": true,
                                  "lastModifierId": "string",
                                  "lastModifyDateTime": "2020-07-20T14:10:20.692Z",
                                  "loudEvent": true,
                                  "masterEvent": true,
                                  "masterEventId": {
                                    "id": "string",
                                    "type": "string"
                                  },
                                  "notMoveable": true,
                                  "packageEvent": true,
                                  "packageId": 0,
                                  "packageName": "string",
                                  "purgeDate": "2020-07-20",
                                  "subEvent": true,
                                  "waitlistReturnStatus": {
                                    "color": "White",
                                    "status": {
                                      "code": "string",
                                      "description": "string"
                                    }
                                  },
                                  "waitlisted": true
                                },
                                "eventPrimaryInfo": {
                                  "eventId": {
                                    "id": "string",
                                    "idContext": "string",
                                    "idExtension": 0,
                                    "instance": "string",
                                    "type": "string",
                                    "url": "string"
                                  },
                                  "hotelId": "string",
                                  "includeSubEvents": true
                                },
                                "functionSpaceInformation": {
                                  "comboSpace": true,
                                  "discountPercentage": 0,
                                  "elementSpace": true,
                                  "functionSpaceCode": "string",
                                  "functionSpaceDescription": "string",
                                  "maximumOccupancy": 0,
                                  "minimumOccupancy": 0,
                                  "rateDesc": "string",
                                  "rentalAmount": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "rentalCode": "string",
                                  "setdownTime": 0,
                                  "setupCode": "string",
                                  "setupDescription": "string",
                                  "setupTime": 0,
                                  "shareable": true
                                }
                              }
                            ]
                          }
                        ],
                        "eventBlockInfo": {
                          "blockIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ]
                        },
                        "eventDetail": {
                          "alternateEvent": true,
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "cateringDeductInventory": true,
                          "cateringStatusType": "Waitlist",
                          "createDateTime": "2020-07-20T14:10:20.655Z",
                          "creatorId": "string",
                          "displayDoorcard": true,
                          "doorcard": "string",
                          "eventLevelRevenueActualization": true,
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "masterEventDates": {
                              "endDateTime": "2020-07-20T14:10:20.655Z",
                              "startDateTime": "2020-07-20T14:10:20.655Z"
                            },
                            "type": "SubEvent"
                          },
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "eventShared": true,
                          "eventStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "eventTimeSpan": {
                            "endDateTime": "2020-07-20T14:10:20.655Z",
                            "startDateTime": "2020-07-20T14:10:20.655Z"
                          },
                          "eventType": "string",
                          "hasPostings": true,
                          "inactiveDate": "2020-07-20",
                          "includeSpaceInPackage": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-20T14:10:20.655Z",
                          "loudEvent": true,
                          "masterEvent": true,
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "notMoveable": true,
                          "packageEvent": true,
                          "packageId": 0,
                          "packageName": "string",
                          "purgeDate": "2020-07-20",
                          "subEvent": true,
                          "waitlistReturnStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "waitlisted": true
                        },
                        "eventIndicators": [
                          {
                            "count": 0,
                            "indicatorName": "string"
                          }
                        ],
                        "eventNotes": [
                          {
                            "comment": "string",
                            "createDateTime": "2020-07-20T14:10:20.672Z",
                            "creatorId": "string",
                            "internal": true,
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-07-20T14:10:20.672Z",
                            "noteCode": "string",
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteTitle": "string",
                            "purgeDate": "2020-07-20",
                            "sequence": 0
                          }
                        ],
                        "eventPrimaryInfo": {
                          "eventId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventResources": [
                          {
                            "consumptionBased": true,
                            "custom": true,
                            "discount": 0,
                            "eventEndDate": "2020-07-20",
                            "eventResourceNotes": [
                              {
                                "comment": "string",
                                "createDateTime": "2020-07-20T14:10:20.655Z",
                                "creatorId": "string",
                                "internal": true,
                                "lastModifierId": "string",
                                "lastModifyDateTime": "2020-07-20T14:10:20.655Z",
                                "noteCode": "string",
                                "noteId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "noteTitle": "string",
                                "purgeDate": "2020-07-20",
                                "sequence": 0
                              }
                            ],
                            "eventStartDate": "2020-07-20",
                            "external": true,
                            "hasDiscountMenuItem": true,
                            "hasNotes": true,
                            "hotelId": "string",
                            "hours": 0,
                            "itemAttribute": "string",
                            "multiChoice": true,
                            "order": "string",
                            "packaged": true,
                            "persons": 0,
                            "quantity": 0,
                            "quantityExcluded": 0,
                            "quantityIncluded": 0,
                            "rentalCode": "string",
                            "resourceId": {
                              "id": "string",
                              "idContext": "string",
                              "idExtension": 0,
                              "instance": "string",
                              "type": "string",
                              "url": "string"
                            },
                            "resourceName": "string",
                            "resourceType": "FunctionSpace",
                            "revenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "sellEndDate": "2020-07-20",
                            "sellStartDate": "2020-07-20",
                            "setupCode": "string",
                            "unitPrice": {
                              "amount": 0,
                              "currencyCode": "string"
                            }
                          }
                        ],
                        "eventRevenues": {
                          "currencyCode": "string",
                          "eventLevelRevenueActualization": true,
                          "eventRevenueInformation": [
                            {
                              "actualRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "billedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "custom": true,
                              "expectedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "flatForecastRevenue": true,
                              "forecastRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "guaranteedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "ignoreForecast": true,
                              "onTheBooksRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "orderBy": 0,
                              "packaged": true,
                              "revenueType": {
                                "code": "string",
                                "displaySequence": 0,
                                "foodAndBeverage": true,
                                "inactive": true,
                                "revenueDetails": [
                                  {
                                    "hotelId": "string",
                                    "revenueMinimum": true,
                                    "tax": 0
                                  }
                                ],
                                "revenueGroup": "string",
                                "translatableDescription": {
                                  "defaultText": "string",
                                  "translations": {
                                    "text": [
                                      {
                                        "language": "string",
                                        "value": "string"
                                      }
                                    ]
                                  }
                                }
                              },
                              "totalCost": {
                                "amount": 0,
                                "currencyCode": "string"
                              }
                            }
                          ],
                          "excludeFromForecast": true,
                          "useForecastRevenue": true
                        },
                        "functionSpaceInformation": {
                          "comboSpace": true,
                          "discountPercentage": 0,
                          "elementSpace": true,
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "maximumOccupancy": 0,
                          "minimumOccupancy": 0,
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "rentalCode": "string",
                          "setdownTime": 0,
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "shareable": true
                        },
                        "masterEventDetail": {
                          "eventDetail": {
                            "alternateEvent": true,
                            "attendees": {
                              "actual": 0,
                              "billed": 0,
                              "expected": 0,
                              "guaranteed": 0,
                              "packageActual": 0,
                              "packageBilled": 0,
                              "packageExpected": 0,
                              "packageGuaranteed": 0,
                              "set": 0
                            },
                            "cateringDeductInventory": true,
                            "cateringStatusType": "Waitlist",
                            "createDateTime": "2020-07-20T14:10:20.673Z",
                            "creatorId": "string",
                            "displayDoorcard": true,
                            "doorcard": "string",
                            "eventLevelRevenueActualization": true,
                            "eventLink": {
                              "id": {
                                "id": "string",
                                "type": "string"
                              },
                              "masterEventDates": {
                                "endDateTime": "2020-07-20T14:10:20.673Z",
                                "startDateTime": "2020-07-20T14:10:20.673Z"
                              },
                              "type": "SubEvent"
                            },
                            "eventName": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "language": "string",
                                    "value": "string"
                                  }
                                ]
                              }
                            },
                            "eventShared": true,
                            "eventStatus": {
                              "color": "White",
                              "status": {
                                "code": "string",
                                "description": "string"
                              }
                            },
                            "eventTimeSpan": {
                              "endDateTime": "2020-07-20T14:10:20.673Z",
                              "startDateTime": "2020-07-20T14:10:20.672Z"
                            },
                            "eventType": "string",
                            "hasPostings": true,
                            "inactiveDate": "2020-07-20",
                            "includeSpaceInPackage": true,
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-07-20T14:10:20.673Z",
                            "loudEvent": true,
                            "masterEvent": true,
                            "masterEventId": {
                              "id": "string",
                              "type": "string"
                            },
                            "notMoveable": true,
                            "packageEvent": true,
                            "packageId": 0,
                            "packageName": "string",
                            "purgeDate": "2020-07-20",
                            "subEvent": true,
                            "waitlistReturnStatus": {
                              "color": "White",
                              "status": {
                                "code": "string",
                                "description": "string"
                              }
                            },
                            "waitlisted": true
                          },
                          "eventPrimaryInfo": {
                            "eventId": {
                              "id": "string",
                              "idContext": "string",
                              "idExtension": 0,
                              "instance": "string",
                              "type": "string",
                              "url": "string"
                            },
                            "hotelId": "string",
                            "includeSubEvents": true
                          },
                          "functionSpaceInformation": {
                            "comboSpace": true,
                            "discountPercentage": 0,
                            "elementSpace": true,
                            "functionSpaceCode": "string",
                            "functionSpaceDescription": "string",
                            "maximumOccupancy": 0,
                            "minimumOccupancy": 0,
                            "rateDesc": "string",
                            "rentalAmount": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "rentalCode": "string",
                            "setdownTime": 0,
                            "setupCode": "string",
                            "setupDescription": "string",
                            "setupTime": 0,
                            "shareable": true
                          }
                        },
                        "onTheBooksRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "priority": 0,
                        "processInstructions": {
                          "overbook": true,
                          "overrideCapacity": true,
                          "overrideMaxgroups": true,
                          "shareable": true,
                          "waitList": true,
                          "warnFunctionSpace": true
                        },
                        "subEventsDetail": [
                          {
                            "eventDetail": {
                              "alternateEvent": true,
                              "attendees": {
                                "actual": 0,
                                "billed": 0,
                                "expected": 0,
                                "guaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "set": 0
                              },
                              "cateringDeductInventory": true,
                              "cateringStatusType": "Waitlist",
                              "createDateTime": "2020-07-20T14:10:20.672Z",
                              "creatorId": "string",
                              "displayDoorcard": true,
                              "doorcard": "string",
                              "eventLevelRevenueActualization": true,
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "masterEventDates": {
                                  "endDateTime": "2020-07-20T14:10:20.672Z",
                                  "startDateTime": "2020-07-20T14:10:20.672Z"
                                },
                                "type": "SubEvent"
                              },
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "language": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              },
                              "eventShared": true,
                              "eventStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "eventTimeSpan": {
                                "endDateTime": "2020-07-20T14:10:20.672Z",
                                "startDateTime": "2020-07-20T14:10:20.672Z"
                              },
                              "eventType": "string",
                              "hasPostings": true,
                              "inactiveDate": "2020-07-20",
                              "includeSpaceInPackage": true,
                              "lastModifierId": "string",
                              "lastModifyDateTime": "2020-07-20T14:10:20.672Z",
                              "loudEvent": true,
                              "masterEvent": true,
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "notMoveable": true,
                              "packageEvent": true,
                              "packageId": 0,
                              "packageName": "string",
                              "purgeDate": "2020-07-20",
                              "subEvent": true,
                              "waitlistReturnStatus": {
                                "color": "White",
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "waitlisted": true
                            },
                            "eventPrimaryInfo": {
                              "eventId": {
                                "id": "string",
                                "idContext": "string",
                                "idExtension": 0,
                                "instance": "string",
                                "type": "string",
                                "url": "string"
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "functionSpaceInformation": {
                              "comboSpace": true,
                              "discountPercentage": 0,
                              "elementSpace": true,
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "maximumOccupancy": 0,
                              "minimumOccupancy": 0,
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "rentalCode": "string",
                              "setdownTime": 0,
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "shareable": true
                            }
                          }
                        ],
                        "updateDate": "2020-07-20",
                        "updateUser": 0,
                        "waitlistDate": "2020-07-20",
                        "waitlistId": {
                          "id": "string",
                          "type": "string"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to know outcome if manage waitlisted catering events.",
            "schema": {
              "$ref": "#/definitions/waitlistedEvents"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "examples": {
              "application/json": {
                "eventResourceDetails": {
                  "eventDetailInfo": {
                    "altEventsDetail": [
                      {
                        "eventDetail": {
                          "alternateEvent": true,
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "cateringDeductInventory": true,
                          "cateringStatusType": "Waitlist",
                          "createDateTime": "2020-07-13T15:32:09.654Z",
                          "creatorId": "string",
                          "displayDoorcard": true,
                          "doorcard": "string",
                          "eventLevelRevenueActualization": true,
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "masterEventDates": {
                              "endDateTime": "2020-07-13T15:32:09.654Z",
                              "startDateTime": "2020-07-13T15:32:09.654Z"
                            },
                            "type": "SubEvent"
                          },
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "eventShared": true,
                          "eventStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "eventTimeSpan": {
                            "endDateTime": "2020-07-13T15:32:09.654Z",
                            "startDateTime": "2020-07-13T15:32:09.654Z"
                          },
                          "eventType": "string",
                          "hasPostings": true,
                          "inactiveDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-13T15:32:09.654Z",
                          "loudEvent": true,
                          "masterEvent": true,
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "notMoveable": true,
                          "packageEvent": true,
                          "packageId": 0,
                          "packageName": "string",
                          "purgeDate": "2020-07-13",
                          "subEvent": true,
                          "waitlistReturnStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "waitlisted": true
                        },
                        "eventPrimaryInfo": {
                          "eventId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "functionSpaceInformation": {
                          "comboSpace": true,
                          "discountPercentage": 0,
                          "elementSpace": true,
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "maximumOccupancy": 0,
                          "minimumOccupancy": 0,
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "rentalCode": "string",
                          "setdownTime": 0,
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "shareable": true
                        }
                      }
                    ],
                    "eventBlockInfo": {
                      "blockIdList": [
                        {
                          "id": "string",
                          "type": "string"
                        }
                      ]
                    },
                    "eventDetail": {
                      "alternateEvent": true,
                      "attendees": {
                        "actual": 0,
                        "billed": 0,
                        "expected": 0,
                        "guaranteed": 0,
                        "packageActual": 0,
                        "packageBilled": 0,
                        "packageExpected": 0,
                        "packageGuaranteed": 0,
                        "set": 0
                      },
                      "cateringDeductInventory": true,
                      "cateringStatusType": "Waitlist",
                      "createDateTime": "2020-07-13T15:32:09.635Z",
                      "creatorId": "string",
                      "displayDoorcard": true,
                      "doorcard": "string",
                      "eventLevelRevenueActualization": true,
                      "eventLink": {
                        "id": {
                          "id": "string",
                          "type": "string"
                        },
                        "masterEventDates": {
                          "endDateTime": "2020-07-13T15:32:09.635Z",
                          "startDateTime": "2020-07-13T15:32:09.635Z"
                        },
                        "type": "SubEvent"
                      },
                      "eventName": {
                        "defaultText": "string",
                        "translations": {
                          "text": [
                            {
                              "language": "string",
                              "value": "string"
                            }
                          ]
                        }
                      },
                      "eventShared": true,
                      "eventStatus": {
                        "color": "White",
                        "status": {
                          "code": "string",
                          "description": "string"
                        }
                      },
                      "eventTimeSpan": {
                        "endDateTime": "2020-07-13T15:32:09.635Z",
                        "startDateTime": "2020-07-13T15:32:09.635Z"
                      },
                      "eventType": "string",
                      "hasPostings": true,
                      "inactiveDate": "2020-07-13",
                      "includeSpaceInPackage": true,
                      "lastModifierId": "string",
                      "lastModifyDateTime": "2020-07-13T15:32:09.635Z",
                      "loudEvent": true,
                      "masterEvent": true,
                      "masterEventId": {
                        "id": "string",
                        "type": "string"
                      },
                      "notMoveable": true,
                      "packageEvent": true,
                      "packageId": 0,
                      "packageName": "string",
                      "purgeDate": "2020-07-13",
                      "subEvent": true,
                      "waitlistReturnStatus": {
                        "color": "White",
                        "status": {
                          "code": "string",
                          "description": "string"
                        }
                      },
                      "waitlisted": true
                    },
                    "eventIndicators": [
                      {
                        "count": 0,
                        "indicatorName": "string"
                      }
                    ],
                    "eventNotes": [
                      {
                        "comment": "string",
                        "createDateTime": "2020-07-13T15:32:09.654Z",
                        "creatorId": "string",
                        "internal": true,
                        "lastModifierId": "string",
                        "lastModifyDateTime": "2020-07-13T15:32:09.654Z",
                        "noteCode": "string",
                        "noteId": {
                          "id": "string",
                          "type": "string"
                        },
                        "noteTitle": "string",
                        "purgeDate": "2020-07-13",
                        "sequence": 0
                      }
                    ],
                    "eventPrimaryInfo": {
                      "eventId": {
                        "id": "string",
                        "idContext": "string",
                        "idExtension": 0,
                        "instance": "string",
                        "type": "string",
                        "url": "string"
                      },
                      "hotelId": "string",
                      "includeSubEvents": true
                    },
                    "eventResources": [
                      {
                        "consumptionBased": true,
                        "custom": true,
                        "discount": 0,
                        "eventEndDate": "2020-07-13",
                        "eventResourceNotes": [
                          {
                            "comment": "string",
                            "createDateTime": "2020-07-13T15:32:09.635Z",
                            "creatorId": "string",
                            "internal": true,
                            "lastModifierId": "string",
                            "lastModifyDateTime": "2020-07-13T15:32:09.635Z",
                            "noteCode": "string",
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteTitle": "string",
                            "purgeDate": "2020-07-13",
                            "sequence": 0
                          }
                        ],
                        "eventStartDate": "2020-07-13",
                        "external": true,
                        "hasDiscountMenuItem": true,
                        "hasNotes": true,
                        "hotelId": "string",
                        "hours": 0,
                        "itemAttribute": "string",
                        "multiChoice": true,
                        "order": "string",
                        "packaged": true,
                        "persons": 0,
                        "quantity": 0,
                        "quantityExcluded": 0,
                        "quantityIncluded": 0,
                        "rentalCode": "string",
                        "resourceId": {
                          "id": "string",
                          "idContext": "string",
                          "idExtension": 0,
                          "instance": "string",
                          "type": "string",
                          "url": "string"
                        },
                        "resourceName": "string",
                        "resourceType": "FunctionSpace",
                        "revenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "sellEndDate": "2020-07-13",
                        "sellStartDate": "2020-07-13",
                        "setupCode": "string",
                        "unitPrice": {
                          "amount": 0,
                          "currencyCode": "string"
                        }
                      }
                    ],
                    "eventRevenues": {
                      "currencyCode": "string",
                      "eventLevelRevenueActualization": true,
                      "eventRevenueInformation": [
                        {
                          "actualRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "billedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "custom": true,
                          "expectedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "flatForecastRevenue": true,
                          "forecastRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "guaranteedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "ignoreForecast": true,
                          "onTheBooksRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "orderBy": 0,
                          "packaged": true,
                          "revenueType": {
                            "code": "string",
                            "displaySequence": 0,
                            "foodAndBeverage": true,
                            "inactive": true,
                            "revenueDetails": [
                              {
                                "hotelId": "string",
                                "revenueMinimum": true,
                                "tax": 0
                              }
                            ],
                            "revenueGroup": "string",
                            "translatableDescription": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "language": "string",
                                    "value": "string"
                                  }
                                ]
                              }
                            }
                          },
                          "totalCost": {
                            "amount": 0,
                            "currencyCode": "string"
                          }
                        }
                      ],
                      "excludeFromForecast": true,
                      "useForecastRevenue": true
                    },
                    "functionSpaceInformation": {
                      "comboSpace": true,
                      "discountPercentage": 0,
                      "elementSpace": true,
                      "functionSpaceCode": "string",
                      "functionSpaceDescription": "string",
                      "maximumOccupancy": 0,
                      "minimumOccupancy": 0,
                      "rateDesc": "string",
                      "rentalAmount": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "rentalCode": "string",
                      "setdownTime": 0,
                      "setupCode": "string",
                      "setupDescription": "string",
                      "setupTime": 0,
                      "shareable": true
                    },
                    "masterEventDetail": {
                      "eventDetail": {
                        "alternateEvent": true,
                        "attendees": {
                          "actual": 0,
                          "billed": 0,
                          "expected": 0,
                          "guaranteed": 0,
                          "packageActual": 0,
                          "packageBilled": 0,
                          "packageExpected": 0,
                          "packageGuaranteed": 0,
                          "set": 0
                        },
                        "cateringDeductInventory": true,
                        "cateringStatusType": "Waitlist",
                        "createDateTime": "2020-07-13T15:32:09.654Z",
                        "creatorId": "string",
                        "displayDoorcard": true,
                        "doorcard": "string",
                        "eventLevelRevenueActualization": true,
                        "eventLink": {
                          "id": {
                            "id": "string",
                            "type": "string"
                          },
                          "masterEventDates": {
                            "endDateTime": "2020-07-13T15:32:09.654Z",
                            "startDateTime": "2020-07-13T15:32:09.654Z"
                          },
                          "type": "SubEvent"
                        },
                        "eventName": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "eventShared": true,
                        "eventStatus": {
                          "color": "White",
                          "status": {
                            "code": "string",
                            "description": "string"
                          }
                        },
                        "eventTimeSpan": {
                          "endDateTime": "2020-07-13T15:32:09.654Z",
                          "startDateTime": "2020-07-13T15:32:09.654Z"
                        },
                        "eventType": "string",
                        "hasPostings": true,
                        "inactiveDate": "2020-07-13",
                        "includeSpaceInPackage": true,
                        "lastModifierId": "string",
                        "lastModifyDateTime": "2020-07-13T15:32:09.654Z",
                        "loudEvent": true,
                        "masterEvent": true,
                        "masterEventId": {
                          "id": "string",
                          "type": "string"
                        },
                        "notMoveable": true,
                        "packageEvent": true,
                        "packageId": 0,
                        "packageName": "string",
                        "purgeDate": "2020-07-13",
                        "subEvent": true,
                        "waitlistReturnStatus": {
                          "color": "White",
                          "status": {
                            "code": "string",
                            "description": "string"
                          }
                        },
                        "waitlisted": true
                      },
                      "eventPrimaryInfo": {
                        "eventId": {
                          "id": "string",
                          "idContext": "string",
                          "idExtension": 0,
                          "instance": "string",
                          "type": "string",
                          "url": "string"
                        },
                        "hotelId": "string",
                        "includeSubEvents": true
                      },
                      "functionSpaceInformation": {
                        "comboSpace": true,
                        "discountPercentage": 0,
                        "elementSpace": true,
                        "functionSpaceCode": "string",
                        "functionSpaceDescription": "string",
                        "maximumOccupancy": 0,
                        "minimumOccupancy": 0,
                        "rateDesc": "string",
                        "rentalAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "rentalCode": "string",
                        "setdownTime": 0,
                        "setupCode": "string",
                        "setupDescription": "string",
                        "setupTime": 0,
                        "shareable": true
                      }
                    },
                    "onTheBooksRevenue": {
                      "amount": 0,
                      "currencyCode": "string"
                    },
                    "processInstructions": {
                      "overbook": true,
                      "overrideCapacity": true,
                      "overrideMaxgroups": true,
                      "shareable": true,
                      "waitList": true,
                      "warnFunctionSpace": true
                    },
                    "subEventsDetail": [
                      {
                        "eventDetail": {
                          "alternateEvent": true,
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "cateringDeductInventory": true,
                          "cateringStatusType": "Waitlist",
                          "createDateTime": "2020-07-13T15:32:09.654Z",
                          "creatorId": "string",
                          "displayDoorcard": true,
                          "doorcard": "string",
                          "eventLevelRevenueActualization": true,
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "masterEventDates": {
                              "endDateTime": "2020-07-13T15:32:09.654Z",
                              "startDateTime": "2020-07-13T15:32:09.654Z"
                            },
                            "type": "SubEvent"
                          },
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "eventShared": true,
                          "eventStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "eventTimeSpan": {
                            "endDateTime": "2020-07-13T15:32:09.654Z",
                            "startDateTime": "2020-07-13T15:32:09.654Z"
                          },
                          "eventType": "string",
                          "hasPostings": true,
                          "inactiveDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-13T15:32:09.654Z",
                          "loudEvent": true,
                          "masterEvent": true,
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "notMoveable": true,
                          "packageEvent": true,
                          "packageId": 0,
                          "packageName": "string",
                          "purgeDate": "2020-07-13",
                          "subEvent": true,
                          "waitlistReturnStatus": {
                            "color": "White",
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "waitlisted": true
                        },
                        "eventPrimaryInfo": {
                          "eventId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "functionSpaceInformation": {
                          "comboSpace": true,
                          "discountPercentage": 0,
                          "elementSpace": true,
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "maximumOccupancy": 0,
                          "minimumOccupancy": 0,
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "rentalCode": "string",
                          "setdownTime": 0,
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "shareable": true
                        }
                      }
                    ]
                  },
                  "item": {
                    "eventItem": {
                      "actualExternalCostPerUnit": 0,
                      "actualExternalQuantity": 0,
                      "actualInternalCostPerUnit": 0,
                      "actualInternalQuantity": 0,
                      "actualQuantity": 0,
                      "attributeId": {
                        "id": "string",
                        "type": "string"
                      },
                      "attributes": [
                        {
                          "default": true,
                          "itemAttributeId": {
                            "id": "string",
                            "type": "string"
                          },
                          "setdownTime": 0,
                          "setupTime": 0,
                          "translatableName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "departments": [
                        "string"
                      ],
                      "discount": 0,
                      "displaySequence": 0,
                      "eventEndDate": "2020-07-13T15:32:09.655Z",
                      "eventStartDate": "2020-07-13T15:32:09.655Z",
                      "eventTypes": [
                        "string"
                      ],
                      "externalCostPerUnit": 0,
                      "externalOrder": true,
                      "externalQuantity": 0,
                      "hotelId": "string",
                      "internalCostPerUnit": 0,
                      "internalQuantity": 0,
                      "isExcludeNonDeduct": true,
                      "isNameCustom": true,
                      "itemClassCode": "string",
                      "itemClassDescription": "string",
                      "itemClassId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemCode": "string",
                      "itemDescription": "string",
                      "itemId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemName": {
                        "defaultText": "string",
                        "translations": {
                          "text": [
                            {
                              "language": "string",
                              "value": "string"
                            }
                          ]
                        }
                      },
                      "itemPool": "string",
                      "itemRateId": {
                        "id": "string",
                        "type": "string"
                      },
                      "order": 0,
                      "packageId": {
                        "id": "string",
                        "type": "string"
                      },
                      "price": 0,
                      "priceCode": "string",
                      "print": true,
                      "quantity": 0,
                      "rates": [
                        {
                          "default": true,
                          "hourly": true,
                          "itemRateCode": "string",
                          "itemRateId": {
                            "id": "string",
                            "type": "string"
                          },
                          "name": "string",
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          }
                        }
                      ],
                      "resourceNotes": [
                        {
                          "comment": "string",
                          "createDateTime": "2020-07-13T15:32:09.655Z",
                          "creatorId": "string",
                          "internal": true,
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-07-13T15:32:09.655Z",
                          "noteCode": "string",
                          "noteId": {
                            "id": "string",
                            "type": "string"
                          },
                          "noteTitle": "string",
                          "purgeDate": "2020-07-13",
                          "sequence": 0
                        }
                      ],
                      "revenueType": "string",
                      "revenueTypeEditable": true,
                      "sellInfo": {
                        "available": {
                          "endDateTime": "2020-07-13T15:32:09.655Z",
                          "startDateTime": "2020-07-13T15:32:09.655Z"
                        },
                        "availableQty": 0,
                        "criticalInventory": true,
                        "defaultDuration": 0,
                        "defaultQty": 0,
                        "discountable": true,
                        "fixedCharge": true,
                        "itemClassDiscountable": true,
                        "itemClassWebBookable": true,
                        "outsideStay": true,
                        "price": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "qtyInStock": 0,
                        "sellControl": true,
                        "sellSeparate": true,
                        "webBookable": true,
                        "welcomeOffer": true
                      },
                      "setdownTime": 0,
                      "setupTime": 0,
                      "traceText": "string",
                      "usedForEvents": true,
                      "usedForReservation": true,
                      "vendorPrice": 0,
                      "vendors": [
                        {
                          "email": "string",
                          "fax": "string",
                          "leadTime": "string",
                          "name": "string",
                          "phone": "string",
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "priority": 0,
                          "profileId": {
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "type": "string",
                            "url": "string"
                          }
                        }
                      ]
                    },
                    "eventItemId": {
                      "id": "string",
                      "type": "string"
                    }
                  },
                  "menu": {
                    "eventMenu": {
                      "basicInfo": {
                        "attendees": {
                          "actual": 0,
                          "billed": 0,
                          "expected": 0,
                          "guaranteed": 0,
                          "packageActual": 0,
                          "packageBilled": 0,
                          "packageExpected": 0,
                          "packageGuaranteed": 0,
                          "set": 0
                        },
                        "className": "string",
                        "consumptionBased": true,
                        "courseCount": 0,
                        "description": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "dietaryList": [
                          "string"
                        ],
                        "discountPercentage": 0,
                        "eventDateRange": {
                          "eventEndDate": "2020-07-13",
                          "eventStartDate": "2020-07-13"
                        },
                        "eventTypes": [
                          "string"
                        ],
                        "hotelId": "string",
                        "inactive": true,
                        "includedInMenu": true,
                        "includedInPrice": true,
                        "menuId": {
                          "id": "string",
                          "type": "string"
                        },
                        "menusSold": 0,
                        "multiChoice": true,
                        "name": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "order": 0,
                        "quickInsertCode": "string",
                        "restriction": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "language": "string",
                                "value": "string"
                              }
                            ]
                          }
                        },
                        "salesPrice": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "sellDateRange": {
                          "eventEndDate": "2020-07-13",
                          "eventStartDate": "2020-07-13"
                        },
                        "serveStartEndTime": {
                          "eventEndDate": "2020-07-13T15:32:09.655Z",
                          "eventStartDate": "2020-07-13T15:32:09.655Z"
                        },
                        "servingSize": "string",
                        "servingType": "Pp",
                        "type": "Food",
                        "webBookable": true
                      },
                      "hotelId": "string",
                      "menuItems": [
                        {
                          "attendees": {
                            "actual": 0,
                            "billed": 0,
                            "expected": 0,
                            "guaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "set": 0
                          },
                          "classInfo": {
                            "code": "string",
                            "description": "string"
                          },
                          "container": {
                            "code": "string",
                            "description": "string"
                          },
                          "cost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "course": 0,
                          "courseOrder": 0,
                          "custom": true,
                          "demandFactor": 0,
                          "description": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "discountPercentage": 0,
                          "eventMenuDetailID": {
                            "id": "string",
                            "type": "string"
                          },
                          "eventTypes": [
                            "string"
                          ],
                          "hotelId": "string",
                          "id": {
                            "id": "string",
                            "type": "string"
                          },
                          "inactive": true,
                          "includedYN": true,
                          "itemConsumption": true,
                          "mandatoryYN": true,
                          "menuType": "Food",
                          "name1": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "name2": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "name3": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "origin1": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "origin2": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "portion": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "language": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          },
                          "print": true,
                          "quickInsertCode": "string",
                          "responsibleDepartments": [
                            "string"
                          ],
                          "restriction": "string",
                          "revenueType": "string",
                          "salesPrice": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "servings": 0,
                          "webBookable": true,
                          "year": 0
                        }
                      ],
                      "revenues": [
                        {
                          "cost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "costMargin": 0,
                          "custom": true,
                          "internalQuote": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "priceMargin": 0,
                          "resourceId": {
                            "id": "string",
                            "type": "string"
                          },
                          "revenueType": "string",
                          "type": "Food"
                        }
                      ]
                    },
                    "eventMenuId": {
                      "id": "string",
                      "type": "string"
                    }
                  }
                },
                "links": [
                  {
                    "href": "string",
                    "method": "GET",
                    "operationId": "string",
                    "rel": "string",
                    "targetSchema": "string",
                    "templated": false,
                    "title": "string"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/opportunityEvents": {
      "post": {
        "description": "You can use this API to add Events for an Opportunity Block. <p><strong>OperationId:</strong>postOpportunityEvents</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ],
        "summary": "Create Events for Opportunity Block",
        "operationId": "postOpportunityEvents",
        "parameters": [
          {
            "description": "Request object for adding Events for an Opportunity Block.",
            "name": "opportunityEvents",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/opportunityEvents"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response object for creating new event.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    }
  },
  "definitions": {
    "aRAccountShortInfoType": {
      "description": "Accounts Receivabales Account details type charged for batched posting.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        }
      }
    },
    "aRAccountStatusType": {
      "description": "Type for the Account Status. Status can be restricted and a message/description added to the Account.",
      "type": "object",
      "properties": {
        "description": {
          "description": "User defined status message on the Account.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "restricted": {
          "description": "Flag to indicate if the Account is restricted.",
          "type": "boolean"
        },
        "restriction": {
          "description": "The Restriction Code added on the Account. This is available when the functionality for adding restriction codes is ON.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "actionStatusType": {
      "description": "Action status of the Track It item(Open, Closed).",
      "type": "string",
      "enum": [
        "Open",
        "Closed"
      ]
    },
    "additionalGuestAmountType": {
      "type": "object",
      "properties": {
        "ageQualifyingCode": {
          "type": "string",
          "enum": [
            "ADULT",
            "CHILD",
            "OTHER",
            "CHILDBUCKET1",
            "CHILDBUCKET2",
            "CHILDBUCKET3",
            "CHILDBUCKET4",
            "CHILDBUCKET5"
          ]
        },
        "amount": {
          "$ref": "#/definitions/totalType"
        }
      }
    },
    "addressInfoType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "addressSearchType": {
      "description": "Address Details such as city, state, country, postal code etc.",
      "type": "object",
      "properties": {
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "excludeNoCity": {
          "description": "When true indicates that only profiles with city will be fetched.",
          "type": "boolean"
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "streetAddress": {
          "description": "First Line of Street Address. For profile search it matches the first Address line.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "addressType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "maxLength": 80,
            "minLength": 0
          }
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string"
        }
      }
    },
    "addtionalCodeInfoType": {
      "description": "Holds name of additional code information",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Holds name of additional code information",
            "$ref": "#/definitions/masterInfoCodeDetailType"
          },
          "value": {
            "description": "Holds value of additional code information",
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          }
        }
      }
    },
    "advanceCheckInType": {
      "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
      "type": "object",
      "properties": {
        "advanceCheckedIn": {
          "description": "Indicates if the reservation is marked as Advance Checked In",
          "type": "boolean"
        },
        "eTRComments": {
          "description": "ETR Comments",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "expectedReturnTime": {
          "description": "Expected Return Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "alertAreaType": {
      "type": "string",
      "enum": [
        "CheckIn",
        "CheckOut",
        "Reservation",
        "Billing",
        "InHouse"
      ]
    },
    "alertGuestInfoType": {
      "type": "object",
      "properties": {
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        },
        "comments": {
          "description": "Additional alert information regarding the membership of the guest.",
          "type": "string"
        },
        "guestName": {
          "description": "Guest Name.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "guestPreferredLanguage": {
          "description": "Holds the language preferred by the guest.",
          "$ref": "#/definitions/languageType"
        },
        "lastHotelCode": {
          "description": "Hotel code of the last stay location of the guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "lastStayDate": {
          "description": "Last stay date at the property.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "membership": {
          "description": "Membership information of the guest.",
          "$ref": "#/definitions/membershipType"
        },
        "preference": {
          "description": "Additional alert information regarding the guest.",
          "type": "string"
        },
        "preference2": {
          "description": "Additional mandatory alert information regarding the guest preferences.",
          "type": "string"
        },
        "totalBrandStay": {
          "description": "Holds total number of days that the guest have stayed in the properties for the same brand.",
          "type": "integer"
        },
        "totalStay": {
          "description": "Holds total number of days that the guest have stayed in the property.",
          "type": "integer"
        },
        "vipStatus": {
          "description": "VIP status of the guest.",
          "$ref": "#/definitions/vIPStatusType"
        }
      }
    },
    "alertType": {
      "type": "object",
      "properties": {
        "area": {
          "description": "The Area where the alert will be attached and shown.",
          "$ref": "#/definitions/alertAreaType"
        },
        "code": {
          "description": "Code identifying the type of alert.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "description": {
          "description": "The alert message.",
          "type": "string"
        },
        "global": {
          "description": "Indicate whether the alert is a global that is automatically and dynamically attached to all reservations that meet the alert criteria.",
          "type": "boolean"
        },
        "guestInfo": {
          "description": "Contains information regarding the guest.",
          "$ref": "#/definitions/alertGuestInfoType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "printerName": {
          "description": "Printer used to print the alert notification.",
          "type": "string"
        },
        "printerNotification": {
          "description": "Notify by sending the message to the printer.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reportDescription": {
          "description": "Report description. Mainly used for as a parameter for printing the alerts.",
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        },
        "reportId": {
          "description": "The module id of the report. This is used to printer the alert.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reportName": {
          "description": "Report name of the report type.",
          "type": "string"
        },
        "screenNotification": {
          "description": "Notify by showing the alert on the screen",
          "type": "boolean"
        },
        "stopCheckInCheckOut": {
          "description": "Indicates the Reservation Stop Check In/Check Out Global Alert.",
          "type": "boolean"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "welcomeOffer": {
          "description": "Contains information regarding welcome offer.",
          "$ref": "#/definitions/welcomeOfferType"
        }
      }
    },
    "alertsType": {
      "description": "List of alerts.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/alertType"
      }
    },
    "amountDeterminationType": {
      "description": "Used to indicate if an amount is inclusive or exclusive of other charges, such as taxes.",
      "type": "string",
      "enum": [
        "Inclusive",
        "Exclusive"
      ]
    },
    "amountType": {
      "description": "Base charge and additional charges related to a functionSpaceDetails that includes such things as additional guest amounts, cancel fees, etc. Also includes Discount percentages, total amount, and the rate description.",
      "type": "object",
      "properties": {
        "additionalGuestAmounts": {
          "description": "Collection of incremental charges per age qualifying code for additional guests. Amount charged for additional occupant is with respect to age group of the base guests.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/additionalGuestAmountType"
          }
        },
        "base": {
          "description": "The base amount charged for the accommodation or service per unit of time (ex: Nightly, Weekly, etc). If TaxInclusive is set to True, then taxes are included in the base amount. Note that any additional charges should itemized in the other elements.",
          "$ref": "#/definitions/totalType"
        },
        "discount": {
          "description": "Discount percentage and/or Amount, code and textual reason for discount",
          "$ref": "#/definitions/discountType"
        },
        "effectiveRate": {
          "description": "The reservation effective amount charged for the accommodation or service (i.e. base amount + amount for Add to Rate Combine Line packages) per unit of time",
          "$ref": "#/definitions/totalType"
        },
        "eventEndDate": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventStartDate": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "requiredPoints": {
          "description": "The Points contains the number of points required to book a particular functionSpaceDetails type.",
          "$ref": "#/definitions/pointsType"
        },
        "shareDistributionInstruction": {
          "description": "Last rate share distribution instruction applied on share reservation daily rate segment.",
          "$ref": "#/definitions/shareDistributionInstructionType"
        },
        "shareRatePercentage": {
          "description": "Indicates the share rate percentage for the reservation if set to CUSTOMSPLIT.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "total": {
          "description": "The total amount charged for this rate including additional occupant amounts and fees.",
          "$ref": "#/definitions/totalType"
        }
      }
    },
    "anonymizationStatusType": {
      "description": "Guest has been anonymized.",
      "type": "string",
      "enum": [
        "Requested",
        "Anonymized"
      ]
    },
    "anonymizationType": {
      "description": "Provides information about guest's anonymization status.",
      "type": "object",
      "properties": {
        "anonymizationDate": {
          "description": "Date and Time when the guest was anonymized.",
          "type": "string",
          "format": "date-time"
        },
        "anonymizationStatus": {
          "description": "Status of anonymization such as Requested or Anonymized.",
          "$ref": "#/definitions/anonymizationStatusType"
        }
      }
    },
    "applicationUserType": {
      "type": "object",
      "properties": {
        "actAs": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "actAt": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "appUser": {
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "appUserId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "attendantInfo": {
          "$ref": "#/definitions/attendantType"
        },
        "cashierId": {
          "type": "integer"
        },
        "cashierTitle": {
          "description": "Cashier title.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "department": {
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "departmentLocation": {
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "disabledUntil": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expiryDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotel": {
          "description": "Hotel where user belongs.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "lDAPUser": {
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "passwordChangeDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "salesRepCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "userDefaultLanguage": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "userInfo": {
          "$ref": "#/definitions/employeeInfoType"
        },
        "userSessionInfo": {
          "description": "This is only used during log-in.",
          "$ref": "#/definitions/userSessionInfoType"
        }
      }
    },
    "applyEventAttendeesChangesToEventsType": {
      "description": "Non-Pkg Events on the same date.",
      "type": "string",
      "enum": [
        "All",
        "None",
        "Same",
        "NonPackage",
        "MatchingNonPackage",
        "Package",
        "Date"
      ]
    },
    "articleInfoType": {
      "description": "Information regarding an article.",
      "type": "object",
      "properties": {
        "articleCode": {
          "description": "Unique code of the article.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the article.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel code to which the article belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicates whether the article is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "postIt": {
          "description": "Post it information of the article.",
          "$ref": "#/definitions/articlePostItType"
        },
        "price": {
          "description": "Default price of the article.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionCode": {
          "description": "Transaction code to which the article belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "articlePostItType": {
      "description": "Post it information of an article.",
      "type": "object",
      "properties": {
        "availableForPostIt": {
          "description": "Indicates whether the article is available for post it.",
          "type": "boolean"
        },
        "color": {
          "description": "Color indicator which is only configurable if article is available for post it.",
          "$ref": "#/definitions/colorType"
        }
      }
    },
    "associatedResType": {
      "description": "Information regarding associated reservations to the reservation.",
      "type": "object",
      "properties": {
        "originalMultiRoomRes": {
          "description": "Stores Unique ID of the original multi functionSpaceDetails reservation from which this reservation is split off.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "parentReservation": {
          "description": "Stores Unique ID of the parent reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "attachmentType": {
      "description": "Attached files.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description for the file.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "fileName": {
          "description": "Name of the file.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fileSize": {
          "description": "Size of the file.",
          "type": "integer"
        },
        "global": {
          "description": "Flag to say if attachment is available across properties.",
          "type": "boolean"
        },
        "history": {
          "description": "History data associated with Attachment.",
          "$ref": "#/definitions/dateTimeStampGroupType"
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "attachmentsType": {
      "description": "Attachment List.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/attachmentType"
      }
    },
    "attendantType": {
      "type": "object",
      "properties": {
        "attendantId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "authorizationRuleType": {
      "description": "Configured rule for computing the amount to authorize.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The amount applicable to the authorization rule.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "code": {
          "description": "The authorization rule code.",
          "type": "integer",
          "pattern": "[0-9]{1,9}"
        },
        "percent": {
          "description": "A percentage value if the authorization rule is percentage based.",
          "type": "number"
        }
      }
    },
    "authorizerInfoType": {
      "description": "Authorizer Information",
      "type": "object",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        }
      }
    },
    "awardKindType": {
      "description": "Indicates that this is electronic certificate.",
      "type": "string",
      "enum": [
        "Paper",
        "ECertificate"
      ]
    },
    "awardStatusType": {
      "description": "Indicates that certificate is in use.",
      "type": "string",
      "enum": [
        "Available",
        "NotAvailable",
        "InUse"
      ]
    },
    "awardType": {
      "description": "Detailed information of the awards.",
      "type": "object",
      "properties": {
        "awardCode": {
          "description": "Award category.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "awardType": {
          "description": "Can be P (Paper) or E (E-Certificate).",
          "$ref": "#/definitions/awardKindType"
        },
        "categoryValid": {
          "description": "Indicates whether the category of certificate is valid or not for this resort.",
          "type": "boolean"
        },
        "certificateNo": {
          "description": "Certificate No.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "description": {
          "description": "Description of the award/certificate.",
          "type": "string"
        },
        "detailedCertificate": {
          "description": "Indicates if this certificate is detailed or not.",
          "type": "boolean"
        },
        "displaySequence": {
          "description": "Indicates the order in which the certificates received from MRW.",
          "type": "number"
        },
        "expirationDate": {
          "description": "Expiration Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "externalConfirmationNo": {
          "description": "Confirmation Number given by a CRS application for this reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "externalHotelCode": {
          "description": "Hotel Code of the CRS application that this certificate belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "fBAInfo": {
          "description": "FBA related fields.",
          "$ref": "#/definitions/fBAInfoType"
        },
        "gift": {
          "description": "Signifies whether award is gift or not.",
          "type": "boolean"
        },
        "hotelCategory": {
          "description": "Indicates the lowest hotel category for which the certificate is valid.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code for which the routing instructions are provided for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "instantlyRedeemable": {
          "description": "Indicates if the award is an Instant Redemption award.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "masterCertificiateNo": {
          "description": "Master Certificate No.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipNo": {
          "description": "Membership No.",
          "type": "string"
        },
        "nights": {
          "description": "Award Nights.",
          "type": "integer"
        },
        "package": {
          "description": "Signifies whether upgrade is package or not.",
          "type": "boolean"
        },
        "paidUpgrade": {
          "description": "Indicates if this certificate was ordered using the \"Paid Upgrade\" option in the E-Certs screen.",
          "type": "boolean"
        },
        "points": {
          "description": "No. of points used to order this award.",
          "type": "number"
        },
        "profileId": {
          "description": "Unique profile identifier requested to be fetched.",
          "$ref": "#/definitions/profileId"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "quantity": {
          "description": "Quantity of such awards needed to be ordered.",
          "type": "integer"
        },
        "reservationCertificateType": {
          "description": "[R]=Reward, [I]=Incentive.",
          "$ref": "#/definitions/reservationCertificateType"
        },
        "reservationId": {
          "description": "Reservation IDs will be empty if award is not attached.",
          "$ref": "#/definitions/reservationId"
        },
        "rewardCertificateType": {
          "description": "[RE]=Regular Certificate, [SA]=Stay Anytime Certificate, [PS]=Point Saver Certificate.",
          "$ref": "#/definitions/rewardCertificateType"
        },
        "sourceType": {
          "description": "MRW : From MRW MAN:Entered manually.",
          "type": "string"
        },
        "status": {
          "description": "Status of the award aka available.",
          "$ref": "#/definitions/awardStatusType"
        },
        "upgrade": {
          "description": "Signifies whether upgrade award or not.",
          "type": "boolean"
        }
      }
    },
    "awardVouchersType": {
      "description": "This stores the Membership Awards code applied on the reservation.",
      "type": "array",
      "maxItems": 5,
      "items": {
        "type": "object",
        "properties": {
          "awardCode": {
            "description": "Membership Award code applied on the reservation.",
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          },
          "voucherNo": {
            "description": "Membership Award number.",
            "type": "string",
            "maxLength": 80,
            "minLength": 0
          }
        }
      }
    },
    "awardsType": {
      "description": "List of awards.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/awardType"
      }
    },
    "basicEmailType": {
      "description": "Email address",
      "type": "string",
      "maxLength": 2000,
      "minLength": 0
    },
    "bedTaxReportingType": {
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "type": "object",
      "properties": {
        "taxRegistrationNo": {
          "description": "Tax Registration Number for Maldives Bed Tax Reporting.",
          "type": "number"
        },
        "taxableDays": {
          "description": "Number of days for which the Maldives tax is applicable.",
          "type": "integer"
        },
        "visaExpiryDate": {
          "description": "Visa Expiration Date used for Maldives Bed Tax Reporting",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaIssueDate": {
          "description": "Visa Issue Date used for Maldives Bed Tax Reporting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaNumber": {
          "description": "Visa number used for Maldives Bed Tax Reporting",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "benefitType": {
      "description": "Basic information about membership benefit.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Benefit code associated with a membership.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicates whether membership benefit is active or inactive.",
          "type": "boolean"
        },
        "message": {
          "description": "Processing message for membership benefit.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        }
      }
    },
    "benefitsType": {
      "description": "Basic information about membership benefit.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/benefitType"
      }
    },
    "billingInstructionType": {
      "description": "Configured Billing Instruction which represents a set of Transaction Codes.",
      "type": "object",
      "properties": {
        "billingCode": {
          "description": "Unique identifier for the Billing Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "desc": {
          "description": "Billing Instruction code description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel context of the Billing Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        }
      }
    },
    "billingInstructionsType": {
      "description": "Set of Billing Instruction codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/billingInstructionType"
      }
    },
    "billingPrivilegesType": {
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "type": "object",
      "properties": {
        "allowAutoCheckin": {
          "description": "Indicated if a new reservation should be created and automatically checked in whenever the functionSpaceDetails is checked out. Available for pseudo functionSpaceDetails types only.",
          "type": "boolean"
        },
        "autoSettlement": {
          "description": "Indicates if the is a candidate for auto folio settlement.",
          "type": "boolean"
        },
        "autoSettlementFreq": {
          "description": "The interval of days between each auto folio settlement.",
          "type": "integer"
        },
        "autoSettlementType": {
          "description": "The folio settlement type for auto folio settlement.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "creditLimitAutoPay": {
          "description": "Indicates if the reservation will be included in the Automatic Credit Limit Overages process and also be listed in the Credit Limit Overages screen results.",
          "type": "boolean"
        },
        "directBillAuthorized": {
          "description": "If Direct bill is authorized this will hold User ID who authorized it.",
          "type": "boolean"
        },
        "folioCloseDate": {
          "description": "Date when folio was closed. This works with PostStayCharging flag.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postStayCharging": {
          "description": "Indicates if the reservation has charging privileges after checkout.",
          "type": "boolean"
        },
        "postingRestriction": {
          "description": "Flag used by interface program during check in.",
          "type": "boolean"
        },
        "preStayCharging": {
          "description": "Indicates if the reservation has charging privileges before arrival.",
          "type": "boolean"
        },
        "scheduledCheckout": {
          "description": "Indicates if the guest is scheduled for automatic check out.",
          "type": "boolean"
        },
        "scheduledCheckoutTime": {
          "description": "Time of automatic check out if guest is schedule for automatic check out.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "videoCheckout": {
          "description": "Indicates if the guest can do video checkout",
          "type": "boolean"
        }
      }
    },
    "blockCateringPackage": {
      "description": "Request object for adding Catering Package/Template Events to block .",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Details for adding Catering Package/Template Events .",
          "$ref": "#/definitions/blockCateringPackageType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "requestCount": {
          "description": "Indicates what number of retry attempt this request represents. If this is the original request, RetryCount should be set to 0.",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "blockCateringPackageDetails": {
      "description": "Response object for adding Catering Package/Template Events to block.",
      "type": "object",
      "properties": {
        "createCateringPackageProcessedInfoList": {
          "description": "Status/Info of the processed package.",
          "$ref": "#/definitions/createCateringPackageProcessedInfoList"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "blockCateringPackageListType": {
      "description": "Collection of multiple Catering Packages.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockCateringPackageType"
      }
    },
    "blockCateringPackageRevenueBaseType": {
      "description": "Pricing detail of associated catering package.",
      "type": "object",
      "properties": {
        "blockInfo": {
          "description": "Block Information of the associated package.",
          "$ref": "#/definitions/blockType"
        },
        "flatPrice": {
          "description": "Defines if Flat Rate is applicable for the package.",
          "type": "boolean"
        },
        "packageDetail": {
          "description": "Provides information about the Catering Package.",
          "$ref": "#/definitions/cateringPackageInfoType"
        },
        "packageId": {
          "description": "Unique Identifier for a Catering Package associated to block.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "priceCode": {
          "description": "Price Code of the associated package.",
          "type": "string"
        },
        "priceDescription": {
          "description": "Price Code description of the associated package.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "revenues": {
          "description": "Collection of revenues for the associated package.",
          "$ref": "#/definitions/revenueListType"
        }
      }
    },
    "blockCateringPackageRevenueType": {
      "description": "Type used for managing Revenue Details associated with a particular Catering Package Price Code.",
      "type": "object",
      "properties": {
        "costExpected": {
          "description": "Expected Cost.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "eventName": {
          "description": "Name of event.",
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "eventTimeSpan": {
          "description": "Pertain event duration from eventStartDate and eventEndDate date and time.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "eventType": {
          "description": "Type of event.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "orderBy": {
          "description": "Sorting Order.",
          "type": "integer"
        },
        "packageEventId": {
          "description": "The Catering Package Event Id asscoaited with Revenue.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "revExpected": {
          "description": "Expected Revenue.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "revForecast": {
          "description": "Forecasted Revenue.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "revType": {
          "description": "Revenue Type associated with the Catering Package Price Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "blockCateringPackageType": {
      "description": "Details of Catering Package Type.",
      "type": "object",
      "properties": {
        "attendees": {
          "description": "Block attendees.",
          "$ref": "#/definitions/cateringEventsAttendeesType"
        },
        "beginDate": {
          "description": "Begin Date for package/template events",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "blockId": {
          "description": "Block ID to which catering package events will be added.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cateringPackageRemovable": {
          "description": "Notifies whether this catering package can be deleted or not.",
          "type": "boolean"
        },
        "duration": {
          "description": "Catering Package duration.",
          "type": "integer"
        },
        "flatRate": {
          "description": "Defines if Flat Rate is applicable for the package.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code of the Block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nonPackagedResourcesExist": {
          "description": "Flat to determine if the events the events associated with this package has non packaged resources",
          "type": "boolean"
        },
        "packageActual": {
          "description": "Indicates whether all event from the package is in Actual Status.",
          "type": "boolean"
        },
        "packageCode": {
          "description": "Package Code which will be added to the block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "packageHotelCode": {
          "description": "Hotel Code of the associated package.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "packageId": {
          "description": "Catering Package ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "price": {
          "description": "Price of the catering package.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "priceCode": {
          "description": "Price Code of the package.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "priceDescription": {
          "description": "Price Code description of the associated package.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "rentalCode": {
          "description": "Rate code of the associated package",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "status": {
          "description": "Status of the catering block",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "translatableDescription": {
          "description": "Translatable description to elaborate Catering Package description.",
          "$ref": "#/definitions/translationTextType200"
        }
      }
    },
    "blockClassificationType": {
      "description": "Simple type for block instructions to be used in requests for fetching blocks. Valid status values are MASTER_BLOCK, MASTER_TOUR, FIT_MASTER, MASTER_ALLOCATION, MASTER_ITINERARY, LEAD_MASTER, REGULAR_BOOKING, SUB_BLOCK, SUB_TOUR, FIT_CONTRACT, SUB_ALLOCATION, SUB_ITINERARY, LEAD.",
      "type": "string",
      "enum": [
        "MasterBlock",
        "MasterTour",
        "MasterAllocation",
        "MasterItinerary",
        "LeadMaster",
        "RegularBooking",
        "SubBlock",
        "SubTour",
        "FitContract",
        "SubAllocation",
        "SubItinerary",
        "Lead",
        "FitMaster",
        "Opportunity"
      ]
    },
    "blockDetailsType": {
      "description": "Information about the Block Details",
      "type": "object",
      "properties": {
        "blockClassification": {
          "description": "Indicate Block Classification.",
          "$ref": "#/definitions/blockClassificationType"
        },
        "blockCode": {
          "description": "Block code for the block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "blockDates": {
          "description": "The Time Span(Arrival, Departure) which covers the Block Span.",
          "$ref": "#/definitions/timeSpanType"
        },
        "blockName": {
          "description": "Name of the block.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "blockStatus": {
          "description": "Current status of the block.",
          "$ref": "#/definitions/bookingStatusDetailType"
        },
        "blockType": {
          "description": "Internal type of the block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "bookingType": {
          "description": "Business Block Type field on the Business Block",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "cateringOnlyBlock": {
          "description": "Indicates if this is a catering only block.",
          "type": "boolean"
        },
        "conversionCode": {
          "description": "Indicates the likelihood description of the block moving to the next active block status.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "conversionCodeDescription": {
          "description": "Indicates the likelihood of the block moving to the next active block status.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "currencyCode": {
          "description": "Currency Code attached to the business block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "externalLocked": {
          "description": "Indicates if the block is locked by an external system.",
          "type": "boolean"
        },
        "flexibleDates": {
          "description": "Indicates if alternate dates are allowed for the booking.",
          "type": "boolean"
        },
        "hotelName": {
          "description": "A text field used to communicate the proper name of the hotel.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "marketCode": {
          "description": "Market code info of the block.",
          "$ref": "#/definitions/marketCodeInfoType"
        },
        "nonCompeteDetails": {
          "description": "Indicates the non-competing industry details.",
          "$ref": "#/definitions/blockNonCompeteType"
        },
        "primaryOwners": {
          "description": "Primary owners for the block.",
          "type": "object",
          "properties": {
            "blockOwner": {
              "description": "Primary Block Owner",
              "$ref": "#/definitions/blockOwnerType"
            },
            "blockOwnerCount": {
              "description": "Total number of Block Owners.",
              "type": "number"
            },
            "cateringOwner": {
              "description": "Primary Catering Owner",
              "$ref": "#/definitions/blockOwnerType"
            },
            "cateringOwnerCount": {
              "description": "Total number of Catering Owners.",
              "type": "number"
            },
            "roomsOwner": {
              "description": "Primary Rooms Owner",
              "$ref": "#/definitions/blockOwnerType"
            },
            "roomsOwnerCount": {
              "description": "Total number of Rooms Owners.",
              "type": "number"
            }
          }
        },
        "primaryProfiles": {
          "description": "Primary account and contact for the block.",
          "type": "object",
          "properties": {
            "account": {
              "description": "Primary Account",
              "$ref": "#/definitions/blockProfilesType"
            },
            "contact": {
              "description": "Primary Contact",
              "$ref": "#/definitions/blockProfilesType"
            },
            "image": {
              "description": "The primary profile image. If primary contact exists, Contact Image, otherwise primary Account Image",
              "$ref": "#/definitions/imageSetType"
            }
          }
        },
        "rankingCode": {
          "description": "Indicates the ranking of the block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rankingCodeDescription": {
          "description": "Indicates the ranking description of the block.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "rateProtectionDetails": {
          "description": "Indicates the Rate Protection details for the block.",
          "$ref": "#/definitions/blockRateProtectionType"
        },
        "reservationType": {
          "description": "Reservation Type info of the block.",
          "$ref": "#/definitions/reservationTypeInfoType"
        },
        "shoulderDates": {
          "description": "The Shoulder Dates (Arrival, Departure) which covers the Block Shoulder Span.",
          "$ref": "#/definitions/timeSpanType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of block. Identifies the entity/channel who made the block reservation.",
          "$ref": "#/definitions/blockSourceOfSaleType"
        },
        "status": {
          "description": "Internal status for the block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "blockGridInvType": {
      "description": "Indicates the inventory values ( occupancy or availability ) per person occupancy.",
      "type": "object",
      "properties": {
        "cutoffDate": {
          "description": "Indicates the cutoff date.Date when inventory left in the block will be cut-off.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fourPerson": {
          "description": "Indicates the four person inventory value ( occupancy or availability ).",
          "type": "integer"
        },
        "onePerson": {
          "description": "Indicates the one person inventory value ( occupancy or availability ).",
          "type": "integer"
        },
        "sellLimit": {
          "description": "Indicates the sell limit",
          "type": "integer"
        },
        "threePerson": {
          "description": "Indicates the three person inventory value ( occupancy or availability ).",
          "type": "integer"
        },
        "twoPerson": {
          "description": "Indicates the two person inventory value ( occupancy or availability ).",
          "type": "integer"
        }
      }
    },
    "blockId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "blockIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "blockInventoryItemSourceType": {
      "description": "Defines whether the item is setupCode due to a Rate Plan, Package or a Block.",
      "type": "object",
      "properties": {
        "blockId": {
          "description": "Block Unique ID, If populated specifies that the item is setupCode due to a Block.",
          "$ref": "#/definitions/blockId"
        },
        "packageCode": {
          "description": "Package Code, If populated specifies that the item is setupCode due to a Package.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "Rate Plan Code, If populated specifies that the item is setupCode due to a Rate Plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "blockInventoryItemType": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "blockDates": {
          "description": "Begin and eventEndDate date and time of the items applicability.",
          "$ref": "#/definitions/dateRangeType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "item": {
          "description": "Specifies Items and its attributes. When used for data manipulation for Items setupCode on reservation, etc only code is considered. Other Attributes are for used to provide information during fetch operation.",
          "$ref": "#/definitions/itemInfoType"
        },
        "quantity": {
          "description": "Number of items booked.",
          "type": "integer"
        },
        "source": {
          "description": "If exists specifies whether the item is setupCode due to a Rate Plan, Package or a Block.",
          "$ref": "#/definitions/blockInventoryItemSourceType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "blockInventoryItemsType": {
      "description": "Inventory item attached to a block.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockInventoryItemType"
      }
    },
    "blockNonCompeteType": {
      "description": "Block Non Compete code information.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Indicates the type of Non-Compete. 'All' means all dates are Non-Compete. 'None' specifies Non-Compete is disabled. 'Selected' specifies few dates are Non-Compete.",
          "$ref": "#/definitions/rateProtectionType"
        },
        "industry": {
          "description": "Specifies the Non-Compete Industry.>",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "industryDescription": {
          "description": "Specifies the Non-Compete Industry description.>",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "protectedDates": {
          "description": "Specifies all the Non-Compete dates in the selected date range.",
          "$ref": "#/definitions/datesType"
        }
      }
    },
    "blockOwnerType": {
      "description": "Generic type for information about an owner.",
      "type": "object",
      "properties": {
        "department": {
          "description": "Department to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "email": {
          "description": "Email information of the owner.",
          "$ref": "#/definitions/emailInfoType"
        },
        "hotel": {
          "description": "Hotel to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "name": {
          "description": "Provides name information of the owner.",
          "$ref": "#/definitions/personNameType"
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ownership": {
          "description": "Specifies the business block ownership type.",
          "$ref": "#/definitions/blockOwnershipType"
        },
        "phone": {
          "description": "Information on the telephone number of the owner.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "primary": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        },
        "profileId": {
          "description": "Unique owner profile information.",
          "$ref": "#/definitions/profileId"
        },
        "relationship": {
          "description": "Relationship of the owner within the profile or block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "userId": {
          "description": "Unique application user ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "userName": {
          "description": "Unique application user name of the owner.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "blockOwnersType": {
      "description": "Contains a list of block owners.",
      "type": "object",
      "properties": {
        "lockBlockOwners": {
          "description": "When this flag is true, the logged in user cannot modify the existing block owners for the current block.",
          "type": "boolean"
        },
        "lockCateringOwners": {
          "description": "When this flag is true, the logged in user cannot modify the existing catering owners for the current block.",
          "type": "boolean"
        },
        "lockRoomsOwners": {
          "description": "When this flag is true, the logged in user cannot modify the existing functionSpaceDetails owners for the current block.",
          "type": "boolean"
        },
        "owner": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/blockOwnerType"
          }
        }
      }
    },
    "blockOwnershipType": {
      "description": "Specifies the type of the owner associated with the business block(Block/Rooms/Catering).",
      "type": "string",
      "enum": [
        "Block",
        "Rooms",
        "Catering"
      ]
    },
    "blockPostingAccountReservationsInfo": {
      "description": "Response object for retrieving block Posting account reservations.",
      "type": "object",
      "properties": {
        "blockPostingAccountReservations": {
          "description": "Collection of block Posting account reservations.",
          "$ref": "#/definitions/blockPostingAccountReservationsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "blockPostingAccountReservationsType": {
      "description": "Fetch block's posting account reservations information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockPostingReservationsType"
      }
    },
    "blockPostingReservationsType": {
      "description": "Contains the block's posting account reservation information.",
      "type": "object",
      "properties": {
        "arrivalDate": {
          "description": "Arrival date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "blockId": {
          "description": "Block ID of the Posting account reservation account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "confirmationNumber": {
          "description": "Confirmation Number of the Posting Account Reservation.",
          "type": "integer"
        },
        "defaultPostingAccount": {
          "description": "Default posting account for the block.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "departureDate": {
          "description": "Departure date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventId": {
          "description": "Unique Event Identifiers",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "guestFirstName": {
          "description": "Posting Account guest's first name..",
          "type": "string"
        },
        "guestName": {
          "description": "Posting Account guest name.",
          "type": "string"
        },
        "hotelId": {
          "description": "Hotel Code of the Block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "noPost": {
          "description": "Flag to indicate whether posting charges is allowed.",
          "type": "boolean"
        },
        "reservationNameId": {
          "description": "Unique identifier for reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reservationStatus": {
          "description": "Reservation Status of the Posting Account.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "roomHotelCode": {
          "description": "Hotel Code of the Room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomId": {
          "description": "Room Number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "size": {
          "description": "Number of Posting account reservations per block.",
          "type": "integer"
        }
      }
    },
    "blockProfileTypeType": {
      "description": "Simple type for block profile types.",
      "type": "string",
      "enum": [
        "Company",
        "Group",
        "Agent",
        "Source",
        "CompanyContact",
        "AgentContact",
        "SourceContact"
      ]
    },
    "blockProfilesType": {
      "description": "A collection of Profile objects or Unique IDs of Profiles.",
      "type": "object",
      "properties": {
        "blockProfileType": {
          "description": "Determines the type of the block profile.",
          "$ref": "#/definitions/blockProfileTypeType"
        },
        "primary": {
          "description": "Is this profile attached to block is primary?",
          "type": "boolean"
        },
        "profile": {
          "description": "Provides detailed information regarding either a company or a customer profile.",
          "$ref": "#/definitions/profileType"
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/uniqueIDListType"
        }
      }
    },
    "blockRateProtectionType": {
      "description": "Block Rate Protection code information.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Indicates the type of rate protection. 'All' means all dates are rate protected. 'None' specifies no rate protection. 'Selected' specifies few dates are rate protected.",
          "$ref": "#/definitions/rateProtectionType"
        },
        "protectedDates": {
          "description": "Specifies all the Rate protected dates in the selected range.",
          "$ref": "#/definitions/datesType"
        }
      }
    },
    "blockRestrictionType": {
      "description": "Restriction details for a block.",
      "type": "object",
      "properties": {
        "actualTimeSpan": {
          "description": "Actual time span of the restriction.",
          "$ref": "#/definitions/timeSpanType"
        },
        "blockRestrictionStatus": {
          "description": "Indicates the type of restriction along with parameters for restriction, if any.",
          "$ref": "#/definitions/restrictionStatusType"
        },
        "restrictionDate": {
          "description": "Date for which the restriction applies.",
          "$ref": "#/definitions/timeSpanDaysOfWeekType"
        },
        "roomType": {
          "description": "Room Type selected for the block restriction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "blockRestrictionsType": {
      "description": "List of restrictions belonging to a block.",
      "type": "object",
      "properties": {
        "blockId": {
          "description": "Unique OPERA Block ID which is used to find a Block from OPERA. This ID is a primary identification of a Block in OPERA.",
          "$ref": "#/definitions/blockId"
        },
        "blockRestriction": {
          "description": "Block restriction details.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/blockRestrictionType"
          }
        },
        "hotelId": {
          "description": "Hotel to which the block belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "blockSourceOfSaleType": {
      "description": "Point of Sale of Block. Identifies the entity/channel who made the block reservation.",
      "type": "object",
      "properties": {
        "sourceCode": {
          "description": "Identifies how this block came into the property.",
          "$ref": "#/definitions/sourceCodeInfoType"
        }
      }
    },
    "blockStatisticsSummaryType": {
      "description": "Type to store summary detail like rooms sold, average functionSpaceDetails rate and revenue for a statistic type.",
      "type": "object",
      "properties": {
        "avgRoomRate": {
          "type": "number"
        },
        "revenueSummary": {
          "$ref": "#/definitions/revenueSummaryType"
        },
        "roomsSold": {
          "description": "Total Number of Rooms Picked Up.",
          "type": "integer"
        },
        "statisticType": {
          "$ref": "#/definitions/statisticsSummaryType"
        }
      }
    },
    "blockStatisticsType": {
      "type": "object",
      "properties": {
        "actualCateringRevenue": {
          "description": "Indicates actualized catering revenue.",
          "type": "number"
        },
        "actualRoomStatistics": {
          "description": "Indicates the functionSpaceDetails statistics for actualized rooms.",
          "$ref": "#/definitions/roomStatisticsType"
        },
        "allocatedRoomStatistics": {
          "description": "Indicates the functionSpaceDetails statistics for allocated rooms.",
          "$ref": "#/definitions/roomStatisticsType"
        },
        "cateringRevenueOnBooks": {
          "description": "Indicates the catering revenue on the books.",
          "type": "number"
        }
      }
    },
    "blockStatusTypeType": {
      "description": "Simple type for specifying the block status type.",
      "type": "string",
      "enum": [
        "Inquiry",
        "Actual",
        "Waitlist",
        "Cancel",
        "Referral"
      ]
    },
    "blockTraceType": {
      "description": "Extended Trace object to hold information for a block.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "departmentId": {
          "description": "Indicates the Department code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationId": {
          "description": "Reservation ID of the reservation for which the traces are to be retrieved.",
          "$ref": "#/definitions/reservationId"
        },
        "resolveInfo": {
          "description": "Information regarding the status of the trace",
          "$ref": "#/definitions/traceResolveType"
        },
        "timeInfo": {
          "description": "Date of the trace.",
          "$ref": "#/definitions/traceTimeInfoType"
        },
        "traceText": {
          "description": "The information this trace contains.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "blockTracesType": {
      "description": "List of Block traces.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockTraceType"
      }
    },
    "blockType": {
      "type": "object",
      "properties": {
        "attachments": {
          "description": "List of attachments for the Block.",
          "$ref": "#/definitions/attachmentsType"
        },
        "blockDetails": {
          "description": "Detailed Block information for this block.",
          "$ref": "#/definitions/blockDetailsType"
        },
        "blockIdList": {
          "description": "Collection of unique block identifiers.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockIndicators": {
          "description": "Indicators of additional information attached to the block",
          "$ref": "#/definitions/indicatorsType"
        },
        "blockOwners": {
          "description": "Criteria to assign the owners of a business block.",
          "$ref": "#/definitions/blockOwnersType"
        },
        "blockProfiles": {
          "description": "A collection of all the profiles associated to this block. Please comment that during a change operation this performs a full overlay if the attribute FullOverlay is set to true. In a full overlay, all the profiles that should be associated to the block should be provided during a change operation. Any profiles not provided will be detached from this block. By default the full overlay is considered false if this tag is left blank. If values are provided for profiles, only the full overlay functionality is provided at this time.",
          "type": "object",
          "properties": {
            "blockProfile": {
              "description": "The list of profiles associated with the block.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/blockProfilesType"
              }
            },
            "fullOverlay": {
              "description": "Indicates whether to perform a full overlay for the profiles. Currently only the Fulloverlay functionality is provided.",
              "type": "boolean"
            }
          }
        },
        "blockSecurity": {
          "description": "Block security information used for an external system. Only available if configured in OPERA Cloud.",
          "type": "object",
          "properties": {
            "advanceCancelDays": {
              "description": "Number of days before the arrival date a reservation can be canceled without losing the deposit.",
              "type": "number"
            },
            "allDescriptionDDSecuredYn": {
              "description": "All Description DD Secured.",
              "type": "boolean"
            },
            "commissionableYn": {
              "description": "Determines if Travel Agent commission will be paid on reservations booked through the HOLIDEX Plus TACP program.",
              "type": "boolean"
            },
            "daysDepositRequired": {
              "description": "Number of Days Deposit due to guarantee the guest booking.",
              "type": "number"
            },
            "housingInformationSecuredYn": {
              "description": "Housing Information Secured.",
              "type": "boolean"
            },
            "ratesSecuredfromAllDisplaysYn": {
              "description": "Rates Secured from All Displays.",
              "type": "boolean"
            },
            "ratesSecuredfromGNRYn": {
              "description": "Rates Secured from GNR.",
              "type": "boolean"
            },
            "returnOneDayAtTimeYn": {
              "description": "Return One Day at a time.",
              "type": "boolean"
            },
            "securedFromDIdisplayYn": {
              "description": "Secured from DI Display.",
              "type": "boolean"
            }
          }
        },
        "blockStatistics": {
          "description": "Indicates the functionSpaceDetails and revenue statistics of the block.",
          "$ref": "#/definitions/blockStatisticsType"
        },
        "catering": {
          "description": "Details of catering Information for the Block.",
          "$ref": "#/definitions/cateringType"
        },
        "comments": {
          "description": "List of notes for the Block.",
          "type": "object",
          "properties": {
            "commentInfo": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/commentInfoType"
              }
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inventoryItems": {
          "description": "A collection of inventory items attached to a block.",
          "$ref": "#/definitions/blockInventoryItemsType"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this block as recently accessed.",
          "type": "boolean"
        },
        "restrictions": {
          "description": "List of restrictions for the Block.",
          "$ref": "#/definitions/blockRestrictionsType"
        },
        "sellMessages": {
          "description": "List of sell messages for the Block.",
          "$ref": "#/definitions/sellMessageConfigsType"
        },
        "statistics": {
          "description": "Statistics summary information including Rooms Sold, Room Revenue, Food and Beverage Revenue, Average Room Rate,etc.",
          "type": "array",
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/blockStatisticsSummaryType"
          }
        },
        "traces": {
          "description": "List of block traces.",
          "$ref": "#/definitions/blockTracesType"
        },
        "washSchedules": {
          "description": "List of wash schedules for the Block.",
          "$ref": "#/definitions/blockWashSchedulesType"
        }
      }
    },
    "blockWashScheduleType": {
      "description": "Allows to select type of wash schedule: by number of rooms or by percentage.",
      "type": "object",
      "properties": {
        "roomTypes": {
          "description": "A single functionSpaceDetails type on which wash operation should be performed.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "washByPercent": {
          "description": "When using the Wash by % option, indicate a wash percentage that will be applied it to the whole block.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "washByRooms": {
          "description": "Wash by rooms contains the occupany details and sell values for a specific block wash schedule.",
          "$ref": "#/definitions/blockGridInvType"
        },
        "washDate": {
          "description": "Date on which the block wash operation will be performed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "blockWashSchedulesType": {
      "description": "Wash Schedule attached to the block, which allows to release inventory based on selected wash schedule type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockWashScheduleType"
      }
    },
    "blocksType": {
      "description": "A collection of Block objects or Unique IDs of Blocks.",
      "type": "object",
      "properties": {
        "blockInfo": {
          "description": "A collection of Blocks or Unique IDs of Blocks.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "object",
            "properties": {
              "block": {
                "description": "Provides detailed information regarding a block.",
                "$ref": "#/definitions/blockType"
              }
            }
          }
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "bookingStatusDetailType": {
      "description": "Booking Status details of the business block.",
      "type": "object",
      "properties": {
        "bookingStatus": {
          "description": "Booking Status of the business block.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "catStatusType": {
          "description": "Indicates status type Inquiry, Actual, Cancel, etc.",
          "$ref": "#/definitions/blockStatusTypeType"
        },
        "cateringDeductInventory": {
          "description": "Indicates if catering event's spaces are deducted from inventory",
          "type": "boolean"
        },
        "deductInventory": {
          "description": "Indicates if blocked rooms are deducted from inventory.",
          "type": "boolean"
        },
        "returnToInventory": {
          "description": "Indicates if blocked rooms will be returned to availability or not.",
          "type": "boolean"
        },
        "statusType": {
          "description": "Indicates status type Inquiry, Actual, Cancel, etc.",
          "$ref": "#/definitions/blockStatusTypeType"
        }
      }
    },
    "bookingStatusHistoryType": {
      "type": "object",
      "properties": {
        "bookingStatus": {
          "description": "Booking status of the business block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "modifierId": {
          "description": "User who modified the status.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "modifyDateTime": {
          "description": "Date and time of the status change.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "sequence": {
          "description": "Number indicating the sequence of status change.",
          "type": "integer"
        }
      }
    },
    "bookingStatusType": {
      "description": "Booking status code, description and configured color of the status. This will be used for block and event statuses.",
      "type": "object",
      "properties": {
        "color": {
          "description": "Color from status configuration.",
          "$ref": "#/definitions/statusColorType"
        },
        "status": {
          "description": "Status code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "calendarEventInfoType": {
      "description": "Contains Function Diary Events information.",
      "type": "object",
      "properties": {
        "attendees": {
          "description": "Number of event attendees.",
          "type": "integer"
        },
        "createdOn": {
          "description": "Date the event was created.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventBookingInfo": {
          "description": "Information about booking.",
          "$ref": "#/definitions/eventBookingInfoType"
        },
        "eventDisplay": {
          "$ref": "#/definitions/eventDisplayType"
        },
        "eventName": {
          "description": "Name of event.",
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "eventTimeSpan": {
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "eventType": {
          "description": "Type of event.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "isComboRoomEventRef": {
          "description": "Flag which is set to true when this Calendar Event Info is simply a copy of an event occurring in a Combo Element of this Room.",
          "type": "boolean"
        },
        "masterEventId": {
          "description": "Master ID to represent the event.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "overbookEventsCount": {
          "description": "Evaluates total overbook events count for this event.",
          "type": "integer"
        },
        "prospectiveEventsCount": {
          "description": "Evaluates total prospective events count for this event.",
          "type": "integer"
        },
        "setdownTime": {
          "description": "Setdown time in minutes.",
          "type": "integer"
        },
        "setupCode": {
          "description": "Setup Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "setupDescription": {
          "description": "Setup Description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "setupTime": {
          "description": "Setup time in minutes.",
          "type": "integer"
        },
        "space": {
          "description": "The space to which the event belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "spaceTimeSpan": {
          "$ref": "#/definitions/timeSpanType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "waitListEventsCount": {
          "description": "Evaluates total waitlist events count for this event.",
          "type": "integer"
        }
      }
    },
    "callHistoryType": {
      "description": "Holds call information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/callType"
      }
    },
    "callType": {
      "description": "Holds call information.",
      "type": "object",
      "properties": {
        "caller": {
          "description": "Holds caller information.",
          "$ref": "#/definitions/callerType"
        },
        "comments": {
          "description": "Call comments.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "dateTimeSpan": {
          "description": "Call Time Span. Start Date and End Date is used for the Call duration.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "reservation": {
          "description": "Holds Reservation Id and Hotel Code.",
          "type": "object",
          "properties": {
            "hotelId": {
              "description": "Holds Hotel Code.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "reservationIdList": {
              "description": "Holds Reservation related Ids.",
              "$ref": "#/definitions/reservationIdList"
            }
          }
        },
        "turnawayCode": {
          "description": "Call turn away code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "callerType": {
      "description": "Holds caller information.",
      "type": "object",
      "properties": {
        "email": {
          "description": "Caller Email.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "fax": {
          "description": "Caller Fax Number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "givenName": {
          "description": "Caller First Name.",
          "type": "string",
          "maxLength": 280,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "phone": {
          "description": "Caller Phone Number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "surname": {
          "description": "Caller Last Name.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "cancellationDetailsType": {
      "description": "This type holds information regarding booking status change to Cancel/ Lost.",
      "type": "object",
      "properties": {
        "cancellationCode": {
          "description": "Code and description for cancellation reason.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "cancellationDate": {
          "description": "Date on which block was canceled.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "cancellationInfo": {
          "description": "Cancellation information provided by the customer.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "cancellationNumber": {
          "description": "Cancellation number of the block.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "destination": {
          "description": "Alternate destination where the business is being taken.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "lostToProperty": {
          "description": "Holds the name of the property or competitor brand business was lost to.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        }
      }
    },
    "cardNumberTypeType": {
      "description": "Simple type for indicating if credit card number is tokenized.",
      "type": "string",
      "enum": [
        "CardNumber",
        "Token"
      ]
    },
    "cardProcessingType": {
      "type": "string",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "cardReIssueType": {
      "description": "Request to re issue a new card.",
      "type": "string",
      "enum": [
        "Pending",
        "NotApplicable",
        "Requested"
      ]
    },
    "cardTypeType": {
      "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
      "type": "string",
      "enum": [
        "Ab",
        "Am",
        "Ax",
        "Cb",
        "Dc",
        "Ds",
        "Dt",
        "Ec",
        "Er",
        "Jc",
        "Jl",
        "Mc",
        "Nb",
        "So",
        "St",
        "Sw",
        "Va",
        "Xy",
        "Zz",
        "Cp",
        "Cu"
      ]
    },
    "cateringEventBulkUpdateDetailType": {
      "description": "Catering Event detail type.",
      "type": "object",
      "properties": {
        "actualAttendees": {
          "description": "Number of actual attendees attending the event.",
          "type": "integer"
        },
        "displayDoorcard": {
          "description": "Indicates whether the doorcard information is displayed.",
          "type": "boolean"
        },
        "doorcard": {
          "description": "Group details to display on the outside of a meeting functionSpaceDetails.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "eventEndDate": {
          "description": "Event eventEndDate date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventEndTime": {
          "description": "Event eventEndDate time.",
          "type": "string"
        },
        "eventName": {
          "description": "Name of event.",
          "$ref": "#/definitions/translationTextType60"
        },
        "eventStartDate": {
          "description": "Event eventStartDate date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventStartTime": {
          "description": "Event eventStartDate time.",
          "type": "string"
        },
        "eventStatus": {
          "description": "Status details of the Event.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "eventType": {
          "description": "Type of event.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "exclude": {
          "description": "Indicates whether the event is excluded from forecast reports.",
          "type": "boolean"
        },
        "expectedAttendees": {
          "description": "Number of expected attendees for the event.",
          "type": "integer"
        },
        "guaranteedAttendees": {
          "description": "Number of guaranteed attendees for the event.",
          "type": "integer"
        },
        "loudEvent": {
          "description": "Indicates whether the event is expected to be noisy and might possibly disturb other events.",
          "type": "boolean"
        },
        "notMoveable": {
          "description": "Indicates whether event dates and functionSpaceDetails are move able.",
          "type": "boolean"
        },
        "revenueActualization": {
          "description": "Flag that indicates if actual revenue can be manually edited.",
          "type": "boolean"
        },
        "useForecast": {
          "description": "Indicates whether the event revenue has to be forecasted.",
          "type": "boolean"
        }
      }
    },
    "cateringEventBulkUpdateFunctionSpaceType": {
      "description": "Function Space info type.",
      "type": "object",
      "properties": {
        "discountPercentage": {
          "description": "Discount Percentage applied to Rent Amount.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "functionSpaceCode": {
          "description": "Function Space code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rentalAmount": {
          "description": "The functionSpaceDetails rent amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "rentalCode": {
          "description": "Rate Code for function space.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "setdownTime": {
          "description": "Setdown time in minutes.",
          "type": "integer"
        },
        "setupCode": {
          "description": "Setup style code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "setupTime": {
          "description": "Setup time in minutes.",
          "type": "integer"
        }
      }
    },
    "cateringEventChangeActions": {
      "description": "A collection of supported list of actions.",
      "type": "string",
      "enum": [
        "New",
        "Update",
        "Delete",
        "Inactivate"
      ]
    },
    "cateringEventChangeDetailListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringEventChangeDetailType"
      }
    },
    "cateringEventChangeDetailType": {
      "type": "object",
      "properties": {
        "changeId": {
          "description": "Unique Event Change Identifier",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "fieldName": {
          "description": "List of Field Names for the Type(s) Selection",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "newValue": {
          "description": "New Value of the respective field",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "oldValue": {
          "description": "Old Value of the respective field",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "cateringEventChangeInfoType": {
      "type": "object",
      "properties": {
        "action": {
          "description": "Hard coded Action(s) list(NEW,UPDATE,DELETE)",
          "$ref": "#/definitions/cateringEventChangeActions"
        },
        "changeId": {
          "description": "Unique Event Change Identifier",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "changeSource": {
          "description": "Source of the change",
          "$ref": "#/definitions/cateringEventChangeSources"
        },
        "changeUserInfo": {
          "description": "Log time and detiails of the user who made changes",
          "$ref": "#/definitions/logUserInfoType"
        },
        "eventChangeDetailList": {
          "$ref": "#/definitions/cateringEventChangeDetailListType"
        },
        "eventId": {
          "description": "Unique Event Identifiers",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "eventName": {
          "description": "Name of the event",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "hotelId": {
          "description": "HotelCode associated with the event",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "resourceName": {
          "description": "Description of the Resource",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        }
      }
    },
    "cateringEventChangeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringEventChangeInfoType"
      }
    },
    "cateringEventChangeSources": {
      "description": "List of sources that can cause the event change",
      "type": "string",
      "enum": [
        "Attendee",
        "Event",
        "Item",
        "Menu",
        "Menuitem",
        "Space"
      ]
    },
    "cateringEventChangeType": {
      "type": "object",
      "properties": {
        "changeList": {
          "$ref": "#/definitions/cateringEventChangeListType"
        },
        "revenueChangeList": {
          "$ref": "#/definitions/cateringEventRevenueChangeListType"
        },
        "statusChangeList": {
          "$ref": "#/definitions/cateringEventStatusChangeListType"
        }
      }
    },
    "cateringEventChanges": {
      "description": "Response object for fetching event change logs.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "eventChanges": {
          "description": "Event Changes Log.",
          "$ref": "#/definitions/cateringEventChangeType"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cateringEventCopyInstructionType": {
      "description": "Include Event Forecast Figures.",
      "type": "string",
      "enum": [
        "SubEvents",
        "EventNotes",
        "EventResources",
        "EventResourceNotes",
        "EventResourcePrices",
        "EventChangeNotes",
        "EventForecastFigures"
      ]
    },
    "cateringEventItemsProcessedInfoType": {
      "description": "Status/Info of the processed items.",
      "type": "object",
      "properties": {
        "blockId": {
          "description": "BlockID of the event where item will be copied.",
          "$ref": "#/definitions/blockId"
        },
        "eventName": {
          "description": "Name of event where item will be copied.",
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "externalQty": {
          "description": "External Quantity of Item.",
          "type": "integer"
        },
        "hotelId": {
          "description": "Hotel code where item will be copied.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "internalQty": {
          "description": "Internal Quantity of Item.",
          "type": "integer"
        },
        "itemName": {
          "description": "Name of Item.",
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "quantity": {
          "description": "Quantity of Item.",
          "type": "integer"
        },
        "reason": {
          "description": "Reason for not processing the item.",
          "type": "string"
        },
        "status": {
          "description": "Status of the processed event. e.g Completed, Not Processed.",
          "type": "string"
        }
      }
    },
    "cateringEventLinkType": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "masterEventDates": {
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "type": {
          "$ref": "#/definitions/cateringEventLinkTypeType"
        }
      }
    },
    "cateringEventLinkTypeType": {
      "description": "A collection of supported list of link types for catering events.",
      "type": "string",
      "enum": [
        "SubEvent",
        "Alternate"
      ]
    },
    "cateringEventPostingType": {
      "description": "Pertain catering event's posting information.",
      "type": "object",
      "properties": {
        "chequeNumber": {
          "description": "An additional identifier for this resource on the folio.",
          "type": "string",
          "maxLength": 240,
          "minLength": 0
        },
        "includedRevenue": {
          "description": "Flag to determine if the posted revenue is Included. If not Included it is considered as Extra posted revenue.",
          "type": "boolean"
        },
        "postId": {
          "description": "Unique identifier for catering event posting.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "posted": {
          "description": "Flag to determine if the revenue has been posted.",
          "type": "boolean"
        },
        "postedRevenue": {
          "description": "Revenue calculated as per the property configured Catering currency.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "resourceName": {
          "description": "Resource description for this posting.",
          "type": "string",
          "maxLength": 240,
          "minLength": 0
        },
        "revenue": {
          "description": "Posted revenue.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "revenueType": {
          "description": "The revenue type associated with the resource.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionCode": {
          "description": "Transaction Code used for posting revenue.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "cateringEventPostings": {
      "description": "Object for retrieving catering events postings.",
      "type": "object",
      "properties": {
        "cateringEventPostings": {
          "description": "Collection of catering events postings.",
          "$ref": "#/definitions/cateringEventPostingsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "postingMasterReservations": {
          "description": "Collection of posting master reservations to be used for manage catering event postings collection.",
          "$ref": "#/definitions/reservationSnapshotsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cateringEventPostingsDetail": {
      "description": "Object for retrieving catering events postings.",
      "type": "object",
      "properties": {
        "cateringEventPostings": {
          "description": "Collection of catering events postings.",
          "$ref": "#/definitions/cateringEventPostingsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "postingMasterReservations": {
          "description": "Collection of posting master reservations to be used for manage catering event postings collection.",
          "$ref": "#/definitions/blockPostingAccountReservationsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cateringEventPostingsType": {
      "description": "Collection of catering event postings.",
      "type": "object",
      "properties": {
        "cateringEventPosting": {
          "description": "Pertain catering event's posting information.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cateringEventPostingType"
          }
        },
        "eventId": {
          "description": "Unique Event Identifiers",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "cateringEventResourceType": {
      "description": "Event resource information.",
      "type": "object",
      "properties": {
        "consumptionBased": {
          "description": "Indicates that this resource is consumption based in a catering package",
          "type": "boolean"
        },
        "custom": {
          "description": "Indicates that this resource item is a custom item added for this event.",
          "type": "boolean"
        },
        "discount": {
          "description": "The menu discount percentage.",
          "type": "number"
        },
        "eventEndDate": {
          "description": "Event End Date of resource of type Menu.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventResourceNotes": {
          "description": "Pertains to the event resource's notes.",
          "$ref": "#/definitions/eventResourceNotesType"
        },
        "eventStartDate": {
          "description": "Event Start Date of resource of type Menu.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "external": {
          "description": "Indicates that item must be ordered externally.",
          "type": "boolean"
        },
        "hasDiscountMenuItem": {
          "description": "Flag that indicates if at least one menu item has a discount.",
          "type": "boolean"
        },
        "hasNotes": {
          "description": "Flag that indicates the resource has notes associated with it.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel code which the event resource belong to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hours": {
          "description": "The number of charged hours for the resource.",
          "type": "number"
        },
        "itemAttribute": {
          "description": "Item attribute name for non Food and Beverage item.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "multiChoice": {
          "description": "Indicates that this resource is a MultiChoice Menu or not",
          "type": "boolean"
        },
        "order": {
          "description": "The order of the resource in the Banquet Event Order within their specific resource group.",
          "type": "string"
        },
        "packaged": {
          "description": "Indicates that this resource is included in a catering package.",
          "type": "boolean"
        },
        "persons": {
          "description": "The number of charged persons for the resource.",
          "type": "number"
        },
        "quantity": {
          "description": "The required quantity of the resource.",
          "type": "number"
        },
        "quantityExcluded": {
          "description": "The attendees/quantity charged extra, EXCLUDED from the package price.",
          "type": "number"
        },
        "quantityIncluded": {
          "description": "The attendees/quantity of an item INCLUDED in a package price.",
          "type": "number"
        },
        "rentalCode": {
          "description": "Rate Code that is attached to the function spaces and non Food and Beverage items",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "resourceId": {
          "description": "Unique identifier for an event resource.",
          "$ref": "#/definitions/resourceId"
        },
        "resourceName": {
          "description": "Resource name, this could be a resource item or a menu.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "resourceType": {
          "description": "Type of event resource.",
          "$ref": "#/definitions/resourceType"
        },
        "revenue": {
          "description": "Total revenue on the books.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "sellEndDate": {
          "description": "Sell End Date of resource of type Menu.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "sellStartDate": {
          "description": "Sell Start Date of resource of type Menu.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "setupCode": {
          "description": "Setup style for the function space.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "unitPrice": {
          "description": "Price per unit of the resource.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "cateringEventRevenueChangeListType": {
      "description": "Event Revenue Changes Details",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eventRevenueChangeType"
      }
    },
    "cateringEventStatusChangeListType": {
      "description": "Event Status Changes Details",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eventStatusChangeType"
      }
    },
    "cateringEventsAttendeesType": {
      "description": "All different attendees that a catering event can have.",
      "type": "object",
      "properties": {
        "actual": {
          "description": "Number of actual attendees attending to the catering event.",
          "type": "integer"
        },
        "billed": {
          "description": "This defines the count of billed attendees with respect to the menu.",
          "type": "integer"
        },
        "expected": {
          "description": "Number of expected attendees for the catering event.",
          "type": "integer"
        },
        "guaranteed": {
          "description": "Number of guaranteed attendees for the catering event.",
          "type": "integer"
        },
        "packageActual": {
          "description": "Number of actual package attendees attending the catering event.",
          "type": "integer"
        },
        "packageBilled": {
          "description": "This defines the count of package billed attendees with respect to the menu.",
          "type": "integer"
        },
        "packageExpected": {
          "description": "Number of package expected attendees for the catering event.",
          "type": "integer"
        },
        "packageGuaranteed": {
          "description": "Number of package guaranteed attendees for the catering event.",
          "type": "integer"
        },
        "set": {
          "description": "Setup for number of event attendees for resources (i.e. water, pads, tables, etc.).",
          "type": "integer"
        }
      }
    },
    "cateringEventsBulkUpdate": {
      "description": "Request object that will Change a list of events.",
      "type": "object",
      "properties": {
        "cateringEventsBulkUpdate": {
          "description": "Event(s) information, that is going to be updated in batch.",
          "$ref": "#/definitions/cateringEventsBulkUpdateType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cateringEventsBulkUpdateStatus": {
      "description": "Status/Info of the processed event(s).",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringEventsProcessedInfoType"
      }
    },
    "cateringEventsBulkUpdateType": {
      "description": "Collection of Event/Function Space Details and their Event IDs to be updated.",
      "type": "object",
      "properties": {
        "eventIdList": {
          "description": "Selected event(s) Unique identifier.",
          "$ref": "#/definitions/eventIdList"
        },
        "eventRec": {
          "description": "Selected catering event(s) to be updated with these event details.",
          "$ref": "#/definitions/cateringEventBulkUpdateDetailType"
        },
        "functionSpaceRec": {
          "description": "Selected catering event(s) to be updated with these function space details.",
          "$ref": "#/definitions/cateringEventBulkUpdateFunctionSpaceType"
        },
        "overrideProcessWarnings": {
          "description": "Indicates whether to override warnings for editing multiple events. By default, it is always considered as false and will provide post-change warnings.",
          "type": "boolean"
        }
      }
    },
    "cateringEventsProcessedInfoType": {
      "description": "Status/Info of the processed events.",
      "type": "object",
      "properties": {
        "blockId": {
          "description": "BlockID of the event.",
          "$ref": "#/definitions/blockId"
        },
        "eventDate": {
          "description": "Date of the event",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventName": {
          "description": "Name of event.",
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "eventType": {
          "description": "Type of event.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "functionSpaceDetails": {
          "description": "The function space functionSpaceDetails where the event takes place .",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "hotelId": {
          "description": "Hotel code where event will be copied.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "processingInfoCode": {
          "description": "Erorr/Warning code for not processing th event.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "processingInfoType": {
          "description": "Flag to indicate the warning messages from the API",
          "type": "string"
        },
        "reason": {
          "description": "Reason for not processing the event.",
          "type": "string"
        },
        "status": {
          "description": "Status of the processed event. e.g Completed, Not Processed.",
          "type": "string"
        }
      }
    },
    "cateringNextStatusListType": {
      "description": "Next catering status of the business block.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/bookingStatusDetailType"
      }
    },
    "cateringPackageCopyInstructionType": {
      "description": "Include Source status.",
      "type": "string",
      "enum": [
        "NonPackageResources",
        "ResourceNotes",
        "EventNotes",
        "ForecastFigures",
        "SourceStatus"
      ]
    },
    "cateringPackageInfoType": {
      "description": "Catering Package details.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description/Name of the Catering Package.",
          "$ref": "#/definitions/translationTextType200"
        },
        "duration": {
          "description": "Duration (in days) of the Catering Package.",
          "type": "integer"
        },
        "isTemplate": {
          "description": "Defines if Catering Package is a Template or not.",
          "type": "boolean"
        },
        "pkgCode": {
          "description": "Package Code associated with the Catering Package.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "webBookable": {
          "description": "Defines if web booking is allowed.",
          "type": "boolean"
        }
      }
    },
    "cateringPackageRevenue": {
      "description": "Object containing revenue details of the associated catering package.",
      "type": "object",
      "properties": {
        "cateringPackageRevenueDetails": {
          "description": "Catering Package revenue for the block.",
          "$ref": "#/definitions/blockCateringPackageRevenueBaseType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cateringPackages": {
      "description": "Object containing list of catering packages associated to block.",
      "type": "object",
      "properties": {
        "cateringPackageList": {
          "description": "Catering Packages for the block.",
          "$ref": "#/definitions/blockCateringPackageListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cateringResInfoType": {
      "description": "Information regarding catering event and catering revenue type associated to the reservation.",
      "type": "object",
      "properties": {
        "eventId": {
          "description": "Unique ID on a catering event associated to the reservation.",
          "$ref": "#/definitions/eventId"
        },
        "revenueType": {
          "description": "Catering revenue type associated to the reservation.",
          "type": "string"
        }
      }
    },
    "cateringRevenueType": {
      "description": "Information about Catering Revenue.",
      "type": "object",
      "properties": {
        "itemDiscount": {
          "description": "Item discount for the block.",
          "type": "number"
        },
        "itemDiscountPercentage": {
          "description": "The discount percentage to be applied to resource items associated with catering events.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "serviceCharge": {
          "description": "The service charge for the Catering Events that will be added to the business block.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "taxAmount": {
          "description": "The tax amount for the Catering Events that will be added to the business block.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "cateringStatusChangeHistoryType": {
      "description": "Collection of catering status history.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/bookingStatusHistoryType"
      }
    },
    "cateringStatusTypeType": {
      "description": "List of Event Status Types to identify the current status of catering events.",
      "type": "string",
      "enum": [
        "Waitlist",
        "Regret",
        "Inquiry",
        "Cancel",
        "Actual",
        "Referral",
        "Lost"
      ]
    },
    "cateringType": {
      "description": "Contains catering related information for the block.",
      "type": "object",
      "properties": {
        "applyBoardInfoToAllEvents": {
          "description": "Indicates whether BoardInfo changes can be applied to all events of the block.",
          "type": "boolean"
        },
        "applyEventAttendeesChangesToEvents": {
          "description": "Indicates to which the events of the block can the attendees changes be applied.",
          "$ref": "#/definitions/applyEventAttendeesChangesToEventsType"
        },
        "applyEventsGuaranteeToAllEvents": {
          "description": "Indicates whether Guarantee changes can be applied to all events of the block.",
          "type": "boolean"
        },
        "boardInfo": {
          "description": "The name by which the group wishes to be identified in the hotel.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cancellationDetails": {
          "description": "Information on the catering cancellation.",
          "$ref": "#/definitions/cancellationDetailsType"
        },
        "cateringInternalStatus": {
          "description": "Internal status for the catering.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cateringNextStatusList": {
          "description": "Catering Status details of the block.",
          "$ref": "#/definitions/cateringNextStatusListType"
        },
        "cateringOwner": {
          "description": "Catering Owner of the block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cateringRevenue": {
          "description": "Information about catering revenue.",
          "$ref": "#/definitions/cateringRevenueType"
        },
        "cateringStatus": {
          "description": "Catering Status details of the block.",
          "$ref": "#/definitions/bookingStatusDetailType"
        },
        "cateringStatusChangeHistory": {
          "description": "List of catering status changes.",
          "$ref": "#/definitions/cateringStatusChangeHistoryType"
        },
        "contractNumber": {
          "description": "Catering contract number for the block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "decisionDate": {
          "description": "Date by which event group must make a decision on the booking.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventAttendees": {
          "description": "The catering attendees information for events associated with the block.",
          "$ref": "#/definitions/eventAttendeesType"
        },
        "eventOrder": {
          "description": "Indicates if the Banquet Event Orders have been distributed.",
          "$ref": "#/definitions/eventOrderType"
        },
        "followUpDate": {
          "description": "Date used by catering manager or coordinator to follow up on the event.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "functionInfo": {
          "description": "This provides more detail the type of function for which the event is held. For example, Trade Show, Meeting, or Annual Convention.",
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "hasPackageEvents": {
          "description": "Indicates if the block has any package events.",
          "type": "boolean"
        },
        "onSiteName": {
          "description": "The name of the customer's in-house representative or contact on the day of the catering event.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "overrideEventsProcessingWarnings": {
          "description": "Indicates whether to ignore any warning during applying the changes to the events associated with the current block.",
          "type": "boolean"
        },
        "pkgsTmplt": {
          "description": "Indicates whether event packages or templates can be applied to the block.",
          "type": "boolean"
        },
        "resourceDiscountPercentage": {
          "description": "Indicates the resource discount percentage to be applied to resource items associated with the catering event.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "resourceDiscountType": {
          "description": "Attibute that indicates to which type of resource the discount should be applied to.",
          "$ref": "#/definitions/resourceDiscountTypeType"
        },
        "trackChanges": {
          "description": "Indicates whether the catering change logging for the booking is active or not. Any change made to catering events and resources will be logged when this is true.",
          "type": "boolean"
        }
      }
    },
    "changeRelationsType": {
      "description": "Detailed information regarding the changes made to relationships for the profile.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "relation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "relationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "characterUDFType": {
      "description": "Used to hold user defined field of Character/String Type.",
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "name": {
          "description": "Used to hold user defined field of Character Type. It is highly recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "characterUDFsType": {
      "description": "Used to hold collection of user defined fields of Character/String Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/characterUDFType"
      }
    },
    "childAgeType": {
      "description": "Defines Child's Age.",
      "type": "object",
      "properties": {
        "age": {
          "description": "Age of a child in years.",
          "type": "integer"
        }
      }
    },
    "childAgesType": {
      "description": "Age of a child in years.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/childAgeType"
      }
    },
    "childBucketsType": {
      "description": "Defines children counts with Age Qualifying Group(Child Bucket) classification.",
      "type": "object",
      "properties": {
        "bucket1Count": {
          "description": "Number of children classified under the first Age Qualifying Group(Child Bucket#1).",
          "type": "integer"
        },
        "bucket2Count": {
          "description": "Number of children classified under the second Age Qualifying Group(Child Bucket#2).",
          "type": "integer"
        },
        "bucket3Count": {
          "description": "Number of children classified under the third Age Qualifying Group(Child Bucket#3).",
          "type": "integer"
        },
        "bucket4Count": {
          "description": "Number of children classified under the fourth Age Qualifying Group(Child Bucket#4).",
          "type": "integer"
        },
        "bucket5Count": {
          "description": "Number of children classified under the fifth Age Qualifying Group(Child Bucket#5).",
          "type": "integer"
        }
      }
    },
    "codeDescriptionType": {
      "description": "This contains a generic code and description information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "codeInfoType": {
      "type": "object",
      "properties": {
        "addtionalCodeInfo": {
          "$ref": "#/definitions/addtionalCodeInfoType"
        },
        "code": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "maxLength": 20,
        "minLength": 0
      }
    },
    "colorType": {
      "description": "Color configuration type. This color configuration provides a visual category of entities.",
      "type": "string",
      "enum": [
        "Red",
        "DarkRed",
        "Green",
        "DarkGreen",
        "LightGreen",
        "Orange",
        "White",
        "Yellow",
        "DarkYellow",
        "Purple",
        "Brown",
        "Gray",
        "Aqua",
        "Chocolate",
        "Blue",
        "LightBlue",
        "DarkBlue",
        "Cyan",
        "DarkCyan",
        "Magenta",
        "DarkMagenta",
        "Black"
      ]
    },
    "commentInfoType": {
      "description": "Comment related to the profile/reservation.",
      "type": "object",
      "properties": {
        "comment": {
          "description": "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref": "#/definitions/commentType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "commentType": {
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "type": "object",
      "properties": {
        "actionDate": {
          "description": "Indicates at which date an action described in the comment must be taken.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "actionType": {
          "description": "Specifies type of action described in the comments.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "commentTitle": {
          "description": "Specifies Comment's Title.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "confidential": {
          "description": "When true, the comment may be confidential.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "If specified comment belongs to the Hotel, otherwise it is a global comment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "internal": {
          "description": "When true, the comment may not be shown to the consumer. When false, the comment may be shown to the consumer.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "notificationLocation": {
          "description": "Notification Location associated with the Note.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "overrideInternal": {
          "description": "When true, the comment internal could be modified.",
          "type": "boolean"
        },
        "protectDescription": {
          "description": "When true, the comment title will be populated from the comment type description and couldn't be modified.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "type": {
          "description": "Specifies type of the comment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Comment type Description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        }
      }
    },
    "commissionPayoutToType": {
      "type": "string",
      "enum": [
        "TravelAgent",
        "Source",
        "TravelAgentSource",
        "None"
      ]
    },
    "communicationStatusType": {
      "description": "Enum to denote the Status of Readiness messages sent to Guest Devices.",
      "type": "string",
      "enum": [
        "Pending",
        "Completed",
        "Failed",
        "Sent",
        "Received",
        "Cancelled",
        "PendingAvailability"
      ]
    },
    "compAuthorizerInfoType": {
      "description": "Authorizer Information",
      "type": "object",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "compRoutingRequestType": {
      "description": "Type for the details of a Comp Routing Request",
      "type": "object",
      "properties": {
        "comments": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "declinedBy": {
          "description": "User information of user who declined comp routing request",
          "$ref": "#/definitions/userInfoType"
        },
        "requestedBy": {
          "description": "User who requested the Comp Routing",
          "$ref": "#/definitions/userInfoType"
        },
        "status": {
          "description": "Comp routing status",
          "$ref": "#/definitions/compRoutingStatusType"
        }
      }
    },
    "compRoutingStatusType": {
      "description": "Status which indicates that the Request of Comp Routing was declined",
      "type": "string",
      "enum": [
        "Request",
        "Comp",
        "Declined"
      ]
    },
    "companyType": {
      "type": "object",
      "properties": {
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nationalityDescription": {
          "description": "Nationality code description",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "vipStatus": {
          "description": "VIP status of the company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "configPackagePrimaryDetailsType": {
      "description": "A Config Package Info type.",
      "type": "object",
      "properties": {
        "arrangementCode": {
          "description": "Arrangement Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "beginSellDate": {
          "description": "Indicates the begin sell date of the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "description": {
          "description": "The description of the package.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "endSellDate": {
          "description": "Indicates the eventEndDate sell date of the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "forecastGroup": {
          "description": "The Forecast group package belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "shortDescription": {
          "description": "The short description of the package.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "configPackageTransactionType": {
      "description": "A HotelPackageTransaction type.",
      "type": "object",
      "properties": {
        "allowance": {
          "description": "Package is marked as an allowance, in case charge is expected back to the guest account from external interface eg. POS. which need to be offset against a consumption allowance.",
          "type": "boolean"
        },
        "calculationRule": {
          "description": "The price calculation rule for this package.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "currency": {
          "description": "The currency code for this package.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "packagePostingRules": {
          "description": "The package posting rule details.",
          "$ref": "#/definitions/packagePostingRulesType"
        },
        "postingType": {
          "description": "The posting frequency for this package, e.g., daily, arrival, departure, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "configPackageUsageDetailType": {
      "description": "A Config Package Usage Detail type.",
      "type": "object",
      "properties": {
        "source": {
          "description": "Indicates if the source of the product is Rate header, Rate Detail or Reservation.",
          "$ref": "#/definitions/productSourceType"
        },
        "usedInHouseReservations": {
          "description": "Indicates if any checked in reservations are using this product.",
          "type": "boolean"
        },
        "usedInRates": {
          "description": "Indicates if the package is used in any rate code.",
          "type": "boolean"
        },
        "usedInReservations": {
          "description": "Indicates if the package is used in, reserved or prospect reservations.",
          "type": "boolean"
        }
      }
    },
    "configPostingAttributesType": {
      "description": "A config Package posting attributes type.",
      "type": "object",
      "properties": {
        "addToRate": {
          "description": "The package price is added to the functionSpaceDetails rate.",
          "type": "boolean"
        },
        "calculatedPrice": {
          "description": "Calculated Package Price based from Number of Adults, Children and Calculation Rule.",
          "type": "number"
        },
        "catering": {
          "description": "Is package used for catering?",
          "type": "boolean"
        },
        "deliveryTimeRequired": {
          "description": "Indicates whether a delivery time is required for the package.",
          "type": "boolean"
        },
        "endTime": {
          "description": "End time the package is valid.",
          "type": "string"
        },
        "forecastNextDay": {
          "description": "Package will be forecasted for consumption the next business day.",
          "type": "boolean"
        },
        "formula": {
          "description": "The custom formula used for this package, if any.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "formulaFunctionArguments": {
          "description": "The function argument name-value combination accepted by the custom formula used for this package.",
          "$ref": "#/definitions/functionArgumentsType"
        },
        "formulaFunctionName": {
          "description": "The custom formula function name used for this package, if any.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "inventoryItems": {
          "description": "Package Code Inventory Items type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/pkgInventoryItemType"
          }
        },
        "postNextDay": {
          "description": "package charges will be posted next business day.",
          "type": "boolean"
        },
        "postingRhythm": {
          "description": "The posting rhythm for this package.",
          "$ref": "#/definitions/packagePostingRhythmType"
        },
        "priceCalculationRule": {
          "description": "The price calculation rule for this package.",
          "$ref": "#/definitions/packageCalculationRuleType"
        },
        "printSeparateLine": {
          "description": "The package price is printed on separate line of the folio.",
          "type": "boolean"
        },
        "sellSeparate": {
          "description": "Can the package be sold separate from rate plan code?",
          "type": "boolean"
        },
        "startTime": {
          "description": "Start time the package is valid.",
          "type": "string"
        },
        "ticket": {
          "description": "Indicates whether a package is configured as a ticket or not.",
          "type": "boolean"
        },
        "webBookable": {
          "description": "Can package be sold via Web channel.",
          "type": "boolean"
        }
      }
    },
    "copyAndMoveEventResourcesType": {
      "description": "Criteria to copy/move event resources",
      "type": "object",
      "properties": {
        "blockId": {
          "description": "Block that the Event Resources belong to.",
          "$ref": "#/definitions/blockId"
        },
        "eventId": {
          "description": "Event that the Resources belong to.",
          "$ref": "#/definitions/eventId"
        },
        "hotelId": {
          "description": "Hotel code where event resources will be copied/moved.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "includeAsPackage": {
          "description": "Flag to indicate if the resources have to be copied as a package.",
          "type": "boolean"
        },
        "overrideCopyAndMoveResourceProcessWarnings": {
          "description": "Indicates whether to override warnings for copying/moving resources. By default, it is always considered as false and will provide post-change warnings.",
          "type": "boolean"
        },
        "resourceIdList": {
          "description": "List of resource Ids which needs to be copied/moved.",
          "$ref": "#/definitions/resourceCopyAndMoveListType"
        },
        "targetBlockId": {
          "description": "Targeted Block where information needs to be copied/moved.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "targetEventIdList": {
          "description": "List of target event Ids where information needs to be copied/moved.",
          "$ref": "#/definitions/uniqueIDListType"
        }
      }
    },
    "copyCateringEventResourcesProcessedInfoList": {
      "description": "Status/Info list of the processed event resources.",
      "type": "object",
      "properties": {
        "itemsProcessedInfo": {
          "description": "Status/Info of the processed event items.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cateringEventItemsProcessedInfoType"
          }
        },
        "menusProcessedInfo": {
          "description": "Status/Info of the processed event menus.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cateringEventsProcessedInfoType"
          }
        }
      }
    },
    "copyCateringEvents": {
      "description": "Request object for copying events.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for copying events.",
          "$ref": "#/definitions/copyCateringEventsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyCateringEventsProcessedInfoList": {
      "description": "Status/Info of the processed events.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringEventsProcessedInfoType"
      }
    },
    "copyCateringEventsResponse": {
      "description": "Response object for copying events.",
      "type": "object",
      "properties": {
        "copyCateringEventsProcessedInfoList": {
          "description": "Status/Info of the copied events.",
          "$ref": "#/definitions/copyCateringEventsProcessedInfoList"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyCateringEventsType": {
      "description": "Criteria to copy events",
      "type": "object",
      "properties": {
        "blockId": {
          "description": "Block that the Events belongs to.",
          "$ref": "#/definitions/blockId"
        },
        "copyAsSnapshot": {
          "description": "Indicates wether to perform pre-cahnge or post-change snapshot of the copied events. By default, it is always considered as false and will provide post-change snapshot.",
          "type": "boolean"
        },
        "copyInstructions": {
          "description": "Indicate weather to include Catering Event Copy Options. e.g. sub events, notes.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cateringEventCopyInstructionType"
          }
        },
        "copyStatusMode": {
          "description": "Indicates which status to copy.",
          "$ref": "#/definitions/copyStatusModeType"
        },
        "copyToDates": {
          "description": "List of dates that events needs to be copied.",
          "$ref": "#/definitions/datesType"
        },
        "copyToPackageId": {
          "description": "Catering Event Package ID to be applied to the copied events.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "eventIdList": {
          "description": "List of event Ids which needs to be copied.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "hotelId": {
          "description": "Hotel code where event will be copied.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "copyCateringPackage": {
      "description": "Request object for Copying Catering Package/Template to another block.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Details for copying Catering Package/Templates.",
          "$ref": "#/definitions/copyCateringPkgType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyCateringPackageProcessedInfoList": {
      "description": "Status/Info of the processed packages.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringEventsProcessedInfoType"
      }
    },
    "copyCateringPackageResponse": {
      "description": "Response object for copying packages.",
      "type": "object",
      "properties": {
        "copyCateringPackageProcessedInfoList": {
          "description": "Status/Info of the copied catering packages.",
          "$ref": "#/definitions/copyCateringPackageProcessedInfoList"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyCateringPkgType": {
      "description": "Criteria to copy catering packages",
      "type": "object",
      "properties": {
        "continue": {
          "description": "Indicates wether to to continue upon getting error processing screen. If this is true, error processing screen won't be shown.",
          "type": "boolean"
        },
        "copyAsSnapshot": {
          "description": "Indicates wether to perform pre-cahnge or post-change snapshot of the copied events. By default, it is always considered as false and will provide post-change snapshot.",
          "type": "boolean"
        },
        "copyInstructions": {
          "description": "Indicate weather to include Non Package resources, source status etc.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cateringPackageCopyInstructionType"
          }
        },
        "copyStatusMode": {
          "description": "Indicates which status to copy.",
          "$ref": "#/definitions/copyStatusModeType"
        },
        "copyToDates": {
          "description": "List of dates that the package needs to be copied.",
          "$ref": "#/definitions/datesType"
        },
        "hotelId": {
          "description": "Hotel code where the package will be copied.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "packageId": {
          "description": "Package ID to be copied",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "sourceBlockId": {
          "description": "Source Block that the Package belongs to.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "targetBlockId": {
          "description": "Target Block that the Package should be copied to.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "copyStatusModeType": {
      "description": "Indicates to pick the default status based on the parameter for event.",
      "type": "string",
      "enum": [
        "SameStatus",
        "DefaultStatus"
      ]
    },
    "countryNameType": {
      "description": "Code for a country or a nationality.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Used for Character Strings, length 0 to 200.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "createCateringPackageProcessedInfoList": {
      "description": "Status/Info of the processed package.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringEventsProcessedInfoType"
      }
    },
    "currencyAmountType": {
      "description": "A monetary value expressed with a currency code.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        }
      }
    },
    "currentRoomInfoType": {
      "description": "Room information of the reservation for the current day.",
      "type": "object",
      "properties": {
        "assignedByAI": {
          "description": "Represents the functionSpaceDetails was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "roomDescription": {
          "description": "Current functionSpaceDetails description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "roomId": {
          "description": "Current functionSpaceDetails number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "Current functionSpaceDetails type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomViewCode": {
          "description": "Represents the functionSpaceDetails view code like City view, River view, Ocean view etc.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "suggestedRoomNumbers": {
          "description": "Suggested functionSpaceDetails numbers.",
          "$ref": "#/definitions/codeListType"
        },
        "upgradedByAI": {
          "description": "Represents the functionSpaceDetails was upgraded by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "customChargeExemptionDateType": {
      "description": "Contains Custom Charge Exemption information for a day.",
      "type": "object",
      "properties": {
        "date": {
          "description": "Contains Custom Charge Exemption date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "quantity": {
          "description": "Contains number of Custom Charge Exemption for a day.",
          "type": "integer"
        }
      }
    },
    "customChargeExemptionDatesType": {
      "description": "Contains List of Custom Charge Exemption information for a day.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customChargeExemptionDateType"
      }
    },
    "customChargeExemptionType": {
      "description": "Contains custom charges exemption information.",
      "type": "object",
      "properties": {
        "customChargeDates": {
          "description": "Contains exemption detail information for each date.",
          "$ref": "#/definitions/customChargeExemptionDatesType"
        },
        "customChargeQuantity": {
          "description": "Contains exemption quantity for the stay. When this value is configured, daily exemption quantities are not permitted.",
          "$ref": "#/definitions/customChargeQuantityType"
        },
        "customChargesExemption": {
          "description": "Contains exemption code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "excludedDates": {
          "description": "Contains list of dates which are not valid for custom charge exemptions.",
          "$ref": "#/definitions/excludedDatesType"
        },
        "percentage": {
          "description": "Exemption Percentage",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "propertyExemption": {
          "description": "Flag specifying if custom charge exemptions is property level or not.",
          "type": "boolean"
        }
      }
    },
    "customChargeExemptionsType": {
      "description": "List of Custom Charge Exemptions.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customChargeExemptionType"
      }
    },
    "customChargeQuantityType": {
      "description": "Contains quantity of custom charge exemptions.",
      "type": "object",
      "properties": {
        "available": {
          "description": "Indicates if Custom Charges Exemption information is editable.",
          "type": "boolean"
        },
        "quantity": {
          "description": "Contains number of Custom Charge Exemption for a day.",
          "type": "integer"
        }
      }
    },
    "customerType": {
      "description": "Contains basic data on the customer's identity, location, relationships, finances, memberships, etc.",
      "type": "object",
      "properties": {
        "genderCode": {
          "description": "Identifies the profile gender code based from configured gender list of values.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "personName": {
          "description": "Detailed name information for the customer.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/personNameType"
          }
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "vipStatus": {
          "description": "VIP status of the customer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "dateRangeType": {
      "description": "Date Range with Start and End dates.",
      "type": "object",
      "properties": {
        "eventEndDate": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventStartDate": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "dateTimeRangeType": {
      "description": "Date Range with Start and End dates.",
      "type": "object",
      "properties": {
        "eventEndDate": {
          "description": "The ending value of the time span.",
          "type": "string",
          "format": "date-time"
        },
        "eventStartDate": {
          "description": "The starting value of the time span.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "dateTimeSpanType": {
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield eventEndDate date.",
      "type": "object",
      "properties": {
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "dateTimeStampGroupType": {
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "dateUDFType": {
      "description": "Used to hold user defined field of Date Type.",
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "name": {
          "description": "Used to hold user defined field of Date Type. It is highly recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "dateUDFsType": {
      "description": "Used to hold collection of user defined fields of Date Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dateUDFType"
      }
    },
    "datesType": {
      "description": "Specifies a single date.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "format": "date",
        "maxLength": 8
      }
    },
    "depositCancelRevenueType": {
      "description": "The type to indicate what revenue is to be used for calculating deposit/cancellation amounts.",
      "type": "string",
      "enum": [
        "Rooms",
        "Catering",
        "All"
      ]
    },
    "depositPolicyType": {
      "description": "Used to define the deposit policy, guarantees policy, and/or accepted forms of payment.",
      "type": "object",
      "properties": {
        "amountPercent": {
          "description": "Payment expressed as a fixed amount, or a percentage of/or functionSpaceDetails nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "deadline": {
          "description": "Payment deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "depositReceiptNo": {
          "description": "Receipt number associated with the deposit policy",
          "type": "integer"
        },
        "depositReqReversed": {
          "description": "Flag to indicate if deposit policy is reversed",
          "type": "boolean"
        },
        "description": {
          "description": "Text description of the Payment in a given language.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the deposit policy.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        },
        "policyCode": {
          "description": "Deposit Policy Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction Date associated with the deposit policy",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "typeOfCharges": {
          "description": "Defines if the deposit amount is calculated based on Room Charges, Catering Charges or both",
          "$ref": "#/definitions/depositCancelRevenueType"
        }
      }
    },
    "dietaryPrefListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dietaryPrefType"
      }
    },
    "dietaryPrefType": {
      "description": "Base type provides information about Catering Revenue Types Configuration.",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "discountType": {
      "description": "Identifies and provides details about the discount. This allows for both percentages and flat amounts. If one field is used, the other should be zero/not specified since logically.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "discountCode": {
          "description": "Specifies the type of discount (e.g., No condition, LOS, Deposit or Total amount spent).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "discountReason": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "percent": {
          "description": "Percentage discount.",
          "type": "number"
        }
      }
    },
    "downgradeType": {
      "description": "Do not downgrade membership when the next downgrade process runs. When the downgrade process runs, the membership will be automatically set to Grace.",
      "type": "string",
      "enum": [
        "Grace",
        "Never",
        "Period"
      ]
    },
    "eCertificateClassficationType": {
      "description": "Enumeration of the different type of Ecertificate.",
      "type": "string",
      "enum": [
        "Promotion",
        "Award",
        "Benefit",
        "Other"
      ]
    },
    "eCouponType": {
      "description": "Reservation eCoupon Type Information.",
      "type": "object",
      "properties": {
        "autoAttached": {
          "description": "Determines whether the eCoupon is attached through the Rate Code or not.",
          "type": "boolean"
        },
        "code": {
          "description": "Code to attach the eCoupon to Reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the eCoupon attached to the Reservation.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "eCouponId": {
          "description": "ECouponID to attach the eCoupon to Reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "issuedQuantity": {
          "description": "Assigned Quantity for the eCoupon when attached to Reservation.",
          "type": "integer"
        },
        "ratePlanCode": {
          "description": "Rate plan of the attached eCoupon to Reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reason": {
          "description": "Reason for attaching/modifing eCoupon.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "usedQuantity": {
          "description": "Used Quantity of the eCoupon for the Reservation.",
          "type": "integer"
        },
        "welcomeOffer": {
          "description": "Determines whether this eCoupon is eligible for welcome offer or not.",
          "type": "boolean"
        }
      }
    },
    "eCouponsType": {
      "description": "Collection of ECouponType object.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eCouponType"
      }
    },
    "emailInfoType": {
      "description": "Information on an email for the customer.",
      "type": "object",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "emailType": {
      "description": "Information on an email for the customer.",
      "type": "object",
      "properties": {
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "employeeInfoType": {
      "type": "object",
      "properties": {
        "addressInfo": {
          "$ref": "#/definitions/addressInfoType"
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        },
        "department": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "emailInfo": {
          "$ref": "#/definitions/emailInfoType"
        },
        "gender": {
          "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "genderCode": {
          "description": "Identifies the profile gender code based from configured gender list of values.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "personName": {
          "$ref": "#/definitions/personNameType"
        },
        "phoneInfo": {
          "$ref": "#/definitions/telephoneInfoType"
        },
        "profileId": {
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "entityType": {
      "description": "Indicates the rule is based on Minutes associated with the charge.",
      "type": "string",
      "enum": [
        "ThresholdCount",
        "ThresholdQuantity",
        "ThresholdMinutes"
      ]
    },
    "errorInstance": {
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "title": "Error Instance Details",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "event": {
      "description": "Object containing details of the event.",
      "type": "object",
      "properties": {
        "eventDetails": {
          "description": "Event information.",
          "$ref": "#/definitions/eventsInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "eventAttendeesType": {
      "description": "Event attendees information.",
      "type": "object",
      "properties": {
        "attendeesGuaranteed": {
          "description": "This denotes that the number of Attendees are the minimum guaranteed by the customer.",
          "type": "boolean"
        },
        "noOfAttendees": {
          "description": "The maximum number of attendees for Catering events associated with the block.",
          "type": "integer"
        }
      }
    },
    "eventBookingInfoType": {
      "description": "Booking information about the Function Diary Event.",
      "type": "object",
      "properties": {
        "blockDates": {
          "description": "The Time Span(Arrival, Departure) which covers the Block Span.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/timeSpanType"
          }
        },
        "bookHotelCode": {
          "description": "Hotel code of the Block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "bookId": {
          "description": "Business Block ID.",
          "type": "number"
        },
        "catOwner": {
          "description": "Catering Sales Manager ID.",
          "type": "number"
        },
        "catOwnerName": {
          "description": "Catering Sales Manager Name.",
          "type": "string"
        },
        "companyNameId": {
          "description": "Company Name ID.",
          "type": "number"
        },
        "deductInvYn": {
          "description": "Flag to indicate Deduct Inventory.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "eventStatus": {
          "description": "Catering Status Type describes Inventory behavior.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "guarantee": {
          "description": "Guarantee Code of the reservation.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "masterNameId": {
          "description": "Master Name ID.",
          "type": "number"
        },
        "nonCompete": {
          "description": "Flag to indicate block is non-compete protected.",
          "type": "boolean"
        },
        "nonCompeteCode": {
          "description": "Holds the industry code if non-compete is enabled.",
          "type": "string"
        },
        "nonCompeteIndustry": {
          "description": "Holds the industry description.",
          "type": "string"
        },
        "rateProtect": {
          "description": "Flag to indicate block is rate protected.",
          "type": "boolean"
        },
        "resvNameId": {
          "description": "Reservation Name ID.",
          "type": "number"
        },
        "salesOwner": {
          "description": "Room Manager ID.",
          "type": "number"
        },
        "salesOwnerName": {
          "description": "Room Manager Name.",
          "type": "string"
        },
        "vipStatus": {
          "description": "VIP status of the customer.",
          "$ref": "#/definitions/vIPStatusType"
        }
      }
    },
    "eventCalendar": {
      "description": "Return object to the request for the Events Booked/Scheduled for the function spaces in the Hotel for the particular time period.",
      "type": "object",
      "properties": {
        "eventCalendarDetails": {
          "description": "Collection of the Events Booked/Scheduled for the function spaces in the Hotel for the particular time period as per the criteria in the fetch request.",
          "$ref": "#/definitions/eventCalendarType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "eventCalendarType": {
      "description": "Collection of the Events Booked/Scheduled for the function spaces in the Hotel for the particular time period.",
      "type": "object",
      "properties": {
        "eventCodes": {
          "description": "Collection of Event Codes for a property for the particular time period.",
          "$ref": "#/definitions/eventCodeDetailListType"
        },
        "eventSpace": {
          "description": "Collection of the Events Booked/Scheduled for the function space/functionSpaceDetails for the particular time period.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/eventSpaceScheduleType"
          }
        },
        "pageIndex": {
          "description": "Current Page the group of Rooms is included in.",
          "type": "integer"
        },
        "recordsPerPage": {
          "description": "Number of records per page.",
          "type": "integer"
        },
        "sellMessages": {
          "description": "Function Diary Sell Messages configured for a particular date range.",
          "$ref": "#/definitions/sellMessagesType"
        },
        "totalRooms": {
          "description": "Total Number of Rooms.",
          "type": "integer"
        }
      }
    },
    "eventCodeDetailListType": {
      "description": "Collection of the Event Codes in a Property for a particular time period.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eventCodeDetailType"
      }
    },
    "eventCodeDetailType": {
      "description": "Event Code details for a given date.",
      "type": "object",
      "properties": {
        "blockName": {
          "description": "Block Name.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "blockStatus": {
          "description": "Status of the catering block",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "color": {
          "description": "Color associated to the event code.",
          "$ref": "#/definitions/statusColorType"
        },
        "date": {
          "description": "Date for which the event code is applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "event": {
          "description": "Event code and Description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "eventCodeType": {
          "description": "Determines the type of event code.",
          "$ref": "#/definitions/eventCodeTypeType"
        },
        "hotelId": {
          "description": "Hotel Code associated with the Event Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nonCompeteIndustry": {
          "description": "Holds the industry description.",
          "type": "string"
        }
      }
    },
    "eventCodeTypeType": {
      "description": "Determines if the block has any Non Compete configured",
      "type": "string",
      "enum": [
        "EventCode",
        "DayType",
        "RateProtect",
        "NonCompete"
      ]
    },
    "eventDetailType": {
      "description": "Pertain Information about the Event Details",
      "type": "object",
      "properties": {
        "alternateEvent": {
          "description": "Flag to indicate if the event is booked as a backup for another event.",
          "type": "boolean"
        },
        "attendees": {
          "description": "Attendees defined in the catering event.",
          "$ref": "#/definitions/cateringEventsAttendeesType"
        },
        "cateringDeductInventory": {
          "description": "Indicates if catering event's spaces are deducted from inventory",
          "type": "boolean"
        },
        "cateringStatusType": {
          "description": "Event Status Type Flag to identify if the Catering event is cancelled or lost. Examples are C(Cancelled), L (Lost), R (Refused).",
          "$ref": "#/definitions/cateringStatusTypeType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "displayDoorcard": {
          "description": "Indicates whether display the doorcard information on the Event Overview report.",
          "type": "boolean"
        },
        "doorcard": {
          "description": "It is the group details to display on the outside of a meeting functionSpaceDetails.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "eventLevelRevenueActualization": {
          "description": "Flag that indicates if actual revenue can be manually edited.",
          "type": "boolean"
        },
        "eventLink": {
          "description": "Link information with other event(s).",
          "$ref": "#/definitions/cateringEventLinkType"
        },
        "eventName": {
          "description": "Name of event.",
          "$ref": "#/definitions/translationTextType60"
        },
        "eventShared": {
          "description": "Flag to indicate if the event is shareable with other events.",
          "type": "boolean"
        },
        "eventStatus": {
          "description": "Status details of the Event.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "eventTimeSpan": {
          "description": "Pertain event duration from eventStartDate and eventEndDate date and time.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "eventType": {
          "description": "Type of event.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "externalURL": {
          "description": "Field to save the external URL Enterted by the user in the event Overview Section.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hasPostings": {
          "description": "Indicates whether the events has postings.",
          "type": "boolean"
        },
        "inactiveDate": {
          "description": "Inactivation date of the event.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "includeSpaceInPackage": {
          "description": "Flag to indicate if the event space is associated from the Package",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "loudEvent": {
          "description": "Indicates whether the event is expected to be noisy and might possibly disturb other events.",
          "type": "boolean"
        },
        "masterEvent": {
          "description": "Indicates whether event is master event.",
          "type": "boolean"
        },
        "masterEventId": {
          "description": "Master event identifier.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "notMoveable": {
          "description": "Indicates whether event dates and functionSpaceDetails are move able.",
          "type": "boolean"
        },
        "packageCode": {
          "description": "Package Code of the Event if it has a Package Enabled in it.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "packageEvent": {
          "description": "Flag to indicate if the event is part of a package.",
          "type": "boolean"
        },
        "packageId": {
          "description": "Package Id of the Event.",
          "type": "integer"
        },
        "packageName": {
          "description": "Package Name of the Event.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "subEvent": {
          "description": "Flag to indicate if the event is a sub event.",
          "type": "boolean"
        },
        "waitlistReturnStatus": {
          "description": "This is to show the turned status of an event",
          "$ref": "#/definitions/bookingStatusType"
        },
        "waitlisted": {
          "description": "Indicates whether event is wait listed.",
          "type": "boolean"
        }
      }
    },
    "eventDisplayType": {
      "description": "Display Information for the Function Diary Event.",
      "type": "object",
      "properties": {
        "alternateMasterYn": {
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "bookingName": {
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "cateringOnlyYn": {
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "dontMoveYn": {
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "exclusiveYn": {
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "loudEventYn": {
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "masterYn": {
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "sharedYn": {
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "waitlistedYn": {
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        }
      }
    },
    "eventFunctionSpaceType": {
      "description": "Pertain Information about the Function Space for events.",
      "type": "object",
      "properties": {
        "comboSpace": {
          "description": "Flag to indicate if the function space is a combination functionSpaceDetails.",
          "type": "boolean"
        },
        "discountPercentage": {
          "description": "Discount Percentage applied to Rent Amount.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "elementSpace": {
          "description": "Flag to indicate if the function space is an elementSpace of a comboSpace function space.",
          "type": "boolean"
        },
        "functionSpaceCode": {
          "description": "Function Space (event functionSpaceDetails) code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "functionSpaceDescription": {
          "description": "Function Space description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "maximumOccupancy": {
          "description": "Maximum Occupancy for the SetupCode of Catring Event.",
          "type": "integer"
        },
        "minimumOccupancy": {
          "description": "Minimum Occupancy for the SetupCode of Catring Event.",
          "type": "integer"
        },
        "rateDesc": {
          "description": "Function Space Rate description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "rentalAmount": {
          "description": "The functionSpaceDetails rent amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "rentalCode": {
          "description": "Rate Code for function space.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "setdownTime": {
          "description": "Setdown time in minutes.",
          "type": "integer"
        },
        "setupCode": {
          "description": "Setup style code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "setupDescription": {
          "description": "Setup Style description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "setupTime": {
          "description": "Setup time in minutes.",
          "type": "integer"
        },
        "shareable": {
          "description": "Flag to indicate if the event functionSpaceDetails is shareable.",
          "type": "boolean"
        }
      }
    },
    "eventId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "eventIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "eventInfoType": {
      "description": "Catering Event information.",
      "type": "object",
      "properties": {
        "altEventsDetail": {
          "description": "Pertain detail information of alternate event/events in case functionspace for current event becomes unavailable",
          "$ref": "#/definitions/lightEventsDetailType"
        },
        "eventBlockInfo": {
          "description": "Pertain information for block where event belongs to.",
          "$ref": "#/definitions/blockType"
        },
        "eventDetail": {
          "description": "Pertain detail event's information.",
          "$ref": "#/definitions/eventDetailType"
        },
        "eventIndicators": {
          "description": "Indicators of additional information attached to the event",
          "$ref": "#/definitions/indicatorsType"
        },
        "eventNotes": {
          "description": "Pertain event's notes.",
          "$ref": "#/definitions/eventNotesType"
        },
        "eventPrimaryInfo": {
          "description": "Pertain event primary information.",
          "$ref": "#/definitions/eventPrimaryInfoType"
        },
        "eventResources": {
          "description": "Pertain detail event's information.",
          "$ref": "#/definitions/eventResourcesListType"
        },
        "eventRevenues": {
          "description": "Pertain event revenues.",
          "$ref": "#/definitions/eventRevenuesInformationType"
        },
        "functionSpaceInformation": {
          "description": "Pertain event's function space information.",
          "$ref": "#/definitions/eventFunctionSpaceType"
        },
        "masterEventDetail": {
          "description": "Pertain detail information of master event.",
          "$ref": "#/definitions/lightEventDetailType"
        },
        "onTheBooksRevenue": {
          "description": "On The Books (OTB) catering revenue for the event.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "processInstructions": {
          "description": "Instructions to control how the event is created.",
          "$ref": "#/definitions/eventProcessInstructionsType"
        },
        "subEventsDetail": {
          "description": "Pertain detail information of sub event/events.",
          "$ref": "#/definitions/lightEventsDetailType"
        }
      }
    },
    "eventItemInfoType": {
      "description": "Information about event item.",
      "type": "object",
      "properties": {
        "eventItem": {
          "description": "Event item details. It will be empty in case of deleting an item from event.",
          "$ref": "#/definitions/eventItemType"
        },
        "eventItemId": {
          "description": "Event item ID, it will be empty in case of adding a new item to event.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "eventItemType": {
      "description": "Inventory Items identification details.",
      "type": "object",
      "properties": {
        "actualExternalCostPerUnit": {
          "description": "Shows the external cost of the item. If a booked external cost has been entered for the item, it will be automatically populated into this field",
          "type": "number"
        },
        "actualExternalQuantity": {
          "description": "Actual quantity of the item booked through external sources with corresponding cost",
          "type": "number"
        },
        "actualInternalCostPerUnit": {
          "description": "Shows the internal cost of the item. If a booked internal cost has been entered for the item, it will be automatically populated into this field",
          "type": "number"
        },
        "actualInternalQuantity": {
          "description": "Actual quantity of the item booked from internal resources",
          "type": "number"
        },
        "actualQuantity": {
          "description": "The total actual quantity of the item on event actualization.",
          "type": "number"
        },
        "attributeId": {
          "description": "The ID of the Item Attribute.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "attributes": {
          "description": "List of Attributes of the Item.",
          "$ref": "#/definitions/itemAttributesType"
        },
        "departments": {
          "description": "List of Departments for the Item.",
          "$ref": "#/definitions/codeListType"
        },
        "discount": {
          "description": "Discount to be applied to the price.",
          "type": "number"
        },
        "displaySequence": {
          "description": "The display sequence of the Item.",
          "type": "number"
        },
        "eventEndDate": {
          "description": "The ending value of the time span.",
          "type": "string",
          "format": "date-time"
        },
        "eventStartDate": {
          "description": "The starting value of the time span.",
          "type": "string",
          "format": "date-time"
        },
        "eventTypes": {
          "description": "List of Event Types for the Item.",
          "$ref": "#/definitions/codeListType"
        },
        "externalCostPerUnit": {
          "description": "Shows the price the external source charges for the item",
          "type": "number"
        },
        "externalOrder": {
          "description": "Flag to define if the inventory item can be ordered externally when the item is marked as critical.",
          "type": "boolean"
        },
        "externalQuantity": {
          "description": "External Quantity can be all or part of the total quantity of this item needs to be booked through external sources, this field shows the number booked",
          "type": "number"
        },
        "hotelId": {
          "description": "The Hotel code which the item belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "internalCostPerUnit": {
          "description": "Shows the internal cost of the item.If a cost has been configured for the item it will be automatically populated into this field",
          "type": "number"
        },
        "internalQuantity": {
          "description": "Internal Quantity can be all or part of the total quantity",
          "type": "number"
        },
        "isExcludeNonDeduct": {
          "description": "Flag to check if the Event Item is ExcludeNonDeduct",
          "type": "boolean"
        },
        "isNameCustom": {
          "description": "Flag to check if the Event Item Name is a Custom Name",
          "type": "boolean"
        },
        "itemClassCode": {
          "description": "The Item Class Code which the item belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "itemClassDescription": {
          "description": "The Description of the Item Class.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "itemClassDisplaySequence": {
          "description": "Display sequence of Item Class.",
          "type": "number"
        },
        "itemClassId": {
          "description": "The Item Class ID which the item belongs to.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "itemCode": {
          "description": "The Article Number of the Item.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "itemDescription": {
          "description": "The Description of the Item.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "itemFromTemplate": {
          "description": "Indicates whether Item is from a Template or not.",
          "type": "boolean"
        },
        "itemId": {
          "description": "The id of the Item class.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "itemName": {
          "description": "The Name of the Item.",
          "$ref": "#/definitions/translationTextType200"
        },
        "itemPool": {
          "description": "The Item Pool description of the Item.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "itemRateId": {
          "description": "The Rate ID of the item.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "order": {
          "description": "Order in which the item is displayed and printed within the non-Food and Beverage item group and its Item Class.Defaults to the sequence number in which the item was attached to the Event.",
          "type": "integer"
        },
        "packageId": {
          "description": "The ID of the Item Package.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "price": {
          "description": "For Custom rate codes, this indicates the item price.",
          "type": "number"
        },
        "priceCode": {
          "description": "Price Code to be selected from the list of configured codes available for this item",
          "type": "string"
        },
        "print": {
          "description": "The Revenue Type of the Item.",
          "type": "boolean"
        },
        "quantity": {
          "description": "The quantity of this item required by the event.",
          "type": "number"
        },
        "rates": {
          "description": "List of Rates of the Item.",
          "$ref": "#/definitions/itemRatesType"
        },
        "resourceNotes": {
          "description": "Collection of notes which belongs to a resource (either Item or Menu or FunctionSpace).",
          "$ref": "#/definitions/eventResourceNotesType"
        },
        "revenueType": {
          "description": "The Revenue Type of the Item.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "revenueTypeEditable": {
          "description": "If true, the revenue could be changed.",
          "type": "boolean"
        },
        "sellInfo": {
          "description": "The Sell Information of the Item.",
          "type": "object",
          "properties": {
            "available": {
              "description": "The available period of the Item.",
              "$ref": "#/definitions/dateTimeSpanType"
            },
            "availableQty": {
              "description": "Available quantity during a period of time.",
              "type": "number"
            },
            "criticalInventory": {
              "description": "Flag to issue a warning if this inventory item is overbooked.",
              "type": "boolean"
            },
            "defaultDuration": {
              "description": "Define the default duration days when booking the Item.",
              "type": "integer"
            },
            "defaultQty": {
              "description": "Defines the default quantity when booking the Item.",
              "type": "number"
            },
            "discountable": {
              "description": "Specifies if a discount is allowed for this item.",
              "type": "boolean"
            },
            "fixedCharge": {
              "description": "If true, the Fixed Charges screen will be automatically displayed when this item gets attached to a reservation.",
              "type": "boolean"
            },
            "itemClassDiscountable": {
              "description": "Specifies if a discount is allowed for the Item Class.",
              "type": "boolean"
            },
            "itemClassWebBookable": {
              "description": "Specifies if web booking is allowed for the Item Class.",
              "type": "boolean"
            },
            "outsideStay": {
              "description": "Define if the the Item could be held outside of the reservation stay days.",
              "type": "boolean"
            },
            "price": {
              "description": "The Cost of the Item.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "qtyInStock": {
              "description": "Item quantity in Stock.",
              "type": "number"
            },
            "sellControl": {
              "description": "If true, item is mandatory for booking.",
              "type": "boolean"
            },
            "sellSeparate": {
              "description": "If true, the item could be sold separately.",
              "type": "boolean"
            },
            "webBookable": {
              "description": "If true, web booking is allowed.",
              "type": "boolean"
            },
            "welcomeOffer": {
              "description": "If true, the item can be attached as part of a Welcome Offer",
              "type": "boolean"
            }
          }
        },
        "setdownTime": {
          "description": "Setdown Time of the Item in minutes.",
          "type": "number"
        },
        "setupTime": {
          "description": "Setup Time of the Item in minutes.",
          "type": "number"
        },
        "traceText": {
          "description": "The Trace Text of the Item.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "usedForEvents": {
          "description": "If true, the item is used for events.",
          "type": "boolean"
        },
        "usedForReservation": {
          "description": "If true, the item is used for reservation.",
          "type": "boolean"
        },
        "vendorPrice": {
          "description": "This indicates the vendor price.",
          "type": "number"
        },
        "vendors": {
          "description": "List of Vendors of the Item.",
          "$ref": "#/definitions/itemVendorsType"
        }
      }
    },
    "eventItemsType": {
      "description": "List of event items",
      "type": "object",
      "properties": {
        "critical": {
          "description": "Flag to indicate all inventory items are critical.",
          "type": "boolean"
        },
        "eventItemInfo": {
          "description": "Collection of Detailed information about event items.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/eventItemInfoType"
          }
        },
        "includedInPackage": {
          "description": "Flag to indicate all inventory items are part of a package.",
          "type": "boolean"
        }
      }
    },
    "eventMenuBasicInfoType": {
      "description": "Pertain Details Information of Menu.",
      "type": "object",
      "properties": {
        "attendees": {
          "description": "Attendees defined in the catering event.",
          "$ref": "#/definitions/cateringEventsAttendeesType"
        },
        "className": {
          "description": "This type holds name of Menu Class Name.",
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "consumptionBased": {
          "description": "This type holds value of consumption, Menu items will be charged on a consumption basis.",
          "type": "boolean"
        },
        "courseCount": {
          "description": "Define the Courses populated into the Multi Choice Menu Configuration",
          "type": "integer"
        },
        "description": {
          "description": "This type holds Description for the given Menu.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "dietaryList": {
          "description": "This type holds DietaryList values for the given Menu.",
          "$ref": "#/definitions/codeListType"
        },
        "discountPercentage": {
          "description": "Discount Percentage applied to Menu Amount.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "eventDateRange": {
          "description": "Date period which the Event will take place.",
          "$ref": "#/definitions/dateRangeType"
        },
        "eventTypes": {
          "description": "This type holds Event list associated with menu.",
          "$ref": "#/definitions/codeListType"
        },
        "hotelId": {
          "description": "Hotel code where event will be organized.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Selection will comment this Menu is Inactive and unable to be added to a Catering Event.",
          "type": "boolean"
        },
        "includedInMenu": {
          "description": "Return true, when all Menu Items added will be marked as Included and there will be a Global Price for this menu",
          "type": "boolean"
        },
        "includedInPrice": {
          "description": "Return true means, menu item as Included in the Menu Price",
          "type": "boolean"
        },
        "menuId": {
          "description": "Identifier for this menu in configuration. Note: This is not the same as EventMenuID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "menusSold": {
          "description": "The total number of menus sold for the day on which the event takes place.",
          "type": "integer"
        },
        "multiChoice": {
          "description": "Indicator of this being a multi-choice menu",
          "type": "boolean"
        },
        "name": {
          "description": "This type holds name of Menu Name.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "order": {
          "description": "This field determines the order in which the menu has to be displayed on the manage resources screen.",
          "type": "integer"
        },
        "quickInsertCode": {
          "description": "This type holds quick insert value, v5 functionality as Article Number for the Menu.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "restriction": {
          "description": "This type holds Restrictionn for the given Menu.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "salesPrice": {
          "description": "Sales Price for Menu Item in Menu Item Configuration.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "sellDateRange": {
          "description": "Menu will be available to sell for an Event for date range.",
          "$ref": "#/definitions/dateRangeType"
        },
        "serveStartEndTime": {
          "description": "This defines the event eventStartDate and eventEndDate time.",
          "$ref": "#/definitions/dateTimeRangeType"
        },
        "servingSize": {
          "description": "This type holds TableCapacity for the given Menu.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "servingType": {
          "description": "This type holds serving type value per person , per table for the given Menu.",
          "$ref": "#/definitions/servingType"
        },
        "type": {
          "description": "This type holds value of Menu type FOOD ,BEVERAGE for the given Menu.",
          "$ref": "#/definitions/menuTypeType"
        },
        "webBookable": {
          "description": "This type tells about whether menu is book through web or not.",
          "type": "boolean"
        }
      }
    },
    "eventMenuInfoType": {
      "description": "Information about event menu.",
      "type": "object",
      "properties": {
        "eventMenu": {
          "description": "Event menu details. It will be empty in case of deleting a menu from event.",
          "$ref": "#/definitions/eventMenuType"
        },
        "eventMenuId": {
          "description": "Event menu ID, it will be empty in case of adding a new menu to event.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "eventMenuItemType": {
      "description": "Detailed attributes of Menu Item.",
      "type": "object",
      "properties": {
        "attendees": {
          "description": "Attendees defined in the catering event.",
          "$ref": "#/definitions/cateringEventsAttendeesType"
        },
        "classInfo": {
          "description": "Displays the Menu Item Name noted in the Menu Item Configuration.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "container": {
          "description": "Code and description of the container to be used by Menu Item",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "cost": {
          "description": "Actual Cost of Menu Item",
          "$ref": "#/definitions/currencyAmountType"
        },
        "course": {
          "description": "Determines the order of menu course.",
          "type": "number"
        },
        "courseOrder": {
          "description": "Determines the order of menu item within the course.",
          "type": "number"
        },
        "custom": {
          "description": "Indicates whether this menu item is custom",
          "type": "boolean"
        },
        "demandFactor": {
          "description": "Demand Factor of the Menu item.",
          "type": "number"
        },
        "description": {
          "description": "Detailed description of menu items in 100 characters",
          "$ref": "#/definitions/translationTextType2000"
        },
        "dietaryPreferenceList": {
          "description": "list of configured Dietary preferences",
          "$ref": "#/definitions/dietaryPrefListType"
        },
        "discountPercentage": {
          "description": "Discount Percentage applied to Rent Amount.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "displayOrder": {
          "description": "Defines the Display Order of the menu item class, to which the menu item is attached",
          "type": "integer"
        },
        "eventMenuDetailID": {
          "description": "Determines Unique identifier for the event menu details.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "eventTypes": {
          "description": "Field will be inherited values from the Menu Item Class associated for Event Types.",
          "$ref": "#/definitions/codeListType"
        },
        "hotelId": {
          "description": "The Hotel code which the menu item class belongs to",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "The menu item class unique ID",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "inactive": {
          "description": "Check for the status of menu item",
          "type": "boolean"
        },
        "includedYN": {
          "description": "Included flag",
          "type": "boolean"
        },
        "itemConsumption": {
          "description": "Selection of this notes that the price defined is charged 'as-consumed' basis",
          "type": "boolean"
        },
        "mandatoryYN": {
          "description": "Determines if the Menu Item is mandatory or not",
          "type": "boolean"
        },
        "menuType": {
          "description": "Type of Menu -Food or Beverage",
          "$ref": "#/definitions/menuTypeType"
        },
        "name1": {
          "description": "First value of menu item which belongs to a menu item class",
          "$ref": "#/definitions/translationTextType2000"
        },
        "name2": {
          "description": "Seond value of menu item which belongs to a menu item class",
          "$ref": "#/definitions/translationTextType2000"
        },
        "name3": {
          "description": "Third value of menu item which belongs to a menu item class",
          "$ref": "#/definitions/translationTextType2000"
        },
        "origin1": {
          "description": "The values entered here most commonly reference a Wine, Meat origin if Restaurant features a Local Farm",
          "$ref": "#/definitions/translationTextType2000"
        },
        "origin2": {
          "description": "The values entered here most commonly reference a Wine, Meat origin if Restaurant features a Local Farm",
          "$ref": "#/definitions/translationTextType2000"
        },
        "portion": {
          "description": "Portion of the menu item",
          "$ref": "#/definitions/translationTextType2000"
        },
        "print": {
          "description": "check if Print action is required for menu item",
          "type": "boolean"
        },
        "quickInsertCode": {
          "description": "Article number in Caps of menu item",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "responsibleDepartments": {
          "description": "Department Code(s) will be displayed in the field for a particular menu item",
          "$ref": "#/definitions/codeListType"
        },
        "restriction": {
          "description": "Any particular restriction description in 100 charactera",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "revenueType": {
          "description": "RevenueType of Menu Item",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "salesPrice": {
          "description": "Price of Menu Item , Numeric currency value field conforming to Currency Format for the selected Property.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "servings": {
          "description": "Numeric value of servings of Menu item",
          "type": "integer"
        },
        "webBookable": {
          "description": "Check of Menu Item if it is web bookable",
          "type": "boolean"
        },
        "year": {
          "description": "This value is typically the year of the Wine",
          "type": "integer"
        }
      }
    },
    "eventMenuItemsType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eventMenuItemType"
      }
    },
    "eventMenuRevenueType": {
      "description": "Pertain Revenue Detail Information of the Menu.",
      "type": "object",
      "properties": {
        "cost": {
          "description": "This type holds cost of the Menu.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "costMargin": {
          "description": "This type holds cost of the Menu.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "custom": {
          "description": "Indicates that this resource item is a custom item added for this event.",
          "type": "boolean"
        },
        "internalQuote": {
          "description": "This type holds internal quote for the Menu.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "price": {
          "description": "This type holds Price of the Menu.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "priceMargin": {
          "description": "This type holds price margin for the given Menu.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "resourceId": {
          "description": "Unique identifier for the resource.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "revenueType": {
          "description": "This supports all Revenue Types",
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "type": {
          "description": "This type holds value of Menu type FOOD ,BEVERAGE for the given Menu.",
          "$ref": "#/definitions/menuTypeType"
        }
      }
    },
    "eventMenuRevenuesType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eventMenuRevenueType"
      }
    },
    "eventMenuType": {
      "description": "Information about event menu.",
      "type": "object",
      "properties": {
        "basicInfo": {
          "description": "Event resource detail information.",
          "$ref": "#/definitions/eventMenuBasicInfoType"
        },
        "hotelId": {
          "description": "Hotel code of the Resource.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "menuItems": {
          "description": "List menu items.",
          "$ref": "#/definitions/eventMenuItemsType"
        },
        "revenues": {
          "description": "List of revenues for this menu.",
          "$ref": "#/definitions/eventMenuRevenuesType"
        }
      }
    },
    "eventMenusType": {
      "description": "List of event menus.",
      "type": "object",
      "properties": {
        "critical": {
          "description": "Flag to indicate all event menus are critical.",
          "type": "boolean"
        },
        "eventMenuInfo": {
          "description": "Collection of Detailed information about event menus.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/eventMenuInfoType"
          }
        },
        "includedInPackage": {
          "description": "Flag to indicate all event menus are part of a package.",
          "type": "boolean"
        }
      }
    },
    "eventNoteType": {
      "description": "Pertain event's comment information.",
      "type": "object",
      "properties": {
        "comment": {
          "description": "Pertain comment text.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "internal": {
          "description": "Indicates if comment are internal use only.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "noteCode": {
          "description": "Note code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "noteId": {
          "description": "Unique identifier for event comment. If it is missing, this indicate that it is a new comment. If only NotID is provided then it is a delete operation",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "noteTitle": {
          "description": "Pertain comment tile.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "sequence": {
          "description": "Pertain display sequence.",
          "type": "integer"
        }
      }
    },
    "eventNotesType": {
      "description": "Pertain event information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eventNoteType"
      }
    },
    "eventOrderType": {
      "description": "Event order distribution information.",
      "type": "object",
      "properties": {
        "distributed": {
          "description": "Indicates if the Banquet Event Orders have been distributed.",
          "type": "boolean"
        },
        "distributedDate": {
          "description": "This indicates which exchange rate date will be used for blocks when printing Banquet Event Orders. When the Distributed attribute is true this contains the date stamp of when the Distributed attribute was updated. When Distributed attribute is false, this is left blank. This date can also be taken into consideration as the 'Exchange Rate Date' when, for instance, converting catering revenue to base currency.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "distributedDateTime": {
          "description": "This indicates which exchange rate date will be used for blocks when printing Banquet Event Orders. When the Distributed attribute is true this contains the date/time stamp of when the Distributed attribute was updated. When Distributed attribute is false, this is left blank. This date can also be taken into consideration as the 'Exchange Rate Date' when, for instance, converting catering revenue to base currency.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "eventPrimaryInfoType": {
      "description": "Pertain event identifications.",
      "type": "object",
      "properties": {
        "eventId": {
          "description": "Unique identifier for the event.",
          "$ref": "#/definitions/eventId"
        },
        "hotelId": {
          "description": "Hotel code where event will be organized.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "includeSubEvents": {
          "description": "Indicates whether to delete/inactive the sub event(s) of the master event.",
          "type": "boolean"
        }
      }
    },
    "eventProcessInstructionsType": {
      "description": "Instructions to control how the event is created.",
      "type": "object",
      "properties": {
        "convertToRegularEvent": {
          "description": "Flag to indicate that the Event is being converted from Sub Event as a Regular Event.",
          "type": "boolean"
        },
        "convertToSubEvent": {
          "description": "Flag to indicate that the Event is being converted from Regular Event as a Sub Event linking to a Master Event.",
          "type": "boolean"
        },
        "overbook": {
          "description": "Flag to indicate if the function space can be booked when it is occupied by another event.",
          "type": "boolean"
        },
        "overrideCapacity": {
          "description": "Flag to indicate if configured function space capacity can be overriden.",
          "type": "boolean"
        },
        "overrideMaxgroups": {
          "description": "Flag to indicate if maximum group configured in function space can be overriden.",
          "type": "boolean"
        },
        "quickEvent": {
          "description": "Flag to indicate that both Block and Event would be created as part of the Quick Event process.",
          "type": "boolean"
        },
        "shareable": {
          "description": "Flag to indicate if the function space can be booked as shareable with another event.",
          "type": "boolean"
        },
        "waitList": {
          "description": "Flag to indicate if the event can be waitlisted when function space is not available.",
          "type": "boolean"
        },
        "warnFunctionSpace": {
          "description": "Flag to return a warning when the functionspace is being used by other catering event.",
          "type": "boolean"
        }
      }
    },
    "eventResource": {
      "description": "Object containing event resource details.",
      "type": "object",
      "properties": {
        "eventResourceDetails": {
          "description": "Event resources information for the specific resource Id.",
          "$ref": "#/definitions/eventResourceDetailType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "eventResourceDetailType": {
      "description": "Detail information of resource which can be a Menu, Item or Space.",
      "type": "object",
      "properties": {
        "eventDetailInfo": {
          "description": "Block Information to which the resource belongs to.",
          "$ref": "#/definitions/eventInfoType"
        },
        "item": {
          "description": "Item detail information for the associated resource.",
          "$ref": "#/definitions/eventItemInfoType"
        },
        "menu": {
          "description": "Menu detail information for the associated resource.",
          "$ref": "#/definitions/eventMenuInfoType"
        }
      }
    },
    "eventResourceNoteType": {
      "description": "Contains the event resource's comment information.",
      "type": "object",
      "properties": {
        "comment": {
          "description": "Contains comment text.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "internal": {
          "description": "Indicates if the comment is internal use only.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "noteCode": {
          "description": "Note code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "noteId": {
          "description": "Unique identifier for event resource comment. If it is missing, this indicate that it is a new comment. If only NoteID is provided then it is a delete operation",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "noteTitle": {
          "description": "Contains comment title.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "sequence": {
          "description": "Contains display sequence.",
          "type": "integer"
        }
      }
    },
    "eventResourceNotesType": {
      "description": "Contains event resource comment information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eventResourceNoteType"
      }
    },
    "eventResources": {
      "description": "Request object for copying/moving event resources.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for copying/moving event resources.",
          "$ref": "#/definitions/copyAndMoveEventResourcesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "eventResourcesListType": {
      "description": "Event resources information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringEventResourceType"
      }
    },
    "eventResourcesResponse": {
      "description": "Response object for copying/moving event resources.",
      "type": "object",
      "properties": {
        "eventResourcesProcessedInfoList": {
          "description": "Status/Info of the copied/moved event resources.",
          "$ref": "#/definitions/copyCateringEventResourcesProcessedInfoList"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "eventRevenueChangeType": {
      "type": "object",
      "properties": {
        "attendees": {
          "description": "Number of attendees for this event",
          "type": "integer"
        },
        "blockId": {
          "description": "Block ID for which the details are requested",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "changeUserInfo": {
          "description": "Log time and detiails of the user who made changes .",
          "$ref": "#/definitions/logUserInfoType"
        },
        "eventChangeId": {
          "description": "Unique EventChangeID for which the details are requested",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "eventDate": {
          "description": "Date of this event",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventId": {
          "description": "ID of this event",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "eventStatus": {
          "description": "Status of this event",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "revenueChange": {
          "description": "Type of Revenue for this event",
          "$ref": "#/definitions/eventRevenueType"
        }
      }
    },
    "eventRevenueInformationType": {
      "description": "Pertain event's revenue information.",
      "type": "object",
      "properties": {
        "actualRevenue": {
          "description": "Actual revenue.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "billedRevenue": {
          "description": "Billed revenue.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "custom": {
          "description": "Flag indicating revenues are from a custom revenue type.",
          "type": "boolean"
        },
        "expectedRevenue": {
          "description": "Expected revenue.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "flatForecastRevenue": {
          "description": "Flag to indicate forecast revenue is a flat amount, therefore NOT per person.",
          "type": "boolean"
        },
        "forecastRevenue": {
          "description": "Forecasted revenue.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guaranteedRevenue": {
          "description": "Guaranteed revenue.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "ignoreForecast": {
          "description": "Flag indicating to ignore forecast figures.",
          "type": "boolean"
        },
        "onTheBooksRevenue": {
          "description": "On the books revenue.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "orderBy": {
          "description": "Sort order for revenues.",
          "type": "integer"
        },
        "packaged": {
          "description": "Flag indicating if the revenues are generated by a catering package.",
          "type": "boolean"
        },
        "revenueType": {
          "description": "Revenue type",
          "$ref": "#/definitions/revenueTypeType"
        },
        "totalCost": {
          "description": "Total cost involved on this revenue.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "eventRevenueType": {
      "type": "object",
      "properties": {
        "revenue": {
          "description": "Revenue Change Amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "revenueType": {
          "description": "Type of Revenue",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "eventRevenuesInformationType": {
      "description": "Collection of revenue information about a catering event.",
      "type": "object",
      "properties": {
        "currencyCode": {
          "description": "Currency code when base currency of the property is different than the catering currency.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "eventLevelRevenueActualization": {
          "description": "Flag that indicates if actual revenue can be manually edited.",
          "type": "boolean"
        },
        "eventRevenueInformation": {
          "description": "Revenue information about a catering event.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/eventRevenueInformationType"
          }
        },
        "excludeFromForecast": {
          "description": "Flag to indicate if the event revenue should be excluded from the forecast.",
          "type": "boolean"
        },
        "useForecastRevenue": {
          "description": "Flag to indicate whether to only use the forecasted values when reporting, regardless of whether resources are booked on an event.",
          "type": "boolean"
        }
      }
    },
    "eventSpaceAttributesType": {
      "description": "Collection of the Events Booked/Scheduled for the function spaces in the Hotel for the particular time period.",
      "type": "object",
      "properties": {
        "alternate": {
          "description": "Flag that tells whether the functionSpaceDetails is an Alternate Room or not.",
          "type": "boolean"
        },
        "comboElement": {
          "description": "Flag that tells whether the functionSpaceDetails is a Combo Element or not.",
          "type": "boolean"
        },
        "comboRoom": {
          "description": "Combo Room Number if the functionSpaceDetails is a Combo Element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "comboSpace": {
          "description": "Flag that tells whether the functionSpaceDetails is a Combo or not.",
          "type": "boolean"
        },
        "maximumOccupancy": {
          "description": "Specifies the maximum occupancy this functionSpaceDetails can handle.",
          "type": "integer"
        },
        "shareable": {
          "description": "Flag that tells whether the functionSpaceDetails is Shareable or not.",
          "type": "boolean"
        },
        "spaceArea": {
          "description": "Room Area in Square Feet/Meters.",
          "$ref": "#/definitions/spaceAreaType"
        }
      }
    },
    "eventSpaceScheduleType": {
      "description": "Collection of the Events Booked/Scheduled for the function spaces in the Hotel for the particular time period.",
      "type": "object",
      "properties": {
        "building": {
          "description": "Building name where this Room is.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description for the Function Room.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "eventSpaceAttributes": {
          "description": "Collection of the Events Booked/Scheduled for the function space/functionSpaceDetails for the particular time period.",
          "$ref": "#/definitions/eventSpaceAttributesType"
        },
        "events": {
          "description": "Collection of the Events Booked/Scheduled for the function space/functionSpaceDetails for the particular time period.",
          "type": "object",
          "properties": {
            "event": {
              "description": "Collection of the Events Booked/Scheduled for the function space/functionSpaceDetails for the particular time period.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/calendarEventInfoType"
              }
            },
            "relatedEvents": {
              "description": "Collection of the Refernced event ids for the Function Space",
              "type": "string"
            }
          }
        },
        "hotelId": {
          "description": "Hotel Code associated with the Function Space.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "name": {
          "description": "Name of the Function Room.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "roomId": {
          "description": "Function Room Number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomOrder": {
          "description": "Order the Room is displayed based on the settings selected by the user.",
          "type": "integer"
        }
      }
    },
    "eventStatusChangeType": {
      "type": "object",
      "properties": {
        "blockId": {
          "description": "Block ID for which the details are requested",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "changeUserInfo": {
          "description": "Log time and detiails of the user who made changes .",
          "$ref": "#/definitions/logUserInfoType"
        },
        "currentStatus": {
          "description": "Current Status of this event",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "eventChangeId": {
          "description": "Unique EventChangeID for which the details are requested",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "eventId": {
          "description": "ID of this event",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "priorStatus": {
          "description": "Prior Status of this event",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "eventSummariesInfoType": {
      "description": "Collection of events.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "eventSummary": {
          "description": "Contains master/sub-events or standalone events summary information",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/eventSummaryInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "eventSummaryInfoType": {
      "description": "Contains information about an event.",
      "type": "object",
      "properties": {
        "allPosted": {
          "description": "Indicates whether the event has posted all charges.",
          "type": "boolean"
        },
        "alternateEvent": {
          "description": "Flag to indicate if the event is booked as a backup for another event.",
          "type": "boolean"
        },
        "attendees": {
          "description": "Number of event attendees.",
          "type": "integer"
        },
        "blockHasPostings": {
          "description": "Indicates whether any event in the block has postings.",
          "type": "boolean"
        },
        "blockHotelCode": {
          "description": "Hotel where the Block is created for the event.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "blockIdList": {
          "description": "Unique ID to represent the block that the event belongs to.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockName": {
          "description": "Name of the block.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "cateringCurrency": {
          "description": "Currency code when base currency of the property is different than the catering currency.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "cateringQuotedCurrency": {
          "description": "Currency code which is been quoted for Catering Events",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "cateringStatusDeductInventory": {
          "description": "Flag to indicate if the Catering event deducts resources from inventory.",
          "type": "boolean"
        },
        "cateringStatusReturnToInventory": {
          "description": "Flag to indicate if the Catering event returns resources to inventory.",
          "type": "boolean"
        },
        "cateringStatusType": {
          "description": "Event Status Type Flag to identify if the Catering event is cancelled, lost, actual, etc. Examples are C(Cancelled), L (Lost), R (Refused), A (Actual).",
          "$ref": "#/definitions/cateringStatusTypeType"
        },
        "discountPercentage": {
          "description": "Discount Percentage applied to Rent Amount.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "displayDoorCard": {
          "description": "Flag to indicate if the doorcard has been selected to display on reports or external readerboard systems.",
          "type": "boolean"
        },
        "doorCard": {
          "description": "The doorcard to be displayed on reports or external readerboard systems.",
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "eventEndDate": {
          "description": "The ending value of the time span.",
          "type": "string",
          "format": "date-time"
        },
        "eventId": {
          "description": "Unique identifier of the event.",
          "$ref": "#/definitions/eventId"
        },
        "eventIndicators": {
          "description": "Indicators of additional information attached to the event",
          "$ref": "#/definitions/indicatorsType"
        },
        "eventLink": {
          "description": "Link information with other event(s).",
          "$ref": "#/definitions/cateringEventLinkType"
        },
        "eventName": {
          "description": "Name of event. This is used to describe the event.",
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "eventShared": {
          "description": "Flag to indicate if the event is shareable with other events.",
          "type": "boolean"
        },
        "eventStartDate": {
          "description": "The starting value of the time span.",
          "type": "string",
          "format": "date-time"
        },
        "eventStatus": {
          "description": "Status of the event. Examples are INQ, TEN, DEF, etc.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "excludeFromForecast": {
          "description": "Flag to indicate if the event revenue should be excluded from the forecast.",
          "type": "boolean"
        },
        "functionSpaceDetails": {
          "description": "The function space functionSpaceDetails where the event takes place.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "functionSpaceSetup": {
          "description": "Setup Style selected for the Function Space.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "hasPartialPostings": {
          "description": "Indicates whether the event has posted some charges, but not all.",
          "type": "boolean"
        },
        "hasPostings": {
          "description": "Indicates whether the event has postings.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel where the event is booked.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactiveDate": {
          "description": "Inactivation date of the event.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "includeSpaceInPackage": {
          "description": "Flag to indicate if the event space is associated from the Package.",
          "type": "boolean"
        },
        "indicators": {
          "description": "Indicators for additional event information.",
          "$ref": "#/definitions/indicatorsType"
        },
        "loudEvent": {
          "description": "Indicates whether the event is expected to be noisy and might possibly disturb other events.",
          "type": "boolean"
        },
        "masterEvent": {
          "description": "Flag to indicate if the event is a master event.",
          "type": "boolean"
        },
        "maximumOccupancy": {
          "description": "Maximum Occupancy for the SetupCode of Catring Event.",
          "type": "integer"
        },
        "minimumOccupancy": {
          "description": "Minimum Occupancy for the SetupCode of Catring Event.",
          "type": "integer"
        },
        "nothingPosted": {
          "description": "Indicates that none of the charges on the event have been posted.",
          "type": "boolean"
        },
        "packageCode": {
          "description": "Package Code of the Event if it has a Package Enabled in it.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "packageEvent": {
          "description": "Flag to indicate if the event is part of a package.",
          "type": "boolean"
        },
        "packageId": {
          "description": "Package Id of the Event.",
          "type": "integer"
        },
        "packageName": {
          "description": "Package Name of the Event.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "rentalAmount": {
          "description": "Rental amount for the event function space.",
          "type": "number"
        },
        "rentalCode": {
          "description": "Rate Code for function space.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "setupCode": {
          "description": "Setup style code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "setupTime": {
          "description": "Event space setupCode time in minutes.",
          "type": "integer"
        },
        "shareable": {
          "description": "Flag to indicate if the event functionSpaceDetails is shareable.",
          "type": "boolean"
        },
        "subEvent": {
          "description": "Flag to indicate if the event is a sub event.",
          "type": "boolean"
        },
        "tearDownTime": {
          "description": "Event space tear down time in minutes.",
          "type": "integer"
        },
        "type": {
          "description": "Type of event. Examples are LUN, DIN, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "useForecastRevenue": {
          "description": "Flag to indicate whether to only use the forecasted values when reporting, regardless of whether resources are booked on an event.",
          "type": "boolean"
        },
        "waitlistReturnStatus": {
          "description": "This is to show the turned status of an event",
          "$ref": "#/definitions/bookingStatusType"
        }
      }
    },
    "events": {
      "description": "Response object for fetching events.",
      "type": "object",
      "properties": {
        "blockInfo": {
          "description": "Type contains the primary details for a block and it's children details.",
          "$ref": "#/definitions/blocksType"
        },
        "eventSummaries": {
          "description": "Events matching the search criteria.",
          "$ref": "#/definitions/eventSummariesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "masterInfoList": {
          "description": "Refer to Generic common types document",
          "type": "array",
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "eventsInfoType": {
      "description": "Pertain event information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eventInfoType"
      }
    },
    "eventsResources": {
      "description": "Response object for fetching event resources.",
      "type": "object",
      "properties": {
        "eventsResourcesList": {
          "description": "Event resources information for request criteria.",
          "$ref": "#/definitions/eventsResourcesListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "eventsResourcesListType": {
      "description": "Event resource information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eventInfoType"
      }
    },
    "exceptionDetailType": {
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "title": "Error Detail",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "excludedDateType": {
      "description": "Specifies all the enabled dates.",
      "type": "object",
      "properties": {
        "date": {
          "description": "Contains exclusion date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reason": {
          "description": "Contains reason for exclusion.",
          "$ref": "#/definitions/exclusionReasonType"
        }
      }
    },
    "excludedDatesType": {
      "description": "Contains list of dates which are valid for custom charge exemptions.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/excludedDateType"
      }
    },
    "exclusionReasonType": {
      "description": "Custom Charge has already been Processed for this date within the reservation stay.",
      "type": "string",
      "enum": [
        "NotConfigured",
        "CustomChargeProcessed"
      ]
    },
    "externalReferenceType": {
      "description": "This type contains unique information of external reference.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique ID of external reference.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "ID context for external reference.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "ID extension for external reference.",
          "type": "integer"
        }
      }
    },
    "externalReferencesType": {
      "description": "This type contains unique information of external reference.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/externalReferenceType"
      }
    },
    "fBAInfoType": {
      "description": "FBA ( Flexible Benefits Awards ) related fields.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Award's FBA amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "fbaBillGenDate": {
          "description": "Business date of the FBA bill generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "flexibleBenefitAward": {
          "description": "Indicates if this certificate is a Flexible Benefit Award certificate.",
          "type": "boolean"
        },
        "monetaryValue": {
          "description": "Award's FBA monetary values.",
          "type": "number"
        },
        "orphanCertificate": {
          "description": "Indicates whether the certificate is Orphan or not.",
          "type": "boolean"
        },
        "posted": {
          "description": "Indicates whether FBA has been posted.",
          "type": "boolean"
        },
        "postedAmount": {
          "description": "Award's FBA posted amount.",
          "type": "number"
        },
        "postingBusinessDate": {
          "description": "Business date of the FBA posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingDateTime": {
          "description": "Date and time of the FBA posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reimburseAllowed": {
          "description": "Marks if the certificate is eligible for reimbursement.",
          "type": "boolean"
        },
        "reimbursed": {
          "description": "Indicates whether FBA has been reimbursed.",
          "type": "boolean"
        },
        "reimbursedAmount": {
          "description": "Award's FBA reimbursed amount.",
          "type": "number"
        },
        "reimbursementBusinessDate": {
          "description": "Business date of the FBA reimbursement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reimbursementDateTime": {
          "description": "Date and time of the FBA reimbursement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "resettleAllowed": {
          "description": "Marks if the certificate is eligible for resettlement",
          "type": "boolean"
        },
        "settled": {
          "description": "Indicates whether FBA has been settled.",
          "type": "boolean"
        },
        "settlementBusinessDate": {
          "description": "Business date of the FBA settlement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "settlementDateTime": {
          "description": "Date and time of the FBA settlement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "status": {
          "description": "Possible FBA statuses.",
          "$ref": "#/definitions/fBAStatusType"
        }
      }
    },
    "fBAStatusType": {
      "description": "Flexible benefit award has been reimbursed.",
      "type": "string",
      "enum": [
        "Ordered",
        "Attached",
        "Posted",
        "Settled",
        "Reimbursed"
      ]
    },
    "facilityCodeType": {
      "description": "Facility Housekeeping Code, its description and quantity.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Facility code value.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Facility Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "quantity": {
          "description": "Signifies the quantity.",
          "type": "integer"
        }
      }
    },
    "facilityCodesType": {
      "description": "List of the facility codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/facilityCodeType"
      }
    },
    "facilityTaskType": {
      "description": "Information regarding facility task on a reservation.",
      "type": "object",
      "properties": {
        "date": {
          "description": "The Date on which the task is applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "supplies": {
          "description": "Supplies associated with the task.",
          "$ref": "#/definitions/facilityCodesType"
        },
        "task": {
          "description": "The Task Code.",
          "$ref": "#/definitions/housekeepingTaskCodeType"
        }
      }
    },
    "feeType": {
      "description": "Applicable service charges or fees.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "code": {
          "description": "Code identifying the fee (e.g.,agency fee, municipality fee).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "type": {
          "description": "Used to indicate if the amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).",
          "$ref": "#/definitions/amountDeterminationType"
        }
      }
    },
    "feesType": {
      "description": "A collection of fees or service charges.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "fee": {
          "description": "An individual fee or service charge.",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/feeType"
          }
        }
      }
    },
    "fixedChargeDetailType": {
      "description": "Fixed charge amount could be specified by flat fee or be a percentage of the rate amount.",
      "type": "object",
      "properties": {
        "article": {
          "description": "Holds related article code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "chargeAmount": {
          "description": "Price of the product.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "Percentage of the rate amount.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "quantity": {
          "description": "Quantity of the product.",
          "type": "integer"
        },
        "roomNights": {
          "description": "Holds number of comp or cash functionSpaceDetails night to allocate.",
          "type": "integer"
        },
        "supplement": {
          "description": "Additional information regarding the fixed charge.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transaction": {
          "description": "Transaction code and description of a fixed charge.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "fixedChargeFrequencyType": {
      "description": "Yearly.",
      "type": "string",
      "enum": [
        "O",
        "D",
        "W",
        "M",
        "Q",
        "Y"
      ]
    },
    "fixedChargeScheduleType": {
      "description": "Holds schedule of fixed charge.",
      "type": "object",
      "properties": {
        "dateToExecute": {
          "description": "Date of when to execute yearly fixed charge. Applicable when frequency is Yearly.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "dayToExecute": {
          "description": "Day of when to execute fixed charge. Applicable when frequency is Daily or Weekly.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "eventEndDate": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventStartDate": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency of a fixed charge.",
          "$ref": "#/definitions/fixedChargeFrequencyType"
        }
      }
    },
    "fixedChargeType": {
      "description": "Holds fixed charge information.",
      "type": "object",
      "properties": {
        "charge": {
          "description": "Holds specific details of fixed charge.",
          "$ref": "#/definitions/fixedChargeDetailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "schedule": {
          "description": "Holds schedule of fixed charge.",
          "$ref": "#/definitions/fixedChargeScheduleType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "fixedChargesType": {
      "description": "Holds fixed charge detail.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fixedChargeType"
      }
    },
    "folioShortInfoType": {
      "description": "This type contains information of generated bills.",
      "type": "object",
      "properties": {
        "autoGenerated": {
          "description": "Flag to indicate if the folio is auto generated or not.",
          "type": "boolean"
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioNo": {
          "description": "Folio No of the bill generated.",
          "type": "number"
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioType": {
          "description": "Folio type of the bill generated.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "folioView": {
          "description": "The folio window where the settlement is applied.",
          "type": "integer"
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        }
      }
    },
    "folioStatusType": {
      "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
      "type": "string",
      "enum": [
        "Deposit",
        "Void",
        "Ok",
        "Zero",
        "Compress",
        "Converted",
        "Internal"
      ]
    },
    "folioTextsType": {
      "description": "This stores the description for the type of tax calculation especially with tax exemption, etc.",
      "type": "array",
      "maxItems": 2,
      "items": {
        "type": "object",
        "properties": {
          "row": {
            "description": "Row number of the additional text.",
            "type": "integer"
          },
          "text": {
            "description": "Additional text field to display on the folio.",
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          }
        }
      }
    },
    "foliosShortInfoType": {
      "description": "This type contains a list of generated bills for a reservation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/folioShortInfoType"
      }
    },
    "foreignExchangeType": {
      "description": "Foreign Exchange info.",
      "type": "object",
      "properties": {
        "effectiveDate": {
          "description": "Effective Exchange date for the foreign currency posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "Exchange Type for the postings.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "formattedTextTextType": {
      "description": "Provides text and indicates whether it is formatted or not.",
      "type": "object",
      "properties": {
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "functionArgumentType": {
      "description": "This type provided details of a function argument and the value it holds.",
      "type": "object",
      "properties": {
        "dataType": {
          "description": "Specifies the datatype of the function argument.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "name": {
          "description": "Specifies the name of the function argument.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "position": {
          "description": "Specifies the position of the function argument in the argument list.",
          "type": "integer"
        },
        "required": {
          "description": "Argument of the function mandatory or not.",
          "type": "boolean"
        },
        "value": {
          "description": "Specifies the value held by the function argument.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "functionArgumentsType": {
      "description": "Collection of function arguments and their corresponding values.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/functionArgumentType"
      }
    },
    "functionSpaceAvailabilityDetails": {
      "description": "Response object for retrieving availability for catering function spaces.",
      "type": "object",
      "properties": {
        "functionSpacesAvailability": {
          "description": "Collection of catering events postings after manage them.",
          "$ref": "#/definitions/functionSpacesAvailabilityType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "functionSpaceAvailabilityType": {
      "description": "The summary information for a function space.",
      "type": "object",
      "properties": {
        "available": {
          "description": "Flag that indicates if the function space can be reserved or not.",
          "type": "boolean"
        },
        "comboSpace": {
          "description": "Indicate if the function space is a combination functionSpaceDetails.",
          "type": "boolean"
        },
        "elementSpace": {
          "description": "Indicate if the function space will be shown in the Function Diary by default.",
          "type": "boolean"
        },
        "floor": {
          "description": "The floor on which the Function Space is located.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "forceAlternate": {
          "description": "Indicate if the function space is forced to have alternate function spaces in case the function space becomes unvailable.",
          "type": "boolean"
        },
        "fullUtilizationTime": {
          "description": "The time in minutes that the function space would be considered at 100% utilization.",
          "type": "number"
        },
        "handicapFacilities": {
          "description": "Indicates whether the function space has handicap facilities.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code where function space belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "location": {
          "description": "The building on which the Function Space is located.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "orderBy1": {
          "description": "The first custom order for sorting the function space display.",
          "type": "integer"
        },
        "orderBy2": {
          "description": "The second custom order for sorting the function space display.",
          "type": "integer"
        },
        "orderBy3": {
          "description": "The third custom order for sorting the function space display.",
          "type": "integer"
        },
        "psuedoRoomType": {
          "description": "Indicates whether the functionSpaceDetails type is psuedo.",
          "type": "boolean"
        },
        "roomCode": {
          "description": "Room Code of the Function Space.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "Room Type of the Function Space.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "shareable": {
          "description": "Indicate if the function space is shareable.",
          "type": "boolean"
        },
        "shortName": {
          "description": "The Short Name of the Function Space.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "spaceName": {
          "description": "The Name of the Function Space.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "spaceType": {
          "description": "The Type which the Function Space belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "suggestedRateAmount": {
          "description": "Rental amount suggested to be used by function space.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "suggestedRateCode": {
          "description": "Rate Code suggested to be used by function space.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "suggestedSetupCode": {
          "description": "Setup Code suggested to be used by function space.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "webBookable": {
          "description": "Indicates whether the Function Space is web bookable or not.",
          "type": "boolean"
        },
        "webViewable": {
          "description": "Indicates whether the Function Space is web viewable or not.",
          "type": "boolean"
        }
      }
    },
    "functionSpaceEvents": {
      "description": "Response object for fetching events shared by function space.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "sharedFunctionSpaceEvents": {
          "description": "Collection of the events shared by function space.",
          "$ref": "#/definitions/sharedFunctionSpaceEventsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "functionSpacesAvailabilityType": {
      "description": "Collection of available Function Spaces.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/functionSpaceAvailabilityType"
      }
    },
    "givenNameType": {
      "description": "Given name, first name or names",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "guestCountsType": {
      "description": "A collection of GuestCount by age group.",
      "type": "object",
      "properties": {
        "adults": {
          "description": "Defines the number of Adults.",
          "type": "integer"
        },
        "childAges": {
          "description": "Defines Children's Ages. Number of children ages mentioned may mot match with children counts.",
          "$ref": "#/definitions/childAgesType"
        },
        "childBuckets": {
          "description": "Defines children counts with Age Qualifying Group(Child Bucket#1) classification.",
          "$ref": "#/definitions/childBucketsType"
        },
        "children": {
          "description": "Defines the number of Children.",
          "type": "integer"
        }
      }
    },
    "guestHousekeepingServiceRequestType": {
      "description": "Possible values for the Guest Service Status.",
      "type": "string",
      "enum": [
        "DoNotDisturb",
        "MakeUpRoom",
        "NoStatusSelected"
      ]
    },
    "guestLastStayInfoType": {
      "description": "Contains last stay related details of the guest.",
      "type": "object",
      "properties": {
        "lastStayDate": {
          "description": "Guest's last stay date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastStayRate": {
          "description": "The Rate amount of the guest's last stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "lastStayRoom": {
          "description": "Room Number where the guest stayed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "totalStay": {
          "description": "The total number of previous stay of the guest.",
          "type": "integer"
        }
      }
    },
    "guestMessageType": {
      "description": "Holds the Message information for a Reservation",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "delivery": {
          "description": "Holds the Delivery Method Information",
          "$ref": "#/definitions/messageDeliveryType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "message": {
          "description": "Holds the Message Information",
          "$ref": "#/definitions/messageType"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "guestMessagesType": {
      "description": "Holds the Message Information",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/guestMessageType"
      }
    },
    "hotelReservationTraceType": {
      "description": "Extended Trace object to hold information for a reservation.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "departmentId": {
          "description": "Indicates the Department code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationId": {
          "description": "Reservation ID of the reservation for which the traces are to be retrieved.",
          "$ref": "#/definitions/reservationId"
        },
        "resolveInfo": {
          "description": "Information regarding the status of the trace",
          "$ref": "#/definitions/traceResolveType"
        },
        "timeInfo": {
          "description": "Date of the trace.",
          "$ref": "#/definitions/traceTimeInfoType"
        },
        "traceText": {
          "description": "The information this trace contains.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "hotelReservationTracesType": {
      "description": "List of Reservation Traces.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelReservationTraceType"
      }
    },
    "hotelReservationType": {
      "description": "The Reservation class contains the current reservation being created or altered.",
      "type": "object",
      "properties": {
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "accessRestrictionMessage": {
          "description": "Configurable Access Restriction Message for Excluded Block or Rate Code.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "additionalGuestInfo": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "$ref": "#/definitions/resGuestAdditionalInfoType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "alerts": {
          "description": "List of reservation alerts.",
          "$ref": "#/definitions/alertsType"
        },
        "allowAutoCheckin": {
          "description": "Flag to allow auto checkin",
          "type": "boolean"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "allowPreRegistration": {
          "description": "Flag containing true or false value for reservation to be eligible for prior check in by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile check in yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowedActions": {
          "description": "Collection of allowed actions for the reservation.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "associatedReservations": {
          "description": "Information regarding associated reservations.",
          "$ref": "#/definitions/associatedResType"
        },
        "attachments": {
          "description": "Collection of attachments available for that reservation",
          "$ref": "#/definitions/attachmentsType"
        },
        "autoBorrowFromHouse": {
          "description": "This flag will force to borrow from house if borrow required for number of rooms requested, this will only applicable when reservation is attached to a Block.",
          "type": "boolean"
        },
        "callHistory": {
          "description": "List of reservation calls.",
          "$ref": "#/definitions/callHistoryType"
        },
        "cancellation": {
          "description": "Information regarding why reservation has been/was cancelled. This could hold information as history even if reservation is no more in in Cancelled status.",
          "type": "object",
          "properties": {
            "cancellationNo": {
              "description": "Cancellation Number given when reservation was last cancelled.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "code": {
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "description": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          }
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "catering": {
          "description": "Catering event information if reservation is associated with the catering event.",
          "$ref": "#/definitions/cateringResInfoType"
        },
        "chargeCardNumber": {
          "description": "This attribute represents Hotel charge card number. This number is generated automatically in OPERA when a reservation is created in OPERA. It is part of a functionality that provide the guest with the convenience of placing all their charges directly on their reservation folio.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "comments": {
          "description": "List of Notes for the Guest related to the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "compAuthorizer": {
          "description": "Reservation Comp Authorizer.",
          "$ref": "#/definitions/compAuthorizerInfoType"
        },
        "computedReservationStatus": {
          "description": "Indicates the Computed status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "createBusinessDate": {
          "description": "Business Date when the reservation was created.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "customChargeExemptionDetails": {
          "description": "List of Custom Charge Exemptions attached to the reservation.",
          "$ref": "#/definitions/customChargeExemptionsType"
        },
        "customNameValueDetail": {
          "description": "List of Custom Name Value Information attached to the reservation.",
          "$ref": "#/definitions/nameValueDetailType"
        },
        "customReference": {
          "description": "Custom Reference to identify reservation.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "displayColor": {
          "description": "The color to display this reservation on functionSpaceDetails grid displays.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "eCertificates": {
          "description": "List of ECertificates attached to the reservation.",
          "$ref": "#/definitions/reservationECertificatesType"
        },
        "eCoupons": {
          "description": "List of eCoupons.",
          "$ref": "#/definitions/eCouponsType"
        },
        "extSystemSync": {
          "type": "boolean"
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "fixedCharges": {
          "description": "List of reservation fixed charges.",
          "$ref": "#/definitions/fixedChargesType"
        },
        "folios": {
          "description": "This elementSpace returns any automatically generated folios during check-in, based on the Fetch Instruction \"AutoFolios\". When the parameter \"Auto Generate Credit Bill for Deposit upon Check In\" is enabled, during check-in credit bills are automatically generated for the deposits. The generated credit bill details are returned so that user can preview/print the folio. For some countries like Portugal, it is mandatory to print the folio and hence this information is needed",
          "$ref": "#/definitions/foliosShortInfoType"
        },
        "guestComments": {
          "description": "List of Notes for the Guest related to the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "guestMemberships": {
          "description": "List of Memberships for the Guest related to the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/membershipType"
          }
        },
        "guestMessages": {
          "description": "List of Messages.",
          "$ref": "#/definitions/guestMessagesType"
        },
        "hasOpenFolio": {
          "type": "boolean"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "housekeeping": {
          "description": "Holds rooms housekeeping information.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "inventoryItems": {
          "description": "A collection of inventory items attached to a reservation.",
          "$ref": "#/definitions/resInventoryItemsType"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "linkedReservation": {
          "description": "Reservations related to the current Reservation.",
          "$ref": "#/definitions/linkedReservationsInfoType"
        },
        "locators": {
          "description": "Collection of Locators available for that reservation",
          "$ref": "#/definitions/reservationLocatorsType"
        },
        "lockHandle": {
          "description": "An id representing the record lock for this reservation. When passed, update operation will verify that this lock is still valid.",
          "type": "number"
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this reservation as recently accessed.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Flag containing true or false value to determine if the guest has opted for communications pertaining to this reservation.Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is marked for communication. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "overrideBlockRestriction": {
          "type": "boolean"
        },
        "overrideExternalChecks": {
          "description": "Forcefully override the create/update action on the Reservation. For real-time CRS interfaces, this elementSpace is used as force selling indicator in case of Create or Update Reservation",
          "type": "boolean"
        },
        "overrideInstructions": {
          "description": "List of overrides done for the reservation.",
          "$ref": "#/definitions/overrideInstructionsType"
        },
        "overrideInventoryCheck": {
          "description": "Indicates to Override the Room Inventory Check if applicable.",
          "type": "boolean"
        },
        "overrideOutOfServiceCheck": {
          "description": "Indicates to Override the Room Out Of Service Check if applicable.",
          "type": "boolean"
        },
        "party": {
          "description": "Party/PartyCode when reservation is part of a party(a small group).",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "preRegistered": {
          "description": "Is the reservation pre-registered.",
          "type": "boolean"
        },
        "preferenceCollection": {
          "description": "Collection of reservation preferences.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferenceTypeType"
          }
        },
        "prepaidCards": {
          "description": "Collection of Prepaid Cards available for that reservation",
          "$ref": "#/definitions/prepaidCardsType"
        },
        "primaryEnrollmentChain": {
          "description": "Name of the Chain for the primary enrollment",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "primaryEnrollmentResort": {
          "description": "Name Of the Resort/Hotel for the primary enrollment",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "printRate": {
          "description": "Indicates whether to show the rate or not on a printed document which includes the rate.",
          "type": "boolean"
        },
        "profileAwards": {
          "description": "Collection of profile awards available for that reservation",
          "$ref": "#/definitions/awardsType"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "reinstateDate": {
          "description": "Business Date when the reservation was last reinstated.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationAwards": {
          "description": "Collection of Awards,Certificates for the guest profile.",
          "$ref": "#/definitions/awardsType"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "reservationGuests": {
          "description": "Collection of guests associated with the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/resGuestType"
          }
        },
        "reservationIdList": {
          "description": "Used to provide PMS and/or CRS identifiers.",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "reservationMemberships": {
          "description": "List of reservation memberships.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationMembershipType"
          }
        },
        "reservationPackages": {
          "description": "A Service object represents a non-functionSpaceDetails product provided to guests. Service products may have associated inventory and charges.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationPackageType"
          }
        },
        "reservationPaymentMethods": {
          "description": "A collection of Payment Method objects.",
          "$ref": "#/definitions/reservationPaymentMethodsType"
        },
        "reservationPolicies": {
          "description": "A collection of Cancellation Penalties objects.",
          "$ref": "#/definitions/reservationPoliciesType"
        },
        "reservationProfiles": {
          "description": "Collection of guests associated with the reservation.",
          "type": "object",
          "properties": {
            "commissionPayoutTo": {
              "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
              "$ref": "#/definitions/commissionPayoutToType"
            },
            "reservationProfile": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationProfileType"
              }
            }
          }
        },
        "reservationStatus": {
          "description": "Indicates the Actual status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "roomStay": {
          "description": "Room stays information.",
          "$ref": "#/definitions/roomStayType"
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "routingInstructions": {
          "description": "Set of Routing Instructions.",
          "$ref": "#/definitions/routingInfoListType"
        },
        "serviceRequests": {
          "description": "Collection of Service Requests available for that reservation",
          "$ref": "#/definitions/serviceRequests"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "shares": {
          "description": "Collection of share reservation available for that reservation",
          "$ref": "#/definitions/hotelReservationsType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "statisticalClassification": {
          "description": "Catering event information if reservation is associated with the catering event.",
          "$ref": "#/definitions/resStatClassificationType"
        },
        "tickets": {
          "description": "List of Reservation Tickets.",
          "$ref": "#/definitions/ticketsType"
        },
        "traces": {
          "description": "List of reservation Traces.",
          "$ref": "#/definitions/hotelReservationTracesType"
        },
        "trackItItems": {
          "description": "Collection of TrackIt Items available for that reservation",
          "$ref": "#/definitions/trackItItemsType"
        },
        "transactionDiversions": {
          "description": "List of transaction diversions attached to the reservation.",
          "type": "object",
          "properties": {
            "actionType": {
              "type": "string",
              "maxLength": 2000
            },
            "transactionDiversions": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationTransactionDiversionsType"
              }
            }
          }
        },
        "upgradeEligible": {
          "description": "Indicates whether the reservation is eligible for upgrade.",
          "type": "boolean"
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is no more in Waitlist status.",
          "$ref": "#/definitions/waitlistResType"
        },
        "walkIn": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "webRegistrationCards": {
          "description": "Collection of Web Registration Cards available for that reservation",
          "$ref": "#/definitions/attachmentsType"
        }
      }
    },
    "hotelReservationsType": {
      "description": "A collection of Reservation objects and Unique IDs of Reservation.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservation": {
          "description": "A collection of Reservations.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelReservationType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "housekeepingRoomStatusType": {
      "description": "Simple type for functionSpaceDetails status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
      "type": "string",
      "enum": [
        "Clean",
        "Dirty",
        "Pickup",
        "Inspected",
        "OutOfOrder",
        "OutOfService"
      ]
    },
    "housekeepingTaskCodeType": {
      "description": "Information related to a Task Code. Task Codes are used to generate task sheets in Rooms Management.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The Code for the task.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Task Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "facilityDepartureTask": {
          "description": "Indicates if this task code is the default departure task for Facility Tasks. This requires",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property where this task code is configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "instructions": {
          "description": "Instructions for this Task Code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "sequence": {
          "description": "Ordering sequence for display.",
          "type": "integer"
        }
      }
    },
    "imageSetType": {
      "description": "Represents on image set record.",
      "type": "object",
      "properties": {
        "chainCode": {
          "description": "The image set chain code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "The image set description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "The image set hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "imageOrder": {
          "description": "The image set order.",
          "type": "integer"
        },
        "imageSet": {
          "description": "The image set name.",
          "type": "string",
          "maxLength": 800,
          "minLength": 0
        },
        "imageStyle": {
          "description": "The image set enumerated style.",
          "$ref": "#/definitions/imageStyleType"
        },
        "imageType": {
          "description": "The image set type.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "imageURL": {
          "description": "The image set URL.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "sequenceId": {
          "description": "The image set sequence ID.",
          "type": "integer"
        },
        "website": {
          "description": "The image set website.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "imageStyleType": {
      "description": "An enumeration of image styles.",
      "type": "string",
      "enum": [
        "Full",
        "Thumbnail",
        "Icon",
        "Square",
        "Banner",
        "Button",
        "Lowres",
        "Highres"
      ]
    },
    "indicatorType": {
      "description": "Lamp indicator Type.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        },
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "indicatorsType": {
      "description": "Collection of lamp indicators.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "instanceLink": {
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "type": "object",
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ],
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "itemAttributeType": {
      "description": "Details of the Item Attribute.",
      "type": "object",
      "properties": {
        "default": {
          "description": "If true, it's the default Attribute for the Item.",
          "type": "boolean"
        },
        "itemAttributeId": {
          "description": "The ID of the Item Attribute.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "setdownTime": {
          "description": "The Setdown Time of the Item Attribute in minutes.",
          "type": "number"
        },
        "setupTime": {
          "description": "The Setup Time of the Item Attribute in minutes.",
          "type": "number"
        },
        "translatableName": {
          "description": "Translatable Name of the Item Attribute.",
          "$ref": "#/definitions/translationTextType200"
        }
      }
    },
    "itemAttributesType": {
      "description": "List of Item Attributes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/itemAttributeType"
      }
    },
    "itemInfoType": {
      "description": "Basic information regarding an Item.",
      "type": "object",
      "properties": {
        "availabilityPeriod": {
          "description": "Defines a Time period when the item is available.",
          "$ref": "#/definitions/timeWindowType"
        },
        "blockDates": {
          "description": "Date Range to get the inventories of the items.",
          "$ref": "#/definitions/timeSpanType"
        },
        "code": {
          "description": "Item Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "defaultDuration": {
          "description": "Define the default duration in days when booking the item.",
          "type": "integer"
        },
        "description": {
          "description": "Detail description of an item.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fixedCharge": {
          "description": "If true indicates that item has fixed charge when it is attached to a reservation.",
          "type": "boolean"
        },
        "itemHoldId": {
          "description": "ID reference for the hold Item",
          "type": "number"
        },
        "itemPool": {
          "description": "Indicates if it is an item pool. Not applicable for Item within the Item Pool.",
          "type": "boolean"
        },
        "name": {
          "description": "Name of an item.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "outsideStay": {
          "description": "If true indicates that item could be held outside of the reservation stay days.",
          "type": "boolean"
        },
        "quantity": {
          "description": "Quantity of hold Item",
          "type": "integer"
        },
        "requiredForBooking": {
          "description": "If true indicates that item is required for the reservation.",
          "type": "boolean"
        },
        "sellInEvent": {
          "description": "If true indicates that item can be sold in event.",
          "type": "boolean"
        },
        "sellInReservation": {
          "description": "If true indicates that item can be sold in reservation.",
          "type": "boolean"
        },
        "sellSeparate": {
          "description": "If true indicates that item is allowed to sell separately.",
          "type": "boolean"
        }
      }
    },
    "itemRateType": {
      "description": "Details of the Item Rate.",
      "type": "object",
      "properties": {
        "default": {
          "description": "If true, it's the default Rate for the Item.",
          "type": "boolean"
        },
        "hourly": {
          "description": "If true, it's hourly rate.",
          "type": "boolean"
        },
        "itemRateCode": {
          "description": "The Rate Code of the Item Rate.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "itemRateId": {
          "description": "The ID of the Item Rate.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "name": {
          "description": "The Name of the Item Rate.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "price": {
          "description": "The Price of the Item.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "itemRatesType": {
      "description": "List of Item Rates.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/itemRateType"
      }
    },
    "itemVendorType": {
      "description": "Details of the Item Vendor.",
      "type": "object",
      "properties": {
        "email": {
          "description": "The email address of the Vendor.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fax": {
          "description": "The fax number of the Vendor.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "leadTime": {
          "description": "Lead time for ordering.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "name": {
          "description": "The Name of the vendor.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "phone": {
          "description": "The phone number of the Vendor.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "price": {
          "description": "Purchase Price.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "priority": {
          "description": "The Priority of the Vendor.",
          "type": "number"
        },
        "profileId": {
          "description": "The ID of the vendor.",
          "$ref": "#/definitions/profileId"
        }
      }
    },
    "itemVendorsType": {
      "description": "List of Item Vendors.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/itemVendorType"
      }
    },
    "languageType": {
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "lightEventDetailType": {
      "description": "Light Event Details.",
      "type": "object",
      "properties": {
        "eventDetail": {
          "description": "Pertain event information.",
          "$ref": "#/definitions/eventDetailType"
        },
        "eventPrimaryInfo": {
          "description": "Pertain event primary information.",
          "$ref": "#/definitions/eventPrimaryInfoType"
        },
        "functionSpaceInformation": {
          "description": "Pertain event's function space information.",
          "$ref": "#/definitions/eventFunctionSpaceType"
        }
      }
    },
    "lightEventsDetailType": {
      "description": "Pertain event few information about events.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/lightEventDetailType"
      }
    },
    "linkedReservationInfoType": {
      "type": "object",
      "properties": {
        "allowedActions": {
          "description": "Collection of allowed actions for the linked reservation.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "blockDates": {
          "$ref": "#/definitions/timeSpanType"
        },
        "displayColor": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "functionSpaceDetails": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "givenName": {
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "guarantee": {
          "$ref": "#/definitions/resGuaranteeType"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "linkReservationType": {
          "$ref": "#/definitions/linkedReservationType"
        },
        "rate": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "ratePlanCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationBlock": {
          "description": "Key information about the block for the linked reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "reservationIdList": {
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationStatus": {
          "description": "Indicates the Actual status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "roomNumberLocked": {
          "description": "This attribute is to verify if functionSpaceDetails number is locked for the reservation. When true the functionSpaceDetails number cannot be changed",
          "type": "boolean"
        },
        "roomType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "suppressRate": {
          "description": "This attribute checks if rate is suppressed or not in order to properly show strike through.",
          "type": "boolean"
        },
        "surname": {
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "title": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "linkedReservationType": {
      "description": "Enumeration of the different Linked Reservation Types.",
      "type": "string",
      "enum": [
        "Linked",
        "Shared",
        "Default"
      ]
    },
    "linkedReservationsInfoType": {
      "description": "Linked Reservations.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "reservationInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/linkedReservationInfoType"
          }
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "logUserInfoType": {
      "type": "object",
      "properties": {
        "logDateTime": {
          "description": "User Log Changes Time Stamp details",
          "type": "string",
          "format": "date-time"
        },
        "userInfo": {
          "description": "User details for Log changes",
          "$ref": "#/definitions/userInfoType"
        }
      }
    },
    "manageAlternateEvents": {
      "description": "Request object for managing catering events those are alternate to other catering events.",
      "type": "object",
      "properties": {
        "alternateEvents": {
          "description": "Collection of alternate events to be managed.",
          "$ref": "#/definitions/eventsInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "manageAlternateEventsInstruction": {
          "description": "An instruction for managing catering events those are alternate to other catering events.",
          "$ref": "#/definitions/manageAlternateEventsInstructionType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "manageAlternateEventsInstructionType": {
      "description": "Collection of instructions for managing catering events those are alternate to other catering events.",
      "type": "string",
      "enum": [
        "Copy",
        "Delete",
        "ConvertToRegular"
      ]
    },
    "manageAlternateEventsStatus": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "manageEventsResources": {
      "description": "Object containing details for managing events resources.",
      "type": "object",
      "properties": {
        "eventDetails": {
          "description": "Event information.",
          "$ref": "#/definitions/eventsInfoType"
        },
        "eventItems": {
          "description": "Event items information",
          "$ref": "#/definitions/eventItemsType"
        },
        "eventMenus": {
          "description": "Event menus information.",
          "$ref": "#/definitions/eventMenusType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "manageWaitlistedEvents": {
      "description": "Request object for managing waitlisted catering events.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Search criteria for fetching waitlisted catering events.",
          "$ref": "#/definitions/waitlistedEventsSearchType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "processingInstructions": {
          "description": "Information to know how to process waitlisted catering events.",
          "$ref": "#/definitions/waitlistedEventProcessingInstructionsType"
        },
        "waitlistedEvents": {
          "description": "Information to manage waitlisted catering events.",
          "$ref": "#/definitions/waitlistedEventsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "marketCodeInfoType": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketGroup": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "masterAccountInfoType": {
      "type": "object",
      "properties": {
        "masterAccountId": {
          "description": "Unique ID of the Master account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "masterAccountName": {
          "description": "Name of the Master account.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "masterInfoCodeDetailType": {
      "type": "string",
      "enum": [
        "LongDescription",
        "ShortDescription"
      ]
    },
    "masterInfoType": {
      "type": "object",
      "properties": {
        "codeInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeInfoType"
          }
        },
        "codeType": {
          "$ref": "#/definitions/masterType"
        }
      }
    },
    "masterType": {
      "type": "string",
      "enum": [
        "Country",
        "State",
        "AddressType",
        "PhoneType",
        "RateCategory",
        "CalculationRule",
        "PostingRythym",
        "BillingInstruction",
        "TransactionCode",
        "DisplaySet",
        "MailingActions",
        "DistanceType",
        "District",
        "Territory",
        "FiscalRegion",
        "InventoryItem",
        "Package",
        "RoomFeaturePreference",
        "SpecialPreference",
        "Promotion",
        "Department",
        "ReservationPreference",
        "FacilityTask",
        "RoomType",
        "RateCode",
        "OutOfOrderReason",
        "Block"
      ]
    },
    "mealPlanCodeType": {
      "description": "Meal plan codes associated with the rate codes.",
      "type": "object",
      "properties": {
        "breakfastIncluded": {
          "description": "Represents if the meal plan code is available for breakfast or not.",
          "type": "boolean"
        },
        "code": {
          "description": "Meal plan code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "dinnerIncluded": {
          "description": "Represents if the meal plan code is available for dinner or not.",
          "type": "boolean"
        },
        "included": {
          "description": "Represents if the meal plan code is included in rate code or not.",
          "type": "boolean"
        },
        "lunchIncluded": {
          "description": "Represents if the meal plan code is available for lunch or not.",
          "type": "boolean"
        }
      }
    },
    "mealPlansType": {
      "description": "Meal plan codes associated with the rate codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/mealPlanCodeType"
      }
    },
    "membershipEarningPreferenceType": {
      "description": "The earning preference of a membership, it depends on the type of property. eg. when the property is a airline it should be Miles, other than Points.",
      "type": "string",
      "enum": [
        "Points",
        "Miles"
      ]
    },
    "membershipInfoType": {
      "description": "The Membership object identifies the frequent customer reward program.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The account identification number for this particular member in this particular program.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "bonusCode": {
          "description": "The code or name of the bonus program. BonusCode can be used to indicate the level of membership (Gold Club, Platinum member, etc.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipId": {
          "description": "Membership ID (Unique ID from the memberships table).",
          "type": "number"
        },
        "membershipLevel": {
          "description": "The code or name of the membership level and indicates the level of membership (Gold Club, Platinum member, etc.). This is same as the BonusCode.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipLevelDesc": {
          "description": "The description of the Bonus Code.(Platinum for code P)",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "membershipTypeDesc": {
          "description": "The description of the ProgramCode.(Delta Previlige for code DP)",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "programCode": {
          "description": "The code or name of the membership program ('Hertz', 'AAdvantage', etc.).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "membershipType": {
      "description": "Detailed information of the memberships.",
      "type": "object",
      "properties": {
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        }
      }
    },
    "membershipTypeLevelType": {
      "type": "object",
      "properties": {
        "level": {
          "description": "Description type for Rule Details",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Code type for Rule Details",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "menuTypeType": {
      "description": "Defines values for Menu Type",
      "type": "string",
      "enum": [
        "Food",
        "Beverage"
      ]
    },
    "messageDeliveryType": {
      "description": "Holds the Delivery Information of the Message",
      "type": "object",
      "properties": {
        "deliveredBy": {
          "description": "User who delivered the message (who marked message as received)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "deliveryDate": {
          "description": "Date the message has been delivered (marked as received)",
          "type": "string",
          "format": "date-time"
        },
        "deliveryStatus": {
          "description": "Status of the Message (Received or Not Received)",
          "$ref": "#/definitions/messageStatusType"
        },
        "printDate": {
          "description": "Date when message has been printed",
          "type": "string",
          "format": "date-time"
        },
        "textMessageRecipientNo": {
          "description": "Number in which the message is to be sent.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "textMessageSentBy": {
          "description": "User who sent the message",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "textMessageSentById": {
          "description": "User Id of who sent the message",
          "type": "integer"
        },
        "textMessageSentDate": {
          "description": "Date when message has been sent via SMS",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "messageStatusType": {
      "description": "Status of the Message.",
      "type": "string",
      "enum": [
        "Mr",
        "Nr"
      ]
    },
    "messageType": {
      "description": "Holds the Message Information",
      "type": "object",
      "properties": {
        "messageDate": {
          "description": "Date the message was created",
          "type": "string",
          "format": "date-time"
        },
        "messageText": {
          "description": "Message Content",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "operator": {
          "description": "User who created the Message",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "recipient": {
          "description": "Recipient of the Message",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "typeOfMessage": {
          "description": "Type of message (Voice/Text)",
          "$ref": "#/definitions/typeOfMessageType"
        }
      }
    },
    "namePrefixType": {
      "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "nameTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Agent",
        "Contact",
        "Source",
        "Group",
        "Employee",
        "Hotel",
        "Purge"
      ]
    },
    "nameValueDataTypeType": {
      "type": "string",
      "enum": [
        "String",
        "Number",
        "Date",
        "Datetime",
        "Time",
        "Integer"
      ]
    },
    "nameValueDetailType": {
      "description": "Detailed information returned during name value search.",
      "type": "object",
      "properties": {
        "nameValues": {
          "description": "Name Value List.",
          "$ref": "#/definitions/nameValuesType"
        }
      }
    },
    "nameValueModuleType": {
      "type": "string",
      "enum": [
        "Reservation",
        "Folio",
        "Profile",
        "Fintrix"
      ]
    },
    "nameValueOriginType": {
      "description": "Contains origin details.",
      "type": "object",
      "properties": {
        "destination": {
          "description": "Contains destination column for Origin.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "originName": {
          "description": "Contains origin i.e. Reseravtion, Profile, Folio or FinTrx.",
          "$ref": "#/definitions/nameValueModuleType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "nameValueType": {
      "description": "Contains name value pair.",
      "type": "object",
      "properties": {
        "dataType": {
          "description": "Contains data type for values.",
          "$ref": "#/definitions/nameValueDataTypeType"
        },
        "formatString": {
          "description": "Contains format string for values.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "name": {
          "description": "Contains unique key which represents for record field.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "origin": {
          "description": "Contains Origin information.",
          "$ref": "#/definitions/nameValueOriginType"
        },
        "usageInstruction": {
          "description": "Contains value(s) to identify the reports to include the collected information in e.g. PFH=Print Folio Header, PFD=Print Folio Detail.",
          "$ref": "#/definitions/codeListType"
        },
        "value": {
          "description": "Contains value for the record/column.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        }
      }
    },
    "nameValuesType": {
      "description": "List of name value pairs.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/nameValueType"
      }
    },
    "numericUDFType": {
      "description": "Used to hold user defined field of Numeric Type. It is highly recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "name": {
          "description": "Name of user defined field.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "number"
        }
      }
    },
    "numericUDFsType": {
      "description": "Used to hold collection of user defined fields of Numeric Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/numericUDFType"
      }
    },
    "offsetUnitType": {
      "description": "Indicates deadline offset unit type.",
      "type": "string",
      "enum": [
        "Year",
        "Month",
        "Day",
        "Hour"
      ]
    },
    "operaVersionNumberType": {
      "description": "Current Opera Version Number",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "opportunityBlockInfoType": {
      "description": "Opportunity Block Information",
      "type": "object",
      "properties": {
        "blockId": {
          "description": "Unique Id that references an object uniquely in the system.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "blockTimeSpan": {
          "description": "Opportunity Block duration from blockStartDate and blockEndDate date and time.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "hotelId": {
          "description": "Unique Id that references an object uniquely in the system.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "opportunityEventDetailType": {
      "description": "Information about the Catering Event which will be added to the Opportunity Block",
      "type": "object",
      "properties": {
        "attendees": {
          "description": "Attendees defined for the catering event.",
          "$ref": "#/definitions/cateringEventsAttendeesType"
        },
        "day": {
          "description": "Identifies the days for which catering events will be added to the Opportunity Block.",
          "type": "string"
        },
        "doorcard": {
          "description": "It is the group details to display on the outside of a meeting functionSpace Details.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "eventName": {
          "description": "Name of event.",
          "$ref": "#/definitions/translationTextType60"
        },
        "eventStatus": {
          "description": "Status of the Event.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "eventTimeSpan": {
          "description": "Event duration from eventStartDate and eventEndDate date and time.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "eventType": {
          "description": "Type of event.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "quantity": {
          "description": "Identifies the quantity of the event type needed for the particular day, time and space time.",
          "type": "number"
        }
      }
    },
    "opportunityEventInfoType": {
      "description": "Catering Event information.",
      "type": "object",
      "properties": {
        "eventNotes": {
          "description": "Event's notes.",
          "$ref": "#/definitions/eventNotesType"
        },
        "opportunityEventDetail": {
          "description": "Detail opportunity event's information.",
          "$ref": "#/definitions/opportunityEventDetailType"
        }
      }
    },
    "opportunityEvents": {
      "description": "Object containing details of the catering events which will be added to the Opportunity Block.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "opportunityBlockInfo": {
          "description": "opportunityBlockInfo",
          "$ref": "#/definitions/opportunityBlockInfoType"
        },
        "opportunityEventDetails": {
          "description": "Catering Event information getting added for Opportunity Block.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/opportunityEventInfoType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "overrideInstructionType": {
      "description": "Type for Overrides. Contains information for the override action performed while booking a reservation.",
      "type": "object",
      "properties": {
        "date": {
          "description": "The date when the override was done.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "description": {
          "description": "The description of the restriction for which the override was done.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "type": {
          "description": "The type of override done. If done for Availability, then it will be AVAILABILITY.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "userId": {
          "description": "Login ID of the user who performed the override.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "overrideInstructionsType": {
      "description": "List of override actions done.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/overrideInstructionType"
      }
    },
    "ownerResTypeType": {
      "type": "string",
      "enum": [
        "Owner",
        "AuthorizedUser"
      ]
    },
    "ownerType": {
      "description": "Generic type for information about an owner.",
      "type": "object",
      "properties": {
        "department": {
          "description": "Department to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "email": {
          "description": "Email information of the owner.",
          "$ref": "#/definitions/emailInfoType"
        },
        "hotel": {
          "description": "Hotel to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "name": {
          "description": "Provides name information of the owner.",
          "$ref": "#/definitions/personNameType"
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phone": {
          "description": "Information on the telephone number of the owner.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "primary": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        },
        "profileId": {
          "description": "Unique owner profile information.",
          "$ref": "#/definitions/profileId"
        },
        "relationship": {
          "description": "Relationship of the owner within the profile or block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "userId": {
          "description": "Unique application user ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "userName": {
          "description": "Unique application user name of the owner.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "pMS_ResStatusType": {
      "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "type": "string",
      "enum": [
        "Reserved",
        "Requested",
        "NoShow",
        "Cancelled",
        "InHouse",
        "CheckedOut",
        "Waitlisted",
        "DueIn",
        "DueOut",
        "Walkin",
        "PendingCheckout"
      ]
    },
    "packageCalculationRuleType": {
      "description": "Simple type for package caluculation rules.",
      "type": "string",
      "enum": [
        "FlatRate",
        "PerPerson",
        "PerAdult",
        "PerChild",
        "PerRoom"
      ]
    },
    "packageCodeHeaderType": {
      "type": "object",
      "properties": {
        "postingAttributes": {
          "description": "Package code posting attributes.",
          "$ref": "#/definitions/configPostingAttributesType"
        },
        "primaryDetails": {
          "description": "Package code header primary details.",
          "$ref": "#/definitions/configPackagePrimaryDetailsType"
        },
        "transactionDetails": {
          "description": "Package code header transaction information.",
          "$ref": "#/definitions/configPackageTransactionType"
        },
        "usageDetails": {
          "description": "Package code usage information.",
          "$ref": "#/definitions/configPackageUsageDetailType"
        }
      }
    },
    "packageConsumptionType": {
      "description": "Package Consumption Information. Includes information on quantity of the package used, allowance consumption etc.",
      "type": "object",
      "properties": {
        "allowanceConsumed": {
          "description": "Indicates if Allowance(for POS packages) has been consumed/posted for today.",
          "type": "boolean"
        },
        "defaultQuantity": {
          "description": "The default quantity attached in the package.",
          "type": "integer"
        },
        "excludedQuantity": {
          "description": "The quantity which has been excluded in the package.",
          "type": "integer"
        },
        "totalQuantity": {
          "description": "The total quantity of the package, calculated based on the calculation rule as defined in the PackageHeaderType.",
          "type": "integer"
        }
      }
    },
    "packageElementType": {
      "type": "object",
      "properties": {
        "addRateCombinedLine": {
          "type": "boolean"
        },
        "addRateSeprateLine": {
          "type": "boolean"
        },
        "allowance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "amount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "calculationRule": {
          "type": "string"
        },
        "description": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          }
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endTime": {
          "type": "string"
        },
        "includedInRate": {
          "type": "boolean"
        },
        "packageCode": {
          "type": "string"
        },
        "postingRhythm": {
          "type": "string"
        },
        "quantity": {
          "type": "integer"
        },
        "sellSeparate": {
          "type": "boolean"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "startTime": {
          "type": "string"
        }
      }
    },
    "packagePostingRhythmType": {
      "description": "Package Posting rhythm type.",
      "type": "object",
      "properties": {
        "certainNightsOfTheWeek": {
          "description": "Post the package on certain nights of the week.",
          "type": "object",
          "properties": {
            "friday": {
              "type": "boolean"
            },
            "monday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            },
            "sunday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            }
          }
        },
        "customNightSchedule": {
          "description": "The eventStartDate and eventEndDate of the posting period is determined as follows: If the package is attached to a rate code: The period starts with the date when the rate code to which the package is attached becomes effective for the stay. The period ends with the date of the last night for that rate code (or the last night of the stay if the rate code remains in effect until the departure date). If the package is attached separately to the reservation: The Begin Date specified on the reservation when the package was attached is the eventStartDate date for the period. The End Date specified on the reservation when the package was attached is the eventEndDate date for the period. If no Begin Date and/or End Date are specified when the package is attached to the reservation, the Begin Date is assumed to be the arrival date and the End Date is assumed to be the departure date of the reservation, irrespective of when the package is attached to the reservation.",
          "type": "object",
          "properties": {
            "night1": {
              "description": "Night 1 indicator.",
              "type": "boolean"
            },
            "night10": {
              "description": "Night 10 indicator.",
              "type": "boolean"
            },
            "night11": {
              "description": "Night 11 indicator.",
              "type": "boolean"
            },
            "night12": {
              "description": "Night 12 indicator.",
              "type": "boolean"
            },
            "night13": {
              "description": "Night 13 indicator.",
              "type": "boolean"
            },
            "night14": {
              "description": "Night 14 indicator.",
              "type": "boolean"
            },
            "night2": {
              "description": "Night 2 indicator.",
              "type": "boolean"
            },
            "night3": {
              "description": "Night 3 indicator.",
              "type": "boolean"
            },
            "night4": {
              "description": "Night 4 indicator.",
              "type": "boolean"
            },
            "night5": {
              "description": "Night 5 indicator.",
              "type": "boolean"
            },
            "night6": {
              "description": "Night 6 indicator.",
              "type": "boolean"
            },
            "night7": {
              "description": "Night 7 indicator.",
              "type": "boolean"
            },
            "night8": {
              "description": "Night 8 indicator.",
              "type": "boolean"
            },
            "night9": {
              "description": "Night 9 indicator.",
              "type": "boolean"
            }
          }
        },
        "customStaySchedule": {
          "description": "This user defined schedule lets you enter a posting rhythm over a 14-day period, starting with the arrival date, by assigning the day (number) within a guest stay for posting this package price.",
          "type": "object",
          "properties": {
            "night1": {
              "description": "Night 1 indicator.",
              "type": "boolean"
            },
            "night10": {
              "description": "Night 10 indicator.",
              "type": "boolean"
            },
            "night11": {
              "description": "Night 11 indicator.",
              "type": "boolean"
            },
            "night12": {
              "description": "Night 12 indicator.",
              "type": "boolean"
            },
            "night13": {
              "description": "Night 13 indicator.",
              "type": "boolean"
            },
            "night14": {
              "description": "Night 14 indicator.",
              "type": "boolean"
            },
            "night2": {
              "description": "Night 2 indicator.",
              "type": "boolean"
            },
            "night3": {
              "description": "Night 3 indicator.",
              "type": "boolean"
            },
            "night4": {
              "description": "Night 4 indicator.",
              "type": "boolean"
            },
            "night5": {
              "description": "Night 5 indicator.",
              "type": "boolean"
            },
            "night6": {
              "description": "Night 6 indicator.",
              "type": "boolean"
            },
            "night7": {
              "description": "Night 7 indicator.",
              "type": "boolean"
            },
            "night8": {
              "description": "Night 8 indicator.",
              "type": "boolean"
            },
            "night9": {
              "description": "Night 9 indicator.",
              "type": "boolean"
            }
          }
        },
        "everyXNightsStartingNightY": {
          "description": "Post the package every X nights Staring from Night Y.",
          "type": "object",
          "properties": {
            "postEveryXNights": {
              "description": "Occurance of nights when the package needs to be posted and consumed.",
              "type": "integer"
            },
            "startOnNightY": {
              "description": "Starting night for consumption and posting prices.",
              "type": "integer"
            }
          }
        },
        "type": {
          "description": "Posting Rhythm for the package.",
          "$ref": "#/definitions/postingRhythmType"
        }
      }
    },
    "packagePostingRulesType": {
      "type": "object",
      "properties": {
        "alternateCodesList": {
          "description": "The alternate transaction code that can be consumed by the guest in place of the transaction code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/packageTransactionCodeType"
          }
        },
        "lossCode": {
          "description": "The transaction code to record package Loss, if any, from un-consumed allowance.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "overageCode": {
          "description": "The overage code to record over consumed allowance.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "profitCode": {
          "description": "The transaction code to record package profit, if any, from un-consumed allowance.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "transactionCode": {
          "description": "The Transaction code used to post the package price.",
          "$ref": "#/definitions/packageTransactionCodeType"
        }
      }
    },
    "packageTransactionCodeType": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Posting / transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "The description of the code.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "type": {
          "description": "Code is inclusive or exclusive of other chanrges such as taxes.",
          "$ref": "#/definitions/amountDeterminationType"
        }
      }
    },
    "paragraphType": {
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "type": "object",
      "properties": {
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        }
      }
    },
    "parameterType": {
      "description": "Name value pair type that will hold generic parameter information. Only use this type when the parameters being passed are too dynamic to be defined.",
      "type": "object",
      "properties": {
        "parameterName": {
          "description": "Name of the parameter.",
          "type": "string"
        },
        "parameterValue": {
          "description": "Value of the parameter.",
          "type": "string"
        }
      }
    },
    "parametersType": {
      "description": "Collection of generic Name-Value-Pair parameters.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/parameterType"
      }
    },
    "payeeInfoType": {
      "description": "Payee information.",
      "type": "object",
      "properties": {
        "payeeAccountInfo": {
          "description": "AR account short info of the payee.",
          "$ref": "#/definitions/aRAccountShortInfoType"
        },
        "payeeAddress": {
          "description": "Address of the payee.",
          "$ref": "#/definitions/addressInfoType"
        },
        "payeeAddressCount": {
          "description": "Payee multiple address count.",
          "type": "integer"
        },
        "payeeId": {
          "description": "Opera name id of the payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "payeeName": {
          "description": "Name of the payee.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "payeeReferenceCurrency": {
          "description": "Reference currency of the payee.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "payeeTaxNumber": {
          "description": "The tax number of the payee.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "personNameType": {
      "description": "This provides name information for a person.",
      "type": "object",
      "properties": {
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "nameTitleSuffix": {
          "description": "Title Suffix. Must be populated if ADVANCED_TITLE is on.",
          "type": "integer"
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        },
        "surname": {
          "description": "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname elementSpace may be used to pass the full name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "personNameTypeType": {
      "description": "Person's name in an external system.",
      "type": "string",
      "enum": [
        "Primary",
        "Alternate",
        "Incognito",
        "External",
        "Phonetic"
      ]
    },
    "phoneNumberType": {
      "description": "Phone number",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "pkgInventoryItemType": {
      "type": "object",
      "properties": {
        "articleNumber": {
          "description": "Article Number of the inventory item.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the inventory item.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "itemId": {
          "description": "Identifier for the inventory item.",
          "type": "integer"
        },
        "quantity": {
          "description": "Quantity of the inventory item allocated to the package.",
          "type": "integer"
        }
      }
    },
    "pointsType": {
      "description": "The Redeem Points contains the number of points required to book a functionSpaceDetails type.",
      "type": "object",
      "properties": {
        "awardsType": {
          "description": "Awards type for the award type rate code.",
          "type": "string"
        },
        "points": {
          "description": "No of points required to book this Room Stay.",
          "type": "integer"
        }
      }
    },
    "policyAmountPercentType": {
      "description": "Defines the percentage basis for calculating the fee amount or the amount.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "basisType": {
          "description": "Provides the basis for how the amount of the guarantee is calculated.",
          "$ref": "#/definitions/policyBasisTypeType"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "nights": {
          "description": "The number of nights of the hotel stay that are used to calculate the fee amount.",
          "type": "integer"
        },
        "percent": {
          "description": "The percentage used to calculate the amount.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        }
      }
    },
    "policyBasisTypeType": {
      "description": "Full Amount.",
      "type": "string",
      "enum": [
        "FlatAmount",
        "Percentage",
        "Nights",
        "NightPercentage",
        "FullAmount"
      ]
    },
    "policyDeadlineType": {
      "description": "Cancellation deadline, absolute or relative.",
      "type": "object",
      "properties": {
        "absoluteDeadline": {
          "description": "Defines the absolute deadline. Either this or the offset attributes may be used.",
          "type": "string",
          "format": "date-time"
        },
        "offsetDropTime": {
          "description": "Time on offset day the cancellation penalties applies.",
          "type": "string",
          "format": "date-time"
        },
        "offsetFromArrival": {
          "description": "The number of days before arrival that allows cancellation without penalties.",
          "type": "integer"
        },
        "offsetFromBookingDate": {
          "description": "The number of days after booking deposit must be paid.",
          "type": "integer"
        }
      }
    },
    "postingRhythmType": {
      "description": "Simple type for posting Rhythm types.",
      "type": "string",
      "enum": [
        "EveryNight",
        "ArrivalNight",
        "EveryXNightsStartingNightY",
        "CertainNightsOfTheWeek",
        "LastNight",
        "EveryNightExceptArrivalNight",
        "EveryNightExceptLast",
        "EveryNightExceptFirstAndLast",
        "CustomStaySchedule",
        "CustomNightSchedule",
        "FloatingAllowancePerStay",
        "TicketPosting"
      ]
    },
    "preferenceType": {
      "description": "Guest Preference details for the profile.",
      "type": "object",
      "properties": {
        "copyToProfile": {
          "description": "Specifies whether to copy the reservation preference to the profile or not.",
          "type": "boolean"
        },
        "description": {
          "description": "Preference Description for display purposes.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "excludedPreferencesCount": {
          "description": "Specifies the count of preferences excluded for the attached reservation preference.",
          "type": "integer"
        },
        "global": {
          "description": "Whether this preference is property specific or not.",
          "type": "boolean"
        },
        "hotels": {
          "description": "If specified preference belongs to the Hotels listed, otherwise it is a global preference.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "preferenceId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferenceValue": {
          "description": "Preference value for display purposes.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "source": {
          "description": "Source of the preference.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "preferenceTypeType": {
      "description": "Preference details for the profile.",
      "type": "object",
      "properties": {
        "availableQuantity": {
          "description": "Available quantity of preferences (maximum quantity - Existing preferences)per preference group.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "maxQuantity": {
          "description": "Maximum quantity of preferences allowed per preference group.",
          "type": "integer"
        },
        "maxResortUsedQuantity": {
          "description": "Maximum quantity of preferences used by any resort per preference group.",
          "type": "integer"
        },
        "preference": {
          "description": "Collection of Preferences for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferenceType"
          }
        },
        "preferenceType": {
          "description": "Preference group code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferenceTypeDescription": {
          "description": "Preference group description.",
          "type": "string"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationPreference": {
          "description": "Whether this preference is reservation preference or not.",
          "type": "boolean"
        },
        "sequence": {
          "description": "Preference Sequence.",
          "type": "string"
        }
      }
    },
    "prepaidCardDetailsType": {
      "description": "Prepaid Card Details.",
      "type": "object",
      "properties": {
        "activateDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "balanceTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "creditTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "expiredDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "initialCreditTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "initialLoadDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservedTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactions": {
          "description": "Holds fixed charge detail.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/prepaidCardTransactionType"
          }
        },
        "validUntilDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "prepaidCardTransactionType": {
      "description": "Prepaid Card transaction.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Prepaid Card Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionDate": {
          "description": "Transaction number of the Prepaid card transaction.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionNo": {
          "description": "Transaction number of the Prepaid card transaction.",
          "type": "number"
        },
        "transactionType": {
          "description": "Transaction type enumeration.",
          "$ref": "#/definitions/prepaidCardTrxTypeType"
        }
      }
    },
    "prepaidCardTrxTypeType": {
      "description": "Reload transaction.",
      "type": "string",
      "enum": [
        "Activate",
        "Cancel",
        "Cashout",
        "Inquiry",
        "Issue",
        "Redeem",
        "Reload"
      ]
    },
    "prepaidCardType": {
      "description": "Holds fixed charge information.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Prepaid Card Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cardDetails": {
          "description": "Prepaid Card details from vendor.",
          "$ref": "#/definitions/prepaidCardDetailsType"
        },
        "cardNo": {
          "description": "Prepaid card / account number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberMasked": {
          "description": "Masked Prepaid card / account number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "firstName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "giftCard": {
          "description": "Indicates a gift card type.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel context for the Reservations.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "interfaceId": {
          "description": "The unique ID for the Interface.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Family name, last name or Company Name.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "pinCode": {
          "description": "Prepaid card pin code.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "profileId": {
          "description": "Card / Account holder name ID",
          "$ref": "#/definitions/profileId"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationId": {
          "description": "The unique ID of the reservation to which this record applies.",
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "prepaidCardsType": {
      "description": "Holds fixed charge detail.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/prepaidCardType"
      }
    },
    "primaryShareTypeType": {
      "type": "string",
      "enum": [
        "Primary",
        "NonPrimary"
      ]
    },
    "productSourceType": {
      "description": "Sources of Products",
      "type": "string",
      "enum": [
        "Reservation",
        "RateHeader",
        "RateDetail"
      ]
    },
    "profileCashieringDetailType": {
      "description": "The type contains routing instructions for the profile.",
      "type": "object",
      "properties": {
        "eCommerceId": {
          "description": "E-Commerce ID of the Profile",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "fiscalGuestType": {
          "description": "Guest type code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code for which the routing instructions are provided for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "paymentMethod": {
          "description": "Payment Method Details.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "routingInstructions": {
          "description": "Set of preconfigured transaction codes.",
          "$ref": "#/definitions/profileRoutingInstructionsType"
        },
        "taxType": {
          "description": "Tax type code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "profileId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "profileIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "profileRoutingInstructionsType": {
      "description": "The type contains routing instructions for the profile.",
      "type": "object",
      "properties": {
        "autoPopulateRouting": {
          "description": "A flag which determines whether the instructions has to be automatically populated for this profile or not.",
          "type": "boolean"
        },
        "billingInstructions": {
          "description": "Set of preconfigured Billing Instruction results.",
          "$ref": "#/definitions/billingInstructionsType"
        },
        "transactionCodes": {
          "description": "Set of preconfigured transaction codes.",
          "$ref": "#/definitions/trxCodesInfoType"
        }
      }
    },
    "profileStatusType": {
      "type": "string",
      "enum": [
        "Active",
        "Inactive"
      ]
    },
    "profileType": {
      "description": "Type provides the detailed information about the profile and its children.",
      "type": "object",
      "properties": {
        "addresses": {
          "description": "List of customer addresses.",
          "type": "object",
          "properties": {
            "addressInfo": {
              "description": "Collection of Detailed information on an address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/addressInfoType"
              }
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "comments": {
          "description": "List of Notes for the customer.",
          "type": "object",
          "properties": {
            "commentInfo": {
              "description": "Collection of Detailed information on comments for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/commentInfoType"
              }
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "company": {
          "description": "Detailed company information for this profile.",
          "$ref": "#/definitions/companyType"
        },
        "customer": {
          "description": "Detailed customer information for this profile.",
          "$ref": "#/definitions/customerType"
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "ownerCode": {
          "description": "Owner Code associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "profileImage": {
          "description": "The profile image.",
          "$ref": "#/definitions/imageSetType"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "registeredProperty": {
          "description": "Hotel which this profile is registered with. This attribute is not used for configuration.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "relationships": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "relationship": {
              "description": "A collection of the profiles that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "relationshipsSummary": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "relationship": {
              "description": "A collection of the profiles summary that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoSummaryType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "requestForHotel": {
          "description": "Hotel which this profile is to be registered. This attribute is only used during creation of profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomOwnershipsList": {
          "description": "Room Ownership records.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "roomOwnershipInfo": {
              "description": "Collection of Detailed information on Room Ownership records.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/roomOwnershipType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "showInactiveRoomOwners": {
          "description": "Flag to show inactive Room Owners.",
          "type": "boolean"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "stayReservationInfoList": {
          "description": "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref": "#/definitions/reservationStayHistoryFutureInfoType"
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "uRLs": {
          "description": "List of Information on a URL for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "uRLInfo": {
              "description": "Collection of Detailed information on web url/address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/uRLInfoType"
              }
            }
          }
        }
      }
    },
    "profileTypeType": {
      "description": "The types of Profile handled by the web service.",
      "type": "string",
      "enum": [
        "Guest",
        "Agent",
        "Company",
        "Group",
        "Source",
        "Employee",
        "Hotel",
        "Vendor",
        "Contact",
        "Purge",
        "BusinessHeader",
        "BillingAccount",
        "Activity",
        "Potential",
        "Account"
      ]
    },
    "promotionType": {
      "description": "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation.",
      "type": "object",
      "properties": {
        "couponCode": {
          "description": "Promotion Coupon Code when promotion is setupCode to have a valid coupon code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "promotionCode": {
          "description": "Promotion code associated with the rate plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "promotionName": {
          "description": "Promotion code Name associated with the rate plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "queueTextInfoType": {
      "description": "Information regarding the message sent to guest.",
      "type": "object",
      "properties": {
        "sentBy": {
          "description": "User name of the user who sent message.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "sentTime": {
          "description": "Time the text was last sent to the user.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "quickInsertResourceListType": {
      "description": "Collection of quick insert resource(s).",
      "type": "object",
      "properties": {
        "eventId": {
          "description": "Event ID for which menu, item or item template will be associated to.",
          "$ref": "#/definitions/eventId"
        },
        "hotelId": {
          "description": "Hotel code where menu(s) or item(s) or template(s) will be added.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "quickInsertResourceInfo": {
          "description": "Quick insert resource type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/quickInsertResourceType"
          }
        }
      }
    },
    "quickInsertResourceStatus": {
      "description": "Status/Info of the processed resource(s).",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "quickinsertResourcesProcessedInfo": {
          "$ref": "#/definitions/copyCateringEventsProcessedInfoList"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "quickInsertResourceType": {
      "description": "Quick insert resource type.",
      "type": "object",
      "properties": {
        "includeInPackage": {
          "description": "Flag to indicate if menu, item or item template is part of a package.",
          "type": "boolean"
        },
        "quantity": {
          "description": "Quantity of the menu, item or item template.",
          "type": "number"
        },
        "quickInsertText": {
          "description": "Text that represents quick insert number of menu, item or item template name.",
          "type": "string"
        }
      }
    },
    "quickInsertResources": {
      "description": "Request object to add resource on an event in a hotel.",
      "type": "object",
      "properties": {
        "quickInsertResourceListInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/quickInsertResourceListType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "rateProtectionType": {
      "description": "Simple type for specifying the block protection type.",
      "type": "string",
      "enum": [
        "All",
        "Selected",
        "None"
      ]
    },
    "rateRangeType": {
      "description": "Rate Range details like maximum rate amount and minimum rate amount in each available rate category.",
      "type": "object",
      "properties": {
        "base": {
          "description": "The base amount charged for the accommodation or service.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/totalType"
          }
        },
        "rateChange": {
          "description": "Rate Change Indicator.",
          "type": "boolean"
        }
      }
    },
    "ratesType": {
      "description": "Individual rate amount.",
      "type": "object",
      "properties": {
        "rate": {
          "description": "The Rate contains a collection of elements that define the amount of the rate, associated fees, additional occupant amounts. Taxes can be broken out or included within the various amounts. A currency can be associated to each amount.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/amountType"
          }
        },
        "rateRange": {
          "description": "Rate Range details like maximum rate amount and minimum rate amount in each available rate category.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/rateRangeType"
          }
        }
      }
    },
    "relationshipAddressType": {
      "description": "Provides address information for a Relationship.",
      "type": "object",
      "properties": {
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "maxLength": 80,
            "minLength": 0
          }
        },
        "city": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "relationshipInfoSummaryType": {
      "description": "RelationshipInfoSummaryType contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles.",
      "type": "object",
      "properties": {
        "masterAccountDetails": {
          "description": "Refer to Master Profile type document.",
          "$ref": "#/definitions/masterAccountInfoType"
        },
        "relationshipID": {
          "description": "Relationship identifier.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "relationshipProfile": {
          "description": "Refer to Relationship Profile Summary type document.",
          "$ref": "#/definitions/relationshipProfileSummaryType"
        },
        "sourceRelation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceRelationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "relationshipInfoType": {
      "description": "Relationship Type contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles.",
      "type": "object",
      "properties": {
        "changeRelationship": {
          "description": "Information about the changes in relationship for the profile",
          "$ref": "#/definitions/changeRelationsType"
        },
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "masterAccountInfo": {
          "description": "Refer to Master Profile type document.",
          "$ref": "#/definitions/masterAccountInfoType"
        },
        "relation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "relationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "relationshipProfile": {
          "description": "Refer to Relationship Profile type document.",
          "$ref": "#/definitions/relationshipProfileType"
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "relationshipProfileSummaryType": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Information on address details for the customer/company",
          "$ref": "#/definitions/relationshipAddressType"
        },
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "customerName": {
          "description": "Name of the customer",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "boolean"
        },
        "primaryOwnerCode": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        },
        "profileIdList": {
          "description": "Original profile details for which the relationships was created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "profileStatus": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "telephoneNumber": {
          "description": "Telephone number assigned to a single location",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "relationshipProfileType": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Information on address details for the customer/company",
          "$ref": "#/definitions/addressInfoType"
        },
        "changeProfileIdList": {
          "description": "Updated/changed profile details for the relationships created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "company": {
          "description": "Detailed information of the Company.",
          "$ref": "#/definitions/companyType"
        },
        "customer": {
          "description": "Detailed information of the customer",
          "$ref": "#/definitions/customerType"
        },
        "email": {
          "description": "Information on email address for the customer/company",
          "$ref": "#/definitions/emailInfoType"
        },
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "primaryOwner": {
          "description": "Primary Owner of the profile",
          "$ref": "#/definitions/ownerType"
        },
        "profileIdList": {
          "description": "Original profile details for which the relationships was created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "telephone": {
          "description": "Information on telephone details for the customer/company",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "uRLs": {
          "description": "Information on web url/address for the customer/company",
          "$ref": "#/definitions/uRLInfoType"
        }
      }
    },
    "requestActionType": {
      "type": "string",
      "enum": [
        "Create",
        "Remove",
        "Query"
      ]
    },
    "resAccessRestrictionType": {
      "description": "Indicates any Updates/Changes on the reservation as well as Reservation Cancellation are not allowed.",
      "type": "string",
      "enum": [
        "Change",
        "Cancel",
        "ChangeOrCancel"
      ]
    },
    "resAccompanyGuestInfoType": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "resAccompanyGuestListType": {
      "description": "Collection of accompany guests",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAccompanyGuestInfoType"
      }
    },
    "resAttachedProfileListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAttachedProfileType"
      }
    },
    "resAttachedProfileType": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Attached profile name",
          "type": "string"
        },
        "profileIdList": {
          "description": "Collection of unique profile identifiers",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "resAwardsType": {
      "description": "Membership Awards code applied on the reservation.",
      "type": "object",
      "properties": {
        "awardVouchers": {
          "$ref": "#/definitions/awardVouchersType"
        },
        "membershipNo": {
          "description": "Membership program under which the award is applied.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "originalRoomType": {
          "description": "Room Type before the Upgrade Award.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "upgradeRoomType": {
          "description": "Room Type after the Upgrade Award.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resCancelPenaltyType": {
      "description": "The CancelPenalty class defines the cancellation policy of the hotel facility.",
      "type": "object",
      "properties": {
        "amountPercent": {
          "description": "Cancellation fee expressed as a fixed amount, or percentage of/or functionSpaceDetails nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "deadline": {
          "description": "Cancellation deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "effective": {
          "description": "Indicator if Cancellation Penalty is currently applicable or not.",
          "type": "boolean"
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the Cancellation Penalty.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        },
        "nonRefundable": {
          "description": "Indicates if the amount is refundable if booking is canceled.",
          "type": "boolean"
        },
        "offsetUnit": {
          "$ref": "#/definitions/offsetUnitType"
        },
        "penaltyDescription": {
          "description": "Text description of the Penalty in a given language.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "policyCode": {
          "description": "Policy Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resCancellationPoliciesType": {
      "description": "A list of reservation cancellation policies.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resCancellationPolicyType"
      }
    },
    "resCancellationPolicyType": {
      "description": "A cancellation policy attached with the reservation.",
      "type": "object",
      "properties": {
        "comments": {
          "description": "Comments attached with the reservation cancellation.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "percentageDue": {
          "description": "The percentage amount due for reservation cancellation.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "policy": {
          "description": "Cancellation policy details.",
          "$ref": "#/definitions/resCancelPenaltyType"
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "revenueType": {
          "description": "Type of reservation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        }
      }
    },
    "resCashieringType": {
      "description": "Cashiering Information for the reservation.",
      "type": "object",
      "properties": {
        "bedTaxReporting": {
          "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
          "$ref": "#/definitions/bedTaxReportingType"
        },
        "billingPrivileges": {
          "description": "Billing privileges set on the reservation.",
          "$ref": "#/definitions/billingPrivilegesType"
        },
        "compAccounting": {
          "description": "Information regarding comp accounting on the reservation.",
          "$ref": "#/definitions/resCompAccountingType"
        },
        "financiallyResponsible": {
          "description": "The guest from whom payment has to be recovered (direct guest).",
          "type": "boolean"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "lastRoomAndTaxPostedDate": {
          "description": "Date of the last Room And Tax posting. Used primarily to know the date in case of Advance Billing.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "periodicFolio": {
          "description": "Information regarding periodic folios set on the reservation.",
          "$ref": "#/definitions/resPeriodicFolioType"
        },
        "proratedBilling": {
          "description": "In case of Appartment style billing indicates whether a prorated amount should be used for an Apartment Style Billing rate.",
          "type": "boolean"
        },
        "reservationPreConfiguredRoutingInstruction": {
          "description": "Information regarding the selected preconfigured routing instruction on the reservation.",
          "$ref": "#/definitions/resPreConfiguredRoutingInstrType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "reverseAdvanceCheckInAllowed": {
          "description": "This attribute is to verify if reverse advance check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/reservationTaxTypeInfo"
        },
        "transactionsPosted": {
          "description": "Specifies whether reservation has a financial transaction associated with it.",
          "type": "boolean"
        }
      }
    },
    "resCommunicationType": {
      "description": "Communication details for a reservation.",
      "type": "object",
      "properties": {
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        }
      }
    },
    "resCompAccountingType": {
      "description": "Information regarding comp accounting on the reservation.",
      "type": "object",
      "properties": {
        "authorizer": {
          "description": "ID of the employee who will act as the host for this guest.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "compPostings": {
          "description": "Indicates if the Comp Billing/posting Exist",
          "type": "string",
          "maxLength": 5,
          "minLength": 0
        },
        "compType": {
          "description": "Code used to identify the casino comp type and ranking of a guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resDepositPoliciesType": {
      "description": "A list of deposit policies attached with the reservation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resDepositPolicyType"
      }
    },
    "resDepositPolicyType": {
      "description": "A deposit policy attached with the reservation.",
      "type": "object",
      "properties": {
        "amountDue": {
          "description": "Total amount due against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amountPaid": {
          "description": "Total amount paid against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "comments": {
          "description": "Comments attached with a deposit.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "policy": {
          "description": "Reservation deposit policy details.",
          "$ref": "#/definitions/depositPolicyType"
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "revenueType": {
          "description": "Type of reservation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        }
      }
    },
    "resExpectedTimesType": {
      "description": "Holds the Arrival and Departure Time Information",
      "type": "object",
      "properties": {
        "reservationExpectedArrivalTime": {
          "description": "Arrival Time",
          "type": "string",
          "format": "date-time"
        },
        "reservationExpectedDepartureTime": {
          "description": "Departure Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "resGuaranteeType": {
      "description": "Validations type record returned after Validations are done.",
      "type": "object",
      "properties": {
        "guaranteeCode": {
          "description": "Guarantee Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "onHold": {
          "description": "Guarantee Code.",
          "type": "boolean"
        },
        "shortDescription": {
          "description": "Guarantee Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "resGuestAdditionalInfoType": {
      "type": "object",
      "properties": {
        "dateOfEntry": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "guestClassification": {
          "description": "Guest Classification for the data export.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "guestStatus": {
          "description": "Guest Status for the data export.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "lastStay": {
          "description": "Last Stay information of the guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "nextDestination": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "type": "string"
        },
        "portOfEntry": {
          "description": "Entry point into the country. (Croatian Requirements).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "preferredRoomType": {
          "description": "Preferred Room Type of the guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "purposeOfStay": {
          "description": "Purpose of stay.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resGuestExternalInfoType": {
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "type": "object",
      "properties": {
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        }
      }
    },
    "resGuestInfoType": {
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "type": "object",
      "properties": {
        "accompanyGuests": {
          "description": "List of guest names that are accompanying the reservation guest",
          "$ref": "#/definitions/resAccompanyGuestListType"
        },
        "address": {
          "description": "Address information that is attached to the reservation guest",
          "$ref": "#/definitions/addressSearchType"
        },
        "alternateFullName": {
          "description": "Altername full display name",
          "type": "string"
        },
        "alternateGivenName": {
          "description": "Alternate given name, first name or names",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "alternateSurname": {
          "description": "Alternate family name, last name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "birthDate": {
          "description": "Date of birth",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "email": {
          "description": "Email address",
          "$ref": "#/definitions/basicEmailType"
        },
        "externalInfo": {
          "description": "External information about the guest associated with the reservation.",
          "$ref": "#/definitions/resGuestExternalInfoType"
        },
        "fullName": {
          "description": "Full display name",
          "type": "string"
        },
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "guestLastStayInfo": {
          "description": "Contains information regarding the last stay of this guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "guestRestricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        },
        "guestRestrictedCode": {
          "description": "Guest profile restricted reason code",
          "type": "string"
        },
        "guestRestrictedReasonDesc": {
          "description": "Guest profile restricted reason description",
          "type": "string"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "membership": {
          "description": "The Membership object identifying the frequent customer reward program.",
          "$ref": "#/definitions/membershipInfoType"
        },
        "middleName": {
          "description": "The middle name of the person name",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "namePrefix": {
          "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
          "$ref": "#/definitions/namePrefixType"
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nameType": {
          "$ref": "#/definitions/nameTypeType"
        },
        "nationality": {
          "description": "Affiliation or ethnicity to a particular country.",
          "$ref": "#/definitions/countryNameType"
        },
        "phoneNumber": {
          "description": "Phone number",
          "$ref": "#/definitions/phoneNumberType"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        },
        "surnamePrefix": {
          "description": "e.g \"van der\", \"von\", \"de\"",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "vip": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "$ref": "#/definitions/vIPType"
        }
      }
    },
    "resGuestType": {
      "description": "A collection of ResGuest objects, identifying the guests associated with this reservation. Which guests are in which functionSpaceDetails is determined by each RoomStays ResGuestRPHs collection.",
      "type": "object",
      "properties": {
        "arrivalTransport": {
          "$ref": "#/definitions/transportInfoType"
        },
        "departureTransport": {
          "$ref": "#/definitions/transportInfoType"
        },
        "primary": {
          "description": "When true indicates this is the primary guest.",
          "type": "boolean"
        },
        "profileInfo": {
          "description": "A collection of Profiles or Unique IDs of Profiles.",
          "type": "object",
          "properties": {
            "profile": {
              "description": "Provides detailed information regarding either a company or a customer profile.",
              "$ref": "#/definitions/profileType"
            },
            "profileCashieringDetail": {
              "description": "Cashiering details for the profile.",
              "$ref": "#/definitions/profileCashieringDetailType"
            },
            "profileIdList": {
              "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
              "$ref": "#/definitions/profileIdList"
            },
            "registrationCardNo": {
              "description": "Unique identifier of the police registration card number.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            }
          }
        },
        "reservationGuestRPH": {
          "description": "This is a reference placeholder, used as an index for this guest in this reservation. In the ResGuest object it is used like all other RPH attributes to send the delta of a reservation. It is used by the RoomStay and Service objects to indicate which guests are associated with that functionSpaceDetails stay or service.",
          "type": "string",
          "maxLength": 8,
          "minLength": 1
        },
        "visaInfo": {
          "$ref": "#/definitions/visaInfoType"
        }
      }
    },
    "resHousekeepingType": {
      "description": "Holds housekeeping turndown service information for the functionSpaceDetails.",
      "type": "object",
      "properties": {
        "expectedServiceTime": {
          "description": "Expected Start Time for housekeeping task(s).",
          "type": "string"
        },
        "facilityTaskInfo": {
          "description": "The facility task applicable for the current day. This will be information only and not used for any updates.",
          "$ref": "#/definitions/facilityTaskType"
        },
        "instructions": {
          "description": "Turndown instructions for the functionSpaceDetails.",
          "type": "string"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "roomStatus": {
          "description": "Current functionSpaceDetails status. Current functionSpaceDetails status is populated only if functionSpaceDetails is assigned to the reservation and reservation is due in or in house.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "serviceTime": {
          "description": "This is the Turndown functionSpaceDetails service time.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "turndownRequested": {
          "description": "Indicates whether guest wants turndown facility or not.",
          "type": "boolean"
        }
      }
    },
    "resInventoryItemSourceType": {
      "description": "Defines whether the item is setupCode due to a Rate Plan, Package or a Block.",
      "type": "object",
      "properties": {
        "blockId": {
          "description": "Block Unique ID, If populated specifies that the item is setupCode due to a Block.",
          "$ref": "#/definitions/blockId"
        },
        "packageCode": {
          "description": "Package Code, If populated specifies that the item is setupCode due to a Package.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "packageInternalID": {
          "description": "Source Reservation Package Opera Internal Unique Id. This is the unique Id used for the reservation package associated with this item.",
          "type": "number"
        },
        "ratePlanCode": {
          "description": "Rate Plan Code, If populated specifies that the item is setupCode due to a Rate Plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "welcomeOffer": {
          "description": "If true, it implies that the item has been attached to the reservation as part of a Welcome Offer",
          "type": "boolean"
        }
      }
    },
    "resInventoryItemType": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "blockDates": {
          "description": "Begin and eventEndDate date and time of the items applicability.",
          "$ref": "#/definitions/dateRangeType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "item": {
          "description": "Specifies Items and its attributes. When used for data manipulation for Items setupCode on reservation, etc only code is considered. Other Attributes are for used to provide information during fetch operation.",
          "$ref": "#/definitions/itemInfoType"
        },
        "quantity": {
          "description": "Number of items booked.",
          "type": "integer"
        },
        "source": {
          "description": "If exists specifies whether the item is setupCode due to a Rate Plan, Package or a Block.",
          "$ref": "#/definitions/resInventoryItemSourceType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "resInventoryItemsType": {
      "description": "Defines a collection of inventory items attached to a reservation.",
      "type": "object",
      "properties": {
        "item": {
          "description": "Inventory item attached to a reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/resInventoryItemType"
          }
        },
        "itemClassCode": {
          "description": "The Item Class ID which the item belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resMobileNotificationsType": {
      "description": "Contains the status of Room Ready and Key Ready messages.",
      "type": "object",
      "properties": {
        "checkoutMessageReceived": {
          "description": "Indicates if the Mobile checkout message is received.",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "Error message when Mobile Notification has failed.",
          "type": "string"
        },
        "keyReady": {
          "description": "Denotes the status of Key Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "requiresAction": {
          "description": "Indicates if user action is required. The action could be for sending Room Ready or Key Ready Notification. It could also be for initiating Checkout",
          "type": "boolean"
        },
        "roomReady": {
          "description": "Denotes the status of Room Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        }
      }
    },
    "resPaymentCardType": {
      "description": "Information on a credit card for the customer.",
      "type": "object",
      "properties": {
        "approvalAmountNeeded": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalCode": {
          "description": "Approval code sent by the credit card company on a successful authorization.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "attachCreditCardToProfile": {
          "description": "Attach the credit card to profile.",
          "type": "boolean"
        },
        "cardHolderName": {
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cardNumber": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberMasked": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardOrToken": {
          "description": "This contains information on whether credit card is tokenized (token enabled). A value of 'Token' indicates credit card is token enabled and 'CardNumber' indicates non token environment for this payment card type.",
          "$ref": "#/definitions/cardNumberTypeType"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This elementSpace is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
          "type": "boolean"
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "currentAuthorizedAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "expirationDate": {
          "description": "Expiration date of the credit card",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expirationDateExpired": {
          "type": "boolean"
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        },
        "swiped": {
          "type": "boolean"
        },
        "userDefinedCardType": {
          "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
          "type": "string",
          "maxLength": 2,
          "minLength": 0
        }
      }
    },
    "resPeriodicFolioType": {
      "description": "Information regarding periodic folios set on the reservation.",
      "type": "object",
      "properties": {
        "frequency": {
          "description": "Frequency in number of days when folios should be printed for this reservation.",
          "type": "integer"
        },
        "lastFolioDate": {
          "description": "Latest date when a folio was printed using the \"Periodic Batch Folios\" option",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastSettlementDate": {
          "description": "Latest date when a direct bill settlement was automatically done using the \"Direct Bill Batch Folios\" option.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "resPreConfiguredRoutingInstrType": {
      "description": "Instruction to attach Pre-Configured Routing Instructions to a Reservation.",
      "type": "object",
      "properties": {
        "authorizerInfo": {
          "description": "The authorizer information for Promotion Code with attached Complimentary Routing",
          "$ref": "#/definitions/authorizerInfoType"
        },
        "profileType": {
          "description": "Profile Type with attached Routing Instruction.",
          "$ref": "#/definitions/resProfileTypeType"
        },
        "promotionCode": {
          "description": "Promotion Code with attached Complimentary Routing.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "Rate Code with attached Routing Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resProfileTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Group",
        "TravelAgent",
        "Source",
        "ReservationContact",
        "BillingContact",
        "Addressee"
      ]
    },
    "resRevenueBalanceType": {
      "description": "Revenue and Balance Amount summary for the reservation.",
      "type": "object",
      "properties": {
        "balance": {
          "description": "Balance amount on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "foodAndBevRevenue": {
          "description": "Food and Beverage Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "nonRevenue": {
          "description": "Total Non Revenue posted on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "otherRevenue": {
          "description": "Other Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomRevenue": {
          "description": "Room Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalFixedCharge": {
          "description": "Total Fixed Charges on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPayment": {
          "description": "Total payment received for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalRevenue": {
          "description": "Total Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "resSharedGuestInfoType": {
      "description": "Contains information regarding the share reservation.",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "profileId": {
          "$ref": "#/definitions/profileId"
        }
      }
    },
    "resSharedGuestListType": {
      "description": "Collection of shared guest reservations.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resSharedGuestInfoType"
      }
    },
    "resStatClassificationType": {
      "description": "Statistical Classification information for the reservation.",
      "type": "object",
      "properties": {
        "rateTier": {
          "description": "Rate Tier used calculate statistics for export(DRS).",
          "type": "integer"
        },
        "roomType": {
          "description": "Room Type used to calculate statistics for export(DRS).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationAllowedActionType": {
      "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
      "type": "string",
      "enum": [
        "Cancel",
        "Move",
        "PreCharge",
        "PostCharge",
        "FacilitySchedule",
        "Upsell",
        "PreCheckIn",
        "PostToNoShowCancel",
        "NoShow",
        "NameChange",
        "Discount",
        "HouseKeeping",
        "EnrollToPrimaryMembership",
        "EnrollInProgress"
      ]
    },
    "reservationAllowedActionsType": {
      "description": "Allowed action.",
      "type": "array",
      "maxItems": 11,
      "items": {
        "$ref": "#/definitions/reservationAllowedActionType"
      }
    },
    "reservationBlockType": {
      "description": "Key information about the block for a reservation.",
      "type": "object",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers for the reservation.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockName": {
          "description": "The Name of the block that is attached to the reservation.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "This is the HotelCode of the Block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationCertificateType": {
      "description": "Certificate is incentive.",
      "type": "string",
      "enum": [
        "Reward",
        "Incentive"
      ]
    },
    "reservationECertificateType": {
      "description": "Reservation ECertificate Type Information.",
      "type": "object",
      "properties": {
        "actionType": {
          "description": "ECertificate status for the reservation.",
          "$ref": "#/definitions/requestActionType"
        },
        "eCertificateNo": {
          "description": "ECertificate Number for the reservation.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "eCertificateType": {
          "description": "ECertificate Type where value can be PROMOTION,AWARD,BENEFIT and OTHER",
          "$ref": "#/definitions/eCertificateClassficationType"
        }
      }
    },
    "reservationECertificatesType": {
      "description": "Collection of ECertificateType object.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationECertificateType"
      }
    },
    "reservationId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "reservationIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "reservationLocatorType": {
      "description": "Holds the information for a Reservation Guest Locator",
      "type": "object",
      "properties": {
        "blockDates": {
          "description": "Time span for the Guest Locator.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "dateSpan": {
          "description": "Begin and End date range of the Guest Locator.",
          "$ref": "#/definitions/dateRangeType"
        },
        "locatorBy": {
          "description": "User that entered this Guest Locator.",
          "type": "string"
        },
        "locatorId": {
          "description": "Unique Id of the Guest Locator ( Locator Id )",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "locatorOn": {
          "description": "Date and time of the Guest Locator.",
          "type": "string",
          "format": "date-time"
        },
        "locatorText": {
          "description": "The Locator Text for the guest.",
          "type": "string"
        }
      }
    },
    "reservationLocatorsType": {
      "description": "Holds the Locator Information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationLocatorType"
      }
    },
    "reservationMembershipType": {
      "description": "Detailed information of the memberships.",
      "type": "object",
      "properties": {
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "linkMembership": {
          "type": "boolean"
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "primary": {
          "type": "boolean"
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        }
      }
    },
    "reservationPackageScheduleType": {
      "description": "A HotelPackageSchedule type.",
      "type": "object",
      "properties": {
        "computedResvPrice": {
          "description": "Computed Reservation Price of the package. Calculation Will Be Performed Based On Other Parameters.",
          "type": "number"
        },
        "consumptionDate": {
          "description": "The date the package was used or can be used.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "originalUnitAllowance": {
          "description": "The original allowance per unit of the package if it has been changed.",
          "type": "number"
        },
        "originalUnitPrice": {
          "description": "The original price per unit of the package if it has been changed.",
          "type": "number"
        },
        "reservationDate": {
          "description": "The date of the Reservation when this package is applicable. This can be different from the date the package will be consumed. Example are next day packages. Reservation date is when the package is applied to the guest and Consumption date is when the guest can consume the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "totalQuantity": {
          "description": "The total quantity of the package for this date, calculated based on the calculation rule as defined in the PackageHeaderType",
          "type": "integer"
        },
        "unitAllowance": {
          "description": "The allowance per unit of the package.",
          "type": "number"
        },
        "unitPrice": {
          "description": "The price per unit of the package.",
          "type": "number"
        }
      }
    },
    "reservationPackageType": {
      "description": "A ReservationPackageType class.",
      "type": "object",
      "properties": {
        "awardCode": {
          "description": "This is the Award code used to redeem the package if the package is a redemption package.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "consumptionDetails": {
          "description": "Package consumption details. Includes information for quantity , allowance etc.",
          "$ref": "#/definitions/packageConsumptionType"
        },
        "endDate": {
          "description": "Required value when changing a reservation package. If the original eventEndDate date was null, then null is required.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "internalID": {
          "description": "Reservation Package Opera Internal Unique Id. This is the unique Id used for this reservation package.",
          "type": "number"
        },
        "newTimeSpan": {
          "description": "The changed dates(Start and End dates) for this product.",
          "$ref": "#/definitions/timeSpanType"
        },
        "packageCode": {
          "description": "Package code. This is the unique code used for the package and is a required elementSpace.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "packageGroup": {
          "description": "Package group code. If this package is part of a package group, the group code is indicated here. This is a required elementSpace and is part of the key to fetch the correct package record .",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "packageHeaderType": {
          "description": "Package information from configuration.",
          "$ref": "#/definitions/packageCodeHeaderType"
        },
        "points": {
          "description": "Indicates the points used to redeem the redemption package.",
          "type": "integer"
        },
        "ratePlanCode": {
          "description": "The rate code which contains this package. If the package is not part of a rate code, this will be empty. Required elementSpace and part of the key to fetch the correct package record on the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "scheduleList": {
          "description": "A HotelPackageSchedule type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationPackageScheduleType"
          }
        },
        "source": {
          "description": "Indicates if the source of the product is Rate header, Rate Detail or Reservation. For new development this field is to be used for passing the product scource",
          "$ref": "#/definitions/productSourceType"
        },
        "startDate": {
          "description": "Required value when changing a reservation package. If the original eventStartDate date was null, then null is required.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "reservationPaymentMethodType": {
      "type": "object",
      "properties": {
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID elementSpace.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            }
          }
        },
        "folioView": {
          "type": "integer"
        },
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "paymentMethod": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationPaymentMethodsType": {
      "description": "Defines reservation payment methods.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationPaymentMethodType"
      }
    },
    "reservationPoliciesType": {
      "description": "A collection of reservation deposit and cancellation policies.",
      "type": "object",
      "properties": {
        "cancellationPolicies": {
          "description": "A collection of reservation cancellation policies..",
          "$ref": "#/definitions/resCancellationPoliciesType"
        },
        "depositPolicies": {
          "description": "A collection of reservation deposit policies.",
          "$ref": "#/definitions/resDepositPoliciesType"
        },
        "name": {
          "description": "Name identifier for the reservation.",
          "type": "string"
        },
        "reservationIdList": {
          "description": "A list of Ids for reservation.",
          "$ref": "#/definitions/uniqueIDListType"
        }
      }
    },
    "reservationProfileType": {
      "type": "object",
      "properties": {
        "profile": {
          "description": "Provides detailed information regarding either a company or a customer profile.",
          "$ref": "#/definitions/profileType"
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "reservationQueueInformationType": {
      "description": "Information regarding the Date, Duration and Priority of the reservation on Queue for Check in.",
      "type": "object",
      "properties": {
        "averageQueueTimeCurrentReservations": {
          "description": "The average time, in seconds, of the reservations currently in queue.",
          "type": "integer"
        },
        "averageQueueTimeToCheckIn": {
          "description": "The average time, in seconds, a reservation was on queue prior to Check-In.",
          "type": "integer"
        },
        "blockDates": {
          "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield eventEndDate date.",
          "type": "object",
          "properties": {
            "duration": {
              "type": "string"
            },
            "durationInSeconds": {
              "description": "The total duration, in seconds, the reservation is on Queue.",
              "type": "integer"
            },
            "endDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        },
        "guestTextInfo": {
          "description": "Information for the message sent to the user",
          "$ref": "#/definitions/queueTextInfoType"
        },
        "priority": {
          "description": "The Queue Priority given to this reservation.",
          "type": "integer"
        },
        "queueDate": {
          "description": "The Business date on which the reservation was due to arrive and is currently placed on Queue for Check In.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "reservationSnapshotType": {
      "description": "This is used when changing block reservations in bulk.",
      "type": "object",
      "properties": {
        "hotelReservation": {
          "description": "Contains detailed information about the snapshot reservation",
          "$ref": "#/definitions/hotelReservationType"
        },
        "routingInstructions": {
          "description": "Contains the routing instructions of the reservation.",
          "$ref": "#/definitions/routingInfoListType"
        }
      }
    },
    "reservationSnapshotsType": {
      "description": "A collection of Reservation snapshot objects.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservation": {
          "description": "A reservation snapshot object.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationSnapshotType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "reservationStayHistoryFutureInfoType": {
      "description": "Information of History and Future Reservation details attached to Profiles.",
      "type": "object",
      "properties": {
        "futureList": {
          "description": "Refer to Future list type document.",
          "$ref": "#/definitions/stayFutureListType"
        },
        "historyList": {
          "description": "Refer to History list type document.",
          "$ref": "#/definitions/stayHistoryListType"
        }
      }
    },
    "reservationTaxTypeInfo": {
      "description": "Provides information about the Tax Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "taxExemptNo": {
          "description": "Tax exempt number on the profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationTransactionDiversionType": {
      "description": "A Transaction Diversion Rule Type",
      "type": "object",
      "properties": {
        "code": {
          "description": "Transaction Diversion Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "dailyDetails": {
          "description": "Collection of daily details of a Transaction diversion rule for a particular reservation.",
          "$ref": "#/definitions/transactionDiversionDailyDetailsType"
        },
        "description": {
          "description": "User defined message for the Transaction Diversion Rule.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "displaySequence": {
          "description": "User configured Sequence number.",
          "type": "number"
        },
        "diverted": {
          "description": "Transaction diversions that are diverted .",
          "type": "integer"
        },
        "hotelId": {
          "description": "Hotel code with which Transaction Diversion Rule is associated.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicator that tells whether the transaction diversion rule is active or not.",
          "type": "boolean"
        },
        "level": {
          "description": "Level of the Transaction Diversion rule that can be Property or Reservation.",
          "$ref": "#/definitions/transactionDiversionRuleLevelType"
        },
        "membership": {
          "description": "Membership type to consider while applying Diversion Instruction.",
          "$ref": "#/definitions/membershipTypeLevelType"
        },
        "notes": {
          "description": "The Note details related to the Transaction Diversion Rule.",
          "$ref": "#/definitions/commentInfoType"
        },
        "posted": {
          "description": "Transaction diversions that are posted.",
          "type": "integer"
        },
        "targetRoom": {
          "description": "Room number to receive all the diverted transactions configured for this instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "thresholds": {
          "description": "Threshold Details related to the Transaction diversion rule.",
          "$ref": "#/definitions/thresholdDetailsType"
        },
        "transactionCodes": {
          "description": "Collection of Transaction Code List",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "type": {
          "description": "Transaction Diversion Rule Types",
          "$ref": "#/definitions/transactionDiversionRuleTypeType"
        },
        "vipCode": {
          "description": "VIP code to consider while applying Diversion Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationTransactionDiversionsType": {
      "description": "List of Transaction Diversion rules.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationTransactionDiversionType"
      }
    },
    "reservationTypeInfoType": {
      "type": "object",
      "properties": {
        "chainCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reservationType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resourceCopyAndMoveListType": {
      "description": "Resource Type and its UniqueID.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resourceCopyAndMoveType"
      }
    },
    "resourceCopyAndMoveType": {
      "description": "Holds Resource Type and its UniqueID",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "Unique identifier for an event resource.",
          "$ref": "#/definitions/resourceId"
        },
        "resourceType": {
          "description": "Type of event resource.",
          "$ref": "#/definitions/resourceType"
        }
      }
    },
    "resourceDiscountTypeType": {
      "description": "Indicates the option to select resources that will be discounted with the Resource Discount Percentage.",
      "type": "string",
      "enum": [
        "AllDiscountableResources",
        "ResourcesWithSameDiscountPercentage",
        "AllDiscountableItems",
        "ItemsWithSameDiscountPercentage",
        "AllDiscountableMenusAndMenuItems",
        "MenusAndMenuItemsWithSameDiscountPercentage",
        "AllDiscountableSpaces",
        "SpacesWithSameDiscountPercentage",
        "None"
      ]
    },
    "resourceId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "resourceType": {
      "description": "List of resource types.",
      "type": "string",
      "enum": [
        "FunctionSpace",
        "Menu",
        "Item"
      ]
    },
    "restrictionStatusType": {
      "description": "The RestrictionStatusType is used to indicate the type of restriction applied. An enumerated restriction type is defined in the attribute group.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Identifies the type of restriction. I.E. Closed, ClosedForArrival, etc.",
          "$ref": "#/definitions/restrictionStatusesType"
        },
        "lOS1": {
          "description": "Indicates Length of Stay 1 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS2": {
          "description": "Indicates Length of Stay 2 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS3": {
          "description": "Indicates Length of Stay 3 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS4": {
          "description": "Indicates Length of Stay 4 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS5": {
          "description": "Indicates Length of Stay 5 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS6": {
          "description": "Indicates Length of Stay 6 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS7": {
          "description": "Indicates Length of Stay 7 or more is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "unit": {
          "description": "Defines restriction in conjunction with Restriction Code. Value must be specified for Restriction Codes MinimumStayThrough, MaximumStayThrough, MinimumLengthOfStay, MaximumLengthOfStay, MinimumAdvanceBooking, MaximumAdvanceBooking.",
          "type": "integer"
        }
      }
    },
    "restrictionStatusesType": {
      "type": "string",
      "enum": [
        "Closed",
        "ClosedForArrival",
        "ClosedForDeparture",
        "MinimumStayThrough",
        "MaximumStayThrough",
        "MinimumLengthOfStay",
        "MaximumLengthOfStay",
        "LOSNotAvailable",
        "MinimumAdvanceBooking",
        "MaximumAdvanceBooking",
        "Open",
        "OpenForArrival",
        "OpenForDeparture"
      ]
    },
    "revenueListType": {
      "description": "Collection of revenues associated with packaged event.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockCateringPackageRevenueType"
      }
    },
    "revenueSummaryType": {
      "description": "Summary information pertaining to revenue like Room, Food and Beverage, Catering, Other, Catering Other and Total Revenue.",
      "type": "object",
      "properties": {
        "cateringOtherRevenue": {
          "type": "number"
        },
        "cateringRevenue": {
          "type": "number"
        },
        "foodAndBeverageRevenue": {
          "type": "number"
        },
        "nonRevenue": {
          "type": "number"
        },
        "otherRevenue": {
          "type": "number"
        },
        "roomRevenue": {
          "type": "number"
        },
        "totalRevenue": {
          "type": "number"
        }
      }
    },
    "revenueTypeDetailType": {
      "description": "Details type provides information about Catering Revenue Type Details.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code is used to set associated revenue type details.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "revenueTypeDetailsType": {
      "description": "List of Revenue details assoicated to a Revenue Type (Additional Details)",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/revenueTypeDetailType"
      }
    },
    "revenueTypeType": {
      "description": "Base type provides information about Catering Revenue Types Configuration.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code is used to identify a Catering Revenue Type/Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "displaySequence": {
          "description": "Revenue Types display sequence Number",
          "type": "number"
        },
        "foodAndBeverage": {
          "description": "Flag for Food and Beverages.",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicates if the Revenue type Code is inactive.",
          "type": "boolean"
        },
        "revenueDetails": {
          "description": "Collection of Revenue details assoicated to a Revenue Type (Additional Details)",
          "$ref": "#/definitions/revenueTypeDetailsType"
        },
        "revenueGroup": {
          "description": "Revenue Group",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "translatableDescription": {
          "description": "Translatable Description of the Catering Revenue Types.",
          "$ref": "#/definitions/translationTextType200"
        }
      }
    },
    "rewardCertificateType": {
      "description": "Point Saver reward.",
      "type": "string",
      "enum": [
        "Regular",
        "StayAnytime",
        "PointSaver"
      ]
    },
    "roomOwnershipType": {
      "description": "Define the search criteria for retrieving functionSpaceDetails ownership records",
      "type": "object",
      "properties": {
        "contractNumber": {
          "description": "Contract number for room owner.",
          "type": "string"
        },
        "endDate": {
          "description": "End Date of the functionSpaceDetails ownership record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "profileId": {
          "description": "Profile ID of the functionSpaceDetails ownership record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "roomCategory": {
          "description": "Room Category of the functionSpaceDetails ownership record.",
          "type": "string"
        },
        "roomId": {
          "description": "Room Id of room owner.",
          "type": "string"
        },
        "roomOwnershipId": {
          "description": "Unique Id for Room Owner record.",
          "type": "integer"
        },
        "roomType": {
          "description": "Room Type of the functionSpaceDetails ownership record.",
          "type": "string"
        },
        "startDate": {
          "description": "Start Date of the functionSpaceDetails ownership record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "status": {
          "description": "Status of the functionSpaceDetails ownership record.",
          "type": "string"
        }
      }
    },
    "roomRateAvailReasonType": {
      "description": "Indicates the Room Rate is not available due to unavailability of enough items for the rate code.",
      "type": "string",
      "enum": [
        "Available",
        "Restricted",
        "RestrictedDueToInventory",
        "RestrictedDueToOccupancy",
        "RestrictedDueToItemInventory"
      ]
    },
    "roomRateType": {
      "type": "object",
      "properties": {
        "availability": {
          "description": "Used to specify an availability status for the functionSpaceDetails rate. When available value could be either not specified or \"Available\".",
          "$ref": "#/definitions/roomRateAvailReasonType"
        },
        "awards": {
          "description": "Membership Awards code applied on the reservation.",
          "$ref": "#/definitions/resAwardsType"
        },
        "barRanking": {
          "description": "Best Available rates ranking.",
          "type": "integer"
        },
        "bogoDiscount": {
          "description": "Indicates if the Rate Code has BOGO(Bye one Get one) indicator.",
          "type": "boolean"
        },
        "commissionAmount": {
          "description": "Indicates commission amount used by the rate plan.",
          "type": "integer"
        },
        "commissionCode": {
          "description": "Commission Code applicable for commission calculation for Travel Agent/Company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "commissionPercentage": {
          "description": "Indicates commission percentage used by the rate plan.",
          "type": "integer"
        },
        "commissionable": {
          "description": "Indicates Commission is applicable for commission calculation for Travel Agent/Company.",
          "type": "boolean"
        },
        "complimentary": {
          "description": "Indicates this reservation rate is complimentary.",
          "type": "boolean"
        },
        "credentialsRequired": {
          "description": "If true, indicates that credentials is required to sell the rate code.",
          "type": "boolean"
        },
        "discountAllowed": {
          "description": "Indicates if the Rate Code is discountable i.e discounts are allowed on the rate code.",
          "type": "boolean"
        },
        "eventEndDate": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventStartDate": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fixedRate": {
          "description": "Fixed Rate Indicator.",
          "type": "boolean"
        },
        "foreignExchange": {
          "description": "Exchange Type information for the postings.",
          "$ref": "#/definitions/foreignExchangeType"
        },
        "guestCounts": {
          "description": "A collection of Guest Counts associated with the functionSpaceDetails rate.",
          "$ref": "#/definitions/guestCountsType"
        },
        "houseUseOnly": {
          "description": "Indicates this reservation is for House use.",
          "type": "boolean"
        },
        "inventoryLender": {
          "description": "Indicates whether the functionSpaceDetails type inventory was taken from the allotment or House availability.",
          "type": "string"
        },
        "marketCode": {
          "description": "The code that relates to the market being sold to (e.g., the corporate market, packages).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketCodeDescription": {
          "description": "Description of the market code.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "mealPlans": {
          "description": "Meal plan codes for rate plan code.",
          "$ref": "#/definitions/mealPlansType"
        },
        "numberOfUnits": {
          "description": "The number of rooms.",
          "type": "integer"
        },
        "packages": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/packageElementType"
          }
        },
        "promotionCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo functionSpaceDetails type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "rateDescription": {
          "description": "Rate code description.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "rateGroup": {
          "description": "For RatePlanSet equals BESTAVAILABLERATE, in case Rate Groups are enabled the elementSpace provides the rate group for the rate plan code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateLevel": {
          "description": "Rate plan type like Corporate,Regular,Military,Weekend etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ratePlanCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rates": {
          "$ref": "#/definitions/ratesType"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "roomId": {
          "description": "A string value representing the unique identification of a functionSpaceDetails.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomRateInfo": {
          "description": "Information about the Room Rate Combination.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "roomType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomTypeCharged": {
          "description": "Room Type used for the Rate calculation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCode": {
          "description": "To specify where the business came from e.g. radio, newspaper ad, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "stayProfiles": {
          "description": "Profile associated with the functionSpaceDetails Stay.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationProfileType"
          }
        },
        "suppressRate": {
          "type": "boolean"
        },
        "taxFreeGuestCounts": {
          "description": "A collection of Tax Free Guest Counts associated with the functionSpaceDetails rate. This list does not add to the guest count but just indicates number of tax free guests out of guest counts.",
          "$ref": "#/definitions/guestCountsType"
        },
        "taxIncluded": {
          "description": "If true, indicates if tax is included in the rate code.",
          "type": "boolean"
        },
        "total": {
          "$ref": "#/definitions/totalType"
        },
        "totalPoints": {
          "$ref": "#/definitions/pointsType"
        }
      }
    },
    "roomStatisticsType": {
      "type": "object",
      "properties": {
        "averageRate": {
          "description": "The average rate per functionSpaceDetails.",
          "type": "number"
        },
        "roomCount": {
          "description": "The total number of rooms.",
          "type": "number"
        },
        "roomRevenue": {
          "description": "The total revenue for the rooms.",
          "type": "number"
        }
      }
    },
    "roomStayType": {
      "type": "object",
      "properties": {
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "availableUpsellOfferCount": {
          "description": "Number of Upsell Offers Available for this stay. This will only be populated if the Upsell Instruction is included in the Allowed Instruction request",
          "type": "integer"
        },
        "bookingMedium": {
          "description": "Classifies the medium(Channel field on reservation screen) through which the reservation is made.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "bookingMediumDescription": {
          "description": "Description of the booking medium.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "currentRoomInfo": {
          "description": "Room information of the reservation for the current day.",
          "$ref": "#/definitions/currentRoomInfoType"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "expectedTimes": {
          "description": "The Expected Arrival and Departure Times.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "guestCounts": {
          "$ref": "#/definitions/guestCountsType"
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready and Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "multiValueAttrs": {
          "description": "Informative indicators indicating different values of an attribute exists over the stay.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 2000
          }
        },
        "originalTimeSpan": {
          "description": "The Original Time Span(Arrival, Departure) which covers the Room Stay. In case of Rolling No Show TimeSpan's StratDate moves forward but OriginalTimeSpan's StratDate remains the same.",
          "$ref": "#/definitions/timeSpanType"
        },
        "ownerReservationType": {
          "description": "Indicates whether reservation is for Unit/Room Owner or Authorized User. If this attribute is not define it is a regular/rental reservation.",
          "$ref": "#/definitions/ownerResTypeType"
        },
        "primaryShareType": {
          "description": "This is populated in case of primary share scenario. This indicates whether this reservation is primary or non primary. Changes or postings to the 'non-primary' share reservation is not allowed.",
          "$ref": "#/definitions/primaryShareTypeType"
        },
        "printRate": {
          "description": "This control whether rate info will be printed in confirmation letter.",
          "type": "boolean"
        },
        "promotion": {
          "description": "Promotions applied to the reservation to get the promotional rate.",
          "$ref": "#/definitions/promotionType"
        },
        "registrationNumber": {
          "description": "Registration Number of the reservation for the current day.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "remoteCheckInAllowed": {
          "description": "Indicates whether the reservation is pre-registered for internet check-in or not.",
          "type": "boolean"
        },
        "roomNumberLocked": {
          "description": "When true, indicates a functionSpaceDetails number cannot be changed. When false, indicates a functionSpaceDetails number may be changed.",
          "type": "boolean"
        },
        "roomRates": {
          "description": "A collection of Room Rates associated with a particular Room Stay. Each Room Rate combination can have multiple rates. Example King functionSpaceDetails, Rack rate plan, Monday through Thursday, weekday amount, Friday and Saturday, weekend amount.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomRateType"
          }
        },
        "suiteWith": {
          "description": "Connecting Rooms.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "total": {
          "description": "The total amount charged for the Room Stay.",
          "$ref": "#/definitions/totalType"
        },
        "totalPoints": {
          "description": "The total number of Points charged for the Room Stay.",
          "$ref": "#/definitions/pointsType"
        },
        "upsellInfo": {
          "description": "Indicates Upsell Information to be applied on Reservation.",
          "$ref": "#/definitions/upsellInfoType"
        }
      }
    },
    "routingInfoListType": {
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding instructions.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/routingInfoType"
      }
    },
    "routingInfoType": {
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding object.",
      "type": "object",
      "properties": {
        "folio": {
          "description": "Folio routing type.",
          "type": "object",
          "properties": {
            "aRNumber": {
              "description": "Accounts Receivable.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "guestInfo": {
              "description": "Guest details",
              "type": "object",
              "properties": {
                "profileIdList": {
                  "description": "Unique identifiers for the Profile for both internal and external systems.",
                  "$ref": "#/definitions/profileIdList"
                }
              }
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            },
            "paymentMethod": {
              "type": "string",
              "maxLength": 2000
            }
          }
        },
        "functionSpaceDetails": {
          "description": "Room routing type.",
          "type": "object",
          "properties": {
            "guestDisplayName": {
              "description": "Display Name for the guest.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "guestNameId": {
              "description": "Guest unique identifier to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "reservationNameId": {
              "description": "Reservation name id to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "roomId": {
              "description": "Room number to route the instructions.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            }
          }
        },
        "refreshFolio": {
          "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
          "type": "boolean"
        },
        "request": {
          "description": "Comp Accounting Request routing",
          "type": "object",
          "properties": {
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            }
          }
        }
      }
    },
    "routingInstructionType": {
      "description": "Routing limit can be one of the three: Credit Limit, Percetage Limit, Covers Limit",
      "type": "object",
      "properties": {
        "billingInstructions": {
          "description": "Set of Billing Instructions configured in this time span.",
          "$ref": "#/definitions/billingInstructionsType"
        },
        "covers": {
          "description": "Number of covers for this routing instruction.",
          "type": "number"
        },
        "creditLimit": {
          "description": "Allowable credit amount for this routing instruction. Null value means no limit, 0 equals zero.",
          "type": "number"
        },
        "duration": {
          "description": "Duration of this instruction.",
          "type": "object",
          "properties": {
            "blockDates": {
              "$ref": "#/definitions/timeSpanType"
            },
            "daily": {
              "description": "Flag to indicate if the routing instruction is a daily instruction.",
              "type": "boolean"
            },
            "friday": {
              "type": "boolean"
            },
            "monday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            },
            "sunday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            }
          }
        },
        "limitUsed": {
          "description": "Amount of Credit used for this routing instruction.",
          "type": "number"
        },
        "percentageLimit": {
          "description": "The routing limit percentage allowed for this routing instruction.",
          "type": "number"
        },
        "routingLinkId": {
          "description": "Internal Routing Link Id identifier to which limit group the instruction belongs.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "transactionCodes": {
          "description": "Set of Transaction Codes configured in this time span.",
          "$ref": "#/definitions/trxCodesInfoType"
        }
      }
    },
    "scopeType": {
      "description": "Minimum required and complimentary values are applicable Per Stay.",
      "type": "string",
      "enum": [
        "PerDay",
        "PerStay"
      ]
    },
    "sellMessageConfigType": {
      "description": "Only one of the following can hold a value: HotelCode, CROCode or ChainCode",
      "type": "object",
      "properties": {
        "blockCode": {
          "description": "Block Code to which the sell message is defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "blockId": {
          "description": "Unique OPERA Block ID which is used to find a Block from OPERA. This ID is a primary identification of a Block in OPERA.",
          "$ref": "#/definitions/blockId"
        },
        "chainCode": {
          "description": "Chain Code for which the sell message is defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "croCode": {
          "description": "CRO Code for which the sell message is defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code for which the sell message is defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "languageCode": {
          "description": "Language in which the sell message is defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "message": {
          "description": "Sell message text.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "Rate Plan Code for which the sell message is defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "Room type for which the sell message is defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sellSequence": {
          "description": "This number indicates the display order of the sell message.",
          "type": "number"
        },
        "stickyFlag": {
          "description": "Sticky flag is used to define if the sell message should display on the block screen by default.",
          "type": "boolean"
        },
        "timespan": {
          "description": "Begin and End date for the sell message.",
          "$ref": "#/definitions/timeSpanType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "usedInModule": {
          "description": "This represents the moduleType where we want to display this SellMessage.",
          "type": "array",
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/usedInModuleType"
          }
        }
      }
    },
    "sellMessageConfigsType": {
      "description": "The SellMessageConfigsType is the list of sell messages, each comprising of all the sell message attributes and other details.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "sellMessageConfig": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/sellMessageConfigType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "sellMessageType": {
      "description": "The SellMessagesType defines the standard attributes that will be retrieved with the sell message.",
      "type": "object",
      "properties": {
        "beginDate": {
          "description": "This is the Begin date for the configured SellMessage.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "chainCode": {
          "description": "This is the chain code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "croCode": {
          "description": "This is the Central Reservation office code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "This is the hotel code or resort.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "languageCode": {
          "description": "This is the language code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "message": {
          "description": "This is the message text.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "This represents the rate plan code of the functionSpaceDetails type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "This represents the functionSpaceDetails type code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "stickyFlagYn": {
          "description": "Flag which tells if this message is Sticky (Y/N).",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "usedInModule": {
          "description": "This represents the correct moduletype which should be used for fetching SellMessages.",
          "$ref": "#/definitions/usedInModuleType"
        }
      }
    },
    "sellMessagesType": {
      "description": "The SellMessagesType is the list of message and attributes returned by web service.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "sellMessage": {
          "description": "This is the message text.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/sellMessageType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "serviceRequest": {
      "description": "Service request.",
      "type": "object",
      "properties": {
        "action": {
          "description": "Description of the action taken to complete the request.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "closeDescription": {
          "description": "The follow up description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "closedBy": {
          "description": "The user who closed the service request.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "closedDate": {
          "description": "The date-time in which the service request was closed.",
          "type": "string",
          "format": "date-time"
        },
        "code": {
          "description": "Service request code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "comment": {
          "description": "Description of the service request.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "completionDate": {
          "description": "The date-time in which the service request was completed.",
          "type": "string",
          "format": "date-time"
        },
        "department": {
          "description": "The department that is associated with the service request code.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "functionSpaceDetails": {
          "description": "The functionSpaceDetails number in which the service request was created.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "guaranteedBy": {
          "description": "The user who guaranteed the completion of the service request.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "guestContactMethod": {
          "description": "Communication method picked from guest profile.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "guestName": {
          "description": "The guest name.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code of the service request.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "openDate": {
          "description": "The date-time in which the service request was opened.",
          "type": "string",
          "format": "date-time"
        },
        "priority": {
          "description": "The priority level of the service request.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "profileId": {
          "description": "Unique identifier of the guest.",
          "$ref": "#/definitions/profileId"
        },
        "reservationIdList": {
          "description": "Unique identifier of the reservation.",
          "$ref": "#/definitions/reservationIdList"
        },
        "serviceRequestId": {
          "description": "Unique identifier of the service request.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "status": {
          "description": "The status of the service request.",
          "$ref": "#/definitions/serviceRequestStatusType"
        }
      }
    },
    "serviceRequestStatusType": {
      "type": "string",
      "enum": [
        "Open",
        "PendingFollowUp",
        "Closed",
        "DoNotDisturb",
        "MakeUpRoom"
      ]
    },
    "serviceRequests": {
      "description": "Service request.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/serviceRequest"
      }
    },
    "servingType": {
      "description": "Serving",
      "type": "string",
      "enum": [
        "Pp",
        "Pt"
      ]
    },
    "shareDistributionInstructionType": {
      "description": "The type of Rate Amount Change to be done on the Sharer reservation. This can be FULL -> Full Rate for each Sharer. SPLIT-> Split the Rate amount between Sharer Reservations. ENTIRE -> This Sharer will get the total amount of the rate code for all the Sharer Reservations.",
      "type": "string",
      "enum": [
        "Full",
        "Entire",
        "Split",
        "CustomSplit"
      ]
    },
    "sharedFunctionSpaceEventType": {
      "description": "Pertain shared event Information.",
      "type": "object",
      "properties": {
        "attendees": {
          "description": "Number of event attendees.",
          "type": "integer"
        },
        "blockId": {
          "description": "Block ID for which the details are requested",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "blockName": {
          "description": "Block Name.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "cateringDeductInventory": {
          "description": "Indicates if catering event's spaces are deducted from inventory",
          "type": "boolean"
        },
        "eventId": {
          "description": "ID of Event.",
          "$ref": "#/definitions/eventId"
        },
        "eventName": {
          "description": "Name of event.",
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "eventStatus": {
          "description": "Status of the event. Examples are INQ, TEN, DEF, etc.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "eventType": {
          "description": "Type of event.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "functionSpaceCode": {
          "description": "Function space of event.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "isShared": {
          "description": "Indicates if catering event is shared or not",
          "type": "boolean"
        }
      }
    },
    "sharedFunctionSpaceEventsType": {
      "description": "Collection of events shared by function space.",
      "type": "object",
      "properties": {
        "maxCapacity": {
          "description": "Maximum capcity of the shared function space.",
          "type": "integer"
        },
        "maxEvents": {
          "description": "Maximum number of events for the shared function space.",
          "type": "integer"
        },
        "sharedFunctionSpaceEvent": {
          "description": "Pertain shared event Information.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/sharedFunctionSpaceEventType"
          }
        }
      }
    },
    "sourceCodeInfoType": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceGroup": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "sourceOfSaleType": {
      "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
      "type": "object",
      "properties": {
        "sourceCode": {
          "description": "The entity/channel who made the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceType": {
          "description": "Type of entity/channel who made the reservation..",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "spaceAreaType": {
      "description": "Collection of the Events Booked/Scheduled for the function spaces in the Hotel for the particular time period.",
      "type": "object",
      "properties": {
        "area": {
          "description": "Room Area in Square Feet.",
          "type": "number"
        },
        "unit": {
          "description": "Room Area in Meters.",
          "$ref": "#/definitions/spaceAreaUnitType"
        }
      }
    },
    "spaceAreaUnitType": {
      "description": "Room Area in Square Meters.",
      "type": "string",
      "enum": [
        "SqFeet",
        "SqMeters"
      ]
    },
    "statisticsSummaryType": {
      "description": "Type of statistic for which summary information is populated.",
      "type": "string",
      "enum": [
        "Potential",
        "Actual",
        "Variance"
      ]
    },
    "status": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "statusColorType": {
      "description": "Status code color configuration type.",
      "type": "string",
      "enum": [
        "White",
        "Red",
        "Blue",
        "Cyan",
        "Magenta",
        "Green",
        "Brown",
        "Black",
        "Yellow",
        "Gray"
      ]
    },
    "stayFutureListType": {
      "description": "A collection of reservation history details attached to Profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : Future reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "stayHistoryListType": {
      "description": "A collection of reservation history details attached to Profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : History reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "stayInfoType": {
      "description": "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties.",
      "type": "object",
      "properties": {
        "adultCount": {
          "description": "A collection of Guest Counts associated with Room Stay.",
          "type": "integer"
        },
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "assignedByAI": {
          "description": "Represents the functionSpaceDetails was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "balance": {
          "description": "Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "bookingChannelCode": {
          "description": "Booking channel code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "childCount": {
          "description": "A collection of Child Counts associated with Room Stay.",
          "type": "integer"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "componentRoomType": {
          "description": "True indicates functionSpaceDetails type is a component type.",
          "type": "boolean"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "depositPayments": {
          "description": "A collection of deposit and/or payments for the Room Stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "expectedTimes": {
          "description": "The expected arrival, return and departure times of the guest.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "fixedRate": {
          "description": "True if the rate is a fixed rate, otherwise false",
          "type": "boolean"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "guestServiceStatus": {
          "description": "Service Status of In House guest like DND or MUP",
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "linkCode": {
          "description": "Party code",
          "type": "string",
          "maxLength": 2000
        },
        "marketCode": {
          "description": "Market code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketDescription": {
          "description": "Description of Market code",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "numberOfRooms": {
          "description": "Room Id",
          "type": "integer"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "points": {
          "description": "The Points contains the number of points used to book a particular functionSpaceDetails type.",
          "$ref": "#/definitions/pointsType"
        },
        "promotion": {
          "description": "Promotion Codes",
          "$ref": "#/definitions/promotionType"
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo functionSpaceDetails type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "rateAmount": {
          "description": "Rate amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "ratePlanCode": {
          "description": "Rate plan code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateSuppressed": {
          "description": "Whether this rate should be suppressed from view",
          "type": "boolean"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "roomClass": {
          "description": "Room class code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomId": {
          "description": "Room Id",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomNumberLocked": {
          "description": "When true, indicates a functionSpaceDetails number cannot be changed. When false, indicates a functionSpaceDetails number may be changed.",
          "type": "boolean"
        },
        "roomType": {
          "description": "Room type code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomTypeCharged": {
          "description": "Room type code that was charged",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "scheduledCheckoutTime": {
          "description": "Indicates that this reservation is scheduled for automated check out.",
          "type": "string",
          "format": "date"
        },
        "sourceCode": {
          "description": "Source of business",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "totalAmount": {
          "description": "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "upgradedByAI": {
          "description": "Represents the functionSpaceDetails was assigned by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "stayReservationInfoType": {
      "description": "The Reservation class contains the current reservation being created or altered.",
      "type": "object",
      "properties": {
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "roomStay": {
          "description": "Collection of functionSpaceDetails stays.",
          "$ref": "#/definitions/stayInfoType"
        }
      }
    },
    "surnameType": {
      "description": "Family name, last name.",
      "type": "string",
      "maxLength": 80,
      "minLength": 0
    },
    "taxType": {
      "description": "Applicable tax elementSpace. This elementSpace allows for both percentages and flat amounts. If one field is used, the other should be zero since logically, taxes should be calculated in only one of the two ways.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "code": {
          "description": "Code identifying the fee (e.g.,agency fee, municipality fee).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "type": {
          "description": "Used to indicate if the amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).",
          "$ref": "#/definitions/amountDeterminationType"
        }
      }
    },
    "taxesType": {
      "description": "A collection of taxes.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "tax": {
          "description": "An individual tax.",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/taxType"
          }
        }
      }
    },
    "telephoneInfoType": {
      "description": "Information on a telephone number for the customer.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "telephoneType": {
      "description": "Information on a telephone number for the customer.",
      "type": "object",
      "properties": {
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "thresholdDetailsType": {
      "description": "Type for the threshold elements.",
      "type": "object",
      "properties": {
        "complimentary": {
          "description": "The number of quantities, counts or minutes for which transaction diversion is allowed .",
          "type": "integer"
        },
        "entity": {
          "description": "Diversion entity type associated with the charge for the transaction diversion rule .",
          "$ref": "#/definitions/entityType"
        },
        "isEditable": {
          "description": "Configuring this flag to be TRUE will make the thresholds editable.",
          "type": "boolean"
        },
        "minRequired": {
          "description": "Minimum required number of quantities, counts or minutes that must be posted.",
          "type": "integer"
        },
        "scope": {
          "description": "Diversion scope for the transaction diversion rule.",
          "$ref": "#/definitions/scopeType"
        }
      }
    },
    "ticketType": {
      "description": "Reservation Ticket Type Information.",
      "type": "object",
      "properties": {
        "consumptionDate": {
          "description": "Tickets comsumption date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "description": {
          "description": "Package description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "issueDate": {
          "description": "Tickets issue date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "packageCode": {
          "description": "Package Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "price": {
          "description": "Tickets price.",
          "type": "number"
        },
        "quantity": {
          "description": "Number of tickets used to create multiple tickets.",
          "type": "integer"
        },
        "reference": {
          "description": "Free text field for reference information.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "rentalCode": {
          "description": "The Rate Code to which tickets belong to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationProductId": {
          "description": "Reference to the reservation product.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "status": {
          "description": "The Status Code for outbound WS call.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "statusDescription": {
          "description": "The Status Description for outbound WS call.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "ticketId": {
          "description": "Internal Unique ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "ticketNumber": {
          "description": "Ticket number.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "ticketsType": {
      "description": "Collection of TicketType objects.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/ticketType"
      }
    },
    "tierAdministrationType": {
      "description": "Do not upgrade membership. The membership may be downgraded.",
      "type": "string",
      "enum": [
        "Disabled",
        "NoUpgrade"
      ]
    },
    "timeSpanDaysOfWeekType": {
      "description": "Container for Time span with days of week.",
      "type": "object",
      "properties": {
        "blockDates": {
          "$ref": "#/definitions/timeSpanType"
        },
        "friday": {
          "type": "boolean"
        },
        "monday": {
          "type": "boolean"
        },
        "saturday": {
          "type": "boolean"
        },
        "sunday": {
          "type": "boolean"
        },
        "thursday": {
          "type": "boolean"
        },
        "tuesday": {
          "type": "boolean"
        },
        "wednesday": {
          "type": "boolean"
        }
      }
    },
    "timeSpanType": {
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield eventEndDate date.",
      "type": "object",
      "properties": {
        "duration": {
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "timeWindowType": {
      "description": "Defines a Time period with eventStartDate time and an eventEndDate time.",
      "type": "object",
      "properties": {
        "endTime": {
          "description": "End Time of the Time window.",
          "type": "string"
        },
        "startTime": {
          "description": "Start Time of the Time window.",
          "type": "string"
        }
      }
    },
    "totalType": {
      "description": "The total amount charged for the service including additional amounts and fees.",
      "type": "object",
      "properties": {
        "amountAfterTax": {
          "description": "The total amount including all associated taxes (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "amountBeforeTax": {
          "description": "The total amount not including any associated tax (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "baseAmount": {
          "description": "The rate's base price. Amount excluding price for any add to rate combine line package attached to the rate.Also excludes any discounts",
          "type": "number"
        },
        "code": {
          "description": "Type of charge.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fees": {
          "description": "A collection of fees or service charges.",
          "$ref": "#/definitions/feesType"
        },
        "rateOverride": {
          "description": "When true indicates that the rate amount has been overridden.",
          "type": "boolean"
        },
        "taxes": {
          "description": "A collection of taxes.",
          "$ref": "#/definitions/taxesType"
        }
      }
    },
    "traceResolveType": {
      "type": "object",
      "properties": {
        "resolvedBy": {
          "description": "User that resolved the trace",
          "type": "string"
        },
        "resolvedOn": {
          "description": "Date the trace was resolved",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "traceTimeInfoType": {
      "type": "object",
      "properties": {
        "dateTimeSpan": {
          "description": "Time span for the trace.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "enteredBy": {
          "description": "User that entered this trace.",
          "type": "string"
        },
        "traceOn": {
          "description": "Date of the trace.",
          "type": "string",
          "format": "date-time"
        },
        "traceTime": {
          "description": "Time of the trace",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "trackItActionType": {
      "description": "Identifies the response expected from staff or other parties relative to a Track It ticket.",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/actionStatusType"
        },
        "trackItAction": {
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "trackItGroup": {
      "description": "Group to which the Track It items belong.",
      "type": "string",
      "enum": [
        "Parcel",
        "Valet",
        "Baggage",
        "Lost"
      ]
    },
    "trackItId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "trackItItemType": {
      "description": "Detailed information of a Track It item.",
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/trackItActionType"
        },
        "assignedTo": {
          "$ref": "#/definitions/applicationUserType"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "followUpDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "group": {
          "$ref": "#/definitions/trackItGroup"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "location": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "quantity": {
          "type": "integer"
        },
        "referenceNumber": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationInfo": {
          "$ref": "#/definitions/trackItReservationInfoType"
        },
        "ticketNumber": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "trackItId": {
          "$ref": "#/definitions/trackItId"
        },
        "trackItLogList": {
          "$ref": "#/definitions/trackItLogListType"
        },
        "type": {
          "$ref": "#/definitions/trackItType"
        }
      }
    },
    "trackItItemsType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trackItItemType"
      }
    },
    "trackItLogListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trackItLogType"
      }
    },
    "trackItLogType": {
      "description": "Individual activity log related to the Track It ticket.",
      "type": "object",
      "properties": {
        "businessDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "description": {
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "logDate": {
          "type": "string",
          "format": "date-time"
        },
        "logUserId": {
          "type": "integer"
        },
        "logUserName": {
          "type": "string"
        },
        "trackItId": {
          "$ref": "#/definitions/trackItId"
        },
        "trackItLogId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "type": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "trackItReservationInfoType": {
      "description": "Reservation info associated with a Track It item.",
      "type": "object",
      "properties": {
        "blockDates": {
          "$ref": "#/definitions/timeSpanType"
        },
        "computedReservationStatus": {
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "guarantee": {
          "$ref": "#/definitions/resGuaranteeType"
        },
        "guestInfo": {
          "$ref": "#/definitions/resGuestInfoType"
        },
        "reservationIdList": {
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationStatus": {
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "roomId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomStatus": {
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "roomType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "trackItType": {
      "description": "Identifies the kind of Parcel, Baggage, or Lost items or Valet-managed vehicles or services.",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "url": {
          "$ref": "#/definitions/uRLType"
        }
      }
    },
    "transactionDiversionDailyDetailType": {
      "description": "List of daily details for Transaction Diversion rule.",
      "type": "object",
      "properties": {
        "date": {
          "description": "Daily details Date about when the rules are posted or diverted.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "diverted": {
          "description": "Transaction diversion rules that are diverted .",
          "type": "integer"
        },
        "posted": {
          "description": "Transaction diversion rules that are posted.",
          "type": "integer"
        }
      }
    },
    "transactionDiversionDailyDetailsType": {
      "description": "List of daily details for Transaction Diversion rule.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transactionDiversionDailyDetailType"
      }
    },
    "transactionDiversionRuleLevelType": {
      "description": "Reservation level.",
      "type": "string",
      "enum": [
        "Property",
        "Reservation"
      ]
    },
    "transactionDiversionRuleTypeType": {
      "description": "The rule type on which the Transaction Diversion Rule is based. If a reservation has any of the following code, Transaction Diversion rule gets active for that reservation",
      "type": "string",
      "enum": [
        "Vip",
        "Membership"
      ]
    },
    "translationTextType200": {
      "description": "Contains Multiple translated texts and language codes.",
      "type": "object",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 200.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "translations": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationTextType2000": {
      "description": "Contains Multiple translated texts and language codes.",
      "type": "object",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 2000.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "translations": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationTextType60": {
      "description": "Contains Multiple translated texts and language codes.",
      "type": "object",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 60.",
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "translations": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationsTextType": {
      "description": "Language code for the translation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "description": "Language code for the translation.",
        "type": "object",
        "properties": {
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          },
          "value": {
            "description": "Used for Character Strings, length 0 to 2000.",
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          }
        }
      }
    },
    "transportInfoType": {
      "type": "object",
      "properties": {
        "carrierCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "comments": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "dateTime": {
          "type": "string",
          "format": "date-time"
        },
        "stationCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transportCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transportationReqd": {
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "trxCodesInfoType": {
      "description": "List of Transaction codes info.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxInfoType"
      }
    },
    "trxInfoType": {
      "description": "Transaction codes info.",
      "type": "object",
      "properties": {
        "articles": {
          "description": "The List of Articles defined for this transaction code, when using the Articles functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/articleInfoType"
          }
        },
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel context of the Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "printTrxReceipt": {
          "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
          "type": "boolean"
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionGroup": {
          "description": "Category of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionSubGroup": {
          "description": "Sub category of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "typeOfMessageType": {
      "description": "The type of Message for Guest Messages.",
      "type": "string",
      "enum": [
        "Tm",
        "Vm"
      ]
    },
    "uRLInfoType": {
      "description": "Web site address.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "url": {
          "description": "Provides URL information.",
          "$ref": "#/definitions/uRLType"
        }
      }
    },
    "uRLType": {
      "description": "Web site address, in IETF(The Internet Engineering Task Force) specified format.",
      "type": "object",
      "properties": {
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "type": {
          "description": "Defines the purpose of the URL address, such as personal, business, public, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "uniqueIDListType": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "uniqueID_Type": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "upsellInfoType": {
      "description": "Information regarding upsell for a reservation.",
      "type": "object",
      "properties": {
        "originalInfo": {
          "description": "Original Values of the reservation prior to upgrade.",
          "type": "object",
          "properties": {
            "nights": {
              "description": "The number of nights of the reservation before being upgraded.",
              "type": "integer"
            },
            "rentalCode": {
              "description": "The Rate Code of the Reservation before it was upgraded",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "roomType": {
              "description": "Original Reservation Room Type before being upgraded.",
              "$ref": "#/definitions/codeDescriptionType"
            },
            "totalAmount": {
              "description": "Total Amount of the reservation before it was upgraded.",
              "$ref": "#/definitions/currencyAmountType"
            }
          }
        },
        "upsellInfo": {
          "description": "Information of a reservation during the process of upgrade.",
          "type": "object",
          "properties": {
            "firstNightUpsellAmount": {
              "description": "First Night Total Amount including Upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "firstNightUpsellCharge": {
              "description": "First Night Upsell Charges.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "percentageSavings": {
              "description": "Percentage savings resulting from accepting upsell offer. This will be calculated as the ratio of the amount saved by accepting the upsell offer to the actual functionSpaceDetails rate (i.e. functionSpaceDetails rate when upsell is not offered)",
              "type": "number",
              "maximum": 100,
              "minimum": 0
            },
            "roomLongDescription": {
              "description": "Detail description of the Room Type.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "roomType": {
              "description": "Reservation Room Type for Upsell.",
              "$ref": "#/definitions/codeDescriptionType"
            },
            "ruleCode": {
              "description": "Upsell rule code",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "ruleDescription": {
              "description": "Upsell rule description",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "ruleId": {
              "description": "Upsell Rule Id.",
              "type": "integer"
            },
            "totalActualRateAmount": {
              "description": "Actual Total Room Rate for the Target Upsell Room Type.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellCharge": {
              "description": "Amount that was charged for the upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellMoneyAmount": {
              "description": "Total Amount that was charged including upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellPoints": {
              "description": "Total Upsell Points.",
              "type": "integer"
            },
            "upsellDate": {
              "description": "The date on which reservation is upgraded.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "upsellUser": {
              "description": "User who upgraded the reservation.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            }
          }
        }
      }
    },
    "usedInModuleType": {
      "description": "Simple type for indicating the module for which user wants to create the SellMessage. Valid module types are Look To Book Sales,Reservations,Blocks,Function Diary and Group Rooms Control.",
      "type": "string",
      "enum": [
        "Blocks",
        "Reservations",
        "FunctionDiary",
        "LookToBookSales",
        "GroupRoomsControl"
      ]
    },
    "userDefinedFieldsType": {
      "description": "A common type used to hold user defined fields(UDFs). This type should be used to handle UDFs on RReservation, Profiles, etc.",
      "type": "object",
      "properties": {
        "characterUDFs": {
          "description": "Collection of user defined fields of Character/String Type.",
          "$ref": "#/definitions/characterUDFsType"
        },
        "dateUDFs": {
          "description": "Collection of user defined fields of Date Type.",
          "$ref": "#/definitions/dateUDFsType"
        },
        "numericUDFs": {
          "description": "Collection of user defined fields of Numeric Type.",
          "$ref": "#/definitions/numericUDFsType"
        }
      }
    },
    "userInfoType": {
      "description": "Opera User Information",
      "type": "object",
      "properties": {
        "userId": {
          "description": "User Id of the Opera User",
          "type": "integer"
        },
        "userName": {
          "description": "Name of the Opera User",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "userSessionDefaultsType": {
      "type": "object",
      "properties": {
        "baseLanguage": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyFormat": {
          "type": "string"
        },
        "dbDateFormat": {
          "type": "string"
        },
        "defaultLanguage": {
          "type": "string"
        },
        "javaDateFormat": {
          "type": "string"
        },
        "javaTimeFormat": {
          "type": "string"
        },
        "oracleDateFormat": {
          "type": "string"
        },
        "oracleTimeFormat": {
          "type": "string"
        }
      }
    },
    "userSessionInfoType": {
      "type": "object",
      "properties": {
        "businessDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "cROCountryCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "chain": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cro": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "hotel": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "parameters": {
          "$ref": "#/definitions/parametersType"
        },
        "runningApp": {
          "type": "string"
        },
        "sessionDefaults": {
          "$ref": "#/definitions/userSessionDefaultsType"
        },
        "shareProfiles": {
          "type": "boolean"
        },
        "systemDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "terminal": {
          "type": "string"
        }
      }
    },
    "vIPStatusType": {
      "description": "VIP status of the customer.",
      "type": "object",
      "properties": {
        "code": {
          "description": "VIP status of the customer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Used for Character Strings, length 0 to 2000.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "vIPType": {
      "description": "The supplier's ranking of the customer.",
      "type": "object",
      "properties": {
        "vipCode": {
          "description": "VIP Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "vipDescription": {
          "description": "VIP Description.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "visaInfoType": {
      "type": "object",
      "properties": {
        "visaExpiryDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaIssueDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaNumber": {
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "waitlistResType": {
      "description": "Information regarding why reservation is being /has been waitlisted.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description why the reservation is being /has been waitlisted.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "priorityCode": {
          "description": "Waitlist Priority Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "priorityDescription": {
          "description": "Waitlist priority Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reasonCode": {
          "description": "Waitlist Reason Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonDescription": {
          "description": "Waitlist Reason Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "telephone": {
          "description": "Guest telephone number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "waitlistedEventProcessingInstructionsType": {
      "description": "A collection of supported processing instructions for waitlisted catering events.",
      "type": "string",
      "enum": [
        "IncreasePriority",
        "DecreasePriority",
        "ForceAvailability",
        "Reassign"
      ]
    },
    "waitlistedEventType": {
      "description": "Catering Event information.",
      "type": "object",
      "properties": {
        "altEventsDetail": {
          "description": "Pertain detail information of alternate event/events in case functionspace for current event becomes unavailable",
          "$ref": "#/definitions/lightEventsDetailType"
        },
        "currentEventsHoldingFunctionSpace": {
          "description": "Collection of catering events holding the Function Space this catering event is waitlisted.",
          "$ref": "#/definitions/eventsInfoType"
        },
        "eventBlockInfo": {
          "description": "Pertain information for block where event belongs to.",
          "$ref": "#/definitions/blockType"
        },
        "eventDetail": {
          "description": "Pertain detail event's information.",
          "$ref": "#/definitions/eventDetailType"
        },
        "eventIndicators": {
          "description": "Indicators of additional information attached to the event",
          "$ref": "#/definitions/indicatorsType"
        },
        "eventNotes": {
          "description": "Pertain event's notes.",
          "$ref": "#/definitions/eventNotesType"
        },
        "eventPrimaryInfo": {
          "description": "Pertain event primary information.",
          "$ref": "#/definitions/eventPrimaryInfoType"
        },
        "eventResources": {
          "description": "Pertain detail event's information.",
          "$ref": "#/definitions/eventResourcesListType"
        },
        "eventRevenues": {
          "description": "Pertain event revenues.",
          "$ref": "#/definitions/eventRevenuesInformationType"
        },
        "functionSpaceInformation": {
          "description": "Pertain event's function space information.",
          "$ref": "#/definitions/eventFunctionSpaceType"
        },
        "masterEventDetail": {
          "description": "Pertain detail information of master event.",
          "$ref": "#/definitions/lightEventDetailType"
        },
        "onTheBooksRevenue": {
          "description": "On The Books (OTB) catering revenue for the event.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "priority": {
          "description": "Waitlist priority to determine event that gets function space when it becomes available.",
          "type": "integer"
        },
        "processInstructions": {
          "description": "Instructions to control how the event is created.",
          "$ref": "#/definitions/eventProcessInstructionsType"
        },
        "subEventsDetail": {
          "description": "Pertain detail information of sub event/events.",
          "$ref": "#/definitions/lightEventsDetailType"
        },
        "updateDate": {
          "description": "Date when waitlist was modified.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "updateUser": {
          "description": "User id who modified the waitlist record.",
          "type": "integer"
        },
        "waitlistDate": {
          "description": "Date when function space got waitlisted.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "waitlistId": {
          "description": "Unique identifier for waitlist record.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "waitlistedEvents": {
      "description": "Response object for retrieving waitlisted and current events holding the function space.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "waitlistedEventsGroups": {
          "description": "Collection of waitlisted catering events.",
          "$ref": "#/definitions/waitlistedEventsGroupsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "waitlistedEventsGroupsType": {
      "description": "Collection of events waitlisted for a function space.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/waitlistedEventsType"
      }
    },
    "waitlistedEventsSearchType": {
      "description": "Request object for retrieving waitlisted and current events holding the function space.",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Search a specific account's waitlisted events.",
          "type": "string"
        },
        "blockId": {
          "description": "Search a specific block's waitlisted events using a block Id.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "blockName": {
          "description": "Search a specific block's waitlisted events.",
          "type": "string"
        },
        "functionSpaceCode": {
          "description": "Function space collection from which the waitlisted events to be fetch are scheduled.",
          "$ref": "#/definitions/codeListType"
        },
        "hotelId": {
          "description": "Hotel code of Function Space.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "waitlistedTimeSpan": {
          "description": "Date range to search for waitlisted events.",
          "$ref": "#/definitions/dateTimeSpanType"
        }
      }
    },
    "waitlistedEventsType": {
      "description": "Pertain waitlisted event Information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/waitlistedEventType"
      }
    },
    "warningType": {
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "type": "object",
      "properties": {
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "maxLength": 8,
          "minLength": 1
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning elementSpace MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "description": "Used in conjunction with the Success elementSpace to define a business error.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "welcomeOfferOptionsType": {
      "description": "None of the Welcome Offer option is selected.",
      "type": "string",
      "enum": [
        "BonusPoints",
        "Ecoupons",
        "Items",
        "PostIt",
        "NotSelected"
      ]
    },
    "welcomeOfferType": {
      "type": "object",
      "properties": {
        "status": {
          "description": "Determines the status of the welcome offer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Determines the welcome offer option selected while availing the welcome offer.",
          "$ref": "#/definitions/welcomeOfferOptionsType"
        }
      }
    }
  },
  "tags": [
    {
      "description": "The Event APIs will allow you to retrieve, create, manage and delete events and related event functionality such as event resources, catering packages and even event waitlists.",
      "name": "EventManagement"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}