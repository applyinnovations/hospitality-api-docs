{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "title": "OPERA Cloud Enterprise Configuration API",
    "version": "23.2",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality-integrations_ww@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "basePath": "/ent/config/v1",
  "paths": {
    "/airports": {
      "get": {
        "description": "Use this API to get template airports. <p><strong>OperationId:</strong>getTemplateAirports</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get template airports",
        "operationId": "getTemplateAirports",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Airport code identifying the airport.",
            "name": "airportCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching template airports.",
            "schema": {
              "$ref": "#/definitions/templateAirportsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TemplateAirports not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create new template airports. <p><strong>OperationId:</strong>postTemplateAirports</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create new template airports",
        "operationId": "postTemplateAirports",
        "parameters": [
          {
            "description": "Request object for creating new template airports.",
            "name": "templateAirportsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateAirportsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/airports/{airportCode}": {
      "put": {
        "description": "Use this API to update airport templates based on airportCode, templateAirportsToBeChanged. <p><strong>OperationId:</strong>changeTemplateAirports</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change template airports",
        "operationId": "changeTemplateAirports",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of airport.",
            "name": "airportCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for modifying template airports.",
            "name": "templateAirportsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateAirportsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete airport templates based on airportCode. <p><strong>OperationId:</strong>removeTemplateAirports</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete template airports",
        "operationId": "removeTemplateAirports",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of airport.",
            "name": "airportCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/amenities": {
      "get": {
        "description": " Use this API to get template amenities. <p><strong>OperationId:</strong>getTemplateAmenities</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": " Get template amenities",
        "operationId": "getTemplateAmenities",
        "parameters": [
          {
            "type": "boolean",
            "description": "Is it a General amenity type.",
            "name": "general",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Is it a Meeting amenity type.",
            "name": "meeting",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "amenityCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching amenities at the template level.",
            "schema": {
              "$ref": "#/definitions/templateAmenitiesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TemplateAmenities not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create template amenities. <p><strong>OperationId:</strong>postTemplateAmenities</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create template amenities",
        "operationId": "postTemplateAmenities",
        "parameters": [
          {
            "description": "Request object for creating amenities at the template level.",
            "name": "templateAmenitiesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateAmenitiesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/amenities/{featureCode}": {
      "put": {
        "description": "Use this API to update amenity templates based on featureCode, templateAmenitiesToBeChanged. <p><strong>OperationId:</strong>changeTemplateAmenities</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change template amenities",
        "operationId": "changeTemplateAmenities",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of feature.",
            "name": "featureCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing amenities at the template level.",
            "name": "templateAmenitiesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateAmenitiesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete amenity templates based on featureCode. <p><strong>OperationId:</strong>removeTemplateAmenities</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete template amenities",
        "operationId": "removeTemplateAmenities",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of feature.",
            "name": "featureCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/attractionClasses": {
      "get": {
        "description": "Use this API to get Attraction Classes. <p><strong>OperationId:</strong>getAttractionClasses</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Attraction Classes",
        "operationId": "getAttractionClasses",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Attraction Classes.",
            "schema": {
              "$ref": "#/definitions/attractionClassesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AttractionClasses not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Attraction Classes. <p><strong>OperationId:</strong>postAttractionClasses</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Attraction Classes",
        "operationId": "postAttractionClasses",
        "parameters": [
          {
            "description": "Request object for creating Attraction Classes.",
            "name": "attractionClassesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/attractionClassesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/attractionClasses/{attractionClassCode}": {
      "put": {
        "description": "Use this API to update Attraction Classes. <p><strong>OperationId:</strong>putAttractionClasses</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Attraction Classes",
        "operationId": "putAttractionClasses",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Attraction Classes.",
            "name": "attractionClassCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Attraction Classes.",
            "name": "attractionClassesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/attractionClassesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete Attraction Classes. <p><strong>OperationId:</strong>deleteAttractionClasses</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Attraction Classes",
        "operationId": "deleteAttractionClasses",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Attraction Classes.",
            "name": "attractionClassCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/attractions": {
      "get": {
        "description": "This API accepts the attraction template request search criteria and fetches the attraction templates that match the criteria. <p><strong>OperationId:</strong>getAttractionTemplates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Attraction Template",
        "operationId": "getAttractionTemplates",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "attractionCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "classCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for information regarding attraction templates.",
            "schema": {
              "$ref": "#/definitions/attractionTemplatesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AttractionTemplates not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "This API is used to create a new attraction template based on the request. . <p><strong>OperationId:</strong>postAttractionTemplates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create Attraction Template",
        "operationId": "postAttractionTemplates",
        "parameters": [
          {
            "description": "Request object for creating a new attraction code template.",
            "name": "attractionTemplatesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/attractionTemplatesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/attractions/{attractionCode}": {
      "put": {
        "description": "Use this API to update attraction templates based on attractionCode, attractionTemplatesToBeChanged. <p><strong>OperationId:</strong>changeAttractionTemplates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change Attraction Template",
        "operationId": "changeAttractionTemplates",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of attraction template.",
            "name": "attractionCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for modifying the existing attraction attraction templates.",
            "name": "attractionTemplatesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/attractionTemplatesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete attraction templates based on attractionCode. <p><strong>OperationId:</strong>removeAttractionTemplates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete an existing attraction template",
        "operationId": "removeAttractionTemplates",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of attraction template.",
            "name": "attractionCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/brandCodes": {
      "get": {
        "description": "Use this API to return brand codes based on search criteria such as codes, wildCard, description. Brand codes are used for different hotel brands within a hotel corporation.<p><strong>OperationId:</strong>getBrandCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get brand codes",
        "operationId": "getBrandCodes",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Brand Codes.",
            "schema": {
              "$ref": "#/definitions/brandCodesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "BrandCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Brand Codes. <p><strong>OperationId:</strong>postBrandCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Brand Codes",
        "operationId": "postBrandCodes",
        "parameters": [
          {
            "description": "Request object for creating Brand Codes.",
            "name": "brandCodesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/brandCodesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/brandCodes/{brandCode}": {
      "put": {
        "description": "Use this API to update brand codes based on brandCode, brandCodesToBeChanged. Brand codes are used for different hotel brands within a hotel corporation. <p><strong>OperationId:</strong>changeBrandCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Brand Code",
        "operationId": "changeBrandCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Brand.",
            "name": "brandCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Brand Codes.",
            "name": "brandCodesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/brandCodesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete brand codes based on brandCode, brandCodesCodes. Brand codes are used for different hotel brands within a hotel corporation. <p><strong>OperationId:</strong>removeBrandCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Brand Code",
        "operationId": "removeBrandCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Brand.",
            "name": "brandCode",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "brandCodesCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/calendar": {
      "get": {
        "description": "Use this API to get detailed information of calendar entries for a date range. <p><strong>OperationId:</strong>getPropertyCalendar</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Hotel Calendar",
        "operationId": "getPropertyCalendar",
        "parameters": [
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query",
            "required": true
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "DayType",
                "Event"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Indicates entries for a day in calendar. Entries can vary between day types, events, etc.",
            "name": "fetchInstructions",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Hotel for which calendar is being represented.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching calendar entries for a hotel.",
            "schema": {
              "$ref": "#/definitions/hotelCalendarDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "PropertyCalendar not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/chain": {
      "get": {
        "description": "Use this API to get Chains. <p><strong>OperationId:</strong>getChain</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Chains",
        "operationId": "getChain",
        "parameters": [
          {
            "type": "boolean",
            "name": "enforceSecurity",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "includeActive",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "chainCodes",
            "in": "query"
          },
          {
            "type": "string",
            "name": "chainName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Chain.",
            "schema": {
              "$ref": "#/definitions/chainDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Chain not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/chain/{chainCode}": {
      "put": {
        "description": "Use this API to update Chain. <p><strong>OperationId:</strong>putChain</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Chain",
        "operationId": "putChain",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Chain.",
            "name": "chainCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Chain.",
            "name": "chainToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/chainToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/communicationMethodsEntDetails": {
      "get": {
        "description": "Use this API to get Communication Methods Ent Details. <p><strong>OperationId:</strong>getCommunicationMethodsEntDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Communication Methods Ent Details",
        "operationId": "getCommunicationMethodsEntDetails",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Communication Methods Ent Details.",
            "schema": {
              "$ref": "#/definitions/communicationMethodsEntDetailsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CommunicationMethodsEntDetails not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Communication Methods Ent Details. <p><strong>OperationId:</strong>postCommunicationMethodsEntDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Communication Methods Ent Details",
        "operationId": "postCommunicationMethodsEntDetails",
        "parameters": [
          {
            "description": "Request object for creating Communication Methods Ent Details.",
            "name": "communicationMethodsEntDetailsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/communicationMethodsEntDetailsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/communicationMethodsEntDetails/{communicationMethodsEntDetailsId}": {
      "put": {
        "description": "Use this API to update Communication Methods Ent Details. <p><strong>OperationId:</strong>putCommunicationMethodsEntDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Communication Methods Ent Details",
        "operationId": "putCommunicationMethodsEntDetails",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Communication Methods Ent Details.",
            "name": "communicationMethodsEntDetailsId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Communication Methods Ent Details.",
            "name": "communicationMethodsEntDetailsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/communicationMethodsEntDetailsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete Communication Methods Ent Details. <p><strong>OperationId:</strong>deleteCommunicationMethodsEntDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Communication Methods Ent Details",
        "operationId": "deleteCommunicationMethodsEntDetails",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Communication Methods Ent Details.",
            "name": "communicationMethodsEntDetailsId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "communicationMethodsEntDetailsCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/configurations/activityLogs": {
      "get": {
        "description": "Use this API to Fetch Configuration Activity logs from Activity Group or Type. <p><strong>OperationId:</strong>getConfigActivityLog</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Configuration Activity Logs",
        "operationId": "getConfigActivityLog",
        "parameters": [
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "pageNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hotel code.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Reservation",
              "Contract",
              "Allotment",
              "Outlookview",
              "Profile",
              "Accountreceivables",
              "GdsConvRateCodes",
              "RateCode",
              "Billing",
              "Activity"
            ],
            "type": "string",
            "description": "Activity module.",
            "name": "module",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Name of the parameter.",
            "name": "parameterName",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Value of the parameter.",
            "name": "parameterValue",
            "in": "query"
          },
          {
            "type": "string",
            "name": "activityGroup",
            "in": "query"
          },
          {
            "type": "string",
            "name": "activityType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Search from date for the user activity log.",
            "name": "fromDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Search to date for the user activity log.",
            "name": "toDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search text for the user activity log.",
            "name": "searchText",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "integer"
            },
            "collectionFormat": "multi",
            "name": "userByIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "integer"
            },
            "collectionFormat": "multi",
            "name": "userForIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching configuration activity log.",
            "schema": {
              "$ref": "#/definitions/configActivityLogDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ConfigActivityLog not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create a new Activity Log. <p><strong>OperationId:</strong>postConfigActivityLog</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create a new Config Activity Log",
        "operationId": "postConfigActivityLog",
        "parameters": [
          {
            "description": "Request object for creating Config Activity Logs.",
            "name": "createConfigActivityLogCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/createConfigActivityLogCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/corporateBusinessUnits": {
      "get": {
        "description": "Use this API to get Corporate Business Units. <p><strong>OperationId:</strong>getCorporateBusinessUnits</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Corporate Business Units",
        "operationId": "getCorporateBusinessUnits",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Corporate Business Units.",
            "schema": {
              "$ref": "#/definitions/corporateBusinessUnitsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CorporateBusinessUnits not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Corporate Business Units. <p><strong>OperationId:</strong>postCorporateBusinessUnits</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Corporate Business Units",
        "operationId": "postCorporateBusinessUnits",
        "parameters": [
          {
            "description": "Request object for creating Corporate Business Units.",
            "name": "corporateBusinessUnitsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/corporateBusinessUnitsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/corporateBusinessUnits/{businessUnitCode}": {
      "put": {
        "description": "Use this API to update Corporate Business Units based on businessUnitCode, corporateBusinessUnitsToBeChanged. <p><strong>OperationId:</strong>changeCorporateBusinessUnits</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Corporate Business Units",
        "operationId": "changeCorporateBusinessUnits",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Business Units.",
            "name": "businessUnitCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Corporate Business Units.",
            "name": "corporateBusinessUnitsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/corporateBusinessUnitsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete Corporate Business Units. <p><strong>OperationId:</strong>removeCorporateBusinessUnits</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Corporate Business Units",
        "operationId": "removeCorporateBusinessUnits",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Business Units.",
            "name": "businessUnitCode",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "corporateBusinessUnitsCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/corporateDepartmentCodes": {
      "get": {
        "description": "Use this API to get Corporate Department Codes. <p><strong>OperationId:</strong>getCorporateDepartmentCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Corporate Department Codes",
        "operationId": "getCorporateDepartmentCodes",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Corporate Department Codes.",
            "schema": {
              "$ref": "#/definitions/corporateDepartmentCodesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CorporateDepartmentCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Corporate Department Codes. <p><strong>OperationId:</strong>postCorporateDepartmentCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Corporate Department Codes",
        "operationId": "postCorporateDepartmentCodes",
        "parameters": [
          {
            "description": "Request object for creating Corporate Department Codes.",
            "name": "corporateDepartmentCodesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/corporateDepartmentCodesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/corporateDepartmentCodes/{departmentCode}": {
      "put": {
        "description": "Use this API to update corporate department codes based on departmentCode, corporateDepartmentCodesToBeChanged. <p><strong>OperationId:</strong>changeCorporateDepartmentCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Corporate Department Codes",
        "operationId": "changeCorporateDepartmentCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Department.",
            "name": "departmentCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Corporate Department Codes.",
            "name": "corporateDepartmentCodesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/corporateDepartmentCodesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete corporate department codes based on departmentCode. <p><strong>OperationId:</strong>removeCorporateDepartmentCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Corporate Department Codes",
        "operationId": "removeCorporateDepartmentCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Department.",
            "name": "departmentCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/corporateDivisions": {
      "get": {
        "description": "Use this API to get Corporate Divisions. <p><strong>OperationId:</strong>getCorporateDivisions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Corporate Divisions",
        "operationId": "getCorporateDivisions",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Corporate Divisions.",
            "schema": {
              "$ref": "#/definitions/corporateDivisionsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CorporateDivisions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Corporate Divisions. <p><strong>OperationId:</strong>postCorporateDivisions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Corporate Divisions",
        "operationId": "postCorporateDivisions",
        "parameters": [
          {
            "description": "Request object for creating Corporate Divisions.",
            "name": "corporateDivisionsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/corporateDivisionsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/corporateDivisions/{divisionCode}": {
      "put": {
        "description": "Use this API to update corporate divisions based on divisionCode, corporateDivisionsToBeChanged. <p><strong>OperationId:</strong>changeCorporateDivisions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Corporate Divisions",
        "operationId": "changeCorporateDivisions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Corporate Divisions.",
            "name": "divisionCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Corporate Divisions.",
            "name": "corporateDivisionsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/corporateDivisionsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete corporate divisions based on divisionCode, corporateDivisionsCodes. <p><strong>OperationId:</strong>removeCorporateDivisions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Corporate Divisions",
        "operationId": "removeCorporateDivisions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Corporate Divisions.",
            "name": "divisionCode",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "corporateDivisionsCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/corporateOperatingUnits": {
      "get": {
        "description": "Use this API to get Corporate Operating Units. <p><strong>OperationId:</strong>getCorporateOperatingUnits</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Corporate Operating Units",
        "operationId": "getCorporateOperatingUnits",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Corporate Operating Units.",
            "schema": {
              "$ref": "#/definitions/corporateOperatingUnitsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CorporateOperatingUnits not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Corporate Operating Units. <p><strong>OperationId:</strong>postCorporateOperatingUnits</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Corporate Operating Units",
        "operationId": "postCorporateOperatingUnits",
        "parameters": [
          {
            "description": "Request object for creating Corporate Operating Units.",
            "name": "corporateOperatingUnitsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/corporateOperatingUnitsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/corporateOperatingUnits/{operatingUnitCode}": {
      "put": {
        "description": "Use this API to update corporate operating units based on operatingUnitCode, corporateOperatingUnitsToBeChanged. <p><strong>OperationId:</strong>changeCorporateOperatingUnits</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Corporate Operating Units",
        "operationId": "changeCorporateOperatingUnits",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Corporate Operating Units.",
            "name": "operatingUnitCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Corporate Operating Units.",
            "name": "corporateOperatingUnitsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/corporateOperatingUnitsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete corporate operating units based on operatingUnitCode, corporateOperatingUnitsCodes. <p><strong>OperationId:</strong>removeCorporateOperatingUnits</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Corporate Operating Units",
        "operationId": "removeCorporateOperatingUnits",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Corporate Operating Units.",
            "name": "operatingUnitCode",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "corporateOperatingUnitsCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/countries": {
      "get": {
        "description": "Use this API to get template Countries. <p><strong>OperationId:</strong>getTemplateCountries</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get template Countries",
        "operationId": "getTemplateCountries",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "countriesCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching template Countries.",
            "schema": {
              "$ref": "#/definitions/templateCountriesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TemplateCountries not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create template Countries. <p><strong>OperationId:</strong>postTemplateCountries</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create template Countries",
        "operationId": "postTemplateCountries",
        "parameters": [
          {
            "description": "Request object for creating new template Countries.",
            "name": "templateCountriesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateCountriesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/countries/guestTypes": {
      "get": {
        "description": "Use this API to get Country Guest Types. <p><strong>OperationId:</strong>getCountryGuestTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Country Guest Types",
        "operationId": "getCountryGuestTypes",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Philippines Country Guest Types.",
            "schema": {
              "$ref": "#/definitions/countryGuestTypesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CountryGuestTypes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Country Guest Types. <p><strong>OperationId:</strong>postCountryGuestTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Country Guest Types",
        "operationId": "postCountryGuestTypes",
        "parameters": [
          {
            "description": "Request object for creating Country Guest Types.",
            "name": "countryGuestTypesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/countryGuestTypesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/countries/guestTypes/{guestTypeCode}": {
      "put": {
        "description": "Use this API to update country guest types based on guestTypeCode, countryGuestTypesToBeChanged. <p><strong>OperationId:</strong>changeCountryGuestTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Country Guest Types",
        "operationId": "changeCountryGuestTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of guest type.",
            "name": "guestTypeCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Philippines Country Guest Types.",
            "name": "countryGuestTypesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/countryGuestTypesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete country guest types based on guestTypeCode, countryGuestTypesCodes. <p><strong>OperationId:</strong>removeCountryGuestTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Country Guest Types",
        "operationId": "removeCountryGuestTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of guest type.",
            "name": "guestTypeCode",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "countryGuestTypesCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/countries/{countryCode}": {
      "put": {
        "description": "Use this API to update country templates based on countryCode, templateCountriesToBeChanged. <p><strong>OperationId:</strong>changeTemplateCountries</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change template Countries",
        "operationId": "changeTemplateCountries",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of country.",
            "name": "countryCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for modifying template Countries.",
            "name": "templateCountriesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateCountriesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete country templates based on countryCode. <p><strong>OperationId:</strong>removeTemplateCountries</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete template Countries",
        "operationId": "removeTemplateCountries",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of country.",
            "name": "countryCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/countryMainGroups": {
      "get": {
        "description": "Use this API to get Country Main Groups. <p><strong>OperationId:</strong>getCountryMainGroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Country Main Groups",
        "operationId": "getCountryMainGroups",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Country Main Groups.",
            "schema": {
              "$ref": "#/definitions/countryMainGroupsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CountryMainGroups not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Country Main Groups. <p><strong>OperationId:</strong>postCountryMainGroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Country Main Groups",
        "operationId": "postCountryMainGroups",
        "parameters": [
          {
            "description": "Request object for creating Country Main Groups.",
            "name": "countryMainGroupsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/countryMainGroupsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/countryMainGroups/{groupCode}": {
      "put": {
        "description": "Use this API to update country main groups based on groupCode, countryMainGroupsToBeChanged. <p><strong>OperationId:</strong>changeCountryMainGroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Country Main Groups",
        "operationId": "changeCountryMainGroups",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Groups.",
            "name": "groupCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Country Main Groups.",
            "name": "countryMainGroupsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/countryMainGroupsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete country main groups based on groupCode, countryMainGroupsCodes. <p><strong>OperationId:</strong>removeCountryMainGroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Country Main Groups",
        "operationId": "removeCountryMainGroups",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Groups.",
            "name": "groupCode",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "countryMainGroupsCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/currencyExchangeRates": {
      "get": {
        "description": "Fetch the currency exchange rates when using this API. <p><strong>OperationId:</strong>getCurrencyExchangeRates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Currency Exchange Rates",
        "operationId": "getCurrencyExchangeRates",
        "parameters": [
          {
            "uniqueItems": true,
            "enum": [
              "Posting",
              "Settlement",
              "Exchangecash",
              "Travelagent",
              "Forecast",
              "Membership",
              "Exchangecheck",
              "Certificate"
            ],
            "type": "string",
            "description": "Exchange Rate Types",
            "name": "exchangeType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of Hotels for which the currency exchange rate information is required.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Currency Code for which the exchange rate is requested. Sending no currency code will return values for all available currency codes.",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "currencyCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "List of currency codes with their exchange rates.",
            "schema": {
              "$ref": "#/definitions/currencyExchangeRatesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CurrencyExchangeRates not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/dayTypeCodes": {
      "get": {
        "description": "Use this API to get Template Day Type Codes. <p><strong>OperationId:</strong>getTemplateDayTypeCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Template Day Type Codes",
        "operationId": "getTemplateDayTypeCodes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "dayTypesCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching template day type codes.",
            "schema": {
              "$ref": "#/definitions/templateDayTypeCodesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TemplateDayTypeCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to update day type code templates based on templateDayTypeCodesToBeChanged. <p><strong>OperationId:</strong>changeTemplateDayTypeCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change Template Day Type Codes",
        "operationId": "changeTemplateDayTypeCodes",
        "parameters": [
          {
            "description": "Request object for modifying template day type codes.",
            "name": "templateDayTypeCodesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateDayTypeCodesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Template Day Type Codes. <p><strong>OperationId:</strong>postTemplateDayTypeCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create Template Day Type Codes",
        "operationId": "postTemplateDayTypeCodes",
        "parameters": [
          {
            "description": "Request object for creating new template day type codes.",
            "name": "templateDayTypeCodesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateDayTypeCodesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete day type code templates based on templateDayTypeCodes. <p><strong>OperationId:</strong>removeTemplateDayTypeCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete Template Day Type Codes",
        "operationId": "removeTemplateDayTypeCodes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "templateDayTypeCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/dayTypes": {
      "put": {
        "description": "Use this API to update day types for a date range based on setDayTypes. <p><strong>OperationId:</strong>setDayTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Set day type for a date range",
        "operationId": "setDayTypes",
        "parameters": [
          {
            "description": "Request object for setting day type for specified date range.",
            "name": "setDayTypes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/setDayTypes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/dayTypes/{dayType}": {
      "delete": {
        "description": "Use this API to delete day types for a date range based on criteria such as dayType, hotelId, startDate, endDate, duration. <p><strong>OperationId:</strong>removeDayTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete day type for a date range",
        "operationId": "removeDayTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of day type.",
            "name": "dayType",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Day type code selected.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "friday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "monday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "saturday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "sunday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "thursday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "tuesday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "wednesday",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/defaultNote": {
      "get": {
        "description": "Use this API to get Default Note text. <p><strong>OperationId:</strong>getDefaultNote</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Default Note text",
        "operationId": "getDefaultNote",
        "parameters": [
          {
            "type": "string",
            "description": "Default Hotel Code for users",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Notes Group added to Search criteria",
            "name": "noteType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code of the Note Type added to the Search criteria",
            "name": "noteCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Default Application Note text.",
            "schema": {
              "$ref": "#/definitions/defaultNoteDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "DefaultNote not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/departments": {
      "get": {
        "description": "Use this API to get Departments. <p><strong>OperationId:</strong>getDepartments</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Departments",
        "operationId": "getDepartments",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "departmentCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "departmentWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching departments.",
            "schema": {
              "$ref": "#/definitions/departmentsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Departments not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Departments. <p><strong>OperationId:</strong>postDepartments</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create Departments",
        "operationId": "postDepartments",
        "parameters": [
          {
            "description": "Request object for creating new departments.",
            "name": "departmentsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/departmentsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/departments/{departmentCode}": {
      "put": {
        "description": "Use this API to update departments based on departmentCode, departmentsToBeChanged. <p><strong>OperationId:</strong>changeDepartments</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change Departments",
        "operationId": "changeDepartments",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of department.",
            "name": "departmentCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for updating departments.",
            "name": "departmentsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/departmentsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete departments based on departmentCode, hotelId. <p><strong>OperationId:</strong>removeDepartments</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete Departments",
        "operationId": "removeDepartments",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of department.",
            "name": "departmentCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Hotel where the code is configured.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotelCategories": {
      "get": {
        "description": ". <p><strong>OperationId:</strong>getHotelCategories</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Hotel Categories",
        "operationId": "getHotelCategories",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Hotel Categories.",
            "schema": {
              "$ref": "#/definitions/hotelCategoriesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "HotelCategories not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": ". <p><strong>OperationId:</strong>postHotelCategories</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Hotel Categories",
        "operationId": "postHotelCategories",
        "parameters": [
          {
            "description": "Request object for creating Hotel Categories.",
            "name": "hotelCategoriesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelCategoriesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotelCategories/{categoryCode}": {
      "put": {
        "description": "Use this API to update hotel categories based on categoryCode, hotelCategoriesToBeChanged. <p><strong>OperationId:</strong>changeHotelCategories</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Hotel Categories",
        "operationId": "changeHotelCategories",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Categories.",
            "name": "categoryCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Hotel Categories.",
            "name": "hotelCategoriesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelCategoriesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete hotel categories based on categoryCode. <p><strong>OperationId:</strong>removeHotelCategories</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Hotel Categories",
        "operationId": "removeHotelCategories",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Categories.",
            "name": "categoryCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotelDetails": {
      "get": {
        "description": "Use this API to get hotel details specified at the template level. <p><strong>OperationId:</strong>getTemplateHotelDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get hotel details specified at the template level",
        "operationId": "getTemplateHotelDetails",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelDetailCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelDetailCategoriesCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching hotel details at the template level.",
            "schema": {
              "$ref": "#/definitions/templateHotelDetailsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TemplateHotelDetails not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to update template hotel details based on templateHotelDetailsToBeChanged. <p><strong>OperationId:</strong>changeTemplateHotelDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change hotel details specified at the template level",
        "operationId": "changeTemplateHotelDetails",
        "parameters": [
          {
            "description": "Request object for changing hotel details at the template level.",
            "name": "templateHotelDetailsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateHotelDetailsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create hotel details at the template level. <p><strong>OperationId:</strong>postTemplateHotelDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create hotel details at the template level",
        "operationId": "postTemplateHotelDetails",
        "parameters": [
          {
            "description": "Request object for creating hotel details at the template level.",
            "name": "templateHotelDetailsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateHotelDetailsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete template hotel details based on templateHotelDetailCode, templateHotelDetailCategory. <p><strong>OperationId:</strong>removeTemplateHotelDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete hotel details specified at the template level",
        "operationId": "removeTemplateHotelDetails",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Specifies the hotel detail code.",
            "name": "templateHotelDetailCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Specifies the hotel detail category.",
            "name": "templateHotelDetailCategory",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotelDetails/copy": {
      "put": {
        "description": "Use this API to copy template hotel details to other properties. <p><strong>OperationId:</strong>copyHotelDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Copy template hotel details to other properties",
        "operationId": "copyHotelDetails",
        "parameters": [
          {
            "description": "Request object for copying template hotel details to hotel(s).",
            "name": "copyHotelDetails",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyHotelDetails"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels": {
      "get": {
        "description": "Use this API to return hotel configuration information based on search criteria such as hotelId, name.<p><strong>OperationId:</strong>getHotels</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get property configuration",
        "operationId": "getHotels",
        "parameters": [
          {
            "type": "string",
            "description": "Code identifying the hotel.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hotel name to be searched.",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching lists of Property summary information.",
            "schema": {
              "$ref": "#/definitions/hotelsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Hotels not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/attractions/{attractionCode}": {
      "delete": {
        "description": "Use this API to delete attractions by code based on attractionCode. <p><strong>OperationId:</strong>removeAttractionsByCode</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete Attractions",
        "operationId": "removeAttractionsByCode",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of attraction.",
            "name": "attractionCode",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}": {
      "get": {
        "description": "Use this API to return hotel configuration information details for a specific property.  Specific areas of configuration can be returned based on the fetchInstructions query parameter such as General, Attraction, Airports, Alternatehotels, Raterange, etc.<p><strong>OperationId:</strong>getHotel</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get hotel property configuration details",
        "operationId": "getHotel",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "General",
                "Attraction",
                "Transportation",
                "Package",
                "Dining",
                "Feature",
                "Directions",
                "GeneralNotes",
                "Airports",
                "Alternatehotels",
                "Miscellaneous",
                "Raterange",
                "Contacts",
                "EventSpaces",
                "Notes",
                "Corporateinformation",
                "Meetingrooms"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for hotel fetch instruction.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Property configuration information.",
            "schema": {
              "$ref": "#/definitions/hotelDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "hotelConfigInfo": {
                  "accommodationDetails": {
                    "accessibleRooms": 0,
                    "connectingRooms": 0,
                    "doubleRooms": 0,
                    "executiveFloorNo": "string",
                    "familyRooms": 0,
                    "guestRoomElevators": 0,
                    "guestRoomFloors": 0,
                    "maxAdultsInFamilyRoom": 0,
                    "maxChildrenInFamilyRoom": 0,
                    "nonSmokingRooms": 0,
                    "roomAmenties": "string",
                    "shopDescription": "string",
                    "singleRooms": 0,
                    "suites": 0,
                    "twinRooms": 0
                  },
                  "address": {
                    "addressLine": [
                      "string"
                    ],
                    "barCode": "string",
                    "cityExtension": "string",
                    "cityName": "string",
                    "country": {
                      "code": "string",
                      "value": "string"
                    },
                    "county": "string",
                    "createDateTime": "2020-08-26T15:00:10.503Z",
                    "creatorId": "string",
                    "language": "string",
                    "lastModifierId": "string",
                    "lastModifyDateTime": "2020-08-26T15:00:10.503Z",
                    "postalCode": "string",
                    "primaryInd": true,
                    "purgeDate": "2020-08-26",
                    "regionCode": "string",
                    "state": "string",
                    "type": "string",
                    "typeDescription": "string",
                    "updateReservations": true
                  },
                  "alternateHotels": [
                    {
                      "address": {
                        "addressLine": [
                          "string"
                        ],
                        "barCode": "string",
                        "cityExtension": "string",
                        "cityName": "string",
                        "country": {
                          "code": "string",
                          "value": "string"
                        },
                        "county": "string",
                        "createDateTime": "2020-08-26T15:00:10.504Z",
                        "creatorId": "string",
                        "language": "string",
                        "lastModifierId": "string",
                        "lastModifyDateTime": "2020-08-26T15:00:10.504Z",
                        "postalCode": "string",
                        "primaryInd": true,
                        "purgeDate": "2020-08-26",
                        "state": "string",
                        "type": "string",
                        "typeDescription": "string",
                        "updateReservations": true
                      },
                      "alternate": true,
                      "alternateHotelCode": "string",
                      "availableRooms": 0,
                      "chainCode": "string",
                      "chainName": "string",
                      "channelSummaryInfo": {
                        "bookingChannel": {
                          "channelCode": "string",
                          "channelName": "string",
                          "channelType": "string"
                        },
                        "messageId": "string",
                        "summaryOnly": true
                      },
                      "comments": "string",
                      "contactNumbers": [
                        {
                          "createDateTime": "2020-08-26T15:00:10.504Z",
                          "creatorId": "string",
                          "extension": "string",
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-08-26T15:00:10.504Z",
                          "orderSequence": 0,
                          "phoneNumber": "string",
                          "phoneTechType": "string",
                          "phoneUseType": "string",
                          "phoneUseTypeDescription": "string",
                          "primaryInd": true,
                          "purgeDate": "2020-08-26"
                        }
                      ],
                      "currencyExchangeRates": [
                        {
                          "currencyCode": "string",
                          "currencySymbol": "string",
                          "decimalPlaces": 0,
                          "description": "string",
                          "exchangeRate": {
                            "amount": 0,
                            "currencyCode": "string"
                          }
                        }
                      ],
                      "direction": "string",
                      "displayOrder": 0,
                      "event": true,
                      "hotelAmenities": [
                        {
                          "code": "string",
                          "description": "string",
                          "displayOrder": 0,
                          "type": "string"
                        }
                      ],
                      "hotelCityCode": "string",
                      "hotelCodeContext": "string",
                      "hotelId": "string",
                      "hotelName": "string",
                      "hotelType": "string",
                      "inventoryRooms": 0,
                      "maxRate": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "minRate": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "negotiated": true,
                      "newAlternateHotelCode": "string",
                      "rateRoomDetails": {
                        "memberships": [
                          {
                            "associatedReservationsOnly": true,
                            "membershipId": "string",
                            "membershipLevel": [
                              "string"
                            ],
                            "membershipType": [
                              "string"
                            ]
                          }
                        ],
                        "restrictionType": "Closed",
                        "roomStays": [
                          {
                            "arrivalDate": "2020-08-26",
                            "bookingMedium": "string",
                            "bookingMediumDescription": "string",
                            "departureDate": "2020-08-26",
                            "expectedTimes": {
                              "reservationExpectedArrivalTime": "2020-08-26T15:00:10.520Z",
                              "reservationExpectedDepartureTime": "2020-08-26T15:00:10.520Z"
                            },
                            "guarantee": {
                              "guaranteeCode": "string",
                              "onHold": true,
                              "shortDescription": "string"
                            },
                            "guestCounts": {
                              "adults": 0,
                              "childAges": [
                                {
                                  "age": 0
                                }
                              ],
                              "childBuckets": {
                                "bucket1Count": 0,
                                "bucket2Count": 0,
                                "bucket3Count": 0,
                                "bucket4Count": 0,
                                "bucket5Count": 0
                              },
                              "children": 0
                            },
                            "mobileNotifications": {
                              "checkoutMessageReceived": true,
                              "errorMessage": "string",
                              "keyReady": "Pending",
                              "requiresAction": true,
                              "roomReady": "Pending"
                            },
                            "multiValueAttrs": [
                              "string"
                            ],
                            "originalTimeSpan": {
                              "duration": "string",
                              "endDate": "2020-08-26",
                              "startDate": "2020-08-26"
                            },
                            "primaryShareType": "Primary",
                            "printRate": true,
                            "promotion": {
                              "couponCode": "string",
                              "promotionCode": "string",
                              "promotionName": "string"
                            },
                            "remoteCheckInAllowed": true,
                            "roomNumberLocked": true,
                            "roomRates": [
                              {
                                "availability": "Available",
                                "awards": {
                                  "awardVouchers": [
                                    {
                                      "awardCode": "string",
                                      "voucherNo": "string"
                                    }
                                  ],
                                  "membershipNo": {
                                    "id": "string",
                                    "type": "string"
                                  },
                                  "originalRoomType": "string",
                                  "upgradeRoomType": "string"
                                },
                                "barRanking": 0,
                                "bogoDiscount": true,
                                "commissionAmount": 0,
                                "commissionCode": "string",
                                "commissionPercentage": 0,
                                "commissionable": true,
                                "complimentary": true,
                                "credentialsRequired": true,
                                "discountAllowed": true,
                                "end": "2020-08-26",
                                "fixedRate": true,
                                "foreignExchange": {
                                  "effectiveDate": "2020-08-26",
                                  "type": "string"
                                },
                                "guestCounts": {
                                  "adults": 0,
                                  "childAges": [
                                    {
                                      "age": 0
                                    }
                                  ],
                                  "childBuckets": {
                                    "bucket1Count": 0,
                                    "bucket2Count": 0,
                                    "bucket3Count": 0,
                                    "bucket4Count": 0,
                                    "bucket5Count": 0
                                  },
                                  "children": 0
                                },
                                "houseUseOnly": true,
                                "inventoryLender": "string",
                                "marketCode": "string",
                                "marketCodeDescription": "string",
                                "mealPlans": [
                                  {
                                    "breakfastIncluded": true,
                                    "code": "string",
                                    "dinnerIncluded": true,
                                    "included": true,
                                    "lunchIncluded": true
                                  }
                                ],
                                "numberOfUnits": 0,
                                "packages": [
                                  {
                                    "addRateCombinedLine": true,
                                    "addRateSeprateLine": true,
                                    "allowance": {
                                      "amount": 0,
                                      "currencyCode": "string"
                                    },
                                    "amount": {
                                      "amount": 0,
                                      "currencyCode": "string"
                                    },
                                    "calculationRule": "string",
                                    "description": [
                                      "string"
                                    ],
                                    "endDate": "2020-08-26",
                                    "endTime": "string",
                                    "includedInRate": true,
                                    "packageCode": "string",
                                    "postingRhythm": "string",
                                    "quantity": 0,
                                    "sellSeparate": true,
                                    "startDate": "2020-08-26",
                                    "startTime": "string"
                                  }
                                ],
                                "promotionCode": "string",
                                "pseudoRoom": true,
                                "rateDescription": "string",
                                "rateGroup": "string",
                                "rateLevel": "string",
                                "ratePlanCode": "string",
                                "rates": {
                                  "rate": [
                                    {
                                      "additionalGuestAmounts": [
                                        {
                                          "ageQualifyingCode": "ADULT",
                                          "amount": {
                                            "amountAfterTax": 0,
                                            "amountBeforeTax": 0,
                                            "code": "string",
                                            "currencyCode": "string",
                                            "currencySymbol": "string",
                                            "decimalPlaces": 0,
                                            "description": "string",
                                            "fees": {
                                              "amount": 0,
                                              "currencyCode": "string",
                                              "fee": [
                                                {
                                                  "amount": 0,
                                                  "code": "string",
                                                  "currencyCode": "string",
                                                  "description": "string",
                                                  "type": "Inclusive"
                                                }
                                              ]
                                            },
                                            "rateOverride": true,
                                            "taxes": {
                                              "amount": 0,
                                              "currencyCode": "string",
                                              "tax": [
                                                {
                                                  "amount": 0,
                                                  "code": "string",
                                                  "currencyCode": "string",
                                                  "description": "string",
                                                  "type": "Inclusive"
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ],
                                      "base": {
                                        "amountAfterTax": 0,
                                        "amountBeforeTax": 0,
                                        "code": "string",
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0,
                                        "description": "string",
                                        "fees": {
                                          "amount": 0,
                                          "currencyCode": "string",
                                          "fee": [
                                            {
                                              "amount": 0,
                                              "code": "string",
                                              "currencyCode": "string",
                                              "description": "string",
                                              "type": "Inclusive"
                                            }
                                          ]
                                        },
                                        "rateOverride": true,
                                        "taxes": {
                                          "amount": 0,
                                          "currencyCode": "string",
                                          "tax": [
                                            {
                                              "amount": 0,
                                              "code": "string",
                                              "currencyCode": "string",
                                              "description": "string",
                                              "type": "Inclusive"
                                            }
                                          ]
                                        }
                                      },
                                      "discount": {
                                        "amount": 0,
                                        "currencyCode": "string",
                                        "discountCode": "string",
                                        "discountReason": "string",
                                        "percent": 0
                                      },
                                      "effectiveRate": {
                                        "amountAfterTax": 0,
                                        "amountBeforeTax": 0,
                                        "code": "string",
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0,
                                        "description": "string",
                                        "fees": {
                                          "amount": 0,
                                          "currencyCode": "string",
                                          "fee": [
                                            {
                                              "amount": 0,
                                              "code": "string",
                                              "currencyCode": "string",
                                              "description": "string",
                                              "type": "Inclusive"
                                            }
                                          ]
                                        },
                                        "rateOverride": true,
                                        "taxes": {
                                          "amount": 0,
                                          "currencyCode": "string",
                                          "tax": [
                                            {
                                              "amount": 0,
                                              "code": "string",
                                              "currencyCode": "string",
                                              "description": "string",
                                              "type": "Inclusive"
                                            }
                                          ]
                                        }
                                      },
                                      "end": "2020-08-26",
                                      "requiredPoints": {
                                        "awardsType": "string",
                                        "points": 0
                                      },
                                      "shareDistributionInstruction": "Full",
                                      "shareRatePercentage": 0,
                                      "start": "2020-08-26",
                                      "total": {
                                        "amountAfterTax": 0,
                                        "amountBeforeTax": 0,
                                        "code": "string",
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0,
                                        "description": "string",
                                        "fees": {
                                          "amount": 0,
                                          "currencyCode": "string",
                                          "fee": [
                                            {
                                              "amount": 0,
                                              "code": "string",
                                              "currencyCode": "string",
                                              "description": "string",
                                              "type": "Inclusive"
                                            }
                                          ]
                                        },
                                        "rateOverride": true,
                                        "taxes": {
                                          "amount": 0,
                                          "currencyCode": "string",
                                          "tax": [
                                            {
                                              "amount": 0,
                                              "code": "string",
                                              "currencyCode": "string",
                                              "description": "string",
                                              "type": "Inclusive"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "rateRange": [
                                    {
                                      "base": [
                                        {
                                          "amountAfterTax": 0,
                                          "amountBeforeTax": 0,
                                          "code": "string",
                                          "currencyCode": "string",
                                          "currencySymbol": "string",
                                          "decimalPlaces": 0,
                                          "description": "string",
                                          "fees": {
                                            "amount": 0,
                                            "currencyCode": "string",
                                            "fee": [
                                              {
                                                "amount": 0,
                                                "code": "string",
                                                "currencyCode": "string",
                                                "description": "string",
                                                "type": "Inclusive"
                                              }
                                            ]
                                          },
                                          "rateOverride": true,
                                          "taxes": {
                                            "amount": 0,
                                            "currencyCode": "string",
                                            "tax": [
                                              {
                                                "amount": 0,
                                                "code": "string",
                                                "currencyCode": "string",
                                                "description": "string",
                                                "type": "Inclusive"
                                              }
                                            ]
                                          }
                                        }
                                      ],
                                      "rateChange": true
                                    }
                                  ]
                                },
                                "reservationBlock": {
                                  "blockIdList": [
                                    {
                                      "id": "string",
                                      "type": "string"
                                    }
                                  ],
                                  "blockName": "string",
                                  "hotelId": "string"
                                },
                                "roomId": "string",
                                "roomRateInfo": "string",
                                "roomType": "string",
                                "roomTypeCharged": "string",
                                "sourceCode": "string",
                                "sourceCodeDescription": "string",
                                "start": "2020-08-26",
                                "stayProfiles": [
                                  {
                                    "profile": {
                                      "addresses": {
                                        "addressInfo": [
                                          {
                                            "address": {
                                              "addressLine": [
                                                "string"
                                              ],
                                              "barCode": "string",
                                              "cityExtension": "string",
                                              "cityName": "string",
                                              "country": {
                                                "code": "string",
                                                "value": "string"
                                              },
                                              "county": "string",
                                              "createDateTime": "2020-08-26T15:00:10.507Z",
                                              "creatorId": "string",
                                              "language": "string",
                                              "lastModifierId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:00:10.507Z",
                                              "postalCode": "string",
                                              "primaryInd": true,
                                              "purgeDate": "2020-08-26",
                                              "state": "string",
                                              "type": "string",
                                              "typeDescription": "string",
                                              "updateReservations": true
                                            },
                                            "id": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "count": 0,
                                        "hasMore": true,
                                        "totalResults": 0
                                      },
                                      "businessSegments": [
                                        "string"
                                      ],
                                      "cashiering": {
                                        "arNoCentral": "string",
                                        "autoFolioSettlementType": "string",
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0,
                                        "directBillingList": [
                                          {
                                            "aRNumber": "string",
                                            "hotelId": "string"
                                          }
                                        ],
                                        "paymentDueDays": 0,
                                        "referenceCurrency": "string",
                                        "taxPercent1": 0,
                                        "taxPercent2": 0,
                                        "taxPercent3": 0,
                                        "taxPercent4": 0,
                                        "taxPercent5": 0,
                                        "vATOffsetYN": "string"
                                      },
                                      "comments": {
                                        "commentInfo": [
                                          {
                                            "comment": {
                                              "actionDate": "2020-08-26",
                                              "actionType": "string",
                                              "commentTitle": "string",
                                              "confidential": true,
                                              "createDateTime": "2020-08-26T15:00:10.507Z",
                                              "creatorId": "string",
                                              "hotelId": "string",
                                              "image": "string",
                                              "internal": true,
                                              "lastModifierId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:00:10.507Z",
                                              "notificationLocation": "string",
                                              "overrideInternal": true,
                                              "protectDescription": true,
                                              "purgeDate": "2020-08-26",
                                              "text": {
                                                "language": "string",
                                                "value": "string"
                                              },
                                              "type": "string",
                                              "typeDescription": "string",
                                              "url": "string"
                                            },
                                            "createDateTime": "2020-08-26T15:00:10.507Z",
                                            "creatorId": "string",
                                            "id": "string",
                                            "lastModifierId": "string",
                                            "lastModifyDateTime": "2020-08-26T15:00:10.507Z",
                                            "purgeDate": "2020-08-26",
                                            "type": "string"
                                          }
                                        ],
                                        "count": 0,
                                        "hasMore": true,
                                        "totalResults": 0
                                      },
                                      "commissionInfoList": [
                                        {
                                          "bankAccount": "string",
                                          "commissionCode": "string",
                                          "currencyCode": "string",
                                          "currencySymbol": "string",
                                          "decimalPlaces": 0,
                                          "hotelId": "string",
                                          "paymentMethod": "Cent"
                                        }
                                      ],
                                      "company": {
                                        "alternateLanguage": "string",
                                        "alternateName": "string",
                                        "blacklist": true,
                                        "businessLocale": "string",
                                        "businessTitle": "string",
                                        "commissionCode": "string",
                                        "companyName": "string",
                                        "companyName2": "string",
                                        "companyName3": "string",
                                        "corporateIdType": "string",
                                        "creditRating": "string",
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0,
                                        "iATAInfo": {
                                          "iATACompany": "string",
                                          "iATAConsortia": "string",
                                          "iATAValidationResult": true
                                        },
                                        "language": "string",
                                        "nationality": "string",
                                        "nationalityDescription": "string",
                                        "vipDescription": "string",
                                        "vipStatus": "string"
                                      },
                                      "createDateTime": "2020-08-26T15:00:10.519Z",
                                      "creatorId": "string",
                                      "customer": {
                                        "alienInfo": {
                                          "alienRegistrationNo": "string",
                                          "immigrationStatus": "string",
                                          "visaValidityType": "string"
                                        },
                                        "anonymization": {
                                          "anonymizationDate": "2020-08-26T15:00:10.506Z",
                                          "anonymizationStatus": "Requested"
                                        },
                                        "birthCountry": {
                                          "code": "string",
                                          "value": "string"
                                        },
                                        "birthDate": "2020-08-26",
                                        "birthDateMasked": "string",
                                        "birthPlace": "string",
                                        "blacklist": true,
                                        "businessTitle": "string",
                                        "citizenCountry": {
                                          "code": "string",
                                          "value": "string"
                                        },
                                        "companyInfo": {
                                          "department": "string",
                                          "legalCompany": "string",
                                          "position": "string"
                                        },
                                        "creditRating": "string",
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "customerValue": "string",
                                        "decimalPlaces": 0,
                                        "gender": "Male",
                                        "identifications": {
                                          "count": 0,
                                          "hasMore": true,
                                          "identificationInfo": [
                                            {
                                              "id": "string",
                                              "identification": {
                                                "expirationDate": "2020-08-26",
                                                "idNumber": "string",
                                                "idNumberMasked": "string",
                                                "idType": "string",
                                                "issuedCountry": "string",
                                                "issuedDate": "2020-08-26",
                                                "issuedPlace": "string",
                                                "orderSequence": 0,
                                                "primaryInd": true,
                                                "registeredProperty": "string"
                                              },
                                              "type": "string"
                                            }
                                          ],
                                          "totalResults": 0
                                        },
                                        "language": "string",
                                        "legalCompany": "string",
                                        "nationality": "string",
                                        "nationalityDescription": "string",
                                        "personName": [
                                          {
                                            "envelopeGreeting": "string",
                                            "externalSystem": "string",
                                            "givenName": "string",
                                            "language": "string",
                                            "middleName": "string",
                                            "namePrefix": "string",
                                            "nameSuffix": "string",
                                            "nameTitle": "string",
                                            "nameTitleSuffix": 0,
                                            "nameType": "Primary",
                                            "salutation": "string",
                                            "surname": "string"
                                          }
                                        ],
                                        "privateProfile": true,
                                        "profession": "string",
                                        "vipDescription": "string",
                                        "vipStatus": "string"
                                      },
                                      "eCertificates": [
                                        {
                                          "awardId": {
                                            "id": "string",
                                            "idContext": "string",
                                            "idExtension": 0,
                                            "instance": "string",
                                            "type": "string",
                                            "url": "string"
                                          },
                                          "awardPoints": 0,
                                          "cancelRequestDate": "2020-08-26",
                                          "certificateId": 0,
                                          "certificateNo": "string",
                                          "consumptionDetail": {
                                            "authorizationCode": "string",
                                            "date": "2020-08-26",
                                            "email": "string",
                                            "firstName": "string",
                                            "hotelId": "string",
                                            "locationType": "string",
                                            "middleName": "string",
                                            "referenceId": {
                                              "id": "string",
                                              "type": "string"
                                            },
                                            "serviceDate": "2020-08-26",
                                            "source": "Central",
                                            "surname": "string",
                                            "userName": "string",
                                            "userNotes": "string"
                                          },
                                          "databaseId": "string",
                                          "eCertificateInfo": {
                                            "awardCode": "string",
                                            "benefitSummary": "string",
                                            "certificateType": "string",
                                            "cost": {
                                              "amount": 0,
                                              "currencyCode": "string"
                                            },
                                            "description": "string",
                                            "hotels": {
                                              "code": [
                                                "string"
                                              ],
                                              "scope": "Global"
                                            },
                                            "label": "string",
                                            "longDescription": "string",
                                            "maxExtensionAllowed": 0,
                                            "membershipType": "string",
                                            "promotionCode": "string",
                                            "usageCriteria": {
                                              "benefit": true,
                                              "cancelAllowed": true,
                                              "generateInLieuCertificate": true,
                                              "hotel": true,
                                              "reservation": true,
                                              "verifyCertificateNo": true,
                                              "web": true,
                                              "webAllowed": true
                                            },
                                            "value": {
                                              "amount": 0,
                                              "currencyCode": "string"
                                            },
                                            "voucherBenefitCode": "string"
                                          },
                                          "expiryDate": "2020-08-26",
                                          "extensionCount": 0,
                                          "generationDetail": {
                                            "generationDetail": "string",
                                            "referenceValue": "string",
                                            "ruleId": {
                                              "id": "string",
                                              "type": "string"
                                            }
                                          },
                                          "inLieuSequence": 0,
                                          "inactiveDate": "2020-08-26",
                                          "issueDate": "2020-08-26",
                                          "issueType": "Assigned",
                                          "newExpiryDate": "2020-08-26",
                                          "originalCertificateNo": "string",
                                          "originalVoucherNo": "string",
                                          "printed": true,
                                          "profileId": {
                                            "id": "string",
                                            "idContext": "string",
                                            "idExtension": 0,
                                            "instance": "string",
                                            "type": "string",
                                            "url": "string"
                                          },
                                          "source": "Opera",
                                          "status": "Cancelled",
                                          "voucherNo": "string"
                                        }
                                      ],
                                      "eligibleForFiscalFolio": "string",
                                      "emails": {
                                        "count": 0,
                                        "emailInfo": [
                                          {
                                            "email": {
                                              "createDateTime": "2020-08-26T15:00:10.507Z",
                                              "creatorId": "string",
                                              "emailAddress": "string",
                                              "emailFormat": "Html",
                                              "lastModifierId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:00:10.507Z",
                                              "orderSequence": 0,
                                              "primaryInd": true,
                                              "purgeDate": "2020-08-26",
                                              "type": "string",
                                              "typeDescription": "string"
                                            },
                                            "id": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0
                                      },
                                      "gdsNegotiatedRates": {
                                        "count": 0,
                                        "gdsNegotiatedRate": [
                                          {
                                            "bookingChannelCode": "string",
                                            "channelRatePlanCode": "string",
                                            "gdsNegotiatedInfoList": [
                                              {
                                                "accessCode": "string",
                                                "end": "2020-08-26",
                                                "inactive": true,
                                                "order": 0,
                                                "start": "2020-08-26"
                                              }
                                            ],
                                            "hotelId": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0
                                      },
                                      "hasCommission": true,
                                      "influenceCode": "string",
                                      "inheritedNegRates": true,
                                      "keywords": {
                                        "count": 0,
                                        "hasMore": true,
                                        "keyword": [
                                          {
                                            "keyword": "string",
                                            "keywordDetail": {
                                              "newKeyword": "string"
                                            },
                                            "type": "string"
                                          }
                                        ],
                                        "totalResults": 0
                                      },
                                      "lastModifierId": "string",
                                      "lastModifyDateTime": "2020-08-26T15:00:10.519Z",
                                      "lastStayInfo": {
                                        "lastRate": {
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "lastRoom": "string",
                                        "lastVisit": "2020-08-26",
                                        "totalStay": 0
                                      },
                                      "localizationGuestType": "string",
                                      "mailingActions": {
                                        "active": true,
                                        "count": 0,
                                        "hasMore": true,
                                        "mailingAction": [
                                          {
                                            "code": "string",
                                            "description": "string"
                                          }
                                        ],
                                        "totalResults": 0
                                      },
                                      "markAsRecentlyAccessed": true,
                                      "markForHistory": true,
                                      "negotiatedRates": {
                                        "count": 0,
                                        "hasMore": true,
                                        "negotiatedRate": [
                                          {
                                            "hotelId": "string",
                                            "negotiatedInfoList": [
                                              {
                                                "comissionCode": "string",
                                                "corporateAgreementId": "string",
                                                "end": "2020-08-26",
                                                "inactive": true,
                                                "order": 0,
                                                "start": "2020-08-26"
                                              }
                                            ],
                                            "rateCode": "string"
                                          }
                                        ],
                                        "totalResults": 0
                                      },
                                      "ownerCode": "string",
                                      "preferenceCollection": {
                                        "count": 0,
                                        "hasMore": true,
                                        "preferenceType": [
                                          {
                                            "availableQuantity": 0,
                                            "createDateTime": "2020-08-26T15:00:10.508Z",
                                            "creatorId": "string",
                                            "lastModifierId": "string",
                                            "lastModifyDateTime": "2020-08-26T15:00:10.508Z",
                                            "maxQuantity": 0,
                                            "maxResortUsedQuantity": 0,
                                            "preference": [
                                              {
                                                "description": "string",
                                                "excludedPreferencesCount": 0,
                                                "global": true,
                                                "hotels": [
                                                  "string"
                                                ],
                                                "preferenceId": "string",
                                                "preferenceValue": "string",
                                                "source": "string"
                                              }
                                            ],
                                            "preferenceType": "string",
                                            "preferenceTypeDescription": "string",
                                            "purgeDate": "2020-08-26",
                                            "reservationPreference": true,
                                            "sequence": "string"
                                          }
                                        ],
                                        "totalResults": 0
                                      },
                                      "privacyInfo": {
                                        "allowEmail": true,
                                        "allowPhone": true,
                                        "allowSMS": true,
                                        "autoEnrollLoyaltyProgram": true,
                                        "infoFromThirdParty": true,
                                        "lastPrivacyPromptDate": "2020-08-26",
                                        "marketResearchParticipation": true,
                                        "optInAutoEnrollmentMember": true,
                                        "optInEmail": true,
                                        "optInMailingList": true,
                                        "optInMarketResearch": true,
                                        "optInPhone": true,
                                        "optInSms": true,
                                        "optInThirdParty": true
                                      },
                                      "profileAccessType": {
                                        "chainCode": "string",
                                        "croCode": "string",
                                        "hotelId": "string",
                                        "sharedLevel": "Global"
                                      },
                                      "profileDeliveryMethods": {
                                        "count": 0,
                                        "hasMore": true,
                                        "profileDeliveryMethod": [
                                          {
                                            "deliveryId": {
                                              "id": "string",
                                              "type": "string"
                                            },
                                            "deliveryModule": "EfolioExport",
                                            "deliveryType": "string",
                                            "deliveryValue": "string",
                                            "hotelId": "string",
                                            "orderSequence": 0,
                                            "primaryInd": true
                                          }
                                        ],
                                        "totalResults": 0
                                      },
                                      "profileImage": {
                                        "chainCode": "string",
                                        "description": "string",
                                        "hotelId": "string",
                                        "imageOrder": 0,
                                        "imageSet": "string",
                                        "imageStyle": "Full",
                                        "imageType": "string",
                                        "imageURL": "string",
                                        "language": "string",
                                        "sequenceId": 0,
                                        "website": "string"
                                      },
                                      "profileIndicators": [
                                        {
                                          "count": 0,
                                          "indicatorName": "string"
                                        }
                                      ],
                                      "profileMemberships": {
                                        "count": 0,
                                        "hasMore": true,
                                        "profileMembership": [
                                          {
                                            "benefits": [
                                              {
                                                "code": "string",
                                                "inactive": true,
                                                "message": "string"
                                              }
                                            ],
                                            "centralSetup": true,
                                            "comment": {
                                              "image": "string",
                                              "text": {
                                                "language": "string",
                                                "value": "string"
                                              },
                                              "url": "string"
                                            },
                                            "createDateTime": "2020-08-26T15:00:10.508Z",
                                            "creatorId": "string",
                                            "currentPoints": 0,
                                            "downgrade": "Grace",
                                            "downgradeDescription": "string",
                                            "earningPreference": "Points",
                                            "effectiveDate": "2020-08-26",
                                            "enrollmentResort": "string",
                                            "enrollmentSource": "string",
                                            "excludeFromBatch": true,
                                            "expireDate": "2020-08-26",
                                            "expireDateExclusiveIndicator": true,
                                            "inactive": true,
                                            "lastModifierId": "string",
                                            "lastModifyDateTime": "2020-08-26T15:00:10.508Z",
                                            "memberStatus": "string",
                                            "membershipClass": "string",
                                            "membershipEnrollmentCode": "string",
                                            "membershipId": "string",
                                            "membershipIdNo": 0,
                                            "membershipLevel": "string",
                                            "membershipLevelDescription": "string",
                                            "membershipType": "string",
                                            "nameOnCard": "string",
                                            "newMembershipNumber": "string",
                                            "orderSequence": 0,
                                            "playerRanking": 0,
                                            "pointsLabel": "string",
                                            "preferredCard": true,
                                            "primaryMembership": true,
                                            "primaryMembershipYn": "string",
                                            "programDescription": "string",
                                            "purgeDate": "2020-08-26",
                                            "rating": "string",
                                            "reIssueNewCard": "Pending",
                                            "signupDate": "2020-08-26",
                                            "tierAdministration": "Disabled",
                                            "upgradeDescription": "string"
                                          }
                                        ],
                                        "totalResults": 0
                                      },
                                      "profileRestrictions": {
                                        "reason": "string",
                                        "reasonDescription": "string",
                                        "restricted": true
                                      },
                                      "profileType": "Guest",
                                      "protectedBy": "string",
                                      "purgeDate": "2020-08-26",
                                      "registeredProperty": "string",
                                      "relationships": {
                                        "count": 0,
                                        "hasMore": true,
                                        "relationship": [
                                          {
                                            "changeRelationship": {
                                              "id": "string",
                                              "relation": "string",
                                              "relationDescription": "string",
                                              "targetRelation": "string",
                                              "targetRelationDescription": "string"
                                            },
                                            "id": "string",
                                            "masterAccountInfo": {
                                              "masterAccountId": {
                                                "id": "string",
                                                "type": "string"
                                              },
                                              "masterAccountName": "string"
                                            },
                                            "relation": "string",
                                            "relationDescription": "string",
                                            "relationshipProfile": {
                                              "address": {
                                                "address": {
                                                  "addressLine": [
                                                    "string"
                                                  ],
                                                  "barCode": "string",
                                                  "cityExtension": "string",
                                                  "cityName": "string",
                                                  "country": {
                                                    "code": "string",
                                                    "value": "string"
                                                  },
                                                  "county": "string",
                                                  "createDateTime": "2020-08-26T15:00:10.513Z",
                                                  "creatorId": "string",
                                                  "language": "string",
                                                  "lastModifierId": "string",
                                                  "lastModifyDateTime": "2020-08-26T15:00:10.513Z",
                                                  "postalCode": "string",
                                                  "primaryInd": true,
                                                  "purgeDate": "2020-08-26",
                                                  "state": "string",
                                                  "type": "string",
                                                  "typeDescription": "string",
                                                  "updateReservations": true
                                                },
                                                "id": "string",
                                                "type": "string"
                                              },
                                              "changeProfileIdList": [
                                                {
                                                  "id": "string",
                                                  "type": "string"
                                                }
                                              ],
                                              "company": {
                                                "alternateLanguage": "string",
                                                "alternateName": "string",
                                                "blacklist": true,
                                                "businessLocale": "string",
                                                "businessTitle": "string",
                                                "commissionCode": "string",
                                                "companyName": "string",
                                                "companyName2": "string",
                                                "companyName3": "string",
                                                "corporateIdType": "string",
                                                "creditRating": "string",
                                                "currencyCode": "string",
                                                "currencySymbol": "string",
                                                "decimalPlaces": 0,
                                                "iATAInfo": {
                                                  "iATACompany": "string",
                                                  "iATAConsortia": "string",
                                                  "iATAValidationResult": true
                                                },
                                                "language": "string",
                                                "nationality": "string",
                                                "nationalityDescription": "string",
                                                "vipDescription": "string",
                                                "vipStatus": "string"
                                              },
                                              "customer": {
                                                "alienInfo": {
                                                  "alienRegistrationNo": "string",
                                                  "immigrationStatus": "string",
                                                  "visaValidityType": "string"
                                                },
                                                "anonymization": {
                                                  "anonymizationDate": "2020-08-26T15:00:10.508Z",
                                                  "anonymizationStatus": "Requested"
                                                },
                                                "birthCountry": {
                                                  "code": "string",
                                                  "value": "string"
                                                },
                                                "birthDate": "2020-08-26",
                                                "birthDateMasked": "string",
                                                "birthPlace": "string",
                                                "blacklist": true,
                                                "businessTitle": "string",
                                                "citizenCountry": {
                                                  "code": "string",
                                                  "value": "string"
                                                },
                                                "companyInfo": {
                                                  "department": "string",
                                                  "legalCompany": "string",
                                                  "position": "string"
                                                },
                                                "creditRating": "string",
                                                "currencyCode": "string",
                                                "currencySymbol": "string",
                                                "customerValue": "string",
                                                "decimalPlaces": 0,
                                                "gender": "Male",
                                                "identifications": {
                                                  "count": 0,
                                                  "hasMore": true,
                                                  "identificationInfo": [
                                                    {
                                                      "id": "string",
                                                      "identification": {
                                                        "expirationDate": "2020-08-26",
                                                        "idNumber": "string",
                                                        "idNumberMasked": "string",
                                                        "idType": "string",
                                                        "issuedCountry": "string",
                                                        "issuedDate": "2020-08-26",
                                                        "issuedPlace": "string",
                                                        "orderSequence": 0,
                                                        "primaryInd": true,
                                                        "registeredProperty": "string"
                                                      },
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "totalResults": 0
                                                },
                                                "language": "string",
                                                "legalCompany": "string",
                                                "nationality": "string",
                                                "nationalityDescription": "string",
                                                "personName": [
                                                  {
                                                    "envelopeGreeting": "string",
                                                    "externalSystem": "string",
                                                    "givenName": "string",
                                                    "language": "string",
                                                    "middleName": "string",
                                                    "namePrefix": "string",
                                                    "nameSuffix": "string",
                                                    "nameTitle": "string",
                                                    "nameTitleSuffix": 0,
                                                    "nameType": "Primary",
                                                    "salutation": "string",
                                                    "surname": "string"
                                                  }
                                                ],
                                                "privateProfile": true,
                                                "profession": "string",
                                                "vipDescription": "string",
                                                "vipStatus": "string"
                                              },
                                              "email": {
                                                "email": {
                                                  "createDateTime": "2020-08-26T15:00:10.513Z",
                                                  "creatorId": "string",
                                                  "emailAddress": "string",
                                                  "emailFormat": "Html",
                                                  "lastModifierId": "string",
                                                  "lastModifyDateTime": "2020-08-26T15:00:10.513Z",
                                                  "orderSequence": 0,
                                                  "primaryInd": true,
                                                  "purgeDate": "2020-08-26",
                                                  "type": "string",
                                                  "typeDescription": "string"
                                                },
                                                "id": "string",
                                                "type": "string"
                                              },
                                              "id": "string",
                                              "primary": "string",
                                              "primaryOwner": {
                                                "department": {
                                                  "code": "string",
                                                  "description": "string"
                                                },
                                                "email": {
                                                  "email": {
                                                    "createDateTime": "2020-08-26T15:00:10.513Z",
                                                    "creatorId": "string",
                                                    "emailAddress": "string",
                                                    "emailFormat": "Html",
                                                    "lastModifierId": "string",
                                                    "lastModifyDateTime": "2020-08-26T15:00:10.513Z",
                                                    "orderSequence": 0,
                                                    "primaryInd": true,
                                                    "purgeDate": "2020-08-26",
                                                    "type": "string",
                                                    "typeDescription": "string"
                                                  },
                                                  "id": "string",
                                                  "type": "string"
                                                },
                                                "hotel": {
                                                  "code": "string",
                                                  "description": "string"
                                                },
                                                "name": {
                                                  "envelopeGreeting": "string",
                                                  "externalSystem": "string",
                                                  "givenName": "string",
                                                  "language": "string",
                                                  "middleName": "string",
                                                  "namePrefix": "string",
                                                  "nameSuffix": "string",
                                                  "nameTitle": "string",
                                                  "nameTitleSuffix": 0,
                                                  "nameType": "Primary",
                                                  "salutation": "string",
                                                  "surname": "string"
                                                },
                                                "ownerCode": "string",
                                                "phone": {
                                                  "id": "string",
                                                  "telephone": {
                                                    "createDateTime": "2020-08-26T15:00:10.513Z",
                                                    "creatorId": "string",
                                                    "extension": "string",
                                                    "lastModifierId": "string",
                                                    "lastModifyDateTime": "2020-08-26T15:00:10.513Z",
                                                    "orderSequence": 0,
                                                    "phoneNumber": "string",
                                                    "phoneTechType": "string",
                                                    "phoneUseType": "string",
                                                    "phoneUseTypeDescription": "string",
                                                    "primaryInd": true,
                                                    "purgeDate": "2020-08-26"
                                                  },
                                                  "type": "string"
                                                },
                                                "primary": true,
                                                "profileId": {
                                                  "id": "string",
                                                  "idContext": "string",
                                                  "idExtension": 0,
                                                  "instance": "string",
                                                  "type": "string",
                                                  "url": "string"
                                                },
                                                "relationship": {
                                                  "code": "string",
                                                  "description": "string"
                                                },
                                                "userId": {
                                                  "id": "string",
                                                  "type": "string"
                                                },
                                                "userName": "string"
                                              },
                                              "profileIdList": [
                                                {
                                                  "id": "string",
                                                  "type": "string"
                                                }
                                              ],
                                              "profileType": "Guest",
                                              "statusCode": "Active",
                                              "telephone": {
                                                "id": "string",
                                                "telephone": {
                                                  "createDateTime": "2020-08-26T15:00:10.513Z",
                                                  "creatorId": "string",
                                                  "extension": "string",
                                                  "lastModifierId": "string",
                                                  "lastModifyDateTime": "2020-08-26T15:00:10.513Z",
                                                  "orderSequence": 0,
                                                  "phoneNumber": "string",
                                                  "phoneTechType": "string",
                                                  "phoneUseType": "string",
                                                  "phoneUseTypeDescription": "string",
                                                  "primaryInd": true,
                                                  "purgeDate": "2020-08-26"
                                                },
                                                "type": "string"
                                              },
                                              "uRLs": {
                                                "id": "string",
                                                "type": "string",
                                                "url": {
                                                  "orderSequence": 0,
                                                  "primaryInd": true,
                                                  "type": "string",
                                                  "typeDescription": "string",
                                                  "value": "string"
                                                }
                                              }
                                            },
                                            "targetRelation": "string",
                                            "targetRelationDescription": "string"
                                          }
                                        ],
                                        "totalResults": 0
                                      },
                                      "requestForHotel": "string",
                                      "reservationInfoList": {
                                        "futureList": {
                                          "count": 0,
                                          "hasMore": true,
                                          "reservationInfo": [
                                            {
                                              "accessRestriction": "Change",
                                              "advanceCheckIn": {
                                                "advanceCheckedIn": true,
                                                "eTRComments": "string",
                                                "expectedReturnTime": "2020-08-26T15:00:10.518Z"
                                              },
                                              "allowMobileCheckout": true,
                                              "allowMobileViewFolio": true,
                                              "allowedActions": [
                                                "Cancel"
                                              ],
                                              "attachedProfiles": [
                                                {
                                                  "name": "string",
                                                  "profileIdList": [
                                                    {
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "reservationProfileType": "Company"
                                                }
                                              ],
                                              "cancellationInfo": {
                                                "code": "string",
                                                "date": "2020-08-26",
                                                "description": "string"
                                              },
                                              "cashiering": {
                                                "bedTaxReporting": {
                                                  "taxRegistrationNo": 0,
                                                  "taxableDays": 0,
                                                  "visaExpiryDate": "2020-08-26",
                                                  "visaIssueDate": "2020-08-26",
                                                  "visaNumber": "string"
                                                },
                                                "billingPrivileges": {
                                                  "allowAutoCheckin": true,
                                                  "autoSettlement": true,
                                                  "autoSettlementFreq": 0,
                                                  "autoSettlementType": "string",
                                                  "creditLimitAutoPay": true,
                                                  "directBillAuthorized": true,
                                                  "folioCloseDate": "2020-08-26",
                                                  "postStayCharging": true,
                                                  "postingRestriction": true,
                                                  "preStayCharging": true,
                                                  "scheduledCheckout": true,
                                                  "scheduledCheckoutTime": "2020-08-26",
                                                  "videoCheckout": true
                                                },
                                                "compAccounting": {
                                                  "authorizer": "string",
                                                  "compPostings": "string",
                                                  "compType": "string"
                                                },
                                                "financiallyResponsible": true,
                                                "folioTexts": [
                                                  {
                                                    "row": 0,
                                                    "text": "string"
                                                  }
                                                ],
                                                "lastRoomAndTaxPostedDate": "2020-08-26",
                                                "periodicFolio": {
                                                  "frequency": 0,
                                                  "lastFolioDate": "2020-08-26",
                                                  "lastSettlementDate": "2020-08-26"
                                                },
                                                "proratedBilling": true,
                                                "reservationPreConfiguredRoutingInstruction": {
                                                  "authorizerInfo": {
                                                    "authorizerId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "authorizerName": "string",
                                                    "authorizerRateCode": "string",
                                                    "authorizerUserName": "string",
                                                    "inheritAuthorizerRateCode": true
                                                  },
                                                  "profileType": "Company",
                                                  "promotionCode": "string",
                                                  "ratePlanCode": "string"
                                                },
                                                "revenuesAndBalances": {
                                                  "balance": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "foodAndBevRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "nonRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "otherRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "roomRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalFixedCharge": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalPayment": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  }
                                                },
                                                "reverseAdvanceCheckInAllowed": true,
                                                "reverseCheckInAllowed": true,
                                                "taxType": {
                                                  "code": "string",
                                                  "collectingAgentTax": true,
                                                  "description": "string",
                                                  "hotelId": "string",
                                                  "minimumLengthOfStay": 0,
                                                  "printAutoAdjust": true,
                                                  "reportExemptDays": 0,
                                                  "reportTaxPercentage": 0,
                                                  "taxExemptNo": "string"
                                                },
                                                "transactionsPosted": true
                                              },
                                              "commissionPayoutTo": "TravelAgent",
                                              "computedReservationStatus": "Reserved",
                                              "createDateTime": "2020-08-26T15:00:10.518Z",
                                              "creatorId": "string",
                                              "deposit": {
                                                "amountOwed": 0,
                                                "amountPaid": 0,
                                                "amountRequired": 0,
                                                "dueDate": "2020-08-26",
                                                "hasOutstanding": true,
                                                "hasPaid": true,
                                                "postingDate": "2020-08-26"
                                              },
                                              "displayColor": "string",
                                              "expectedServiceTime": "string",
                                              "guestPreferredCurrency": "string",
                                              "hotelId": "string",
                                              "hotelInterfaceStatusList": [
                                                {
                                                  "hotelInterface": {
                                                    "activeFlag": true,
                                                    "hotelId": "string",
                                                    "interfaceId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "interfaceName": "string",
                                                    "interfaceType": "Bms",
                                                    "logo": "string",
                                                    "machineName": "string",
                                                    "status": "Stopped"
                                                  },
                                                  "interfaceRights": [
                                                    {
                                                      "category": "string",
                                                      "description": "string",
                                                      "right": 0,
                                                      "statusCode": "string"
                                                    }
                                                  ],
                                                  "roomExtension": "string"
                                                }
                                              ],
                                              "hotelName": "string",
                                              "housekeeping": {
                                                "expectedServiceTime": "string",
                                                "facilityTaskInfo": {
                                                  "date": "2020-08-26",
                                                  "supplies": [
                                                    {
                                                      "code": "string",
                                                      "description": "string",
                                                      "quantity": 0
                                                    }
                                                  ],
                                                  "task": {
                                                    "code": "string",
                                                    "description": "string",
                                                    "facilityDepartureTask": true,
                                                    "hotelId": "string",
                                                    "instructions": "string",
                                                    "linenChange": true,
                                                    "sequence": 0
                                                  }
                                                },
                                                "instructions": "string",
                                                "linenChange": true,
                                                "roomStatus": "Clean",
                                                "serviceTime": "2020-08-26",
                                                "turndownRequested": true
                                              },
                                              "keyCount": 0,
                                              "lastModifierId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:00:10.518Z",
                                              "lastPrivacyPromptDate": "2020-08-26",
                                              "mobileNotifications": {
                                                "checkoutMessageReceived": true,
                                                "errorMessage": "string",
                                                "keyReady": "Pending",
                                                "requiresAction": true,
                                                "roomReady": "Pending"
                                              },
                                              "openFolio": true,
                                              "optedForCommunication": true,
                                              "paymentMethod": "string",
                                              "preRegistered": true,
                                              "purgeDate": "2020-08-26",
                                              "queue": {
                                                "averageQueueTimeCurrentReservations": 0,
                                                "averageQueueTimeToCheckIn": 0,
                                                "guestTextInfo": {
                                                  "sentBy": "string",
                                                  "sentTime": "2020-08-26T15:00:10.517Z"
                                                },
                                                "priority": 0,
                                                "queueDate": "2020-08-26",
                                                "timeSpan": {
                                                  "duration": "string",
                                                  "durationInSeconds": 0,
                                                  "endDate": "2020-08-26",
                                                  "startDate": "2020-08-26"
                                                }
                                              },
                                              "reservationCommunication": {
                                                "emails": {
                                                  "count": 0,
                                                  "emailInfo": [
                                                    {
                                                      "email": {
                                                        "createDateTime": "2020-08-26T15:00:10.518Z",
                                                        "creatorId": "string",
                                                        "emailAddress": "string",
                                                        "emailFormat": "Html",
                                                        "lastModifierId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:00:10.518Z",
                                                        "orderSequence": 0,
                                                        "primaryInd": true,
                                                        "purgeDate": "2020-08-26",
                                                        "type": "string",
                                                        "typeDescription": "string"
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "hasMore": true,
                                                  "totalResults": 0
                                                },
                                                "telephones": {
                                                  "count": 0,
                                                  "hasMore": true,
                                                  "telephoneInfo": [
                                                    {
                                                      "id": "string",
                                                      "telephone": {
                                                        "createDateTime": "2020-08-26T15:00:10.518Z",
                                                        "creatorId": "string",
                                                        "extension": "string",
                                                        "lastModifierId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:00:10.518Z",
                                                        "orderSequence": 0,
                                                        "phoneNumber": "string",
                                                        "phoneTechType": "string",
                                                        "phoneUseType": "string",
                                                        "phoneUseTypeDescription": "string",
                                                        "primaryInd": true,
                                                        "purgeDate": "2020-08-26"
                                                      },
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "totalResults": 0
                                                }
                                              },
                                              "reservationFolioWindows": [
                                                {
                                                  "balance": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "folioWindowNo": 0,
                                                  "payeeInfo": {
                                                    "payeeAccountInfo": {
                                                      "accountId": {
                                                        "id": "string",
                                                        "type": "string"
                                                      },
                                                      "accountName": "string",
                                                      "accountNo": "string",
                                                      "status": {
                                                        "description": "string",
                                                        "restricted": true,
                                                        "restriction": "string"
                                                      }
                                                    },
                                                    "payeeAddress": {
                                                      "address": {
                                                        "addressLine": [
                                                          "string"
                                                        ],
                                                        "barCode": "string",
                                                        "cityExtension": "string",
                                                        "cityName": "string",
                                                        "country": {
                                                          "code": "string",
                                                          "value": "string"
                                                        },
                                                        "county": "string",
                                                        "createDateTime": "2020-08-26T15:00:10.517Z",
                                                        "creatorId": "string",
                                                        "language": "string",
                                                        "lastModifierId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:00:10.517Z",
                                                        "postalCode": "string",
                                                        "primaryInd": true,
                                                        "purgeDate": "2020-08-26",
                                                        "state": "string",
                                                        "type": "string",
                                                        "typeDescription": "string",
                                                        "updateReservations": true
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "payeeAddressCount": 0,
                                                    "payeeId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "payeeName": "string",
                                                    "payeeReferenceCurrency": "string",
                                                    "payeeTaxNumber": "string"
                                                  },
                                                  "paymentMethod": "string"
                                                }
                                              ],
                                              "reservationGuest": {
                                                "accompanyGuests": [
                                                  {
                                                    "firstName": "string",
                                                    "fullName": "string",
                                                    "lastName": "string",
                                                    "profileIdList": [
                                                      {
                                                        "id": "string",
                                                        "type": "string"
                                                      }
                                                    ],
                                                    "registrationCardNo": "string"
                                                  }
                                                ],
                                                "address": {
                                                  "cityName": "string",
                                                  "country": {
                                                    "code": "string",
                                                    "value": "string"
                                                  },
                                                  "excludeNoCity": true,
                                                  "postalCode": "string",
                                                  "state": "string",
                                                  "streetAddress": "string"
                                                },
                                                "alternateFullName": "string",
                                                "alternateGivenName": "string",
                                                "alternateSurname": "string",
                                                "anonymization": {
                                                  "anonymizationDate": "2020-08-26T15:00:10.517Z",
                                                  "anonymizationStatus": "Requested"
                                                },
                                                "birthDate": "2020-08-26",
                                                "email": "string",
                                                "externalInfo": {
                                                  "givenName": "string",
                                                  "surname": "string"
                                                },
                                                "fullName": "string",
                                                "givenName": "string",
                                                "guestLastStayInfo": {
                                                  "lastStayDate": "2020-08-26",
                                                  "lastStayRate": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "lastStayRoom": "string",
                                                  "totalStay": 0
                                                },
                                                "guestRestricted": true,
                                                "guestRestrictedCode": "string",
                                                "guestRestrictedReasonDesc": "string",
                                                "id": "string",
                                                "language": "string",
                                                "membership": {
                                                  "accountId": "string",
                                                  "bonusCode": "string",
                                                  "membershipId": 0,
                                                  "membershipLevel": "string",
                                                  "membershipLevelDesc": "string",
                                                  "membershipTypeDesc": "string",
                                                  "playerRanking": 0,
                                                  "programCode": "string"
                                                },
                                                "middleName": "string",
                                                "namePrefix": "string",
                                                "nameSuffix": "string",
                                                "nameTitle": "string",
                                                "nameType": "Guest",
                                                "nationality": {
                                                  "code": "string",
                                                  "value": "string"
                                                },
                                                "phoneNumber": "string",
                                                "registrationCardNo": "string",
                                                "surname": "string",
                                                "surnamePrefix": "string",
                                                "type": "string",
                                                "vip": {
                                                  "vipCode": "string",
                                                  "vipDescription": "string"
                                                }
                                              },
                                              "reservationIdList": [
                                                {
                                                  "id": "string",
                                                  "type": "string"
                                                }
                                              ],
                                              "reservationIndicators": [
                                                {
                                                  "count": 0,
                                                  "indicatorName": "string"
                                                }
                                              ],
                                              "reservationPaymentMethod": {
                                                "authorizationRule": {
                                                  "amount": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "code": 0,
                                                  "percent": 0
                                                },
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "description": "string",
                                                "emailFolioInfo": {
                                                  "email": {
                                                    "createDateTime": "2020-08-26T15:00:10.517Z",
                                                    "creatorId": "string",
                                                    "emailAddress": "string",
                                                    "emailFormat": "Html",
                                                    "lastModifierId": "string",
                                                    "lastModifyDateTime": "2020-08-26T15:00:10.517Z",
                                                    "orderSequence": 0,
                                                    "primaryInd": true,
                                                    "purgeDate": "2020-08-26",
                                                    "type": "string",
                                                    "typeDescription": "string"
                                                  },
                                                  "emailFolio": true,
                                                  "id": "string",
                                                  "type": "string"
                                                },
                                                "folioView": 0,
                                                "paymentCard": {
                                                  "approvalAmountNeeded": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "attachCreditCardToProfile": true,
                                                  "cardHolderName": "string",
                                                  "cardId": {
                                                    "id": "string",
                                                    "type": "string"
                                                  },
                                                  "cardNumber": "string",
                                                  "cardNumberLast4Digits": "string",
                                                  "cardNumberMasked": "string",
                                                  "cardOrToken": "CardNumber",
                                                  "cardType": "Ab",
                                                  "currentAuthorizedAmount": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "expirationDate": "2020-08-26",
                                                  "expirationDateExpired": true,
                                                  "expirationDateMasked": "string",
                                                  "processing": "Eft",
                                                  "swiped": true,
                                                  "userDefinedCardType": "string"
                                                },
                                                "paymentMethod": "string"
                                              },
                                              "reservationStatus": "Reserved",
                                              "revenuesAndBalances": {
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "foodAndBevRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "nonRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "otherRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "roomRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "totalFixedCharge": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "totalPayment": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "totalRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                }
                                              },
                                              "roomStatus": "Clean",
                                              "roomStay": {
                                                "adultCount": 0,
                                                "arrivalDate": "2020-08-26",
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "bookingChannelCode": "string",
                                                "childCount": 0,
                                                "compBalance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "departureDate": "2020-08-26",
                                                "depositPayments": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "expectedTimes": {
                                                  "reservationExpectedArrivalTime": "2020-08-26T15:00:10.516Z",
                                                  "reservationExpectedDepartureTime": "2020-08-26T15:00:10.516Z"
                                                },
                                                "fixedRate": true,
                                                "guarantee": {
                                                  "guaranteeCode": "string",
                                                  "onHold": true,
                                                  "shortDescription": "string"
                                                },
                                                "guestServiceStatus": "DoNotDisturb",
                                                "marketCode": "string",
                                                "numberOfRooms": 0,
                                                "originalTimeSpan": {
                                                  "duration": "string",
                                                  "endDate": "2020-08-26",
                                                  "startDate": "2020-08-26"
                                                },
                                                "partyCode": "string",
                                                "points": {
                                                  "awardsType": "string",
                                                  "points": 0
                                                },
                                                "promotion": {
                                                  "couponCode": "string",
                                                  "promotionCode": "string",
                                                  "promotionName": "string"
                                                },
                                                "pseudoRoom": true,
                                                "rateAmount": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "ratePlanCode": "string",
                                                "rateSuppressed": true,
                                                "reservationBlock": {
                                                  "blockIdList": [
                                                    {
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "blockName": "string",
                                                  "hotelId": "string"
                                                },
                                                "roomClass": "string",
                                                "roomNumber": "string",
                                                "roomNumberLocked": true,
                                                "roomType": "string",
                                                "roomTypeCharged": "string",
                                                "scheduledCheckoutTime": "2020-08-26",
                                                "sourceOfBusiness": "string",
                                                "sourceOfBusinessDescription": "string",
                                                "totalAmount": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                }
                                              },
                                              "roomStayReservation": true,
                                              "searchMatches": [
                                                {
                                                  "attribute": "string",
                                                  "value": "string"
                                                }
                                              ],
                                              "sharedGuests": [
                                                {
                                                  "firstName": "string",
                                                  "fullName": "string",
                                                  "lastName": "string",
                                                  "profileId": {
                                                    "id": "string",
                                                    "idContext": "string",
                                                    "idExtension": 0,
                                                    "instance": "string",
                                                    "type": "string",
                                                    "url": "string"
                                                  }
                                                }
                                              ],
                                              "sourceOfSale": {
                                                "sourceCode": "string",
                                                "sourceType": "string"
                                              },
                                              "specials": "string",
                                              "taxType": {
                                                "code": "string",
                                                "collectingAgentTax": true,
                                                "description": "string",
                                                "hotelId": "string",
                                                "minimumLengthOfStay": 0,
                                                "printAutoAdjust": true,
                                                "reportExemptDays": 0,
                                                "reportTaxPercentage": 0
                                              },
                                              "turndownInfo": {
                                                "allowed": true,
                                                "status": "Required"
                                              },
                                              "waitlist": {
                                                "description": "string",
                                                "priorityCode": "string",
                                                "priorityDescription": "string",
                                                "reasonCode": "string",
                                                "reasonDescription": "string",
                                                "telephone": "string"
                                              },
                                              "walkInIndicator": true,
                                              "welcomeOffer": true
                                            }
                                          ],
                                          "totalResults": 0
                                        },
                                        "historyList": {
                                          "count": 0,
                                          "hasMore": true,
                                          "reservationInfo": [
                                            {
                                              "accessRestriction": "Change",
                                              "advanceCheckIn": {
                                                "advanceCheckedIn": true,
                                                "eTRComments": "string",
                                                "expectedReturnTime": "2020-08-26T15:00:10.516Z"
                                              },
                                              "allowMobileCheckout": true,
                                              "allowMobileViewFolio": true,
                                              "allowedActions": [
                                                "Cancel"
                                              ],
                                              "attachedProfiles": [
                                                {
                                                  "name": "string",
                                                  "profileIdList": [
                                                    {
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "reservationProfileType": "Company"
                                                }
                                              ],
                                              "cancellationInfo": {
                                                "code": "string",
                                                "date": "2020-08-26",
                                                "description": "string"
                                              },
                                              "cashiering": {
                                                "bedTaxReporting": {
                                                  "taxRegistrationNo": 0,
                                                  "taxableDays": 0,
                                                  "visaExpiryDate": "2020-08-26",
                                                  "visaIssueDate": "2020-08-26",
                                                  "visaNumber": "string"
                                                },
                                                "billingPrivileges": {
                                                  "allowAutoCheckin": true,
                                                  "autoSettlement": true,
                                                  "autoSettlementFreq": 0,
                                                  "autoSettlementType": "string",
                                                  "creditLimitAutoPay": true,
                                                  "directBillAuthorized": true,
                                                  "folioCloseDate": "2020-08-26",
                                                  "postStayCharging": true,
                                                  "postingRestriction": true,
                                                  "preStayCharging": true,
                                                  "scheduledCheckout": true,
                                                  "scheduledCheckoutTime": "2020-08-26",
                                                  "videoCheckout": true
                                                },
                                                "compAccounting": {
                                                  "authorizer": "string",
                                                  "compPostings": "string",
                                                  "compType": "string"
                                                },
                                                "financiallyResponsible": true,
                                                "folioTexts": [
                                                  {
                                                    "row": 0,
                                                    "text": "string"
                                                  }
                                                ],
                                                "lastRoomAndTaxPostedDate": "2020-08-26",
                                                "periodicFolio": {
                                                  "frequency": 0,
                                                  "lastFolioDate": "2020-08-26",
                                                  "lastSettlementDate": "2020-08-26"
                                                },
                                                "proratedBilling": true,
                                                "reservationPreConfiguredRoutingInstruction": {
                                                  "authorizerInfo": {
                                                    "authorizerId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "authorizerName": "string",
                                                    "authorizerRateCode": "string",
                                                    "authorizerUserName": "string",
                                                    "inheritAuthorizerRateCode": true
                                                  },
                                                  "profileType": "Company",
                                                  "promotionCode": "string",
                                                  "ratePlanCode": "string"
                                                },
                                                "revenuesAndBalances": {
                                                  "balance": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "foodAndBevRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "nonRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "otherRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "roomRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalFixedCharge": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalPayment": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  }
                                                },
                                                "reverseAdvanceCheckInAllowed": true,
                                                "reverseCheckInAllowed": true,
                                                "taxType": {
                                                  "code": "string",
                                                  "collectingAgentTax": true,
                                                  "description": "string",
                                                  "hotelId": "string",
                                                  "minimumLengthOfStay": 0,
                                                  "printAutoAdjust": true,
                                                  "reportExemptDays": 0,
                                                  "reportTaxPercentage": 0,
                                                  "taxExemptNo": "string"
                                                },
                                                "transactionsPosted": true
                                              },
                                              "commissionPayoutTo": "TravelAgent",
                                              "computedReservationStatus": "Reserved",
                                              "createDateTime": "2020-08-26T15:00:10.516Z",
                                              "creatorId": "string",
                                              "deposit": {
                                                "amountOwed": 0,
                                                "amountPaid": 0,
                                                "amountRequired": 0,
                                                "dueDate": "2020-08-26",
                                                "hasOutstanding": true,
                                                "hasPaid": true,
                                                "postingDate": "2020-08-26"
                                              },
                                              "displayColor": "string",
                                              "expectedServiceTime": "string",
                                              "guestPreferredCurrency": "string",
                                              "hotelId": "string",
                                              "hotelInterfaceStatusList": [
                                                {
                                                  "hotelInterface": {
                                                    "activeFlag": true,
                                                    "hotelId": "string",
                                                    "interfaceId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "interfaceName": "string",
                                                    "interfaceType": "Bms",
                                                    "logo": "string",
                                                    "machineName": "string",
                                                    "status": "Stopped"
                                                  },
                                                  "interfaceRights": [
                                                    {
                                                      "category": "string",
                                                      "description": "string",
                                                      "right": 0,
                                                      "statusCode": "string"
                                                    }
                                                  ],
                                                  "roomExtension": "string"
                                                }
                                              ],
                                              "hotelName": "string",
                                              "housekeeping": {
                                                "expectedServiceTime": "string",
                                                "facilityTaskInfo": {
                                                  "date": "2020-08-26",
                                                  "supplies": [
                                                    {
                                                      "code": "string",
                                                      "description": "string",
                                                      "quantity": 0
                                                    }
                                                  ],
                                                  "task": {
                                                    "code": "string",
                                                    "description": "string",
                                                    "facilityDepartureTask": true,
                                                    "hotelId": "string",
                                                    "instructions": "string",
                                                    "linenChange": true,
                                                    "sequence": 0
                                                  }
                                                },
                                                "instructions": "string",
                                                "linenChange": true,
                                                "roomStatus": "Clean",
                                                "serviceTime": "2020-08-26",
                                                "turndownRequested": true
                                              },
                                              "keyCount": 0,
                                              "lastModifierId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:00:10.516Z",
                                              "lastPrivacyPromptDate": "2020-08-26",
                                              "mobileNotifications": {
                                                "checkoutMessageReceived": true,
                                                "errorMessage": "string",
                                                "keyReady": "Pending",
                                                "requiresAction": true,
                                                "roomReady": "Pending"
                                              },
                                              "openFolio": true,
                                              "optedForCommunication": true,
                                              "paymentMethod": "string",
                                              "preRegistered": true,
                                              "purgeDate": "2020-08-26",
                                              "queue": {
                                                "averageQueueTimeCurrentReservations": 0,
                                                "averageQueueTimeToCheckIn": 0,
                                                "guestTextInfo": {
                                                  "sentBy": "string",
                                                  "sentTime": "2020-08-26T15:00:10.515Z"
                                                },
                                                "priority": 0,
                                                "queueDate": "2020-08-26",
                                                "timeSpan": {
                                                  "duration": "string",
                                                  "durationInSeconds": 0,
                                                  "endDate": "2020-08-26",
                                                  "startDate": "2020-08-26"
                                                }
                                              },
                                              "reservationCommunication": {
                                                "emails": {
                                                  "count": 0,
                                                  "emailInfo": [
                                                    {
                                                      "email": {
                                                        "createDateTime": "2020-08-26T15:00:10.516Z",
                                                        "creatorId": "string",
                                                        "emailAddress": "string",
                                                        "emailFormat": "Html",
                                                        "lastModifierId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:00:10.516Z",
                                                        "orderSequence": 0,
                                                        "primaryInd": true,
                                                        "purgeDate": "2020-08-26",
                                                        "type": "string",
                                                        "typeDescription": "string"
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "hasMore": true,
                                                  "totalResults": 0
                                                },
                                                "telephones": {
                                                  "count": 0,
                                                  "hasMore": true,
                                                  "telephoneInfo": [
                                                    {
                                                      "id": "string",
                                                      "telephone": {
                                                        "createDateTime": "2020-08-26T15:00:10.516Z",
                                                        "creatorId": "string",
                                                        "extension": "string",
                                                        "lastModifierId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:00:10.516Z",
                                                        "orderSequence": 0,
                                                        "phoneNumber": "string",
                                                        "phoneTechType": "string",
                                                        "phoneUseType": "string",
                                                        "phoneUseTypeDescription": "string",
                                                        "primaryInd": true,
                                                        "purgeDate": "2020-08-26"
                                                      },
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "totalResults": 0
                                                }
                                              },
                                              "reservationFolioWindows": [
                                                {
                                                  "balance": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "folioWindowNo": 0,
                                                  "payeeInfo": {
                                                    "payeeAccountInfo": {
                                                      "accountId": {
                                                        "id": "string",
                                                        "type": "string"
                                                      },
                                                      "accountName": "string",
                                                      "accountNo": "string",
                                                      "status": {
                                                        "description": "string",
                                                        "restricted": true,
                                                        "restriction": "string"
                                                      }
                                                    },
                                                    "payeeAddress": {
                                                      "address": {
                                                        "addressLine": [
                                                          "string"
                                                        ],
                                                        "barCode": "string",
                                                        "cityExtension": "string",
                                                        "cityName": "string",
                                                        "country": {
                                                          "code": "string",
                                                          "value": "string"
                                                        },
                                                        "county": "string",
                                                        "createDateTime": "2020-08-26T15:00:10.515Z",
                                                        "creatorId": "string",
                                                        "language": "string",
                                                        "lastModifierId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:00:10.515Z",
                                                        "postalCode": "string",
                                                        "primaryInd": true,
                                                        "purgeDate": "2020-08-26",
                                                        "state": "string",
                                                        "type": "string",
                                                        "typeDescription": "string",
                                                        "updateReservations": true
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "payeeAddressCount": 0,
                                                    "payeeId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "payeeName": "string",
                                                    "payeeReferenceCurrency": "string",
                                                    "payeeTaxNumber": "string"
                                                  },
                                                  "paymentMethod": "string"
                                                }
                                              ],
                                              "reservationGuest": {
                                                "accompanyGuests": [
                                                  {
                                                    "firstName": "string",
                                                    "fullName": "string",
                                                    "lastName": "string",
                                                    "profileIdList": [
                                                      {
                                                        "id": "string",
                                                        "type": "string"
                                                      }
                                                    ],
                                                    "registrationCardNo": "string"
                                                  }
                                                ],
                                                "address": {
                                                  "cityName": "string",
                                                  "country": {
                                                    "code": "string",
                                                    "value": "string"
                                                  },
                                                  "excludeNoCity": true,
                                                  "postalCode": "string",
                                                  "state": "string",
                                                  "streetAddress": "string"
                                                },
                                                "alternateFullName": "string",
                                                "alternateGivenName": "string",
                                                "alternateSurname": "string",
                                                "anonymization": {
                                                  "anonymizationDate": "2020-08-26T15:00:10.514Z",
                                                  "anonymizationStatus": "Requested"
                                                },
                                                "birthDate": "2020-08-26",
                                                "email": "string",
                                                "externalInfo": {
                                                  "givenName": "string",
                                                  "surname": "string"
                                                },
                                                "fullName": "string",
                                                "givenName": "string",
                                                "guestLastStayInfo": {
                                                  "lastStayDate": "2020-08-26",
                                                  "lastStayRate": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "lastStayRoom": "string",
                                                  "totalStay": 0
                                                },
                                                "guestRestricted": true,
                                                "guestRestrictedCode": "string",
                                                "guestRestrictedReasonDesc": "string",
                                                "id": "string",
                                                "language": "string",
                                                "membership": {
                                                  "accountId": "string",
                                                  "bonusCode": "string",
                                                  "membershipId": 0,
                                                  "membershipLevel": "string",
                                                  "membershipLevelDesc": "string",
                                                  "membershipTypeDesc": "string",
                                                  "playerRanking": 0,
                                                  "programCode": "string"
                                                },
                                                "middleName": "string",
                                                "namePrefix": "string",
                                                "nameSuffix": "string",
                                                "nameTitle": "string",
                                                "nameType": "Guest",
                                                "nationality": {
                                                  "code": "string",
                                                  "value": "string"
                                                },
                                                "phoneNumber": "string",
                                                "registrationCardNo": "string",
                                                "surname": "string",
                                                "surnamePrefix": "string",
                                                "type": "string",
                                                "vip": {
                                                  "vipCode": "string",
                                                  "vipDescription": "string"
                                                }
                                              },
                                              "reservationIdList": [
                                                {
                                                  "id": "string",
                                                  "type": "string"
                                                }
                                              ],
                                              "reservationIndicators": [
                                                {
                                                  "count": 0,
                                                  "indicatorName": "string"
                                                }
                                              ],
                                              "reservationPaymentMethod": {
                                                "authorizationRule": {
                                                  "amount": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "code": 0,
                                                  "percent": 0
                                                },
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "description": "string",
                                                "emailFolioInfo": {
                                                  "email": {
                                                    "createDateTime": "2020-08-26T15:00:10.514Z",
                                                    "creatorId": "string",
                                                    "emailAddress": "string",
                                                    "emailFormat": "Html",
                                                    "lastModifierId": "string",
                                                    "lastModifyDateTime": "2020-08-26T15:00:10.514Z",
                                                    "orderSequence": 0,
                                                    "primaryInd": true,
                                                    "purgeDate": "2020-08-26",
                                                    "type": "string",
                                                    "typeDescription": "string"
                                                  },
                                                  "emailFolio": true,
                                                  "id": "string",
                                                  "type": "string"
                                                },
                                                "folioView": 0,
                                                "paymentCard": {
                                                  "approvalAmountNeeded": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "attachCreditCardToProfile": true,
                                                  "cardHolderName": "string",
                                                  "cardId": {
                                                    "id": "string",
                                                    "type": "string"
                                                  },
                                                  "cardNumber": "string",
                                                  "cardNumberLast4Digits": "string",
                                                  "cardNumberMasked": "string",
                                                  "cardOrToken": "CardNumber",
                                                  "cardType": "Ab",
                                                  "currentAuthorizedAmount": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "expirationDate": "2020-08-26",
                                                  "expirationDateExpired": true,
                                                  "expirationDateMasked": "string",
                                                  "processing": "Eft",
                                                  "swiped": true,
                                                  "userDefinedCardType": "string"
                                                },
                                                "paymentMethod": "string"
                                              },
                                              "reservationStatus": "Reserved",
                                              "revenuesAndBalances": {
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "foodAndBevRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "nonRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "otherRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "roomRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "totalFixedCharge": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "totalPayment": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "totalRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                }
                                              },
                                              "roomStatus": "Clean",
                                              "roomStay": {
                                                "adultCount": 0,
                                                "arrivalDate": "2020-08-26",
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "bookingChannelCode": "string",
                                                "childCount": 0,
                                                "compBalance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "departureDate": "2020-08-26",
                                                "depositPayments": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "expectedTimes": {
                                                  "reservationExpectedArrivalTime": "2020-08-26T15:00:10.514Z",
                                                  "reservationExpectedDepartureTime": "2020-08-26T15:00:10.514Z"
                                                },
                                                "fixedRate": true,
                                                "guarantee": {
                                                  "guaranteeCode": "string",
                                                  "onHold": true,
                                                  "shortDescription": "string"
                                                },
                                                "guestServiceStatus": "DoNotDisturb",
                                                "marketCode": "string",
                                                "numberOfRooms": 0,
                                                "originalTimeSpan": {
                                                  "duration": "string",
                                                  "endDate": "2020-08-26",
                                                  "startDate": "2020-08-26"
                                                },
                                                "partyCode": "string",
                                                "points": {
                                                  "awardsType": "string",
                                                  "points": 0
                                                },
                                                "promotion": {
                                                  "couponCode": "string",
                                                  "promotionCode": "string",
                                                  "promotionName": "string"
                                                },
                                                "pseudoRoom": true,
                                                "rateAmount": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "ratePlanCode": "string",
                                                "rateSuppressed": true,
                                                "reservationBlock": {
                                                  "blockIdList": [
                                                    {
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "blockName": "string",
                                                  "hotelId": "string"
                                                },
                                                "roomClass": "string",
                                                "roomNumber": "string",
                                                "roomNumberLocked": true,
                                                "roomType": "string",
                                                "roomTypeCharged": "string",
                                                "scheduledCheckoutTime": "2020-08-26",
                                                "sourceOfBusiness": "string",
                                                "sourceOfBusinessDescription": "string",
                                                "totalAmount": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                }
                                              },
                                              "roomStayReservation": true,
                                              "searchMatches": [
                                                {
                                                  "attribute": "string",
                                                  "value": "string"
                                                }
                                              ],
                                              "sharedGuests": [
                                                {
                                                  "firstName": "string",
                                                  "fullName": "string",
                                                  "lastName": "string",
                                                  "profileId": {
                                                    "id": "string",
                                                    "idContext": "string",
                                                    "idExtension": 0,
                                                    "instance": "string",
                                                    "type": "string",
                                                    "url": "string"
                                                  }
                                                }
                                              ],
                                              "sourceOfSale": {
                                                "sourceCode": "string",
                                                "sourceType": "string"
                                              },
                                              "specials": "string",
                                              "taxType": {
                                                "code": "string",
                                                "collectingAgentTax": true,
                                                "description": "string",
                                                "hotelId": "string",
                                                "minimumLengthOfStay": 0,
                                                "printAutoAdjust": true,
                                                "reportExemptDays": 0,
                                                "reportTaxPercentage": 0
                                              },
                                              "turndownInfo": {
                                                "allowed": true,
                                                "status": "Required"
                                              },
                                              "waitlist": {
                                                "description": "string",
                                                "priorityCode": "string",
                                                "priorityDescription": "string",
                                                "reasonCode": "string",
                                                "reasonDescription": "string",
                                                "telephone": "string"
                                              },
                                              "walkInIndicator": true,
                                              "welcomeOffer": true
                                            }
                                          ],
                                          "totalResults": 0
                                        }
                                      },
                                      "salesInfo": {
                                        "accountSource": "string",
                                        "accountType": "string",
                                        "actionCode": "string",
                                        "businessSegments": "string",
                                        "competitionCode": "string",
                                        "hotelId": "string",
                                        "industryCode": "string",
                                        "influence": "string",
                                        "preferredRoom": "string",
                                        "priority": "string",
                                        "roomsPotential": "string",
                                        "scope": "string",
                                        "scopeCity": "string"
                                      },
                                      "statusCode": "Active",
                                      "subscriptions": [
                                        {
                                          "distributed": true,
                                          "externalProfileId": {
                                            "id": "string",
                                            "type": "string"
                                          },
                                          "force": true,
                                          "inactive": true,
                                          "lastDistributionDate": "2020-08-26T15:00:10.519Z",
                                          "lastExternalUpdateDate": "2020-08-26T15:00:10.519Z",
                                          "profileId": {
                                            "id": "string",
                                            "idContext": "string",
                                            "idExtension": 0,
                                            "instance": "string",
                                            "type": "string",
                                            "url": "string"
                                          },
                                          "profileInfo": {
                                            "fullName": "string",
                                            "givenName": "string",
                                            "middleName": "string",
                                            "name": "string",
                                            "namePrefix": "string",
                                            "nameSuffix": "string",
                                            "nameTitle": "string",
                                            "nameType": "Primary",
                                            "profileType": "Guest"
                                          },
                                          "subscriptionDate": "2020-08-26T15:00:10.519Z"
                                        }
                                      ],
                                      "taxInfo": {
                                        "businessId": "string",
                                        "businessRegistration": "string",
                                        "tax1No": "string",
                                        "tax2No": "string",
                                        "taxCategory": "string",
                                        "taxOffice": "string",
                                        "taxType": "string"
                                      },
                                      "telephones": {
                                        "count": 0,
                                        "hasMore": true,
                                        "telephoneInfo": [
                                          {
                                            "id": "string",
                                            "telephone": {
                                              "createDateTime": "2020-08-26T15:00:10.507Z",
                                              "creatorId": "string",
                                              "extension": "string",
                                              "lastModifierId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:00:10.507Z",
                                              "orderSequence": 0,
                                              "phoneNumber": "string",
                                              "phoneTechType": "string",
                                              "phoneUseType": "string",
                                              "phoneUseTypeDescription": "string",
                                              "primaryInd": true,
                                              "purgeDate": "2020-08-26"
                                            },
                                            "type": "string"
                                          }
                                        ],
                                        "totalResults": 0
                                      },
                                      "territory": "string",
                                      "traceCode": "string",
                                      "uRLs": {
                                        "count": 0,
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "uRLInfo": [
                                          {
                                            "id": "string",
                                            "type": "string",
                                            "url": {
                                              "orderSequence": 0,
                                              "primaryInd": true,
                                              "type": "string",
                                              "typeDescription": "string",
                                              "value": "string"
                                            }
                                          }
                                        ]
                                      },
                                      "userDefinedFields": {
                                        "characterUDFs": [
                                          {
                                            "alternateName": "string",
                                            "name": "string",
                                            "value": "string"
                                          }
                                        ],
                                        "dateUDFs": [
                                          {
                                            "alternateName": "string",
                                            "name": "string",
                                            "value": "2020-08-26"
                                          }
                                        ],
                                        "numericUDFs": [
                                          {
                                            "alternateName": "string",
                                            "name": "string",
                                            "value": 0
                                          }
                                        ]
                                      },
                                      "webUserAccounts": [
                                        {
                                          "autoGeneratePassword": true,
                                          "comments": "string",
                                          "domainCode": "string",
                                          "history": {
                                            "createDateTime": "2020-08-26T15:00:10.519Z",
                                            "creatorId": "string",
                                            "inactiveDate": "2020-08-26",
                                            "lastLogin": "2020-08-26",
                                            "lastModifierId": "string",
                                            "lastModifyDateTime": "2020-08-26T15:00:10.519Z",
                                            "lastPasswordChange": "2020-08-26",
                                            "purgeDate": "2020-08-26"
                                          },
                                          "inactive": true,
                                          "locked": true,
                                          "loginName": "string",
                                          "newLoginName": "string",
                                          "newPassword": "string",
                                          "securityAnswer": "string",
                                          "securityQuestion": {
                                            "code": "string",
                                            "description": "string"
                                          }
                                        }
                                      ]
                                    },
                                    "profileIdList": [
                                      {
                                        "id": "string",
                                        "type": "string"
                                      }
                                    ],
                                    "reservationProfileType": "Company"
                                  }
                                ],
                                "suppressRate": true,
                                "taxFreeGuestCounts": {
                                  "adults": 0,
                                  "childAges": [
                                    {
                                      "age": 0
                                    }
                                  ],
                                  "childBuckets": {
                                    "bucket1Count": 0,
                                    "bucket2Count": 0,
                                    "bucket3Count": 0,
                                    "bucket4Count": 0,
                                    "bucket5Count": 0
                                  },
                                  "children": 0
                                },
                                "taxIncluded": true,
                                "total": {
                                  "amountAfterTax": 0,
                                  "amountBeforeTax": 0,
                                  "code": "string",
                                  "currencyCode": "string",
                                  "currencySymbol": "string",
                                  "decimalPlaces": 0,
                                  "description": "string",
                                  "fees": {
                                    "amount": 0,
                                    "currencyCode": "string",
                                    "fee": [
                                      {
                                        "amount": 0,
                                        "code": "string",
                                        "currencyCode": "string",
                                        "description": "string",
                                        "type": "Inclusive"
                                      }
                                    ]
                                  },
                                  "rateOverride": true,
                                  "taxes": {
                                    "amount": 0,
                                    "currencyCode": "string",
                                    "tax": [
                                      {
                                        "amount": 0,
                                        "code": "string",
                                        "currencyCode": "string",
                                        "description": "string",
                                        "type": "Inclusive"
                                      }
                                    ]
                                  }
                                },
                                "totalPoints": {
                                  "awardsType": "string",
                                  "points": 0
                                }
                              }
                            ],
                            "suiteWith": "string",
                            "total": {
                              "amountAfterTax": 0,
                              "amountBeforeTax": 0,
                              "code": "string",
                              "currencyCode": "string",
                              "currencySymbol": "string",
                              "decimalPlaces": 0,
                              "description": "string",
                              "fees": {
                                "amount": 0,
                                "currencyCode": "string",
                                "fee": [
                                  {
                                    "amount": 0,
                                    "code": "string",
                                    "currencyCode": "string",
                                    "description": "string",
                                    "type": "Inclusive"
                                  }
                                ]
                              },
                              "rateOverride": true,
                              "taxes": {
                                "amount": 0,
                                "currencyCode": "string",
                                "tax": [
                                  {
                                    "amount": 0,
                                    "code": "string",
                                    "currencyCode": "string",
                                    "description": "string",
                                    "type": "Inclusive"
                                  }
                                ]
                              }
                            },
                            "totalPoints": {
                              "awardsType": "string",
                              "points": 0
                            },
                            "upsellInfo": {
                              "originalInfo": {
                                "nights": 0,
                                "rateCode": "string",
                                "roomType": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "totalAmount": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                }
                              },
                              "upsellInfo": {
                                "firstNightUpsellAmount": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "firstNightUpsellCharge": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "percentageSavings": 0,
                                "roomLongDescription": "string",
                                "roomType": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "ruleCode": "string",
                                "ruleDescription": "string",
                                "ruleId": 0,
                                "totalActualRateAmount": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "totalUpsellCharge": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "totalUpsellMoneyAmount": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "totalUpsellPoints": 0,
                                "upsellDate": "2020-08-26",
                                "upsellUser": "string"
                              }
                            }
                          }
                        ]
                      },
                      "reciprocalRelationship": true,
                      "relativePosition": {
                        "distance": 0,
                        "distanceType": "string",
                        "drivingTime": "string"
                      },
                      "sellMessages": {
                        "count": 0,
                        "hasMore": true,
                        "sellMessage": [
                          {
                            "chainCode": "string",
                            "croCode": "string",
                            "hotelId": "string",
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "languageCode": "string",
                            "message": "string",
                            "ratePlanCode": "string",
                            "roomType": "string",
                            "stickyFlagYn": "string",
                            "type": "string",
                            "url": "string",
                            "usedInModule": "Blocks"
                          }
                        ],
                        "totalResults": 0
                      }
                    }
                  ],
                  "attractions": [
                    {
                      "address": {
                        "addressLine": [
                          "string"
                        ],
                        "barCode": "string",
                        "cityExtension": "string",
                        "cityName": "string",
                        "country": {
                          "code": "string",
                          "value": "string"
                        },
                        "county": "string",
                        "createDateTime": "2020-08-26T15:00:10.520Z",
                        "creatorId": "string",
                        "language": "string",
                        "lastModifierId": "string",
                        "lastModifyDateTime": "2020-08-26T15:00:10.520Z",
                        "postalCode": "string",
                        "primaryInd": true,
                        "purgeDate": "2020-08-26",
                        "state": "string",
                        "type": "string",
                        "typeDescription": "string",
                        "updateReservations": true
                      },
                      "class": "string",
                      "code": "string",
                      "displaySeq": 0,
                      "generalDirections": "string",
                      "name": {
                        "defaultText": "string",
                        "translatedTexts": [
                          {
                            "language": "string",
                            "value": "string"
                          }
                        ]
                      },
                      "operationHours": "string",
                      "priceRange": "string",
                      "relativePosition": {
                        "distance": 0,
                        "distanceType": "string",
                        "drivingTime": "string"
                      },
                      "type": "string",
                      "website": {
                        "orderSequence": 0,
                        "primaryInd": true,
                        "type": "string",
                        "typeDescription": "string",
                        "value": "string"
                      }
                    }
                  ],
                  "chainCode": "string",
                  "chainName": "string",
                  "communication": {
                    "emailAddress": "string",
                    "faxNumber": {
                      "createDateTime": "2020-08-26T15:00:10.503Z",
                      "creatorId": "string",
                      "extension": "string",
                      "lastModifierId": "string",
                      "lastModifyDateTime": "2020-08-26T15:00:10.503Z",
                      "orderSequence": 0,
                      "phoneNumber": "string",
                      "phoneTechType": "string",
                      "phoneUseType": "string",
                      "phoneUseTypeDescription": "string",
                      "primaryInd": true,
                      "purgeDate": "2020-08-26"
                    },
                    "phoneNumber": {
                      "createDateTime": "2020-08-26T15:00:10.503Z",
                      "creatorId": "string",
                      "extension": "string",
                      "lastModifierId": "string",
                      "lastModifyDateTime": "2020-08-26T15:00:10.503Z",
                      "orderSequence": 0,
                      "phoneNumber": "string",
                      "phoneTechType": "string",
                      "phoneUseType": "string",
                      "phoneUseTypeDescription": "string",
                      "primaryInd": true,
                      "purgeDate": "2020-08-26"
                    },
                    "tollFreeNumber": {
                      "createDateTime": "2020-08-26T15:00:10.503Z",
                      "creatorId": "string",
                      "extension": "string",
                      "lastModifierId": "string",
                      "lastModifyDateTime": "2020-08-26T15:00:10.503Z",
                      "orderSequence": 0,
                      "phoneNumber": "string",
                      "phoneTechType": "string",
                      "phoneUseType": "string",
                      "phoneUseTypeDescription": "string",
                      "primaryInd": true,
                      "purgeDate": "2020-08-26"
                    },
                    "webPage": {
                      "orderSequence": 0,
                      "primaryInd": true,
                      "type": "string",
                      "typeDescription": "string",
                      "value": "string"
                    }
                  },
                  "generalInformation": {
                    "baseLanguage": "string",
                    "bedCount": 0,
                    "checkInTime": "2020-08-26T15:00:10.503Z",
                    "checkOutTime": "2020-08-26T15:00:10.503Z",
                    "floorCount": 0,
                    "hotelInfoWebsite": {
                      "orderSequence": 0,
                      "primaryInd": true,
                      "type": "string",
                      "typeDescription": "string",
                      "value": "string"
                    },
                    "hotelType": "string",
                    "latitude": 0,
                    "longitude": 0,
                    "roomCount": 0
                  },
                  "hotelCityCode": "string",
                  "hotelCodeContext": "string",
                  "hotelContacts": [
                    {
                      "communicationAddress": "string",
                      "communicationMethod": "string",
                      "hotelId": "string",
                      "name": "string",
                      "nameId": {
                        "id": "string",
                        "type": "string"
                      },
                      "ownerCode": "string",
                      "primary": true,
                      "roles": [
                        "Lead"
                      ]
                    }
                  ],
                  "hotelCorporateInformations": {
                    "brandCode": "string",
                    "businessUnit": [
                      {
                        "codeDescription": {
                          "code": "string",
                          "description": "string"
                        },
                        "primary": true
                      }
                    ],
                    "departmentCode": [
                      {
                        "codeDescription": {
                          "code": "string",
                          "description": "string"
                        },
                        "primary": true
                      }
                    ],
                    "division": [
                      {
                        "codeDescription": {
                          "code": "string",
                          "description": "string"
                        },
                        "primary": true
                      }
                    ],
                    "hotelCategory": "string",
                    "opertingUnit": [
                      {
                        "codeDescription": {
                          "code": "string",
                          "description": "string"
                        },
                        "primary": true
                      }
                    ]
                  },
                  "hotelEventSpaces": {
                    "eventSpaceDetails": [
                      {
                        "code": "string",
                        "description": "string",
                        "maxCapacity": 0,
                        "maxOccupancies": [
                          0
                        ]
                      }
                    ],
                    "eventSpaceSummaries": [
                      {
                        "maxCapacity": 0,
                        "maxOccupancies": [
                          0
                        ],
                        "no": 0,
                        "spaceType": "string"
                      }
                    ],
                    "setupStyles": [
                      "string"
                    ]
                  },
                  "hotelId": "string",
                  "hotelName": "string",
                  "hotelNotes": [
                    {
                      "comment": {
                        "actionDate": "2020-08-26",
                        "actionType": "string",
                        "commentTitle": "string",
                        "confidential": true,
                        "createDateTime": "2020-08-26T15:00:10.520Z",
                        "creatorId": "string",
                        "hotelId": "string",
                        "image": "string",
                        "internal": true,
                        "lastModifierId": "string",
                        "lastModifyDateTime": "2020-08-26T15:00:10.520Z",
                        "notificationLocation": "string",
                        "overrideInternal": true,
                        "protectDescription": true,
                        "purgeDate": "2020-08-26",
                        "text": {
                          "language": "string",
                          "value": "string"
                        },
                        "type": "string",
                        "typeDescription": "string",
                        "url": "string"
                      },
                      "createDateTime": "2020-08-26T15:00:10.520Z",
                      "creatorId": "string",
                      "id": "string",
                      "lastModifierId": "string",
                      "lastModifyDateTime": "2020-08-26T15:00:10.520Z",
                      "purgeDate": "2020-08-26",
                      "type": "string"
                    }
                  ],
                  "hotelRateRanges": [
                    {
                      "currencyCode": "string",
                      "hotelId": "string",
                      "maxRate": 0,
                      "minRate": 0,
                      "timeSpan": {
                        "duration": "string",
                        "endDate": "2020-08-26",
                        "startDate": "2020-08-26"
                      }
                    }
                  ],
                  "hotelRestaurants": [
                    {
                      "category": "Restaurant",
                      "comments": "string",
                      "hotelId": "string",
                      "hours": "string",
                      "newRestaurantCode": "string",
                      "orderBy": 0,
                      "priceRange": "string",
                      "restaurantCode": "string",
                      "restaurantName": "string",
                      "restaurantType": "string",
                      "timeSpan": {
                        "duration": "string",
                        "endDate": "2020-08-26",
                        "startDate": "2020-08-26"
                      }
                    }
                  ],
                  "meetingRooms": [
                    {
                      "charge": "string",
                      "code": "string",
                      "description": "string"
                    }
                  ],
                  "primaryDetails": {
                    "legalOwner": "string"
                  },
                  "propertyControls": {
                    "applicationMode": {
                      "configurationMode": "string",
                      "countryMode": "string",
                      "expHotelCode": "string",
                      "mbsSupported": true,
                      "touristNumber": "string"
                    },
                    "cateringCurrencyFormatting": {
                      "currencyCode": "string",
                      "currencyFormat": "string"
                    },
                    "currencyFormatting": {
                      "currencyCode": "string",
                      "currencyFormat": "string",
                      "currencySymbol": "string",
                      "decimalPositions": 0
                    },
                    "dateTimeFormatting": {
                      "longDateFormat": "string",
                      "shortDateFormat": "string",
                      "timeFormat": "string",
                      "timeZoneRegion": "string"
                    },
                    "sellControls": {
                      "endDate": "2020-08-26",
                      "hotelId": "string",
                      "startDate": "2020-08-26"
                    }
                  }
                },
                "links": [
                  {
                    "href": "string",
                    "method": "GET",
                    "operationId": "string",
                    "rel": "string",
                    "targetSchema": "string",
                    "templated": false,
                    "title": "string"
                  }
                ],
                "masterInfoList": [
                  {
                    "codeInfo": [
                      {
                        "addtionalCodeInfo": [
                          {
                            "name": "LongDescription",
                            "value": "string"
                          }
                        ],
                        "code": "string",
                        "description": "string",
                        "hotelId": "string"
                      }
                    ],
                    "codeType": "Country"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "Hotel not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/airports": {
      "get": {
        "description": "Use this API to get resort airports. <p><strong>OperationId:</strong>getAirports</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get resort airports",
        "operationId": "getAirports",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "pageNumber",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Airport code identifying the airport.",
            "name": "airportCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching airports configured for hotels.",
            "schema": {
              "$ref": "#/definitions/airportsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Airports not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create new resort airports. <p><strong>OperationId:</strong>postAirports</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create new resort airports",
        "operationId": "postAirports",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating new airports for hotels.",
            "name": "airportsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/airportsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/airports/{airportCode}": {
      "put": {
        "description": "Use this API to update airports for a specific property based on airportCode, hotelId, airportsToBeChanged. <p><strong>OperationId:</strong>changeAirports</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change resort airports",
        "operationId": "changeAirports",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of airport.",
            "name": "airportCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for modifying airports for hotels.",
            "name": "airportsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/airportsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete airports for a specific property based on airportCode, hotelId. <p><strong>OperationId:</strong>removeAirports</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete resort airports",
        "operationId": "removeAirports",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of airport.",
            "name": "airportCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/alternates": {
      "post": {
        "description": "This API Use this API to creates the hotels Alternate Hotel information. <p><strong>OperationId:</strong>postAlternateHotels</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create Alternate Hotels",
        "operationId": "postAlternateHotels",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating new Alternate Hotels for hotels.",
            "name": "alternateHotelsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/alternateHotelsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/alternates/{alternateHotelId}": {
      "put": {
        "description": "Use this API to update alternate hotels for a specific property based on  alternateHotelId, hotelId, alternateHotelsToBeChanged. <p><strong>OperationId:</strong>changeAlternateHotels</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Update Alternate Hotels",
        "operationId": "changeAlternateHotels",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of alternate hotel.",
            "name": "alternateHotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing hotel Alternate Hotels for hotels.",
            "name": "alternateHotelsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/alternateHotelsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete the alternate hotels for a specific property based on alternateHotelId, hotelId. <p><strong>OperationId:</strong>removeAlternateHotels</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete Alternate Hotels",
        "operationId": "removeAlternateHotels",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of alternate hotel.",
            "name": "alternateHotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/amenities": {
      "get": {
        "description": "Use this API to get amenities. <p><strong>OperationId:</strong>getAmenities</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get amenities",
        "operationId": "getAmenities",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Is it a General amenity type.",
            "name": "general",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Is it a Meeting amenity type.",
            "name": "meeting",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "amenityCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching amenities at the property level.",
            "schema": {
              "$ref": "#/definitions/amenitiesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Amenities not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create amenities. <p><strong>OperationId:</strong>postAmenities</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create amenities",
        "operationId": "postAmenities",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating amenities at the property level.",
            "name": "amenitiesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/amenitiesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/amenities/{featureCode}": {
      "put": {
        "description": "Use this API to update amenities for a specific property based on featureCode, hotelId, amenitiesToBeChanged. <p><strong>OperationId:</strong>changeAmenities</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change amenities",
        "operationId": "changeAmenities",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of feature.",
            "name": "featureCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing amenities at the property level.",
            "name": "amenitiesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/amenitiesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete amenities for a specific property based on featureCode, hotelId, beginDate. <p><strong>OperationId:</strong>removeAmenities</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete amenities",
        "operationId": "removeAmenities",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of feature.",
            "name": "featureCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "The date the amenity is scheduled to become active.",
            "name": "beginDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/attractions": {
      "get": {
        "description": "Use this API to get Attractions. <p><strong>OperationId:</strong>getAttractions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Attractions",
        "operationId": "getAttractions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "attractionCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "classCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for information regarding attraction.",
            "schema": {
              "$ref": "#/definitions/attractionsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Attractions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "This API can be used to Use this API to create a new attraction for a property. . <p><strong>OperationId:</strong>postAttractions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create Attractions",
        "operationId": "postAttractions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating a new group of attractions.",
            "name": "attractionsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/attractionsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/attractions/{attractionCode}": {
      "put": {
        "description": "Use this API to update attractions for a specific property based on attractionCode, hotelId, attractionsToBeChanged. <p><strong>OperationId:</strong>changeAttractions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Update an Attraction",
        "operationId": "changeAttractions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of attraction.",
            "name": "attractionCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for modifying an existing attraction.",
            "name": "attractionsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/attractionsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete attractions for a specific property based on attractionCode, hotelId, attractionCodes. <p><strong>OperationId:</strong>removeAttractions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete Attractions",
        "operationId": "removeAttractions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of attraction.",
            "name": "attractionCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "name": "attractionCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/calendar": {
      "get": {
        "description": "Use this API to get detailed information of calendar entries for a date range. <p><strong>OperationId:</strong>getHotelCalendar</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Hotel Calendar",
        "operationId": "getHotelCalendar",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query",
            "required": true
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "DayType",
                "Event"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Indicates entries for a day in calendar. Entries can vary between day types, events, etc.",
            "name": "fetchInstructions",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching calendar entries for a hotel.",
            "schema": {
              "$ref": "#/definitions/hotelCalendarDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "HotelCalendar not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/contacts": {
      "post": {
        "description": "Use this API to create Hotel Contacts. <p><strong>OperationId:</strong>postHotelContacts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create Hotel Contacts",
        "operationId": "postHotelContacts",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating new Contacts for hotels.",
            "name": "hotelContactsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelContactsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/contacts/{contactId}": {
      "put": {
        "description": "Use this API to update hotel contacts for a specific property based on contactId, hotelId, hotelContactsToBeChanged. <p><strong>OperationId:</strong>changeHotelContacts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change Hotel Contact",
        "operationId": "changeHotelContacts",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of contact.",
            "name": "contactId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing hotel Contacts for hotels.",
            "name": "hotelContactsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelContactsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete hotel contacts for a specific property based on contactId, hotelId, idExtension. <p><strong>OperationId:</strong>removeHotelContacts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete Hotel contact",
        "operationId": "removeHotelContacts",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of contact.",
            "name": "contactId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Additional identifying value assigned by the creating system.",
            "name": "idExtension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/countries": {
      "get": {
        "description": "Use this API to get Countries. <p><strong>OperationId:</strong>getCountries</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Countries",
        "operationId": "getCountries",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "pageNumber",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "countriesCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Countries.",
            "schema": {
              "$ref": "#/definitions/countriesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Countries not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/countries/{countryCode}": {
      "put": {
        "description": "Use this API to update country codes for a specific property based on countryCode, hotelId, countriesToBeChanged. <p><strong>OperationId:</strong>changeCountries</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Update a Country Code",
        "operationId": "changeCountries",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of country.",
            "name": "countryCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for modifying Countries for hotels.",
            "name": "countriesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/countriesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/creditcardTypes": {
      "get": {
        "description": "Use this API to get Credit Card Types. <p><strong>OperationId:</strong>getCreditCardTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Credit Card Types",
        "operationId": "getCreditCardTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Credit Card Types.",
            "schema": {
              "$ref": "#/definitions/creditCardTypesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CreditCardTypes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to update credit card types for a specific property based on hotelId, creditCardTypesToBeChanged. <p><strong>OperationId:</strong>changeCreditCardTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change Credit Card Types",
        "operationId": "changeCreditCardTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Credit Card Types.",
            "name": "creditCardTypesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/creditCardTypesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Credit Card Types. <p><strong>OperationId:</strong>postCreditCardTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create Credit Card Types",
        "operationId": "postCreditCardTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating Credit Card Types.",
            "name": "creditCardTypesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/creditCardTypesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete credit card types for a specific property based on hotelId, creditCardTypesCode. <p><strong>OperationId:</strong>removeCreditCardTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete Credit Card Types",
        "operationId": "removeCreditCardTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "name": "creditCardTypesCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/dayTypeCodes": {
      "get": {
        "description": "Use this API to get Hotel Day Type Codes. <p><strong>OperationId:</strong>getHotelDayTypeCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Hotel Day Type Codes",
        "operationId": "getHotelDayTypeCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "dayTypesCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching day type codes for a hotel.",
            "schema": {
              "$ref": "#/definitions/hotelDayTypeCodesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "HotelDayTypeCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to update day type codes for a specific property based on hotelId, hotelDayTypeCodesToBeChanged. <p><strong>OperationId:</strong>changeHotelDayTypeCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change Hotel Day Type Codes",
        "operationId": "changeHotelDayTypeCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for modifying day type codes for a hotel.",
            "name": "hotelDayTypeCodesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelDayTypeCodesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Hotel Day Type Codes. <p><strong>OperationId:</strong>postHotelDayTypeCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create Hotel Day Type Codes",
        "operationId": "postHotelDayTypeCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating new day type codes for a hotel.",
            "name": "hotelDayTypeCodesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelDayTypeCodesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete day type codes for a specific property based on hotelId, hotelIds. <p><strong>OperationId:</strong>removeHotelDayTypeCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete Hotel Day Type Codes",
        "operationId": "removeHotelDayTypeCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/events": {
      "put": {
        "description": "Use this API to update events for a specific property based on hotelId, setHotelEvents. <p><strong>OperationId:</strong>setHotelEvents</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Set hotel events ",
        "operationId": "setHotelEvents",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for setting hotel events for specified date range.",
            "name": "setHotelEvents",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/setHotelEvents"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/events/{eventId}": {
      "delete": {
        "description": "Use this API to delete events for a specific property based on parameters such as eventId, hotelId, startDate, endDate, duration. <p><strong>OperationId:</strong>removeHotelEvents</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete Hotel Events",
        "operationId": "removeHotelEvents",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of event.",
            "name": "eventId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "friday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "monday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "saturday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "sunday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "thursday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "tuesday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "wednesday",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/hotelBrochure": {
      "get": {
        "description": "This API Use this API to gets the hotel brochure information based on the search criteria. The Hotel code and a set of instructions can be sent as part of the request message. <p><strong>OperationId:</strong>getHotelBrochure</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Hotel Brochure",
        "operationId": "getHotelBrochure",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "General",
                "Attraction",
                "Transportation",
                "Package",
                "Dining",
                "Feature",
                "Directions",
                "GeneralNotes",
                "Airports",
                "Alternatehotels",
                "Miscellaneous",
                "Raterange",
                "Contacts",
                "EventSpaces",
                "Notes",
                "Corporateinformation",
                "Meetingrooms"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for hotel fetch instruction.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Basic Property information.",
            "schema": {
              "$ref": "#/definitions/hotelBrochureDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            },
            "examples": {
              "application/json": {
                "hotelBrochure": {
                  "accommodationDetails": {
                    "accessibleRooms": 0,
                    "connectingRooms": 0,
                    "doubleRooms": 0,
                    "executiveFloorNo": "string",
                    "familyRooms": 0,
                    "guestRoomElevators": 0,
                    "guestRoomFloors": 0,
                    "maxAdultsInFamilyRoom": 0,
                    "maxChildrenInFamilyRoom": 0,
                    "nonSmokingRooms": 0,
                    "roomAmenties": "string",
                    "shopDescription": "string",
                    "singleRooms": 0,
                    "suites": 0,
                    "twinRooms": 0
                  },
                  "address": {
                    "addressLine": [
                      "string"
                    ],
                    "barCode": "string",
                    "cityExtension": "string",
                    "cityName": "string",
                    "country": {
                      "code": "string",
                      "value": "string"
                    },
                    "county": "string",
                    "createDateTime": "2020-08-26T15:05:08.986Z",
                    "creatorId": "string",
                    "language": "string",
                    "lastModifierId": "string",
                    "lastModifyDateTime": "2020-08-26T15:05:08.986Z",
                    "postalCode": "string",
                    "primaryInd": true,
                    "purgeDate": "2020-08-26",
                    "regionCode": "string",
                    "state": "string",
                    "type": "string",
                    "typeDescription": "string",
                    "updateReservations": true
                  },
                  "alternateHotels": [
                    {
                      "address": {
                        "addressLine": [
                          "string"
                        ],
                        "barCode": "string",
                        "cityExtension": "string",
                        "cityName": "string",
                        "country": {
                          "code": "string",
                          "value": "string"
                        },
                        "county": "string",
                        "createDateTime": "2020-08-26T15:05:08.986Z",
                        "creatorId": "string",
                        "language": "string",
                        "lastModifierId": "string",
                        "lastModifyDateTime": "2020-08-26T15:05:08.986Z",
                        "postalCode": "string",
                        "primaryInd": true,
                        "purgeDate": "2020-08-26",
                        "state": "string",
                        "type": "string",
                        "typeDescription": "string",
                        "updateReservations": true
                      },
                      "alternate": true,
                      "alternateHotelCode": "string",
                      "availableRooms": 0,
                      "chainCode": "string",
                      "chainName": "string",
                      "channelSummaryInfo": {
                        "bookingChannel": {
                          "channelCode": "string",
                          "channelName": "string",
                          "channelType": "string"
                        },
                        "messageId": "string",
                        "summaryOnly": true
                      },
                      "comments": "string",
                      "contactNumbers": [
                        {
                          "createDateTime": "2020-08-26T15:05:08.986Z",
                          "creatorId": "string",
                          "extension": "string",
                          "lastModifierId": "string",
                          "lastModifyDateTime": "2020-08-26T15:05:08.987Z",
                          "orderSequence": 0,
                          "phoneNumber": "string",
                          "phoneTechType": "string",
                          "phoneUseType": "string",
                          "phoneUseTypeDescription": "string",
                          "primaryInd": true,
                          "purgeDate": "2020-08-26"
                        }
                      ],
                      "currencyExchangeRates": [
                        {
                          "currencyCode": "string",
                          "currencySymbol": "string",
                          "decimalPlaces": 0,
                          "description": "string",
                          "exchangeRate": {
                            "amount": 0,
                            "currencyCode": "string"
                          }
                        }
                      ],
                      "direction": "string",
                      "displayOrder": 0,
                      "event": true,
                      "hotelAmenities": [
                        {
                          "code": "string",
                          "description": "string",
                          "displayOrder": 0,
                          "type": "string"
                        }
                      ],
                      "hotelCityCode": "string",
                      "hotelCodeContext": "string",
                      "hotelId": "string",
                      "hotelName": "string",
                      "hotelType": "string",
                      "inventoryRooms": 0,
                      "maxRate": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "minRate": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "negotiated": true,
                      "newAlternateHotelCode": "string",
                      "rateRoomDetails": {
                        "memberships": [
                          {
                            "associatedReservationsOnly": true,
                            "membershipId": "string",
                            "membershipLevel": [
                              "string"
                            ],
                            "membershipType": [
                              "string"
                            ]
                          }
                        ],
                        "restrictionType": "Closed",
                        "roomStays": [
                          {
                            "arrivalDate": "2020-08-26",
                            "bookingMedium": "string",
                            "bookingMediumDescription": "string",
                            "departureDate": "2020-08-26",
                            "expectedTimes": {
                              "reservationExpectedArrivalTime": "2020-08-26T15:05:08.994Z",
                              "reservationExpectedDepartureTime": "2020-08-26T15:05:08.994Z"
                            },
                            "guarantee": {
                              "guaranteeCode": "string",
                              "onHold": true,
                              "shortDescription": "string"
                            },
                            "guestCounts": {
                              "adults": 0,
                              "childAges": [
                                {
                                  "age": 0
                                }
                              ],
                              "childBuckets": {
                                "bucket1Count": 0,
                                "bucket2Count": 0,
                                "bucket3Count": 0,
                                "bucket4Count": 0,
                                "bucket5Count": 0
                              },
                              "children": 0
                            },
                            "mobileNotifications": {
                              "checkoutMessageReceived": true,
                              "errorMessage": "string",
                              "keyReady": "Pending",
                              "requiresAction": true,
                              "roomReady": "Pending"
                            },
                            "multiValueAttrs": [
                              "string"
                            ],
                            "originalTimeSpan": {
                              "duration": "string",
                              "endDate": "2020-08-26",
                              "startDate": "2020-08-26"
                            },
                            "primaryShareType": "Primary",
                            "printRate": true,
                            "promotion": {
                              "couponCode": "string",
                              "promotionCode": "string",
                              "promotionName": "string"
                            },
                            "remoteCheckInAllowed": true,
                            "roomNumberLocked": true,
                            "roomRates": [
                              {
                                "availability": "Available",
                                "awards": {
                                  "awardVouchers": [
                                    {
                                      "awardCode": "string",
                                      "voucherNo": "string"
                                    }
                                  ],
                                  "membershipNo": {
                                    "id": "string",
                                    "type": "string"
                                  },
                                  "originalRoomType": "string",
                                  "upgradeRoomType": "string"
                                },
                                "barRanking": 0,
                                "bogoDiscount": true,
                                "commissionAmount": 0,
                                "commissionCode": "string",
                                "commissionPercentage": 0,
                                "commissionable": true,
                                "complimentary": true,
                                "credentialsRequired": true,
                                "discountAllowed": true,
                                "end": "2020-08-26",
                                "fixedRate": true,
                                "foreignExchange": {
                                  "effectiveDate": "2020-08-26",
                                  "type": "string"
                                },
                                "guestCounts": {
                                  "adults": 0,
                                  "childAges": [
                                    {
                                      "age": 0
                                    }
                                  ],
                                  "childBuckets": {
                                    "bucket1Count": 0,
                                    "bucket2Count": 0,
                                    "bucket3Count": 0,
                                    "bucket4Count": 0,
                                    "bucket5Count": 0
                                  },
                                  "children": 0
                                },
                                "houseUseOnly": true,
                                "inventoryLender": "string",
                                "marketCode": "string",
                                "marketCodeDescription": "string",
                                "mealPlans": [
                                  {
                                    "breakfastIncluded": true,
                                    "code": "string",
                                    "dinnerIncluded": true,
                                    "included": true,
                                    "lunchIncluded": true
                                  }
                                ],
                                "numberOfUnits": 0,
                                "packages": [
                                  {
                                    "addRateCombinedLine": true,
                                    "addRateSeprateLine": true,
                                    "allowance": {
                                      "amount": 0,
                                      "currencyCode": "string"
                                    },
                                    "amount": {
                                      "amount": 0,
                                      "currencyCode": "string"
                                    },
                                    "calculationRule": "string",
                                    "description": [
                                      "string"
                                    ],
                                    "endDate": "2020-08-26",
                                    "endTime": "string",
                                    "includedInRate": true,
                                    "packageCode": "string",
                                    "postingRhythm": "string",
                                    "quantity": 0,
                                    "sellSeparate": true,
                                    "startDate": "2020-08-26",
                                    "startTime": "string"
                                  }
                                ],
                                "promotionCode": "string",
                                "pseudoRoom": true,
                                "rateDescription": "string",
                                "rateGroup": "string",
                                "rateLevel": "string",
                                "ratePlanCode": "string",
                                "rates": {
                                  "rate": [
                                    {
                                      "additionalGuestAmounts": [
                                        {
                                          "ageQualifyingCode": "ADULT",
                                          "amount": {
                                            "amountAfterTax": 0,
                                            "amountBeforeTax": 0,
                                            "code": "string",
                                            "currencyCode": "string",
                                            "currencySymbol": "string",
                                            "decimalPlaces": 0,
                                            "description": "string",
                                            "fees": {
                                              "amount": 0,
                                              "currencyCode": "string",
                                              "fee": [
                                                {
                                                  "amount": 0,
                                                  "code": "string",
                                                  "currencyCode": "string",
                                                  "description": "string",
                                                  "type": "Inclusive"
                                                }
                                              ]
                                            },
                                            "rateOverride": true,
                                            "taxes": {
                                              "amount": 0,
                                              "currencyCode": "string",
                                              "tax": [
                                                {
                                                  "amount": 0,
                                                  "code": "string",
                                                  "currencyCode": "string",
                                                  "description": "string",
                                                  "type": "Inclusive"
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ],
                                      "base": {
                                        "amountAfterTax": 0,
                                        "amountBeforeTax": 0,
                                        "code": "string",
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0,
                                        "description": "string",
                                        "fees": {
                                          "amount": 0,
                                          "currencyCode": "string",
                                          "fee": [
                                            {
                                              "amount": 0,
                                              "code": "string",
                                              "currencyCode": "string",
                                              "description": "string",
                                              "type": "Inclusive"
                                            }
                                          ]
                                        },
                                        "rateOverride": true,
                                        "taxes": {
                                          "amount": 0,
                                          "currencyCode": "string",
                                          "tax": [
                                            {
                                              "amount": 0,
                                              "code": "string",
                                              "currencyCode": "string",
                                              "description": "string",
                                              "type": "Inclusive"
                                            }
                                          ]
                                        }
                                      },
                                      "discount": {
                                        "amount": 0,
                                        "currencyCode": "string",
                                        "discountCode": "string",
                                        "discountReason": "string",
                                        "percent": 0
                                      },
                                      "effectiveRate": {
                                        "amountAfterTax": 0,
                                        "amountBeforeTax": 0,
                                        "code": "string",
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0,
                                        "description": "string",
                                        "fees": {
                                          "amount": 0,
                                          "currencyCode": "string",
                                          "fee": [
                                            {
                                              "amount": 0,
                                              "code": "string",
                                              "currencyCode": "string",
                                              "description": "string",
                                              "type": "Inclusive"
                                            }
                                          ]
                                        },
                                        "rateOverride": true,
                                        "taxes": {
                                          "amount": 0,
                                          "currencyCode": "string",
                                          "tax": [
                                            {
                                              "amount": 0,
                                              "code": "string",
                                              "currencyCode": "string",
                                              "description": "string",
                                              "type": "Inclusive"
                                            }
                                          ]
                                        }
                                      },
                                      "end": "2020-08-26",
                                      "requiredPoints": {
                                        "awardsType": "string",
                                        "points": 0
                                      },
                                      "shareDistributionInstruction": "Full",
                                      "shareRatePercentage": 0,
                                      "start": "2020-08-26",
                                      "total": {
                                        "amountAfterTax": 0,
                                        "amountBeforeTax": 0,
                                        "code": "string",
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0,
                                        "description": "string",
                                        "fees": {
                                          "amount": 0,
                                          "currencyCode": "string",
                                          "fee": [
                                            {
                                              "amount": 0,
                                              "code": "string",
                                              "currencyCode": "string",
                                              "description": "string",
                                              "type": "Inclusive"
                                            }
                                          ]
                                        },
                                        "rateOverride": true,
                                        "taxes": {
                                          "amount": 0,
                                          "currencyCode": "string",
                                          "tax": [
                                            {
                                              "amount": 0,
                                              "code": "string",
                                              "currencyCode": "string",
                                              "description": "string",
                                              "type": "Inclusive"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "rateRange": [
                                    {
                                      "base": [
                                        {
                                          "amountAfterTax": 0,
                                          "amountBeforeTax": 0,
                                          "code": "string",
                                          "currencyCode": "string",
                                          "currencySymbol": "string",
                                          "decimalPlaces": 0,
                                          "description": "string",
                                          "fees": {
                                            "amount": 0,
                                            "currencyCode": "string",
                                            "fee": [
                                              {
                                                "amount": 0,
                                                "code": "string",
                                                "currencyCode": "string",
                                                "description": "string",
                                                "type": "Inclusive"
                                              }
                                            ]
                                          },
                                          "rateOverride": true,
                                          "taxes": {
                                            "amount": 0,
                                            "currencyCode": "string",
                                            "tax": [
                                              {
                                                "amount": 0,
                                                "code": "string",
                                                "currencyCode": "string",
                                                "description": "string",
                                                "type": "Inclusive"
                                              }
                                            ]
                                          }
                                        }
                                      ],
                                      "rateChange": true
                                    }
                                  ]
                                },
                                "reservationBlock": {
                                  "blockIdList": [
                                    {
                                      "id": "string",
                                      "type": "string"
                                    }
                                  ],
                                  "blockName": "string",
                                  "hotelId": "string"
                                },
                                "roomId": "string",
                                "roomRateInfo": "string",
                                "roomType": "string",
                                "roomTypeCharged": "string",
                                "sourceCode": "string",
                                "sourceCodeDescription": "string",
                                "start": "2020-08-26",
                                "stayProfiles": [
                                  {
                                    "profile": {
                                      "addresses": {
                                        "addressInfo": [
                                          {
                                            "address": {
                                              "addressLine": [
                                                "string"
                                              ],
                                              "barCode": "string",
                                              "cityExtension": "string",
                                              "cityName": "string",
                                              "country": {
                                                "code": "string",
                                                "value": "string"
                                              },
                                              "county": "string",
                                              "createDateTime": "2020-08-26T15:05:08.988Z",
                                              "creatorId": "string",
                                              "language": "string",
                                              "lastModifierId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:05:08.988Z",
                                              "postalCode": "string",
                                              "primaryInd": true,
                                              "purgeDate": "2020-08-26",
                                              "state": "string",
                                              "type": "string",
                                              "typeDescription": "string",
                                              "updateReservations": true
                                            },
                                            "id": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "count": 0,
                                        "hasMore": true,
                                        "totalResults": 0
                                      },
                                      "businessSegments": [
                                        "string"
                                      ],
                                      "cashiering": {
                                        "arNoCentral": "string",
                                        "autoFolioSettlementType": "string",
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0,
                                        "directBillingList": [
                                          {
                                            "aRNumber": "string",
                                            "hotelId": "string"
                                          }
                                        ],
                                        "paymentDueDays": 0,
                                        "referenceCurrency": "string",
                                        "taxPercent1": 0,
                                        "taxPercent2": 0,
                                        "taxPercent3": 0,
                                        "taxPercent4": 0,
                                        "taxPercent5": 0,
                                        "vATOffsetYN": "string"
                                      },
                                      "comments": {
                                        "commentInfo": [
                                          {
                                            "comment": {
                                              "actionDate": "2020-08-26",
                                              "actionType": "string",
                                              "commentTitle": "string",
                                              "confidential": true,
                                              "createDateTime": "2020-08-26T15:05:08.989Z",
                                              "creatorId": "string",
                                              "hotelId": "string",
                                              "image": "string",
                                              "internal": true,
                                              "lastModifierId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:05:08.989Z",
                                              "notificationLocation": "string",
                                              "overrideInternal": true,
                                              "protectDescription": true,
                                              "purgeDate": "2020-08-26",
                                              "text": {
                                                "language": "string",
                                                "value": "string"
                                              },
                                              "type": "string",
                                              "typeDescription": "string",
                                              "url": "string"
                                            },
                                            "createDateTime": "2020-08-26T15:05:08.989Z",
                                            "creatorId": "string",
                                            "id": "string",
                                            "lastModifierId": "string",
                                            "lastModifyDateTime": "2020-08-26T15:05:08.989Z",
                                            "purgeDate": "2020-08-26",
                                            "type": "string"
                                          }
                                        ],
                                        "count": 0,
                                        "hasMore": true,
                                        "totalResults": 0
                                      },
                                      "commissionInfoList": [
                                        {
                                          "bankAccount": "string",
                                          "commissionCode": "string",
                                          "currencyCode": "string",
                                          "currencySymbol": "string",
                                          "decimalPlaces": 0,
                                          "hotelId": "string",
                                          "paymentMethod": "Cent"
                                        }
                                      ],
                                      "company": {
                                        "alternateLanguage": "string",
                                        "alternateName": "string",
                                        "blacklist": true,
                                        "businessLocale": "string",
                                        "businessTitle": "string",
                                        "commissionCode": "string",
                                        "companyName": "string",
                                        "companyName2": "string",
                                        "companyName3": "string",
                                        "corporateIdType": "string",
                                        "creditRating": "string",
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0,
                                        "iATAInfo": {
                                          "iATACompany": "string",
                                          "iATAConsortia": "string",
                                          "iATAValidationResult": true
                                        },
                                        "language": "string",
                                        "nationality": "string",
                                        "nationalityDescription": "string",
                                        "vipDescription": "string",
                                        "vipStatus": "string"
                                      },
                                      "createDateTime": "2020-08-26T15:05:08.993Z",
                                      "creatorId": "string",
                                      "customer": {
                                        "alienInfo": {
                                          "alienRegistrationNo": "string",
                                          "immigrationStatus": "string",
                                          "visaValidityType": "string"
                                        },
                                        "anonymization": {
                                          "anonymizationDate": "2020-08-26T15:05:08.987Z",
                                          "anonymizationStatus": "Requested"
                                        },
                                        "birthCountry": {
                                          "code": "string",
                                          "value": "string"
                                        },
                                        "birthDate": "2020-08-26",
                                        "birthDateMasked": "string",
                                        "birthPlace": "string",
                                        "blacklist": true,
                                        "businessTitle": "string",
                                        "citizenCountry": {
                                          "code": "string",
                                          "value": "string"
                                        },
                                        "companyInfo": {
                                          "department": "string",
                                          "legalCompany": "string",
                                          "position": "string"
                                        },
                                        "creditRating": "string",
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "customerValue": "string",
                                        "decimalPlaces": 0,
                                        "gender": "Male",
                                        "identifications": {
                                          "count": 0,
                                          "hasMore": true,
                                          "identificationInfo": [
                                            {
                                              "id": "string",
                                              "identification": {
                                                "expirationDate": "2020-08-26",
                                                "idNumber": "string",
                                                "idNumberMasked": "string",
                                                "idType": "string",
                                                "issuedCountry": "string",
                                                "issuedDate": "2020-08-26",
                                                "issuedPlace": "string",
                                                "orderSequence": 0,
                                                "primaryInd": true,
                                                "registeredProperty": "string"
                                              },
                                              "type": "string"
                                            }
                                          ],
                                          "totalResults": 0
                                        },
                                        "language": "string",
                                        "legalCompany": "string",
                                        "nationality": "string",
                                        "nationalityDescription": "string",
                                        "personName": [
                                          {
                                            "envelopeGreeting": "string",
                                            "externalSystem": "string",
                                            "givenName": "string",
                                            "language": "string",
                                            "middleName": "string",
                                            "namePrefix": "string",
                                            "nameSuffix": "string",
                                            "nameTitle": "string",
                                            "nameTitleSuffix": 0,
                                            "nameType": "Primary",
                                            "salutation": "string",
                                            "surname": "string"
                                          }
                                        ],
                                        "privateProfile": true,
                                        "profession": "string",
                                        "vipDescription": "string",
                                        "vipStatus": "string"
                                      },
                                      "eCertificates": [
                                        {
                                          "awardId": {
                                            "id": "string",
                                            "idContext": "string",
                                            "idExtension": 0,
                                            "instance": "string",
                                            "type": "string",
                                            "url": "string"
                                          },
                                          "awardPoints": 0,
                                          "cancelRequestDate": "2020-08-26",
                                          "certificateId": 0,
                                          "certificateNo": "string",
                                          "consumptionDetail": {
                                            "authorizationCode": "string",
                                            "date": "2020-08-26",
                                            "email": "string",
                                            "firstName": "string",
                                            "hotelId": "string",
                                            "locationType": "string",
                                            "middleName": "string",
                                            "referenceId": {
                                              "id": "string",
                                              "type": "string"
                                            },
                                            "serviceDate": "2020-08-26",
                                            "source": "Central",
                                            "surname": "string",
                                            "userName": "string",
                                            "userNotes": "string"
                                          },
                                          "databaseId": "string",
                                          "eCertificateInfo": {
                                            "awardCode": "string",
                                            "benefitSummary": "string",
                                            "certificateType": "string",
                                            "cost": {
                                              "amount": 0,
                                              "currencyCode": "string"
                                            },
                                            "description": "string",
                                            "hotels": {
                                              "code": [
                                                "string"
                                              ],
                                              "scope": "Global"
                                            },
                                            "label": "string",
                                            "longDescription": "string",
                                            "maxExtensionAllowed": 0,
                                            "membershipType": "string",
                                            "promotionCode": "string",
                                            "usageCriteria": {
                                              "benefit": true,
                                              "cancelAllowed": true,
                                              "generateInLieuCertificate": true,
                                              "hotel": true,
                                              "reservation": true,
                                              "verifyCertificateNo": true,
                                              "web": true,
                                              "webAllowed": true
                                            },
                                            "value": {
                                              "amount": 0,
                                              "currencyCode": "string"
                                            },
                                            "voucherBenefitCode": "string"
                                          },
                                          "expiryDate": "2020-08-26",
                                          "extensionCount": 0,
                                          "generationDetail": {
                                            "generationDetail": "string",
                                            "referenceValue": "string",
                                            "ruleId": {
                                              "id": "string",
                                              "type": "string"
                                            }
                                          },
                                          "inLieuSequence": 0,
                                          "inactiveDate": "2020-08-26",
                                          "issueDate": "2020-08-26",
                                          "issueType": "Assigned",
                                          "newExpiryDate": "2020-08-26",
                                          "originalCertificateNo": "string",
                                          "originalVoucherNo": "string",
                                          "printed": true,
                                          "profileId": {
                                            "id": "string",
                                            "idContext": "string",
                                            "idExtension": 0,
                                            "instance": "string",
                                            "type": "string",
                                            "url": "string"
                                          },
                                          "source": "Opera",
                                          "status": "Cancelled",
                                          "voucherNo": "string"
                                        }
                                      ],
                                      "eligibleForFiscalFolio": "string",
                                      "emails": {
                                        "count": 0,
                                        "emailInfo": [
                                          {
                                            "email": {
                                              "createDateTime": "2020-08-26T15:05:08.988Z",
                                              "creatorId": "string",
                                              "emailAddress": "string",
                                              "emailFormat": "Html",
                                              "lastModifierId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:05:08.988Z",
                                              "orderSequence": 0,
                                              "primaryInd": true,
                                              "purgeDate": "2020-08-26",
                                              "type": "string",
                                              "typeDescription": "string"
                                            },
                                            "id": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0
                                      },
                                      "gdsNegotiatedRates": {
                                        "count": 0,
                                        "gdsNegotiatedRate": [
                                          {
                                            "bookingChannelCode": "string",
                                            "channelRatePlanCode": "string",
                                            "gdsNegotiatedInfoList": [
                                              {
                                                "accessCode": "string",
                                                "end": "2020-08-26",
                                                "inactive": true,
                                                "order": 0,
                                                "start": "2020-08-26"
                                              }
                                            ],
                                            "hotelId": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0
                                      },
                                      "hasCommission": true,
                                      "influenceCode": "string",
                                      "inheritedNegRates": true,
                                      "keywords": {
                                        "count": 0,
                                        "hasMore": true,
                                        "keyword": [
                                          {
                                            "keyword": "string",
                                            "keywordDetail": {
                                              "newKeyword": "string"
                                            },
                                            "type": "string"
                                          }
                                        ],
                                        "totalResults": 0
                                      },
                                      "lastModifierId": "string",
                                      "lastModifyDateTime": "2020-08-26T15:05:08.993Z",
                                      "lastStayInfo": {
                                        "lastRate": {
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "lastRoom": "string",
                                        "lastVisit": "2020-08-26",
                                        "totalStay": 0
                                      },
                                      "localizationGuestType": "string",
                                      "mailingActions": {
                                        "active": true,
                                        "count": 0,
                                        "hasMore": true,
                                        "mailingAction": [
                                          {
                                            "code": "string",
                                            "description": "string"
                                          }
                                        ],
                                        "totalResults": 0
                                      },
                                      "markAsRecentlyAccessed": true,
                                      "markForHistory": true,
                                      "negotiatedRates": {
                                        "count": 0,
                                        "hasMore": true,
                                        "negotiatedRate": [
                                          {
                                            "hotelId": "string",
                                            "negotiatedInfoList": [
                                              {
                                                "comissionCode": "string",
                                                "corporateAgreementId": "string",
                                                "end": "2020-08-26",
                                                "inactive": true,
                                                "order": 0,
                                                "start": "2020-08-26"
                                              }
                                            ],
                                            "rateCode": "string"
                                          }
                                        ],
                                        "totalResults": 0
                                      },
                                      "ownerCode": "string",
                                      "preferenceCollection": {
                                        "count": 0,
                                        "hasMore": true,
                                        "preferenceType": [
                                          {
                                            "availableQuantity": 0,
                                            "createDateTime": "2020-08-26T15:05:08.989Z",
                                            "creatorId": "string",
                                            "lastModifierId": "string",
                                            "lastModifyDateTime": "2020-08-26T15:05:08.989Z",
                                            "maxQuantity": 0,
                                            "maxResortUsedQuantity": 0,
                                            "preference": [
                                              {
                                                "description": "string",
                                                "excludedPreferencesCount": 0,
                                                "global": true,
                                                "hotels": [
                                                  "string"
                                                ],
                                                "preferenceId": "string",
                                                "preferenceValue": "string",
                                                "source": "string"
                                              }
                                            ],
                                            "preferenceType": "string",
                                            "preferenceTypeDescription": "string",
                                            "purgeDate": "2020-08-26",
                                            "reservationPreference": true,
                                            "sequence": "string"
                                          }
                                        ],
                                        "totalResults": 0
                                      },
                                      "privacyInfo": {
                                        "allowEmail": true,
                                        "allowPhone": true,
                                        "allowSMS": true,
                                        "autoEnrollLoyaltyProgram": true,
                                        "infoFromThirdParty": true,
                                        "lastPrivacyPromptDate": "2020-08-26",
                                        "marketResearchParticipation": true,
                                        "optInAutoEnrollmentMember": true,
                                        "optInEmail": true,
                                        "optInMailingList": true,
                                        "optInMarketResearch": true,
                                        "optInPhone": true,
                                        "optInSms": true,
                                        "optInThirdParty": true
                                      },
                                      "profileAccessType": {
                                        "chainCode": "string",
                                        "croCode": "string",
                                        "hotelId": "string",
                                        "sharedLevel": "Global"
                                      },
                                      "profileDeliveryMethods": {
                                        "count": 0,
                                        "hasMore": true,
                                        "profileDeliveryMethod": [
                                          {
                                            "deliveryId": {
                                              "id": "string",
                                              "type": "string"
                                            },
                                            "deliveryModule": "EfolioExport",
                                            "deliveryType": "string",
                                            "deliveryValue": "string",
                                            "hotelId": "string",
                                            "orderSequence": 0,
                                            "primaryInd": true
                                          }
                                        ],
                                        "totalResults": 0
                                      },
                                      "profileImage": {
                                        "chainCode": "string",
                                        "description": "string",
                                        "hotelId": "string",
                                        "imageOrder": 0,
                                        "imageSet": "string",
                                        "imageStyle": "Full",
                                        "imageType": "string",
                                        "imageURL": "string",
                                        "language": "string",
                                        "sequenceId": 0,
                                        "website": "string"
                                      },
                                      "profileIndicators": [
                                        {
                                          "count": 0,
                                          "indicatorName": "string"
                                        }
                                      ],
                                      "profileMemberships": {
                                        "count": 0,
                                        "hasMore": true,
                                        "profileMembership": [
                                          {
                                            "benefits": [
                                              {
                                                "code": "string",
                                                "inactive": true,
                                                "message": "string"
                                              }
                                            ],
                                            "centralSetup": true,
                                            "comment": {
                                              "image": "string",
                                              "text": {
                                                "language": "string",
                                                "value": "string"
                                              },
                                              "url": "string"
                                            },
                                            "createDateTime": "2020-08-26T15:05:08.989Z",
                                            "creatorId": "string",
                                            "currentPoints": 0,
                                            "downgrade": "Grace",
                                            "downgradeDescription": "string",
                                            "earningPreference": "Points",
                                            "effectiveDate": "2020-08-26",
                                            "enrollmentResort": "string",
                                            "enrollmentSource": "string",
                                            "excludeFromBatch": true,
                                            "expireDate": "2020-08-26",
                                            "expireDateExclusiveIndicator": true,
                                            "inactive": true,
                                            "lastModifierId": "string",
                                            "lastModifyDateTime": "2020-08-26T15:05:08.989Z",
                                            "memberStatus": "string",
                                            "membershipClass": "string",
                                            "membershipEnrollmentCode": "string",
                                            "membershipId": "string",
                                            "membershipIdNo": 0,
                                            "membershipLevel": "string",
                                            "membershipLevelDescription": "string",
                                            "membershipType": "string",
                                            "nameOnCard": "string",
                                            "newMembershipNumber": "string",
                                            "orderSequence": 0,
                                            "playerRanking": 0,
                                            "pointsLabel": "string",
                                            "preferredCard": true,
                                            "primaryMembership": true,
                                            "primaryMembershipYn": "string",
                                            "programDescription": "string",
                                            "purgeDate": "2020-08-26",
                                            "rating": "string",
                                            "reIssueNewCard": "Pending",
                                            "signupDate": "2020-08-26",
                                            "tierAdministration": "Disabled",
                                            "upgradeDescription": "string"
                                          }
                                        ],
                                        "totalResults": 0
                                      },
                                      "profileRestrictions": {
                                        "reason": "string",
                                        "reasonDescription": "string",
                                        "restricted": true
                                      },
                                      "profileType": "Guest",
                                      "protectedBy": "string",
                                      "purgeDate": "2020-08-26",
                                      "registeredProperty": "string",
                                      "relationships": {
                                        "count": 0,
                                        "hasMore": true,
                                        "relationship": [
                                          {
                                            "changeRelationship": {
                                              "id": "string",
                                              "relation": "string",
                                              "relationDescription": "string",
                                              "targetRelation": "string",
                                              "targetRelationDescription": "string"
                                            },
                                            "id": "string",
                                            "masterAccountInfo": {
                                              "masterAccountId": {
                                                "id": "string",
                                                "type": "string"
                                              },
                                              "masterAccountName": "string"
                                            },
                                            "relation": "string",
                                            "relationDescription": "string",
                                            "relationshipProfile": {
                                              "address": {
                                                "address": {
                                                  "addressLine": [
                                                    "string"
                                                  ],
                                                  "barCode": "string",
                                                  "cityExtension": "string",
                                                  "cityName": "string",
                                                  "country": {
                                                    "code": "string",
                                                    "value": "string"
                                                  },
                                                  "county": "string",
                                                  "createDateTime": "2020-08-26T15:05:08.989Z",
                                                  "creatorId": "string",
                                                  "language": "string",
                                                  "lastModifierId": "string",
                                                  "lastModifyDateTime": "2020-08-26T15:05:08.989Z",
                                                  "postalCode": "string",
                                                  "primaryInd": true,
                                                  "purgeDate": "2020-08-26",
                                                  "state": "string",
                                                  "type": "string",
                                                  "typeDescription": "string",
                                                  "updateReservations": true
                                                },
                                                "id": "string",
                                                "type": "string"
                                              },
                                              "changeProfileIdList": [
                                                {
                                                  "id": "string",
                                                  "type": "string"
                                                }
                                              ],
                                              "company": {
                                                "alternateLanguage": "string",
                                                "alternateName": "string",
                                                "blacklist": true,
                                                "businessLocale": "string",
                                                "businessTitle": "string",
                                                "commissionCode": "string",
                                                "companyName": "string",
                                                "companyName2": "string",
                                                "companyName3": "string",
                                                "corporateIdType": "string",
                                                "creditRating": "string",
                                                "currencyCode": "string",
                                                "currencySymbol": "string",
                                                "decimalPlaces": 0,
                                                "iATAInfo": {
                                                  "iATACompany": "string",
                                                  "iATAConsortia": "string",
                                                  "iATAValidationResult": true
                                                },
                                                "language": "string",
                                                "nationality": "string",
                                                "nationalityDescription": "string",
                                                "vipDescription": "string",
                                                "vipStatus": "string"
                                              },
                                              "customer": {
                                                "alienInfo": {
                                                  "alienRegistrationNo": "string",
                                                  "immigrationStatus": "string",
                                                  "visaValidityType": "string"
                                                },
                                                "anonymization": {
                                                  "anonymizationDate": "2020-08-26T15:05:08.989Z",
                                                  "anonymizationStatus": "Requested"
                                                },
                                                "birthCountry": {
                                                  "code": "string",
                                                  "value": "string"
                                                },
                                                "birthDate": "2020-08-26",
                                                "birthDateMasked": "string",
                                                "birthPlace": "string",
                                                "blacklist": true,
                                                "businessTitle": "string",
                                                "citizenCountry": {
                                                  "code": "string",
                                                  "value": "string"
                                                },
                                                "companyInfo": {
                                                  "department": "string",
                                                  "legalCompany": "string",
                                                  "position": "string"
                                                },
                                                "creditRating": "string",
                                                "currencyCode": "string",
                                                "currencySymbol": "string",
                                                "customerValue": "string",
                                                "decimalPlaces": 0,
                                                "gender": "Male",
                                                "identifications": {
                                                  "count": 0,
                                                  "hasMore": true,
                                                  "identificationInfo": [
                                                    {
                                                      "id": "string",
                                                      "identification": {
                                                        "expirationDate": "2020-08-26",
                                                        "idNumber": "string",
                                                        "idNumberMasked": "string",
                                                        "idType": "string",
                                                        "issuedCountry": "string",
                                                        "issuedDate": "2020-08-26",
                                                        "issuedPlace": "string",
                                                        "orderSequence": 0,
                                                        "primaryInd": true,
                                                        "registeredProperty": "string"
                                                      },
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "totalResults": 0
                                                },
                                                "language": "string",
                                                "legalCompany": "string",
                                                "nationality": "string",
                                                "nationalityDescription": "string",
                                                "personName": [
                                                  {
                                                    "envelopeGreeting": "string",
                                                    "externalSystem": "string",
                                                    "givenName": "string",
                                                    "language": "string",
                                                    "middleName": "string",
                                                    "namePrefix": "string",
                                                    "nameSuffix": "string",
                                                    "nameTitle": "string",
                                                    "nameTitleSuffix": 0,
                                                    "nameType": "Primary",
                                                    "salutation": "string",
                                                    "surname": "string"
                                                  }
                                                ],
                                                "privateProfile": true,
                                                "profession": "string",
                                                "vipDescription": "string",
                                                "vipStatus": "string"
                                              },
                                              "email": {
                                                "email": {
                                                  "createDateTime": "2020-08-26T15:05:08.989Z",
                                                  "creatorId": "string",
                                                  "emailAddress": "string",
                                                  "emailFormat": "Html",
                                                  "lastModifierId": "string",
                                                  "lastModifyDateTime": "2020-08-26T15:05:08.989Z",
                                                  "orderSequence": 0,
                                                  "primaryInd": true,
                                                  "purgeDate": "2020-08-26",
                                                  "type": "string",
                                                  "typeDescription": "string"
                                                },
                                                "id": "string",
                                                "type": "string"
                                              },
                                              "id": "string",
                                              "primary": "string",
                                              "primaryOwner": {
                                                "department": {
                                                  "code": "string",
                                                  "description": "string"
                                                },
                                                "email": {
                                                  "email": {
                                                    "createDateTime": "2020-08-26T15:05:08.989Z",
                                                    "creatorId": "string",
                                                    "emailAddress": "string",
                                                    "emailFormat": "Html",
                                                    "lastModifierId": "string",
                                                    "lastModifyDateTime": "2020-08-26T15:05:08.989Z",
                                                    "orderSequence": 0,
                                                    "primaryInd": true,
                                                    "purgeDate": "2020-08-26",
                                                    "type": "string",
                                                    "typeDescription": "string"
                                                  },
                                                  "id": "string",
                                                  "type": "string"
                                                },
                                                "hotel": {
                                                  "code": "string",
                                                  "description": "string"
                                                },
                                                "name": {
                                                  "envelopeGreeting": "string",
                                                  "externalSystem": "string",
                                                  "givenName": "string",
                                                  "language": "string",
                                                  "middleName": "string",
                                                  "namePrefix": "string",
                                                  "nameSuffix": "string",
                                                  "nameTitle": "string",
                                                  "nameTitleSuffix": 0,
                                                  "nameType": "Primary",
                                                  "salutation": "string",
                                                  "surname": "string"
                                                },
                                                "ownerCode": "string",
                                                "phone": {
                                                  "id": "string",
                                                  "telephone": {
                                                    "createDateTime": "2020-08-26T15:05:08.989Z",
                                                    "creatorId": "string",
                                                    "extension": "string",
                                                    "lastModifierId": "string",
                                                    "lastModifyDateTime": "2020-08-26T15:05:08.989Z",
                                                    "orderSequence": 0,
                                                    "phoneNumber": "string",
                                                    "phoneTechType": "string",
                                                    "phoneUseType": "string",
                                                    "phoneUseTypeDescription": "string",
                                                    "primaryInd": true,
                                                    "purgeDate": "2020-08-26"
                                                  },
                                                  "type": "string"
                                                },
                                                "primary": true,
                                                "profileId": {
                                                  "id": "string",
                                                  "idContext": "string",
                                                  "idExtension": 0,
                                                  "instance": "string",
                                                  "type": "string",
                                                  "url": "string"
                                                },
                                                "relationship": {
                                                  "code": "string",
                                                  "description": "string"
                                                },
                                                "userId": {
                                                  "id": "string",
                                                  "type": "string"
                                                },
                                                "userName": "string"
                                              },
                                              "profileIdList": [
                                                {
                                                  "id": "string",
                                                  "type": "string"
                                                }
                                              ],
                                              "profileType": "Guest",
                                              "statusCode": "Active",
                                              "telephone": {
                                                "id": "string",
                                                "telephone": {
                                                  "createDateTime": "2020-08-26T15:05:08.989Z",
                                                  "creatorId": "string",
                                                  "extension": "string",
                                                  "lastModifierId": "string",
                                                  "lastModifyDateTime": "2020-08-26T15:05:08.989Z",
                                                  "orderSequence": 0,
                                                  "phoneNumber": "string",
                                                  "phoneTechType": "string",
                                                  "phoneUseType": "string",
                                                  "phoneUseTypeDescription": "string",
                                                  "primaryInd": true,
                                                  "purgeDate": "2020-08-26"
                                                },
                                                "type": "string"
                                              },
                                              "uRLs": {
                                                "id": "string",
                                                "type": "string",
                                                "url": {
                                                  "orderSequence": 0,
                                                  "primaryInd": true,
                                                  "type": "string",
                                                  "typeDescription": "string",
                                                  "value": "string"
                                                }
                                              }
                                            },
                                            "targetRelation": "string",
                                            "targetRelationDescription": "string"
                                          }
                                        ],
                                        "totalResults": 0
                                      },
                                      "requestForHotel": "string",
                                      "reservationInfoList": {
                                        "futureList": {
                                          "count": 0,
                                          "hasMore": true,
                                          "reservationInfo": [
                                            {
                                              "accessRestriction": "Change",
                                              "advanceCheckIn": {
                                                "advanceCheckedIn": true,
                                                "eTRComments": "string",
                                                "expectedReturnTime": "2020-08-26T15:05:08.993Z"
                                              },
                                              "allowMobileCheckout": true,
                                              "allowMobileViewFolio": true,
                                              "allowedActions": [
                                                "Cancel"
                                              ],
                                              "attachedProfiles": [
                                                {
                                                  "name": "string",
                                                  "profileIdList": [
                                                    {
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "reservationProfileType": "Company"
                                                }
                                              ],
                                              "cancellationInfo": {
                                                "code": "string",
                                                "date": "2020-08-26",
                                                "description": "string"
                                              },
                                              "cashiering": {
                                                "bedTaxReporting": {
                                                  "taxRegistrationNo": 0,
                                                  "taxableDays": 0,
                                                  "visaExpiryDate": "2020-08-26",
                                                  "visaIssueDate": "2020-08-26",
                                                  "visaNumber": "string"
                                                },
                                                "billingPrivileges": {
                                                  "allowAutoCheckin": true,
                                                  "autoSettlement": true,
                                                  "autoSettlementFreq": 0,
                                                  "autoSettlementType": "string",
                                                  "creditLimitAutoPay": true,
                                                  "directBillAuthorized": true,
                                                  "folioCloseDate": "2020-08-26",
                                                  "postStayCharging": true,
                                                  "postingRestriction": true,
                                                  "preStayCharging": true,
                                                  "scheduledCheckout": true,
                                                  "scheduledCheckoutTime": "2020-08-26",
                                                  "videoCheckout": true
                                                },
                                                "compAccounting": {
                                                  "authorizer": "string",
                                                  "compPostings": "string",
                                                  "compType": "string"
                                                },
                                                "financiallyResponsible": true,
                                                "folioTexts": [
                                                  {
                                                    "row": 0,
                                                    "text": "string"
                                                  }
                                                ],
                                                "lastRoomAndTaxPostedDate": "2020-08-26",
                                                "periodicFolio": {
                                                  "frequency": 0,
                                                  "lastFolioDate": "2020-08-26",
                                                  "lastSettlementDate": "2020-08-26"
                                                },
                                                "proratedBilling": true,
                                                "reservationPreConfiguredRoutingInstruction": {
                                                  "authorizerInfo": {
                                                    "authorizerId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "authorizerName": "string",
                                                    "authorizerRateCode": "string",
                                                    "authorizerUserName": "string",
                                                    "inheritAuthorizerRateCode": true
                                                  },
                                                  "profileType": "Company",
                                                  "promotionCode": "string",
                                                  "ratePlanCode": "string"
                                                },
                                                "revenuesAndBalances": {
                                                  "balance": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "foodAndBevRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "nonRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "otherRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "roomRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalFixedCharge": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalPayment": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  }
                                                },
                                                "reverseAdvanceCheckInAllowed": true,
                                                "reverseCheckInAllowed": true,
                                                "taxType": {
                                                  "code": "string",
                                                  "collectingAgentTax": true,
                                                  "description": "string",
                                                  "hotelId": "string",
                                                  "minimumLengthOfStay": 0,
                                                  "printAutoAdjust": true,
                                                  "reportExemptDays": 0,
                                                  "reportTaxPercentage": 0,
                                                  "taxExemptNo": "string"
                                                },
                                                "transactionsPosted": true
                                              },
                                              "commissionPayoutTo": "TravelAgent",
                                              "computedReservationStatus": "Reserved",
                                              "createDateTime": "2020-08-26T15:05:08.993Z",
                                              "creatorId": "string",
                                              "deposit": {
                                                "amountOwed": 0,
                                                "amountPaid": 0,
                                                "amountRequired": 0,
                                                "dueDate": "2020-08-26",
                                                "hasOutstanding": true,
                                                "hasPaid": true,
                                                "postingDate": "2020-08-26"
                                              },
                                              "displayColor": "string",
                                              "expectedServiceTime": "string",
                                              "guestPreferredCurrency": "string",
                                              "hotelId": "string",
                                              "hotelInterfaceStatusList": [
                                                {
                                                  "hotelInterface": {
                                                    "activeFlag": true,
                                                    "hotelId": "string",
                                                    "interfaceId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "interfaceName": "string",
                                                    "interfaceType": "Bms",
                                                    "logo": "string",
                                                    "machineName": "string",
                                                    "status": "Stopped"
                                                  },
                                                  "interfaceRights": [
                                                    {
                                                      "category": "string",
                                                      "description": "string",
                                                      "right": 0,
                                                      "statusCode": "string"
                                                    }
                                                  ],
                                                  "roomExtension": "string"
                                                }
                                              ],
                                              "hotelName": "string",
                                              "housekeeping": {
                                                "expectedServiceTime": "string",
                                                "facilityTaskInfo": {
                                                  "date": "2020-08-26",
                                                  "supplies": [
                                                    {
                                                      "code": "string",
                                                      "description": "string",
                                                      "quantity": 0
                                                    }
                                                  ],
                                                  "task": {
                                                    "code": "string",
                                                    "description": "string",
                                                    "facilityDepartureTask": true,
                                                    "hotelId": "string",
                                                    "instructions": "string",
                                                    "linenChange": true,
                                                    "sequence": 0
                                                  }
                                                },
                                                "instructions": "string",
                                                "linenChange": true,
                                                "roomStatus": "Clean",
                                                "serviceTime": "2020-08-26",
                                                "turndownRequested": true
                                              },
                                              "keyCount": 0,
                                              "lastModifierId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:05:08.993Z",
                                              "lastPrivacyPromptDate": "2020-08-26",
                                              "mobileNotifications": {
                                                "checkoutMessageReceived": true,
                                                "errorMessage": "string",
                                                "keyReady": "Pending",
                                                "requiresAction": true,
                                                "roomReady": "Pending"
                                              },
                                              "openFolio": true,
                                              "optedForCommunication": true,
                                              "paymentMethod": "string",
                                              "preRegistered": true,
                                              "purgeDate": "2020-08-26",
                                              "queue": {
                                                "averageQueueTimeCurrentReservations": 0,
                                                "averageQueueTimeToCheckIn": 0,
                                                "guestTextInfo": {
                                                  "sentBy": "string",
                                                  "sentTime": "2020-08-26T15:05:08.991Z"
                                                },
                                                "priority": 0,
                                                "queueDate": "2020-08-26",
                                                "timeSpan": {
                                                  "duration": "string",
                                                  "durationInSeconds": 0,
                                                  "endDate": "2020-08-26",
                                                  "startDate": "2020-08-26"
                                                }
                                              },
                                              "reservationCommunication": {
                                                "emails": {
                                                  "count": 0,
                                                  "emailInfo": [
                                                    {
                                                      "email": {
                                                        "createDateTime": "2020-08-26T15:05:08.993Z",
                                                        "creatorId": "string",
                                                        "emailAddress": "string",
                                                        "emailFormat": "Html",
                                                        "lastModifierId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:05:08.993Z",
                                                        "orderSequence": 0,
                                                        "primaryInd": true,
                                                        "purgeDate": "2020-08-26",
                                                        "type": "string",
                                                        "typeDescription": "string"
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "hasMore": true,
                                                  "totalResults": 0
                                                },
                                                "telephones": {
                                                  "count": 0,
                                                  "hasMore": true,
                                                  "telephoneInfo": [
                                                    {
                                                      "id": "string",
                                                      "telephone": {
                                                        "createDateTime": "2020-08-26T15:05:08.993Z",
                                                        "creatorId": "string",
                                                        "extension": "string",
                                                        "lastModifierId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:05:08.993Z",
                                                        "orderSequence": 0,
                                                        "phoneNumber": "string",
                                                        "phoneTechType": "string",
                                                        "phoneUseType": "string",
                                                        "phoneUseTypeDescription": "string",
                                                        "primaryInd": true,
                                                        "purgeDate": "2020-08-26"
                                                      },
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "totalResults": 0
                                                }
                                              },
                                              "reservationFolioWindows": [
                                                {
                                                  "balance": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "folioWindowNo": 0,
                                                  "payeeInfo": {
                                                    "payeeAccountInfo": {
                                                      "accountId": {
                                                        "id": "string",
                                                        "type": "string"
                                                      },
                                                      "accountName": "string",
                                                      "accountNo": "string",
                                                      "status": {
                                                        "description": "string",
                                                        "restricted": true,
                                                        "restriction": "string"
                                                      }
                                                    },
                                                    "payeeAddress": {
                                                      "address": {
                                                        "addressLine": [
                                                          "string"
                                                        ],
                                                        "barCode": "string",
                                                        "cityExtension": "string",
                                                        "cityName": "string",
                                                        "country": {
                                                          "code": "string",
                                                          "value": "string"
                                                        },
                                                        "county": "string",
                                                        "createDateTime": "2020-08-26T15:05:08.991Z",
                                                        "creatorId": "string",
                                                        "language": "string",
                                                        "lastModifierId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:05:08.991Z",
                                                        "postalCode": "string",
                                                        "primaryInd": true,
                                                        "purgeDate": "2020-08-26",
                                                        "state": "string",
                                                        "type": "string",
                                                        "typeDescription": "string",
                                                        "updateReservations": true
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "payeeAddressCount": 0,
                                                    "payeeId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "payeeName": "string",
                                                    "payeeReferenceCurrency": "string",
                                                    "payeeTaxNumber": "string"
                                                  },
                                                  "paymentMethod": "string"
                                                }
                                              ],
                                              "reservationGuest": {
                                                "accompanyGuests": [
                                                  {
                                                    "firstName": "string",
                                                    "fullName": "string",
                                                    "lastName": "string",
                                                    "profileIdList": [
                                                      {
                                                        "id": "string",
                                                        "type": "string"
                                                      }
                                                    ],
                                                    "registrationCardNo": "string"
                                                  }
                                                ],
                                                "address": {
                                                  "cityName": "string",
                                                  "country": {
                                                    "code": "string",
                                                    "value": "string"
                                                  },
                                                  "excludeNoCity": true,
                                                  "postalCode": "string",
                                                  "state": "string",
                                                  "streetAddress": "string"
                                                },
                                                "alternateFullName": "string",
                                                "alternateGivenName": "string",
                                                "alternateSurname": "string",
                                                "anonymization": {
                                                  "anonymizationDate": "2020-08-26T15:05:08.991Z",
                                                  "anonymizationStatus": "Requested"
                                                },
                                                "birthDate": "2020-08-26",
                                                "email": "string",
                                                "externalInfo": {
                                                  "givenName": "string",
                                                  "surname": "string"
                                                },
                                                "fullName": "string",
                                                "givenName": "string",
                                                "guestLastStayInfo": {
                                                  "lastStayDate": "2020-08-26",
                                                  "lastStayRate": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "lastStayRoom": "string",
                                                  "totalStay": 0
                                                },
                                                "guestRestricted": true,
                                                "guestRestrictedCode": "string",
                                                "guestRestrictedReasonDesc": "string",
                                                "id": "string",
                                                "language": "string",
                                                "membership": {
                                                  "accountId": "string",
                                                  "bonusCode": "string",
                                                  "membershipId": 0,
                                                  "membershipLevel": "string",
                                                  "membershipLevelDesc": "string",
                                                  "membershipTypeDesc": "string",
                                                  "playerRanking": 0,
                                                  "programCode": "string"
                                                },
                                                "middleName": "string",
                                                "namePrefix": "string",
                                                "nameSuffix": "string",
                                                "nameTitle": "string",
                                                "nameType": "Guest",
                                                "nationality": {
                                                  "code": "string",
                                                  "value": "string"
                                                },
                                                "phoneNumber": "string",
                                                "registrationCardNo": "string",
                                                "surname": "string",
                                                "surnamePrefix": "string",
                                                "type": "string",
                                                "vip": {
                                                  "vipCode": "string",
                                                  "vipDescription": "string"
                                                }
                                              },
                                              "reservationIdList": [
                                                {
                                                  "id": "string",
                                                  "type": "string"
                                                }
                                              ],
                                              "reservationIndicators": [
                                                {
                                                  "count": 0,
                                                  "indicatorName": "string"
                                                }
                                              ],
                                              "reservationPaymentMethod": {
                                                "authorizationRule": {
                                                  "amount": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "code": 0,
                                                  "percent": 0
                                                },
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "description": "string",
                                                "emailFolioInfo": {
                                                  "email": {
                                                    "createDateTime": "2020-08-26T15:05:08.991Z",
                                                    "creatorId": "string",
                                                    "emailAddress": "string",
                                                    "emailFormat": "Html",
                                                    "lastModifierId": "string",
                                                    "lastModifyDateTime": "2020-08-26T15:05:08.991Z",
                                                    "orderSequence": 0,
                                                    "primaryInd": true,
                                                    "purgeDate": "2020-08-26",
                                                    "type": "string",
                                                    "typeDescription": "string"
                                                  },
                                                  "emailFolio": true,
                                                  "id": "string",
                                                  "type": "string"
                                                },
                                                "folioView": 0,
                                                "paymentCard": {
                                                  "approvalAmountNeeded": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "attachCreditCardToProfile": true,
                                                  "cardHolderName": "string",
                                                  "cardId": {
                                                    "id": "string",
                                                    "type": "string"
                                                  },
                                                  "cardNumber": "string",
                                                  "cardNumberLast4Digits": "string",
                                                  "cardNumberMasked": "string",
                                                  "cardOrToken": "CardNumber",
                                                  "cardType": "Ab",
                                                  "currentAuthorizedAmount": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "expirationDate": "2020-08-26",
                                                  "expirationDateExpired": true,
                                                  "expirationDateMasked": "string",
                                                  "processing": "Eft",
                                                  "swiped": true,
                                                  "userDefinedCardType": "string"
                                                },
                                                "paymentMethod": "string"
                                              },
                                              "reservationStatus": "Reserved",
                                              "revenuesAndBalances": {
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "foodAndBevRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "nonRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "otherRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "roomRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "totalFixedCharge": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "totalPayment": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "totalRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                }
                                              },
                                              "roomStatus": "Clean",
                                              "roomStay": {
                                                "adultCount": 0,
                                                "arrivalDate": "2020-08-26",
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "bookingChannelCode": "string",
                                                "childCount": 0,
                                                "compBalance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "departureDate": "2020-08-26",
                                                "depositPayments": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "expectedTimes": {
                                                  "reservationExpectedArrivalTime": "2020-08-26T15:05:08.991Z",
                                                  "reservationExpectedDepartureTime": "2020-08-26T15:05:08.991Z"
                                                },
                                                "fixedRate": true,
                                                "guarantee": {
                                                  "guaranteeCode": "string",
                                                  "onHold": true,
                                                  "shortDescription": "string"
                                                },
                                                "guestServiceStatus": "DoNotDisturb",
                                                "marketCode": "string",
                                                "numberOfRooms": 0,
                                                "originalTimeSpan": {
                                                  "duration": "string",
                                                  "endDate": "2020-08-26",
                                                  "startDate": "2020-08-26"
                                                },
                                                "partyCode": "string",
                                                "points": {
                                                  "awardsType": "string",
                                                  "points": 0
                                                },
                                                "promotion": {
                                                  "couponCode": "string",
                                                  "promotionCode": "string",
                                                  "promotionName": "string"
                                                },
                                                "pseudoRoom": true,
                                                "rateAmount": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "ratePlanCode": "string",
                                                "rateSuppressed": true,
                                                "reservationBlock": {
                                                  "blockIdList": [
                                                    {
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "blockName": "string",
                                                  "hotelId": "string"
                                                },
                                                "roomClass": "string",
                                                "roomNumber": "string",
                                                "roomNumberLocked": true,
                                                "roomType": "string",
                                                "roomTypeCharged": "string",
                                                "scheduledCheckoutTime": "2020-08-26",
                                                "sourceOfBusiness": "string",
                                                "sourceOfBusinessDescription": "string",
                                                "totalAmount": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                }
                                              },
                                              "roomStayReservation": true,
                                              "searchMatches": [
                                                {
                                                  "attribute": "string",
                                                  "value": "string"
                                                }
                                              ],
                                              "sharedGuests": [
                                                {
                                                  "firstName": "string",
                                                  "fullName": "string",
                                                  "lastName": "string",
                                                  "profileId": {
                                                    "id": "string",
                                                    "idContext": "string",
                                                    "idExtension": 0,
                                                    "instance": "string",
                                                    "type": "string",
                                                    "url": "string"
                                                  }
                                                }
                                              ],
                                              "sourceOfSale": {
                                                "sourceCode": "string",
                                                "sourceType": "string"
                                              },
                                              "specials": "string",
                                              "taxType": {
                                                "code": "string",
                                                "collectingAgentTax": true,
                                                "description": "string",
                                                "hotelId": "string",
                                                "minimumLengthOfStay": 0,
                                                "printAutoAdjust": true,
                                                "reportExemptDays": 0,
                                                "reportTaxPercentage": 0
                                              },
                                              "turndownInfo": {
                                                "allowed": true,
                                                "status": "Required"
                                              },
                                              "waitlist": {
                                                "description": "string",
                                                "priorityCode": "string",
                                                "priorityDescription": "string",
                                                "reasonCode": "string",
                                                "reasonDescription": "string",
                                                "telephone": "string"
                                              },
                                              "walkInIndicator": true,
                                              "welcomeOffer": true
                                            }
                                          ],
                                          "totalResults": 0
                                        },
                                        "historyList": {
                                          "count": 0,
                                          "hasMore": true,
                                          "reservationInfo": [
                                            {
                                              "accessRestriction": "Change",
                                              "advanceCheckIn": {
                                                "advanceCheckedIn": true,
                                                "eTRComments": "string",
                                                "expectedReturnTime": "2020-08-26T15:05:08.991Z"
                                              },
                                              "allowMobileCheckout": true,
                                              "allowMobileViewFolio": true,
                                              "allowedActions": [
                                                "Cancel"
                                              ],
                                              "attachedProfiles": [
                                                {
                                                  "name": "string",
                                                  "profileIdList": [
                                                    {
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "reservationProfileType": "Company"
                                                }
                                              ],
                                              "cancellationInfo": {
                                                "code": "string",
                                                "date": "2020-08-26",
                                                "description": "string"
                                              },
                                              "cashiering": {
                                                "bedTaxReporting": {
                                                  "taxRegistrationNo": 0,
                                                  "taxableDays": 0,
                                                  "visaExpiryDate": "2020-08-26",
                                                  "visaIssueDate": "2020-08-26",
                                                  "visaNumber": "string"
                                                },
                                                "billingPrivileges": {
                                                  "allowAutoCheckin": true,
                                                  "autoSettlement": true,
                                                  "autoSettlementFreq": 0,
                                                  "autoSettlementType": "string",
                                                  "creditLimitAutoPay": true,
                                                  "directBillAuthorized": true,
                                                  "folioCloseDate": "2020-08-26",
                                                  "postStayCharging": true,
                                                  "postingRestriction": true,
                                                  "preStayCharging": true,
                                                  "scheduledCheckout": true,
                                                  "scheduledCheckoutTime": "2020-08-26",
                                                  "videoCheckout": true
                                                },
                                                "compAccounting": {
                                                  "authorizer": "string",
                                                  "compPostings": "string",
                                                  "compType": "string"
                                                },
                                                "financiallyResponsible": true,
                                                "folioTexts": [
                                                  {
                                                    "row": 0,
                                                    "text": "string"
                                                  }
                                                ],
                                                "lastRoomAndTaxPostedDate": "2020-08-26",
                                                "periodicFolio": {
                                                  "frequency": 0,
                                                  "lastFolioDate": "2020-08-26",
                                                  "lastSettlementDate": "2020-08-26"
                                                },
                                                "proratedBilling": true,
                                                "reservationPreConfiguredRoutingInstruction": {
                                                  "authorizerInfo": {
                                                    "authorizerId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "authorizerName": "string",
                                                    "authorizerRateCode": "string",
                                                    "authorizerUserName": "string",
                                                    "inheritAuthorizerRateCode": true
                                                  },
                                                  "profileType": "Company",
                                                  "promotionCode": "string",
                                                  "ratePlanCode": "string"
                                                },
                                                "revenuesAndBalances": {
                                                  "balance": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "foodAndBevRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "nonRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "otherRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "roomRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalFixedCharge": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalPayment": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  }
                                                },
                                                "reverseAdvanceCheckInAllowed": true,
                                                "reverseCheckInAllowed": true,
                                                "taxType": {
                                                  "code": "string",
                                                  "collectingAgentTax": true,
                                                  "description": "string",
                                                  "hotelId": "string",
                                                  "minimumLengthOfStay": 0,
                                                  "printAutoAdjust": true,
                                                  "reportExemptDays": 0,
                                                  "reportTaxPercentage": 0,
                                                  "taxExemptNo": "string"
                                                },
                                                "transactionsPosted": true
                                              },
                                              "commissionPayoutTo": "TravelAgent",
                                              "computedReservationStatus": "Reserved",
                                              "createDateTime": "2020-08-26T15:05:08.991Z",
                                              "creatorId": "string",
                                              "deposit": {
                                                "amountOwed": 0,
                                                "amountPaid": 0,
                                                "amountRequired": 0,
                                                "dueDate": "2020-08-26",
                                                "hasOutstanding": true,
                                                "hasPaid": true,
                                                "postingDate": "2020-08-26"
                                              },
                                              "displayColor": "string",
                                              "expectedServiceTime": "string",
                                              "guestPreferredCurrency": "string",
                                              "hotelId": "string",
                                              "hotelInterfaceStatusList": [
                                                {
                                                  "hotelInterface": {
                                                    "activeFlag": true,
                                                    "hotelId": "string",
                                                    "interfaceId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "interfaceName": "string",
                                                    "interfaceType": "Bms",
                                                    "logo": "string",
                                                    "machineName": "string",
                                                    "status": "Stopped"
                                                  },
                                                  "interfaceRights": [
                                                    {
                                                      "category": "string",
                                                      "description": "string",
                                                      "right": 0,
                                                      "statusCode": "string"
                                                    }
                                                  ],
                                                  "roomExtension": "string"
                                                }
                                              ],
                                              "hotelName": "string",
                                              "housekeeping": {
                                                "expectedServiceTime": "string",
                                                "facilityTaskInfo": {
                                                  "date": "2020-08-26",
                                                  "supplies": [
                                                    {
                                                      "code": "string",
                                                      "description": "string",
                                                      "quantity": 0
                                                    }
                                                  ],
                                                  "task": {
                                                    "code": "string",
                                                    "description": "string",
                                                    "facilityDepartureTask": true,
                                                    "hotelId": "string",
                                                    "instructions": "string",
                                                    "linenChange": true,
                                                    "sequence": 0
                                                  }
                                                },
                                                "instructions": "string",
                                                "linenChange": true,
                                                "roomStatus": "Clean",
                                                "serviceTime": "2020-08-26",
                                                "turndownRequested": true
                                              },
                                              "keyCount": 0,
                                              "lastModifierId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:05:08.991Z",
                                              "lastPrivacyPromptDate": "2020-08-26",
                                              "mobileNotifications": {
                                                "checkoutMessageReceived": true,
                                                "errorMessage": "string",
                                                "keyReady": "Pending",
                                                "requiresAction": true,
                                                "roomReady": "Pending"
                                              },
                                              "openFolio": true,
                                              "optedForCommunication": true,
                                              "paymentMethod": "string",
                                              "preRegistered": true,
                                              "purgeDate": "2020-08-26",
                                              "queue": {
                                                "averageQueueTimeCurrentReservations": 0,
                                                "averageQueueTimeToCheckIn": 0,
                                                "guestTextInfo": {
                                                  "sentBy": "string",
                                                  "sentTime": "2020-08-26T15:05:08.990Z"
                                                },
                                                "priority": 0,
                                                "queueDate": "2020-08-26",
                                                "timeSpan": {
                                                  "duration": "string",
                                                  "durationInSeconds": 0,
                                                  "endDate": "2020-08-26",
                                                  "startDate": "2020-08-26"
                                                }
                                              },
                                              "reservationCommunication": {
                                                "emails": {
                                                  "count": 0,
                                                  "emailInfo": [
                                                    {
                                                      "email": {
                                                        "createDateTime": "2020-08-26T15:05:08.991Z",
                                                        "creatorId": "string",
                                                        "emailAddress": "string",
                                                        "emailFormat": "Html",
                                                        "lastModifierId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:05:08.991Z",
                                                        "orderSequence": 0,
                                                        "primaryInd": true,
                                                        "purgeDate": "2020-08-26",
                                                        "type": "string",
                                                        "typeDescription": "string"
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "hasMore": true,
                                                  "totalResults": 0
                                                },
                                                "telephones": {
                                                  "count": 0,
                                                  "hasMore": true,
                                                  "telephoneInfo": [
                                                    {
                                                      "id": "string",
                                                      "telephone": {
                                                        "createDateTime": "2020-08-26T15:05:08.991Z",
                                                        "creatorId": "string",
                                                        "extension": "string",
                                                        "lastModifierId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:05:08.991Z",
                                                        "orderSequence": 0,
                                                        "phoneNumber": "string",
                                                        "phoneTechType": "string",
                                                        "phoneUseType": "string",
                                                        "phoneUseTypeDescription": "string",
                                                        "primaryInd": true,
                                                        "purgeDate": "2020-08-26"
                                                      },
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "totalResults": 0
                                                }
                                              },
                                              "reservationFolioWindows": [
                                                {
                                                  "balance": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "folioWindowNo": 0,
                                                  "payeeInfo": {
                                                    "payeeAccountInfo": {
                                                      "accountId": {
                                                        "id": "string",
                                                        "type": "string"
                                                      },
                                                      "accountName": "string",
                                                      "accountNo": "string",
                                                      "status": {
                                                        "description": "string",
                                                        "restricted": true,
                                                        "restriction": "string"
                                                      }
                                                    },
                                                    "payeeAddress": {
                                                      "address": {
                                                        "addressLine": [
                                                          "string"
                                                        ],
                                                        "barCode": "string",
                                                        "cityExtension": "string",
                                                        "cityName": "string",
                                                        "country": {
                                                          "code": "string",
                                                          "value": "string"
                                                        },
                                                        "county": "string",
                                                        "createDateTime": "2020-08-26T15:05:08.990Z",
                                                        "creatorId": "string",
                                                        "language": "string",
                                                        "lastModifierId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:05:08.990Z",
                                                        "postalCode": "string",
                                                        "primaryInd": true,
                                                        "purgeDate": "2020-08-26",
                                                        "state": "string",
                                                        "type": "string",
                                                        "typeDescription": "string",
                                                        "updateReservations": true
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "payeeAddressCount": 0,
                                                    "payeeId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "payeeName": "string",
                                                    "payeeReferenceCurrency": "string",
                                                    "payeeTaxNumber": "string"
                                                  },
                                                  "paymentMethod": "string"
                                                }
                                              ],
                                              "reservationGuest": {
                                                "accompanyGuests": [
                                                  {
                                                    "firstName": "string",
                                                    "fullName": "string",
                                                    "lastName": "string",
                                                    "profileIdList": [
                                                      {
                                                        "id": "string",
                                                        "type": "string"
                                                      }
                                                    ],
                                                    "registrationCardNo": "string"
                                                  }
                                                ],
                                                "address": {
                                                  "cityName": "string",
                                                  "country": {
                                                    "code": "string",
                                                    "value": "string"
                                                  },
                                                  "excludeNoCity": true,
                                                  "postalCode": "string",
                                                  "state": "string",
                                                  "streetAddress": "string"
                                                },
                                                "alternateFullName": "string",
                                                "alternateGivenName": "string",
                                                "alternateSurname": "string",
                                                "anonymization": {
                                                  "anonymizationDate": "2020-08-26T15:05:08.989Z",
                                                  "anonymizationStatus": "Requested"
                                                },
                                                "birthDate": "2020-08-26",
                                                "email": "string",
                                                "externalInfo": {
                                                  "givenName": "string",
                                                  "surname": "string"
                                                },
                                                "fullName": "string",
                                                "givenName": "string",
                                                "guestLastStayInfo": {
                                                  "lastStayDate": "2020-08-26",
                                                  "lastStayRate": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "lastStayRoom": "string",
                                                  "totalStay": 0
                                                },
                                                "guestRestricted": true,
                                                "guestRestrictedCode": "string",
                                                "guestRestrictedReasonDesc": "string",
                                                "id": "string",
                                                "language": "string",
                                                "membership": {
                                                  "accountId": "string",
                                                  "bonusCode": "string",
                                                  "membershipId": 0,
                                                  "membershipLevel": "string",
                                                  "membershipLevelDesc": "string",
                                                  "membershipTypeDesc": "string",
                                                  "playerRanking": 0,
                                                  "programCode": "string"
                                                },
                                                "middleName": "string",
                                                "namePrefix": "string",
                                                "nameSuffix": "string",
                                                "nameTitle": "string",
                                                "nameType": "Guest",
                                                "nationality": {
                                                  "code": "string",
                                                  "value": "string"
                                                },
                                                "phoneNumber": "string",
                                                "registrationCardNo": "string",
                                                "surname": "string",
                                                "surnamePrefix": "string",
                                                "type": "string",
                                                "vip": {
                                                  "vipCode": "string",
                                                  "vipDescription": "string"
                                                }
                                              },
                                              "reservationIdList": [
                                                {
                                                  "id": "string",
                                                  "type": "string"
                                                }
                                              ],
                                              "reservationIndicators": [
                                                {
                                                  "count": 0,
                                                  "indicatorName": "string"
                                                }
                                              ],
                                              "reservationPaymentMethod": {
                                                "authorizationRule": {
                                                  "amount": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "code": 0,
                                                  "percent": 0
                                                },
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "description": "string",
                                                "emailFolioInfo": {
                                                  "email": {
                                                    "createDateTime": "2020-08-26T15:05:08.990Z",
                                                    "creatorId": "string",
                                                    "emailAddress": "string",
                                                    "emailFormat": "Html",
                                                    "lastModifierId": "string",
                                                    "lastModifyDateTime": "2020-08-26T15:05:08.990Z",
                                                    "orderSequence": 0,
                                                    "primaryInd": true,
                                                    "purgeDate": "2020-08-26",
                                                    "type": "string",
                                                    "typeDescription": "string"
                                                  },
                                                  "emailFolio": true,
                                                  "id": "string",
                                                  "type": "string"
                                                },
                                                "folioView": 0,
                                                "paymentCard": {
                                                  "approvalAmountNeeded": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "attachCreditCardToProfile": true,
                                                  "cardHolderName": "string",
                                                  "cardId": {
                                                    "id": "string",
                                                    "type": "string"
                                                  },
                                                  "cardNumber": "string",
                                                  "cardNumberLast4Digits": "string",
                                                  "cardNumberMasked": "string",
                                                  "cardOrToken": "CardNumber",
                                                  "cardType": "Ab",
                                                  "currentAuthorizedAmount": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "expirationDate": "2020-08-26",
                                                  "expirationDateExpired": true,
                                                  "expirationDateMasked": "string",
                                                  "processing": "Eft",
                                                  "swiped": true,
                                                  "userDefinedCardType": "string"
                                                },
                                                "paymentMethod": "string"
                                              },
                                              "reservationStatus": "Reserved",
                                              "revenuesAndBalances": {
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "foodAndBevRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "nonRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "otherRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "roomRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "totalFixedCharge": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "totalPayment": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "totalRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                }
                                              },
                                              "roomStatus": "Clean",
                                              "roomStay": {
                                                "adultCount": 0,
                                                "arrivalDate": "2020-08-26",
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "bookingChannelCode": "string",
                                                "childCount": 0,
                                                "compBalance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "departureDate": "2020-08-26",
                                                "depositPayments": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "expectedTimes": {
                                                  "reservationExpectedArrivalTime": "2020-08-26T15:05:08.989Z",
                                                  "reservationExpectedDepartureTime": "2020-08-26T15:05:08.989Z"
                                                },
                                                "fixedRate": true,
                                                "guarantee": {
                                                  "guaranteeCode": "string",
                                                  "onHold": true,
                                                  "shortDescription": "string"
                                                },
                                                "guestServiceStatus": "DoNotDisturb",
                                                "marketCode": "string",
                                                "numberOfRooms": 0,
                                                "originalTimeSpan": {
                                                  "duration": "string",
                                                  "endDate": "2020-08-26",
                                                  "startDate": "2020-08-26"
                                                },
                                                "partyCode": "string",
                                                "points": {
                                                  "awardsType": "string",
                                                  "points": 0
                                                },
                                                "promotion": {
                                                  "couponCode": "string",
                                                  "promotionCode": "string",
                                                  "promotionName": "string"
                                                },
                                                "pseudoRoom": true,
                                                "rateAmount": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "ratePlanCode": "string",
                                                "rateSuppressed": true,
                                                "reservationBlock": {
                                                  "blockIdList": [
                                                    {
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "blockName": "string",
                                                  "hotelId": "string"
                                                },
                                                "roomClass": "string",
                                                "roomNumber": "string",
                                                "roomNumberLocked": true,
                                                "roomType": "string",
                                                "roomTypeCharged": "string",
                                                "scheduledCheckoutTime": "2020-08-26",
                                                "sourceOfBusiness": "string",
                                                "sourceOfBusinessDescription": "string",
                                                "totalAmount": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                }
                                              },
                                              "roomStayReservation": true,
                                              "searchMatches": [
                                                {
                                                  "attribute": "string",
                                                  "value": "string"
                                                }
                                              ],
                                              "sharedGuests": [
                                                {
                                                  "firstName": "string",
                                                  "fullName": "string",
                                                  "lastName": "string",
                                                  "profileId": {
                                                    "id": "string",
                                                    "idContext": "string",
                                                    "idExtension": 0,
                                                    "instance": "string",
                                                    "type": "string",
                                                    "url": "string"
                                                  }
                                                }
                                              ],
                                              "sourceOfSale": {
                                                "sourceCode": "string",
                                                "sourceType": "string"
                                              },
                                              "specials": "string",
                                              "taxType": {
                                                "code": "string",
                                                "collectingAgentTax": true,
                                                "description": "string",
                                                "hotelId": "string",
                                                "minimumLengthOfStay": 0,
                                                "printAutoAdjust": true,
                                                "reportExemptDays": 0,
                                                "reportTaxPercentage": 0
                                              },
                                              "turndownInfo": {
                                                "allowed": true,
                                                "status": "Required"
                                              },
                                              "waitlist": {
                                                "description": "string",
                                                "priorityCode": "string",
                                                "priorityDescription": "string",
                                                "reasonCode": "string",
                                                "reasonDescription": "string",
                                                "telephone": "string"
                                              },
                                              "walkInIndicator": true,
                                              "welcomeOffer": true
                                            }
                                          ],
                                          "totalResults": 0
                                        }
                                      },
                                      "salesInfo": {
                                        "accountSource": "string",
                                        "accountType": "string",
                                        "actionCode": "string",
                                        "businessSegments": "string",
                                        "competitionCode": "string",
                                        "hotelId": "string",
                                        "industryCode": "string",
                                        "influence": "string",
                                        "preferredRoom": "string",
                                        "priority": "string",
                                        "roomsPotential": "string",
                                        "scope": "string",
                                        "scopeCity": "string"
                                      },
                                      "statusCode": "Active",
                                      "subscriptions": [
                                        {
                                          "distributed": true,
                                          "externalProfileId": {
                                            "id": "string",
                                            "type": "string"
                                          },
                                          "force": true,
                                          "inactive": true,
                                          "lastDistributionDate": "2020-08-26T15:05:08.993Z",
                                          "lastExternalUpdateDate": "2020-08-26T15:05:08.993Z",
                                          "profileId": {
                                            "id": "string",
                                            "idContext": "string",
                                            "idExtension": 0,
                                            "instance": "string",
                                            "type": "string",
                                            "url": "string"
                                          },
                                          "profileInfo": {
                                            "fullName": "string",
                                            "givenName": "string",
                                            "middleName": "string",
                                            "name": "string",
                                            "namePrefix": "string",
                                            "nameSuffix": "string",
                                            "nameTitle": "string",
                                            "nameType": "Primary",
                                            "profileType": "Guest"
                                          },
                                          "subscriptionDate": "2020-08-26T15:05:08.993Z"
                                        }
                                      ],
                                      "taxInfo": {
                                        "businessId": "string",
                                        "businessRegistration": "string",
                                        "tax1No": "string",
                                        "tax2No": "string",
                                        "taxCategory": "string",
                                        "taxOffice": "string",
                                        "taxType": "string"
                                      },
                                      "telephones": {
                                        "count": 0,
                                        "hasMore": true,
                                        "telephoneInfo": [
                                          {
                                            "id": "string",
                                            "telephone": {
                                              "createDateTime": "2020-08-26T15:05:08.988Z",
                                              "creatorId": "string",
                                              "extension": "string",
                                              "lastModifierId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:05:08.988Z",
                                              "orderSequence": 0,
                                              "phoneNumber": "string",
                                              "phoneTechType": "string",
                                              "phoneUseType": "string",
                                              "phoneUseTypeDescription": "string",
                                              "primaryInd": true,
                                              "purgeDate": "2020-08-26"
                                            },
                                            "type": "string"
                                          }
                                        ],
                                        "totalResults": 0
                                      },
                                      "territory": "string",
                                      "traceCode": "string",
                                      "uRLs": {
                                        "count": 0,
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "uRLInfo": [
                                          {
                                            "id": "string",
                                            "type": "string",
                                            "url": {
                                              "orderSequence": 0,
                                              "primaryInd": true,
                                              "type": "string",
                                              "typeDescription": "string",
                                              "value": "string"
                                            }
                                          }
                                        ]
                                      },
                                      "userDefinedFields": {
                                        "characterUDFs": [
                                          {
                                            "alternateName": "string",
                                            "name": "string",
                                            "value": "string"
                                          }
                                        ],
                                        "dateUDFs": [
                                          {
                                            "alternateName": "string",
                                            "name": "string",
                                            "value": "2020-08-26"
                                          }
                                        ],
                                        "numericUDFs": [
                                          {
                                            "alternateName": "string",
                                            "name": "string",
                                            "value": 0
                                          }
                                        ]
                                      },
                                      "webUserAccounts": [
                                        {
                                          "autoGeneratePassword": true,
                                          "comments": "string",
                                          "domainCode": "string",
                                          "history": {
                                            "createDateTime": "2020-08-26T15:05:08.993Z",
                                            "creatorId": "string",
                                            "inactiveDate": "2020-08-26",
                                            "lastLogin": "2020-08-26",
                                            "lastModifierId": "string",
                                            "lastModifyDateTime": "2020-08-26T15:05:08.993Z",
                                            "lastPasswordChange": "2020-08-26",
                                            "purgeDate": "2020-08-26"
                                          },
                                          "inactive": true,
                                          "locked": true,
                                          "loginName": "string",
                                          "newLoginName": "string",
                                          "newPassword": "string",
                                          "securityAnswer": "string",
                                          "securityQuestion": {
                                            "code": "string",
                                            "description": "string"
                                          }
                                        }
                                      ]
                                    },
                                    "profileIdList": [
                                      {
                                        "id": "string",
                                        "type": "string"
                                      }
                                    ],
                                    "reservationProfileType": "Company"
                                  }
                                ],
                                "suppressRate": true,
                                "taxFreeGuestCounts": {
                                  "adults": 0,
                                  "childAges": [
                                    {
                                      "age": 0
                                    }
                                  ],
                                  "childBuckets": {
                                    "bucket1Count": 0,
                                    "bucket2Count": 0,
                                    "bucket3Count": 0,
                                    "bucket4Count": 0,
                                    "bucket5Count": 0
                                  },
                                  "children": 0
                                },
                                "taxIncluded": true,
                                "total": {
                                  "amountAfterTax": 0,
                                  "amountBeforeTax": 0,
                                  "code": "string",
                                  "currencyCode": "string",
                                  "currencySymbol": "string",
                                  "decimalPlaces": 0,
                                  "description": "string",
                                  "fees": {
                                    "amount": 0,
                                    "currencyCode": "string",
                                    "fee": [
                                      {
                                        "amount": 0,
                                        "code": "string",
                                        "currencyCode": "string",
                                        "description": "string",
                                        "type": "Inclusive"
                                      }
                                    ]
                                  },
                                  "rateOverride": true,
                                  "taxes": {
                                    "amount": 0,
                                    "currencyCode": "string",
                                    "tax": [
                                      {
                                        "amount": 0,
                                        "code": "string",
                                        "currencyCode": "string",
                                        "description": "string",
                                        "type": "Inclusive"
                                      }
                                    ]
                                  }
                                },
                                "totalPoints": {
                                  "awardsType": "string",
                                  "points": 0
                                }
                              }
                            ],
                            "suiteWith": "string",
                            "total": {
                              "amountAfterTax": 0,
                              "amountBeforeTax": 0,
                              "code": "string",
                              "currencyCode": "string",
                              "currencySymbol": "string",
                              "decimalPlaces": 0,
                              "description": "string",
                              "fees": {
                                "amount": 0,
                                "currencyCode": "string",
                                "fee": [
                                  {
                                    "amount": 0,
                                    "code": "string",
                                    "currencyCode": "string",
                                    "description": "string",
                                    "type": "Inclusive"
                                  }
                                ]
                              },
                              "rateOverride": true,
                              "taxes": {
                                "amount": 0,
                                "currencyCode": "string",
                                "tax": [
                                  {
                                    "amount": 0,
                                    "code": "string",
                                    "currencyCode": "string",
                                    "description": "string",
                                    "type": "Inclusive"
                                  }
                                ]
                              }
                            },
                            "totalPoints": {
                              "awardsType": "string",
                              "points": 0
                            },
                            "upsellInfo": {
                              "originalInfo": {
                                "nights": 0,
                                "rateCode": "string",
                                "roomType": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "totalAmount": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                }
                              },
                              "upsellInfo": {
                                "firstNightUpsellAmount": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "firstNightUpsellCharge": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "percentageSavings": 0,
                                "roomLongDescription": "string",
                                "roomType": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "ruleCode": "string",
                                "ruleDescription": "string",
                                "ruleId": 0,
                                "totalActualRateAmount": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "totalUpsellCharge": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "totalUpsellMoneyAmount": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "totalUpsellPoints": 0,
                                "upsellDate": "2020-08-26",
                                "upsellUser": "string"
                              }
                            }
                          }
                        ]
                      },
                      "reciprocalRelationship": true,
                      "relativePosition": {
                        "distance": 0,
                        "distanceType": "string",
                        "drivingTime": "string"
                      },
                      "sellMessages": {
                        "count": 0,
                        "hasMore": true,
                        "sellMessage": [
                          {
                            "chainCode": "string",
                            "croCode": "string",
                            "hotelId": "string",
                            "id": "string",
                            "idContext": "string",
                            "idExtension": 0,
                            "instance": "string",
                            "languageCode": "string",
                            "message": "string",
                            "ratePlanCode": "string",
                            "roomType": "string",
                            "stickyFlagYn": "string",
                            "type": "string",
                            "url": "string",
                            "usedInModule": "Blocks"
                          }
                        ],
                        "totalResults": 0
                      }
                    }
                  ],
                  "attractions": [
                    {
                      "address": {
                        "addressLine": [
                          "string"
                        ],
                        "barCode": "string",
                        "cityExtension": "string",
                        "cityName": "string",
                        "country": {
                          "code": "string",
                          "value": "string"
                        },
                        "county": "string",
                        "createDateTime": "2020-08-26T15:05:08.994Z",
                        "creatorId": "string",
                        "language": "string",
                        "lastModifierId": "string",
                        "lastModifyDateTime": "2020-08-26T15:05:08.994Z",
                        "postalCode": "string",
                        "primaryInd": true,
                        "purgeDate": "2020-08-26",
                        "state": "string",
                        "type": "string",
                        "typeDescription": "string",
                        "updateReservations": true
                      },
                      "class": "string",
                      "code": "string",
                      "displaySeq": 0,
                      "generalDirections": "string",
                      "name": {
                        "defaultText": "string",
                        "translatedTexts": [
                          {
                            "language": "string",
                            "value": "string"
                          }
                        ]
                      },
                      "operationHours": "string",
                      "priceRange": "string",
                      "relativePosition": {
                        "distance": 0,
                        "distanceType": "string",
                        "drivingTime": "string"
                      },
                      "type": "string",
                      "website": {
                        "orderSequence": 0,
                        "primaryInd": true,
                        "type": "string",
                        "typeDescription": "string",
                        "value": "string"
                      }
                    }
                  ],
                  "baseLanguage": "string",
                  "chainCode": "string",
                  "chainName": "string",
                  "communication": {
                    "emailAddress": "string",
                    "faxNumber": {
                      "createDateTime": "2020-08-26T15:05:08.986Z",
                      "creatorId": "string",
                      "extension": "string",
                      "lastModifierId": "string",
                      "lastModifyDateTime": "2020-08-26T15:05:08.986Z",
                      "orderSequence": 0,
                      "phoneNumber": "string",
                      "phoneTechType": "string",
                      "phoneUseType": "string",
                      "phoneUseTypeDescription": "string",
                      "primaryInd": true,
                      "purgeDate": "2020-08-26"
                    },
                    "phoneNumber": {
                      "createDateTime": "2020-08-26T15:05:08.986Z",
                      "creatorId": "string",
                      "extension": "string",
                      "lastModifierId": "string",
                      "lastModifyDateTime": "2020-08-26T15:05:08.986Z",
                      "orderSequence": 0,
                      "phoneNumber": "string",
                      "phoneTechType": "string",
                      "phoneUseType": "string",
                      "phoneUseTypeDescription": "string",
                      "primaryInd": true,
                      "purgeDate": "2020-08-26"
                    },
                    "tollFreeNumber": {
                      "createDateTime": "2020-08-26T15:05:08.986Z",
                      "creatorId": "string",
                      "extension": "string",
                      "lastModifierId": "string",
                      "lastModifyDateTime": "2020-08-26T15:05:08.986Z",
                      "orderSequence": 0,
                      "phoneNumber": "string",
                      "phoneTechType": "string",
                      "phoneUseType": "string",
                      "phoneUseTypeDescription": "string",
                      "primaryInd": true,
                      "purgeDate": "2020-08-26"
                    },
                    "webPage": {
                      "orderSequence": 0,
                      "primaryInd": true,
                      "type": "string",
                      "typeDescription": "string",
                      "value": "string"
                    }
                  },
                  "currentTime": "string",
                  "directions": [
                    {
                      "description": "string",
                      "title": "string"
                    }
                  ],
                  "generalInformation": {
                    "baseLanguage": "string",
                    "bedCount": 0,
                    "checkInTime": "2020-08-26T15:05:08.986Z",
                    "checkOutTime": "2020-08-26T15:05:08.986Z",
                    "floorCount": 0,
                    "hotelInfoWebsite": {
                      "orderSequence": 0,
                      "primaryInd": true,
                      "type": "string",
                      "typeDescription": "string",
                      "value": "string"
                    },
                    "hotelType": "string",
                    "latitude": 0,
                    "longitude": 0,
                    "roomCount": 0
                  },
                  "generalNotes": [
                    {
                      "note": "string",
                      "title": "string"
                    }
                  ],
                  "hotelAirports": [
                    {
                      "airportCode": "string",
                      "description": "string",
                      "direction": "string",
                      "orderSequence": 0,
                      "relativePosition": {
                        "distance": 0,
                        "distanceType": "string",
                        "drivingTime": "string"
                      },
                      "transportationList": [
                        {
                          "code": "string"
                        }
                      ]
                    }
                  ],
                  "hotelAttractions": [
                    {
                      "address": {
                        "addressLine": [
                          "string"
                        ],
                        "barCode": "string",
                        "cityExtension": "string",
                        "cityName": "string",
                        "country": {
                          "code": "string",
                          "value": "string"
                        },
                        "county": "string",
                        "createDateTime": "2020-08-26T15:05:08.995Z",
                        "creatorId": "string",
                        "language": "string",
                        "lastModifierId": "string",
                        "lastModifyDateTime": "2020-08-26T15:05:08.995Z",
                        "postalCode": "string",
                        "primaryInd": true,
                        "purgeDate": "2020-08-26",
                        "state": "string",
                        "type": "string",
                        "typeDescription": "string",
                        "updateReservations": true
                      },
                      "class": "string",
                      "code": "string",
                      "displaySeq": 0,
                      "generalDirections": "string",
                      "name": {
                        "defaultText": "string",
                        "translatedTexts": [
                          {
                            "language": "string",
                            "value": "string"
                          }
                        ]
                      },
                      "operationHours": "string",
                      "priceRange": "string",
                      "relativePosition": {
                        "distance": 0,
                        "distanceType": "string",
                        "drivingTime": "string"
                      },
                      "type": "string",
                      "website": {
                        "orderSequence": 0,
                        "primaryInd": true,
                        "type": "string",
                        "typeDescription": "string",
                        "value": "string"
                      }
                    }
                  ],
                  "hotelCityCode": "string",
                  "hotelCodeContext": "string",
                  "hotelConferenceFacilities": {
                    "hotelBanquetSpace": {
                      "banquetArea": "string",
                      "banquetSeats": 0,
                      "meetingArea": 0,
                      "meetingRooms": 0,
                      "unitOfMeasureCode": "string"
                    },
                    "hotelConferenceRooms": [
                      {
                        "roomCode": "string",
                        "roomName": "string",
                        "roomType": "string"
                      }
                    ]
                  },
                  "hotelContacts": [
                    {
                      "communicationAddress": "string",
                      "communicationMethod": "string",
                      "hotelId": "string",
                      "name": "string",
                      "nameId": {
                        "id": "string",
                        "type": "string"
                      },
                      "ownerCode": "string",
                      "primary": true,
                      "roles": [
                        "Lead"
                      ]
                    }
                  ],
                  "hotelCorporateInformations": {
                    "brandCode": "string",
                    "businessUnit": [
                      {
                        "codeDescription": {
                          "code": "string",
                          "description": "string"
                        },
                        "primary": true
                      }
                    ],
                    "departmentCode": [
                      {
                        "codeDescription": {
                          "code": "string",
                          "description": "string"
                        },
                        "primary": true
                      }
                    ],
                    "division": [
                      {
                        "codeDescription": {
                          "code": "string",
                          "description": "string"
                        },
                        "primary": true
                      }
                    ],
                    "hotelCategory": "string",
                    "opertingUnit": [
                      {
                        "codeDescription": {
                          "code": "string",
                          "description": "string"
                        },
                        "primary": true
                      }
                    ]
                  },
                  "hotelEventSpaces": {
                    "eventSpaceDetails": [
                      {
                        "code": "string",
                        "description": "string",
                        "maxCapacity": 0,
                        "maxOccupancies": [
                          0
                        ]
                      }
                    ],
                    "eventSpaceSummaries": [
                      {
                        "maxCapacity": 0,
                        "maxOccupancies": [
                          0
                        ],
                        "no": 0,
                        "spaceType": "string"
                      }
                    ],
                    "setupStyles": [
                      "string"
                    ]
                  },
                  "hotelFeatures": [
                    {
                      "comments": "string",
                      "description": "string",
                      "featureCode": "string",
                      "hours": "string",
                      "orderSequence": 0,
                      "priceRange": "string"
                    }
                  ],
                  "hotelId": "string",
                  "hotelMiscellaneousInformation": [
                    {
                      "category": "string",
                      "infoType": "string",
                      "information": "string"
                    }
                  ],
                  "hotelName": "string",
                  "hotelNotes": [
                    {
                      "comment": {
                        "actionDate": "2020-08-26",
                        "actionType": "string",
                        "commentTitle": "string",
                        "confidential": true,
                        "createDateTime": "2020-08-26T15:05:08.994Z",
                        "creatorId": "string",
                        "hotelId": "string",
                        "image": "string",
                        "internal": true,
                        "lastModifierId": "string",
                        "lastModifyDateTime": "2020-08-26T15:05:08.994Z",
                        "notificationLocation": "string",
                        "overrideInternal": true,
                        "protectDescription": true,
                        "purgeDate": "2020-08-26",
                        "text": {
                          "language": "string",
                          "value": "string"
                        },
                        "type": "string",
                        "typeDescription": "string",
                        "url": "string"
                      },
                      "createDateTime": "2020-08-26T15:05:08.994Z",
                      "creatorId": "string",
                      "id": "string",
                      "lastModifierId": "string",
                      "lastModifyDateTime": "2020-08-26T15:05:08.994Z",
                      "purgeDate": "2020-08-26",
                      "type": "string"
                    }
                  ],
                  "hotelPackages": [
                    {
                      "beginDate": "2020-08-26",
                      "endDate": "2020-08-26",
                      "packageCode": "string",
                      "packageName": "string",
                      "packagePrice": 0,
                      "pointsRequired": 0,
                      "rateCode": "string"
                    }
                  ],
                  "hotelRateRanges": [
                    {
                      "currencyCode": "string",
                      "hotelId": "string",
                      "maxRate": 0,
                      "minRate": 0,
                      "timeSpan": {
                        "duration": "string",
                        "endDate": "2020-08-26",
                        "startDate": "2020-08-26"
                      }
                    }
                  ],
                  "hotelRestaurants": [
                    {
                      "category": "Restaurant",
                      "comments": "string",
                      "hotelId": "string",
                      "hours": "string",
                      "newRestaurantCode": "string",
                      "orderBy": 0,
                      "priceRange": "string",
                      "restaurantCode": "string",
                      "restaurantName": "string",
                      "restaurantType": "string",
                      "timeSpan": {
                        "duration": "string",
                        "endDate": "2020-08-26",
                        "startDate": "2020-08-26"
                      }
                    }
                  ],
                  "hotelTransportations": [
                    {
                      "comments": "string",
                      "description": "string",
                      "keyOptions": [
                        "string"
                      ],
                      "label": "string",
                      "orderBy": 0,
                      "phoneNumber": {
                        "createDateTime": "2020-08-26T15:05:08.995Z",
                        "creatorId": "string",
                        "extension": "string",
                        "lastModifierId": "string",
                        "lastModifyDateTime": "2020-08-26T15:05:08.995Z",
                        "orderSequence": 0,
                        "phoneNumber": "string",
                        "phoneTechType": "string",
                        "phoneUseType": "string",
                        "phoneUseTypeDescription": "string",
                        "primaryInd": true,
                        "purgeDate": "2020-08-26"
                      },
                      "priceRange": "string",
                      "relativePosition": {
                        "distance": 0,
                        "distanceType": "string",
                        "drivingTime": "string"
                      },
                      "transportationCode": "string",
                      "website": {
                        "orderSequence": 0,
                        "primaryInd": true,
                        "type": "string",
                        "typeDescription": "string",
                        "value": "string"
                      }
                    }
                  ],
                  "meetingRooms": [
                    {
                      "charge": "string",
                      "code": "string",
                      "description": "string"
                    }
                  ],
                  "primaryDetails": {
                    "legalOwner": "string"
                  },
                  "propertyControls": {
                    "applicationMode": {
                      "configurationMode": "string",
                      "countryMode": "string",
                      "expHotelCode": "string",
                      "mbsSupported": true,
                      "touristNumber": "string"
                    },
                    "cateringCurrencyFormatting": {
                      "currencyCode": "string",
                      "currencyFormat": "string"
                    },
                    "currencyFormatting": {
                      "currencyCode": "string",
                      "currencyFormat": "string",
                      "currencySymbol": "string",
                      "decimalPositions": 0
                    },
                    "dateTimeFormatting": {
                      "longDateFormat": "string",
                      "shortDateFormat": "string",
                      "timeFormat": "string",
                      "timeZoneRegion": "string"
                    },
                    "sellControls": {
                      "endDate": "2020-08-26",
                      "hotelId": "string",
                      "startDate": "2020-08-26"
                    }
                  }
                },
                "links": [
                  {
                    "href": "string",
                    "method": "GET",
                    "operationId": "string",
                    "rel": "string",
                    "targetSchema": "string",
                    "templated": false,
                    "title": "string"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "HotelBrochure not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/hotelDetails": {
      "get": {
        "description": "Use this API to get hotel details. <p><strong>OperationId:</strong>getHotelDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get hotel details ",
        "operationId": "getHotelDetails",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelDetailCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelDetailCategoriesCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching hotel details at the property level.",
            "schema": {
              "$ref": "#/definitions/hotelDetailsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "HotelDetails not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/jobTitles": {
      "get": {
        "description": "Use this API to get resort job titles. <p><strong>OperationId:</strong>getJobTitles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get resort job titles",
        "operationId": "getJobTitles",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "jobTitleCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching job titles configured for hotels.",
            "schema": {
              "$ref": "#/definitions/jobTitlesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "JobTitles not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create new resort job titles. <p><strong>OperationId:</strong>postJobTitles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create new resort job titles",
        "operationId": "postJobTitles",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating new job titles for hotels.",
            "name": "jobTitlesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/jobTitlesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/jobTitles/{jobTitleCode}": {
      "put": {
        "description": "Use this API to update job titles for a specific property based on jobTitleCode, hotelId, jobTitlesToBeChanged. <p><strong>OperationId:</strong>changeJobTitles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change resort job titles",
        "operationId": "changeJobTitles",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Code for Job Title.",
            "name": "jobTitleCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for modifying job titles for hotels.",
            "name": "jobTitlesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/jobTitlesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete job titles for a specific property based on jobTitleCode, hotelId. <p><strong>OperationId:</strong>removeJobTitles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete resort job titles",
        "operationId": "removeJobTitles",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Code for Job Title.",
            "name": "jobTitleCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/marketingCities": {
      "get": {
        "description": "Use this API to get resort marketing cities. <p><strong>OperationId:</strong>getMarketingCities</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get resort marketing cities",
        "operationId": "getMarketingCities",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indicate whether to include inactive marketing cities in the results or not.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "pageNumber",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of Marketing Cities.",
            "name": "marketingCitys",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "regionCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Marketing city description to search for.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching marketing cities configured for hotels.",
            "schema": {
              "$ref": "#/definitions/marketingCitiesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MarketingCities not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create new resort marketing cities. <p><strong>OperationId:</strong>postMarketingCities</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create new resort marketing cities",
        "operationId": "postMarketingCities",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating new marketing cities for hotels.",
            "name": "marketingCitiesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/marketingCitiesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/marketingCities/{cityCode}": {
      "put": {
        "description": "Use this API to update marketing cities for a specific property based on cityCode, hotelId, marketingCitiesToBeChanged. <p><strong>OperationId:</strong>changeMarketingCities</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change resort marketing cities",
        "operationId": "changeMarketingCities",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of city.",
            "name": "cityCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for modifying marketing cities for hotels.",
            "name": "marketingCitiesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/marketingCitiesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete marketing cities for a specific property based on  cityCode, hotelId, regionCode. <p><strong>OperationId:</strong>removeMarketingCities</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete resort marketing cities",
        "operationId": "removeMarketingCities",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of city.",
            "name": "cityCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Region code the marketing city belongs to.",
            "name": "regionCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/notes": {
      "post": {
        "description": "Use this API to create Note information. <p><strong>OperationId:</strong>postHotelNotes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create Note information",
        "operationId": "postHotelNotes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating new Notes for the hotels",
            "name": "hotelNotesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelNotesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/notes/{noteCode}": {
      "put": {
        "description": "Use this API to update note information for a specific property based on noteCode, hotelId, hotelNotesToBeChanged. <p><strong>OperationId:</strong>changeHotelNotes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Update Note information",
        "operationId": "changeHotelNotes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of note.",
            "name": "noteCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing hotel Notes for hotels.",
            "name": "hotelNotesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelNotesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/operaContext": {
      "get": {
        "description": "This API will retrieve general contextual information for the specified hotel such as business date. <p><strong>OperationId:</strong>getOperaHotelContext</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Opera Hotel Context",
        "operationId": "getOperaHotelContext",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "The result element returned with general hotel contextual information.",
            "schema": {
              "$ref": "#/definitions/operaHotelContextDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "OperaHotelContext not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rateRanges": {
      "put": {
        "description": "Use this API to update rate range information for a specific property based on hotelId, hotelRateRangesToBeChanged. <p><strong>OperationId:</strong>changeHotelRateRanges</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Update Rate Range information",
        "operationId": "changeHotelRateRanges",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing hotel Rate Ranges for hotels.",
            "name": "hotelRateRangesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelRateRangesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Rate Range information. <p><strong>OperationId:</strong>postHotelRateRanges</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create Rate Range information",
        "operationId": "postHotelRateRanges",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating new Rate Ranges for hotels.",
            "name": "hotelRateRangesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelRateRangesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete rate range information for a specific property based on hotelId, startDate, endDate, duration. <p><strong>OperationId:</strong>removeHotelRateRanges</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete Rate Range information",
        "operationId": "removeHotelRateRanges",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/restaurants": {
      "post": {
        "description": "Use this API to create restaurant information. <p><strong>OperationId:</strong>postHotelRestaurants</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create restaurant information",
        "operationId": "postHotelRestaurants",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating new restaurants for hotels.",
            "name": "hotelRestaurantsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelRestaurantsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/restaurants/{restaurantCode}": {
      "put": {
        "description": "Use this API to update restaurant information for a specific property based on restaurantCode, hotelId, hotelRestaurantsToBeChanged. <p><strong>OperationId:</strong>changeHotelRestaurants</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Update the restaurant information",
        "operationId": "changeHotelRestaurants",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of restaurant.",
            "name": "restaurantCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing hotel restaurants for hotels.",
            "name": "hotelRestaurantsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelRestaurantsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete restaurant information for a specific property based on restaurantCode, hotelId. <p><strong>OperationId:</strong>removeHotelRestaurants</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete restaurant information",
        "operationId": "removeHotelRestaurants",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of restaurant.",
            "name": "restaurantCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/telephoneBookCategories": {
      "get": {
        "description": "Use this API to get Telephone Book Category. <p><strong>OperationId:</strong>getTelephoneBookCategories</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Telephone Book Category",
        "operationId": "getTelephoneBookCategories",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetch Telephone Categories.",
            "schema": {
              "$ref": "#/definitions/telephoneBookCategoriesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TelephoneBookCategories not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Telephone Book Category. <p><strong>OperationId:</strong>postTelephoneBookCategories</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create Telephone Book Category",
        "operationId": "postTelephoneBookCategories",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for Telephone Book Category.",
            "name": "telephoneBookCategoriesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/telephoneBookCategoriesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/telephoneBookCategories/{categoryCode}": {
      "put": {
        "description": "Use this API to update telephone book categories for a specific property based on categoryCode, hotelId, telephoneBookCategoriesToBeChanged. <p><strong>OperationId:</strong>changeTelephoneBookCategories</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change Telephone Book Category",
        "operationId": "changeTelephoneBookCategories",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of category.",
            "name": "categoryCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for Telephone Book Category.",
            "name": "telephoneBookCategoriesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/telephoneBookCategoriesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete telephone book categories for a specific property based on categoryCode, hotelId, description, orderBy, generic. <p><strong>OperationId:</strong>removeTelephoneBookCategories</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete Telephone Book Category",
        "operationId": "removeTelephoneBookCategories",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of category.",
            "name": "categoryCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "description",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "name": "orderBy",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "name": "generic",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/telephoneBookEntries": {
      "get": {
        "description": "Use this API to get Telephone Book Entries. <p><strong>OperationId:</strong>getTelephoneBookEntries</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Telephone Book Entries",
        "operationId": "getTelephoneBookEntries",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Category code that the telephone book entry belongs to.",
            "name": "category",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the name of telephone book entry.",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetch Telephone Book Entries.",
            "schema": {
              "$ref": "#/definitions/telephoneBookEntriesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TelephoneBookEntries not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Telephone Book Entries. <p><strong>OperationId:</strong>postTelephoneBookEntries</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create Telephone Book Entries",
        "operationId": "postTelephoneBookEntries",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for Telephone Book Entries.",
            "name": "telephoneBookEntriesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/telephoneBookEntriesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/telephoneBookEntries/{entryId}": {
      "put": {
        "description": "Use this API to update telephone book entries for a specific property based on entryId, hotelId, telephoneBookEntriesToBeChanged. <p><strong>OperationId:</strong>changeTelephoneBookEntries</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create Telephone Book Entries",
        "operationId": "changeTelephoneBookEntries",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of entry.",
            "name": "entryId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for Telephone Book Entries.",
            "name": "telephoneBookEntriesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/telephoneBookEntriesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete telephone book entries for a specific property based on entryId, hotelId, idContext. <p><strong>OperationId:</strong>removeTelephoneBookEntries</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete Telephone Book Entries",
        "operationId": "removeTelephoneBookEntries",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of entry.",
            "name": "entryId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transportations": {
      "get": {
        "description": "Use this API to get transportation. <p><strong>OperationId:</strong>getTransportation</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get transportation",
        "operationId": "getTransportation",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "transportationCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for information regarding transportation.",
            "schema": {
              "$ref": "#/definitions/transportationDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Transportation not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create transportation. <p><strong>OperationId:</strong>postTransportation</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create transportation",
        "operationId": "postTransportation",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating transportation.",
            "name": "transportationCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transportationCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transportations/{transportationCode}": {
      "put": {
        "description": "Use this API to update transportation for a specific property based on transportationCode, hotelId, transportationToBeChanged. <p><strong>OperationId:</strong>changeTransportation</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": " modify transportation",
        "operationId": "changeTransportation",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of transportation.",
            "name": "transportationCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for modifying transportation.",
            "name": "transportationToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transportationToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete transportation for a specific property based on parameters such as transportationCode, hotelId, label, orderBy, createDateTime, creatorId, extension, lastModifierId, lastModifyDateTime, etc. <p><strong>OperationId:</strong>removeTransportation</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete transportation",
        "operationId": "removeTransportation",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of transportation.",
            "name": "transportationCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "label",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "name": "orderBy",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Time stamp of the creation.",
            "name": "createDateTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
            "name": "creatorId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Extension to reach a specific party at the phone number.",
            "name": "extension",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Identifies the last software system or person to modify a record.",
            "name": "lastModifierId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Time stamp of last modification.",
            "name": "lastModifyDateTime",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Display Order sequence.",
            "name": "phoneNumberOrderSequence",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Telephone number assigned to a single location.",
            "name": "phoneNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
            "name": "phoneTechType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
            "name": "phoneUseType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the PhoneUseType code",
            "name": "phoneUseTypeDescription",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true, indicates a primary information.",
            "name": "phoneNumberPrimaryInd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
            "name": "purgeDate",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Defines the distance between two points.",
            "name": "distance",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The unit of measure in a code format.",
            "name": "distanceType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The driving time in a free text format.",
            "name": "drivingTime",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The description of the transportation.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Comments about the transportation.",
            "name": "comments",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The price range of the transportation.",
            "name": "priceRange",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Display Order sequence.",
            "name": "websiteOrderSequence",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true, indicates a primary information.",
            "name": "websitePrimaryInd",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the purpose of the URL address, such as personal, business, public, etc.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Describes the Type code",
            "name": "typeDescription",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "keyOptionsCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/yieldAdjustmentCodes": {
      "get": {
        "description": "Use this API to get Yield Adjustment Codes. <p><strong>OperationId:</strong>getYieldAdjustmentCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Yield Adjustment Codes",
        "operationId": "getYieldAdjustmentCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "yieldAdjustmentCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "PerStay",
              "PerNight",
              "PerPersonPerNight",
              "PerPersonPerStay"
            ],
            "type": "string",
            "description": "Defines values for Yield Adjustment Types.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Yield AdjustmentCodes configurations.",
            "schema": {
              "$ref": "#/definitions/yieldAdjustmentCodesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "YieldAdjustmentCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Yield Adjustment Codes. <p><strong>OperationId:</strong>postYieldAdjustmentCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create Yield Adjustment Codes",
        "operationId": "postYieldAdjustmentCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating new Yield AdjustmentCodes Configurations.",
            "name": "yieldAdjustmentCodesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/yieldAdjustmentCodesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/yieldAdjustmentCodes/{yieldAdjustmentCode}": {
      "put": {
        "description": "Use this API to update yield adjustment codes for a specific property based on yieldAdjustmentCode, hotelId, yieldAdjustmentCodesToBeChanged. <p><strong>OperationId:</strong>changeYieldAdjustmentCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change Yield Adjustment Codes",
        "operationId": "changeYieldAdjustmentCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of yield adjustment.",
            "name": "yieldAdjustmentCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing existing Yield AdjustmentCodes Configurations.",
            "name": "yieldAdjustmentCodesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/yieldAdjustmentCodesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete yield adjstment codes for a specific property based on yieldAdjustmentCode, hotelId. <p><strong>OperationId:</strong>removeYieldAdjustmentCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete Yield Adjustment Codes",
        "operationId": "removeYieldAdjustmentCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of yield adjustment.",
            "name": "yieldAdjustmentCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/yieldCategories": {
      "get": {
        "description": "Use this API to get Yield Category. <p><strong>OperationId:</strong>getYieldCategories</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Yield Category",
        "operationId": "getYieldCategories",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "yieldCategoriesCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Yield Category configurations.",
            "schema": {
              "$ref": "#/definitions/yieldCategoriesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "YieldCategories not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Yield Category. <p><strong>OperationId:</strong>postYieldCategories</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create Yield Category",
        "operationId": "postYieldCategories",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating new Yield Category Configurations.",
            "name": "yieldCategoriesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/yieldCategoriesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/yieldCategories/{code}": {
      "put": {
        "description": "Use this API to update yield categories for a specific property based on code, hotelId, yieldCategoriesToBeChanged. <p><strong>OperationId:</strong>changeYieldCategories</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change Yield Category",
        "operationId": "changeYieldCategories",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of yield category.",
            "name": "code",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing existing Yield Category Configurations.",
            "name": "yieldCategoriesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/yieldCategoriesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete yield categories for a specific property based on code, hotelId. <p><strong>OperationId:</strong>removeYieldCategories</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete Yield Category",
        "operationId": "removeYieldCategories",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of yield category.",
            "name": "code",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/yieldMarketTypes/{code}": {
      "delete": {
        "description": "Use this API to delete yield market types for a specific property based on code, hotelId. <p><strong>OperationId:</strong>removeYieldMarketTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete Yield Market Types",
        "operationId": "removeYieldMarketTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Code of the YieldMarketType.",
            "name": "code",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{sourceHotelId}/departments/copy": {
      "put": {
        "description": "Copy Departments. <p><strong>OperationId:</strong>copyDepartments</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": " copy Departments",
        "operationId": "copyDepartments",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of source hotel.",
            "name": "sourceHotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "List of the departments to be copied.",
            "name": "copyDepartments",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyDepartments"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{sourceHotelId}/yieldAdjustmentCodes/copy": {
      "put": {
        "description": "Copy Yield Adjustment Codes. <p><strong>OperationId:</strong>copyYieldAdjustmentCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": " copy Yield Adjustment Codes",
        "operationId": "copyYieldAdjustmentCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of source hotel.",
            "name": "sourceHotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "List of the Yield AdjustmentCodes to be copied.",
            "name": "copyYieldAdjustmentCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyYieldAdjustmentCodes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{sourceHotelId}/yieldCategories/copy": {
      "put": {
        "description": "Copy Yield Category. <p><strong>OperationId:</strong>copyYieldCategories</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": " copy Yield Category",
        "operationId": "copyYieldCategories",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of source hotel.",
            "name": "sourceHotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "List of the Yield Category to be copied.",
            "name": "copyYieldCategories",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyYieldCategories"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/jobTitles": {
      "get": {
        "description": "Use this API to get template job titles. <p><strong>OperationId:</strong>getTemplateJobTitles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get template job titles",
        "operationId": "getTemplateJobTitles",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "jobTitleCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching template job titles.",
            "schema": {
              "$ref": "#/definitions/templateJobTitlesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TemplateJobTitles not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create new template job titles. <p><strong>OperationId:</strong>postTemplateJobTitles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create new template job titles",
        "operationId": "postTemplateJobTitles",
        "parameters": [
          {
            "description": "Request object for creating new template job titles.",
            "name": "templateJobTitlesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateJobTitlesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/jobTitles/{jobTitleCode}": {
      "put": {
        "description": "Use this API to update job title templates based on jobTitleCode, templateJobTitlesToBeChanged. <p><strong>OperationId:</strong>changeTemplateJobTitles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change template job titles",
        "operationId": "changeTemplateJobTitles",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Code for Job Title template.",
            "name": "jobTitleCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for modifying template job titles.",
            "name": "templateJobTitlesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateJobTitlesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete job title templates based on jobTitleCode. <p><strong>OperationId:</strong>removeTemplateJobTitles</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete template job titles",
        "operationId": "removeTemplateJobTitles",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Code for Job Title template.",
            "name": "jobTitleCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/languages": {
      "get": {
        "description": "Use this API to get Languages. <p><strong>OperationId:</strong>getLanguages</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Languages",
        "operationId": "getLanguages",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "languageCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Language description to be searched.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This is a placeholder element for future use. Functionality may not be available for the current implementation.",
            "name": "useAsAlternateLanguage",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching languages.",
            "schema": {
              "$ref": "#/definitions/languagesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Languages not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Languages. <p><strong>OperationId:</strong>postLanguages</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create Languages",
        "operationId": "postLanguages",
        "parameters": [
          {
            "description": "Request object for creating new language records.",
            "name": "languagesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/languagesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/languages/{languageCode}": {
      "put": {
        "description": "Use this API to update languages based on languageCode, languagesToBeChanged. <p><strong>OperationId:</strong>changeLanguages</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Update a Language",
        "operationId": "changeLanguages",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of language.",
            "name": "languageCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing details of existing language records.",
            "name": "languagesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/languagesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete languages based on languageCode. <p><strong>OperationId:</strong>removeLanguages</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete a Language",
        "operationId": "removeLanguages",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of language.",
            "name": "languageCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/marketingCities": {
      "get": {
        "description": "Use this API to get template marketing cities. <p><strong>OperationId:</strong>getTemplateMarketingCities</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get template marketing cities",
        "operationId": "getTemplateMarketingCities",
        "parameters": [
          {
            "type": "boolean",
            "description": "Flag to indicate whether to include inactive marketing cities in the results or not.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "pageNumber",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of Marketing Cities.",
            "name": "marketingCitys",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "regionCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Marketing city description to search for.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching template marketing cities.",
            "schema": {
              "$ref": "#/definitions/templateMarketingCitiesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TemplateMarketingCities not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create new template marketing cities. <p><strong>OperationId:</strong>postTemplateMarketingCities</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create new template marketing cities",
        "operationId": "postTemplateMarketingCities",
        "parameters": [
          {
            "description": "Request object for creating new template marketing cities.",
            "name": "templateMarketingCitiesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateMarketingCitiesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/marketingCities/copy": {
      "put": {
        "description": "Copy marketing cities to resorts. <p><strong>OperationId:</strong>copyMarketingCities</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Copy marketing cities to resorts",
        "operationId": "copyMarketingCities",
        "parameters": [
          {
            "description": "Request object for copying template marketing cities to hotel(s).",
            "name": "copyMarketingCities",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyMarketingCities"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/marketingCities/{cityCode}": {
      "put": {
        "description": "Use this API to update marketing city templates based on cityCode, templateMarketingCitiesToBeChanged. <p><strong>OperationId:</strong>changeTemplateMarketingCities</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change template marketing cities",
        "operationId": "changeTemplateMarketingCities",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of city.",
            "name": "cityCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for modifying template marketing cities.",
            "name": "templateMarketingCitiesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateMarketingCitiesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete marketing city templates based on cityCode, regionCode. <p><strong>OperationId:</strong>removeTemplateMarketingCities</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete template marketing cities",
        "operationId": "removeTemplateMarketingCities",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of city.",
            "name": "cityCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Region code the marketing city belongs to.",
            "name": "regionCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/marketingCitiesByRegion": {
      "get": {
        "description": "Use this API to get marketing cities by region. <p><strong>OperationId:</strong>getMarketingCitiesByRegion</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get marketing cities by region",
        "operationId": "getMarketingCitiesByRegion",
        "parameters": [
          {
            "type": "string",
            "description": "Region Code",
            "name": "regionCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Marketing City",
            "name": "marketingCity",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/marketingCitiesByRegionDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MarketingCitiesByRegion not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/marketingRegions": {
      "get": {
        "description": "Use this API to get Marketing Regions. <p><strong>OperationId:</strong>getMarketingRegions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Marketing Regions",
        "operationId": "getMarketingRegions",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Marketing Regions.",
            "schema": {
              "$ref": "#/definitions/marketingRegionsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MarketingRegions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Marketing Regions. <p><strong>OperationId:</strong>postMarketingRegions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Marketing Regions",
        "operationId": "postMarketingRegions",
        "parameters": [
          {
            "description": "Request object for creating Marketing Regions.",
            "name": "marketingRegionsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/marketingRegionsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/marketingRegions/{marketingRegionCode}": {
      "put": {
        "description": "Use this API to update Marketing Regions. <p><strong>OperationId:</strong>putMarketingRegions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Marketing Regions",
        "operationId": "putMarketingRegions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Marketing Regions.",
            "name": "marketingRegionCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Marketing Regions.",
            "name": "marketingRegionsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/marketingRegionsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete Marketing Regions. <p><strong>OperationId:</strong>deleteMarketingRegions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Marketing Regions",
        "operationId": "deleteMarketingRegions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Marketing Regions.",
            "name": "marketingRegionCode",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "marketingRegionsCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/noteTypes": {
      "get": {
        "description": "Use this API to get Note Types. <p><strong>OperationId:</strong>getNoteTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Note Types",
        "operationId": "getNoteTypes",
        "parameters": [
          {
            "type": "string",
            "description": "Notes Group added to the search criteria.",
            "name": "noteGroup",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true this boolean will set the criteria to only return Inactive records.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Boolean flag to fetch note types with/without departments. 'True' indicates including departments information for corresponding note types.",
            "name": "includeDepartmentDetails",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Code of the Note Type.",
            "name": "noteCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Note Types of specific Notes Group.",
            "schema": {
              "$ref": "#/definitions/noteTypesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "NoteTypes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Note Types. <p><strong>OperationId:</strong>postNoteTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Note Types",
        "operationId": "postNoteTypes",
        "parameters": [
          {
            "description": "Request object for creating new Note Types.",
            "name": "noteTypesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/noteTypesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/noteTypes/{noteTypeCode}": {
      "put": {
        "description": "Use this API to update note types based on noteTypeCode, noteTypesToBeChanged. <p><strong>OperationId:</strong>changeNoteTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Note Types",
        "operationId": "changeNoteTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Note Types.",
            "name": "noteTypeCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing existing Note Types.",
            "name": "noteTypesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/noteTypesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete note types based on noteTypeCode, noteGroup. <p><strong>OperationId:</strong>removeNoteTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Note Types",
        "operationId": "removeNoteTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Note Types.",
            "name": "noteTypeCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Notes Group of the Note Types code.",
            "name": "noteGroup",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/notes/{noteCode}": {
      "delete": {
        "description": "Use this API to delete note information based on noteCode. <p><strong>OperationId:</strong>removeHotelNotes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete Note information",
        "operationId": "removeHotelNotes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of note.",
            "name": "noteCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/parameters": {
      "get": {
        "description": "Use this API to get OPERA Parameters. <p><strong>OperationId:</strong>getOperaParameters</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get OPERA Parameters",
        "operationId": "getOperaParameters",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used for Character Strings, length 0 to 80.",
            "name": "parameterName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "The result element containing a collection of the requested application parameters.",
            "schema": {
              "$ref": "#/definitions/operaParametersDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "OperaParameters not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/propertyDetailsCategories": {
      "get": {
        "description": "Use this API to get Property Detail Categories. <p><strong>OperationId:</strong>getPropertyDetailCategories</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Property Detail Categories",
        "operationId": "getPropertyDetailCategories",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Property Detail Categories.",
            "schema": {
              "$ref": "#/definitions/propertyDetailCategoriesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "PropertyDetailCategories not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Property Detail Categories. <p><strong>OperationId:</strong>postPropertyDetailCategories</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Property Detail Categories",
        "operationId": "postPropertyDetailCategories",
        "parameters": [
          {
            "description": "Request object for creating Property Detail Categories.",
            "name": "propertyDetailCategoriesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/propertyDetailCategoriesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/propertyDetailsCategories/{categoryCode}": {
      "put": {
        "description": "Use this API to update property detail categories based on categoryCode, propertyDetailCategoriesToBeChanged. <p><strong>OperationId:</strong>changePropertyDetailCategories</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Property Detail Categories",
        "operationId": "changePropertyDetailCategories",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Categories.",
            "name": "categoryCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Property Detail Categories.",
            "name": "propertyDetailCategoriesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/propertyDetailCategoriesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete property detail categories based on categoryCode, propertyDetailCategoriesCodes. <p><strong>OperationId:</strong>removePropertyDetailCategories</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Property Detail Categories",
        "operationId": "removePropertyDetailCategories",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Categories.",
            "name": "categoryCode",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "propertyDetailCategoriesCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/propertyTypes": {
      "get": {
        "description": "Use this API to get Property Types based on search criteria such as codes, wildCard, description.  Property types are used for different hotel types i.e. Resort, Business, CityCenter, Motel, BedAndBreakfast.<p><strong>OperationId:</strong>getPropertyTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get property types",
        "operationId": "getPropertyTypes",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Property Types.",
            "schema": {
              "$ref": "#/definitions/propertyTypesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "PropertyTypes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Property Types. <p><strong>OperationId:</strong>postPropertyTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Property Types",
        "operationId": "postPropertyTypes",
        "parameters": [
          {
            "description": "Request object for creating Property Types.",
            "name": "propertyTypesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/propertyTypesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/propertyTypes/{propertyTypeCode}": {
      "put": {
        "description": "Use this API to update Property Types. <p><strong>OperationId:</strong>putPropertyTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Property Types",
        "operationId": "putPropertyTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Property Types.",
            "name": "propertyTypeCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Property Types.",
            "name": "propertyTypesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/propertyTypesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete Property Types. <p><strong>OperationId:</strong>deletePropertyTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Property Types",
        "operationId": "deletePropertyTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Property Types.",
            "name": "propertyTypeCode",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "propertyTypesCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/regionCode": {
      "get": {
        "description": "Use this API to return region codes based on search criteria such as fetchInactive, codes, wildCard, description. <p><strong>OperationId:</strong>getRegionsCode</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Regions Code",
        "operationId": "getRegionsCode",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Regions Code.",
            "schema": {
              "$ref": "#/definitions/regionsCodeDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RegionsCode not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create region codes. <p><strong>OperationId:</strong>postRegionsCode</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Regions Code",
        "operationId": "postRegionsCode",
        "parameters": [
          {
            "description": "Request object for creating Regions Code.",
            "name": "regionsCodeCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/regionsCodeCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/regionCode/{regionCode}": {
      "put": {
        "description": "Use this API to update region codes based on regionCode, regionsCodeToBeChanged. <p><strong>OperationId:</strong>changeRegionsCode</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Regions Code",
        "operationId": "changeRegionsCode",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Regions.",
            "name": "regionCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Regions Code.",
            "name": "regionsCodeToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/regionsCodeToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete region codes based on regionCode. <p><strong>OperationId:</strong>removeRegionsCode</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Regions Code",
        "operationId": "removeRegionsCode",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Regions.",
            "name": "regionCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/roomAmenities": {
      "get": {
        "description": "Use this API to get Room Amenities. <p><strong>OperationId:</strong>getRoomAmenities</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get Room Amenities",
        "operationId": "getRoomAmenities",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Room Amenities.",
            "schema": {
              "$ref": "#/definitions/roomAmenitiesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RoomAmenities not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Room Amenities. <p><strong>OperationId:</strong>postRoomAmenities</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Room Amenities",
        "operationId": "postRoomAmenities",
        "parameters": [
          {
            "description": "Request object for creating Room Amenities.",
            "name": "roomAmenitiesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomAmenitiesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/roomAmenities/{roomAmenitiesId}": {
      "put": {
        "description": "Use this API to update Room Amenities. <p><strong>OperationId:</strong>putRoomAmenities</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Room Amenities",
        "operationId": "putRoomAmenities",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Room Amenities.",
            "name": "roomAmenitiesId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Room Amenities.",
            "name": "roomAmenitiesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomAmenitiesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete Room Amenities. <p><strong>OperationId:</strong>deleteRoomAmenities</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Room Amenities",
        "operationId": "deleteRoomAmenities",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Room Amenities.",
            "name": "roomAmenitiesId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomAmenitiesCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/settings": {
      "get": {
        "description": "Use this API to return OPERA controls based on search criteria such as hotelId, cROCode, parameterNameWildCard.<p><strong>OperationId:</strong>getOperaSettings</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get OPERA controls",
        "operationId": "getOperaSettings",
        "parameters": [
          {
            "type": "string",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cROCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "parameterNameWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "The result element containing the requested application settings.",
            "schema": {
              "$ref": "#/definitions/operaSettingsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "OperaSettings not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/telephoneBookEntries/{entryId}": {
      "delete": {
        "description": "Use this API to delete telephone book entries. <p><strong>OperationId:</strong>removeTelephoneBookEntriesWithoutHotelId</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete Telephone Book Entries",
        "operationId": "removeTelephoneBookEntriesWithoutHotelId",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of entry.",
            "name": "entryId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/templateCodes": {
      "get": {
        "description": " Use this API to get Template Codes. <p><strong>OperationId:</strong>getTemplateCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": " Get Template Codes",
        "operationId": "getTemplateCodes",
        "parameters": [
          {
            "type": "boolean",
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "codes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Template Codes.",
            "schema": {
              "$ref": "#/definitions/templateCodesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TemplateCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Template Codes. <p><strong>OperationId:</strong>postTemplateCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create Template Codes",
        "operationId": "postTemplateCodes",
        "parameters": [
          {
            "description": "Request object for creating Template Codes.",
            "name": "templateCodesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateCodesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/templateCodes/copy": {
      "put": {
        "description": "This API is used to Copy a Template Rate Category in order to create a new Template Rate Category. <p><strong>OperationId:</strong>copyTemplateCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Copy Template Codes",
        "operationId": "copyTemplateCodes",
        "parameters": [
          {
            "name": "copyTemplateCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyTemplateCodes"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/templateCodes/{code}": {
      "put": {
        "description": "Use this API to update template codes based on code, templateCodesToBeChanged. <p><strong>OperationId:</strong>changeTemplateCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change Template Codes",
        "operationId": "changeTemplateCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Template.",
            "name": "code",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing Template Codes.",
            "name": "templateCodesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateCodesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete template codes based on code, templateCodes. <p><strong>OperationId:</strong>removeTemplateCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete Template Codes",
        "operationId": "removeTemplateCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Template.",
            "name": "code",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "templateCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/transportations": {
      "get": {
        "description": "Use this API to get transportation templates. <p><strong>OperationId:</strong>getTransportationTemplates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get transportation templates",
        "operationId": "getTransportationTemplates",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "transportationCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching transportation templates.",
            "schema": {
              "$ref": "#/definitions/transportationTemplatesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TransportationTemplates not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create transportation templates. <p><strong>OperationId:</strong>postTransportationTemplates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create transportation templates",
        "operationId": "postTransportationTemplates",
        "parameters": [
          {
            "description": "Request object for creating transportation templates.",
            "name": "transportationTemplatesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transportationTemplatesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/transportations/{transportationCode}": {
      "put": {
        "description": "Use this API to update transportation templates based on transportationCode,  transportationTemplatesToBeChanged. <p><strong>OperationId:</strong>changeTransportationTemplates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change transportation templates",
        "operationId": "changeTransportationTemplates",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of transportation.",
            "name": "transportationCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for modifying transportation templates.",
            "name": "transportationTemplatesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transportationTemplatesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete transportation templates based on transportationCode. <p><strong>OperationId:</strong>removeTransportationTemplates</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Delete transportation templates",
        "operationId": "removeTransportationTemplates",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of transportation.",
            "name": "transportationCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/userDefinedFieldGroups": {
      "get": {
        "description": "Use this API to get User Defined Field Groups. <p><strong>OperationId:</strong>getUserDefinedFieldGroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get User Defined Field Groups",
        "operationId": "getUserDefinedFieldGroups",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Identifier for the User Defined Field Group",
            "name": "groupCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Specifies the user defined field description to search.",
            "name": "descriptionWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching User Defined Field Groups.",
            "schema": {
              "$ref": "#/definitions/userDefinedFieldGroupsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "UserDefinedFieldGroups not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create User Defined Field Groups. <p><strong>OperationId:</strong>postUserDefinedFieldGroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create User Defined Field Groups",
        "operationId": "postUserDefinedFieldGroups",
        "parameters": [
          {
            "description": "Request object for creating User Defined Field Groups.",
            "name": "userDefinedFieldGroupsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/userDefinedFieldGroupsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/userDefinedFieldGroups/{udfGroupCode}": {
      "put": {
        "description": "Use this API to update user defined field groups based on udfGroupCode, userDefinedFieldGroupsToBeChanged. <p><strong>OperationId:</strong>changeUserDefinedFieldGroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change User Defined Field Groups",
        "operationId": "changeUserDefinedFieldGroups",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of User Defined Field Groups.",
            "name": "udfGroupCode",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing User Defined Field Groups.",
            "name": "userDefinedFieldGroupsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/userDefinedFieldGroupsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete user defined field groups based on udfGroupCode. <p><strong>OperationId:</strong>removeUserDefinedFieldGroups</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete User Defined Field Groups",
        "operationId": "removeUserDefinedFieldGroups",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of User Defined Field Groups.",
            "name": "udfGroupCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/userDefinedFieldValues": {
      "get": {
        "description": "Use this API to return User Defined Field (UDF) Values based on search criteria such as groupCode, valueCode, descriptionWildCard.  The LOV Group and LOV Values functionality allows a property to create a custom group of values to be used in a specified user defined field (UDF). This functionality provides added flexibility in allowing a site to track information or details that are specific to their business and outside of the standard fields offered in OPERA Cloud.<p><strong>OperationId:</strong>getUserDefinedFieldValues</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Get user defined field (UDF) values",
        "operationId": "getUserDefinedFieldValues",
        "parameters": [
          {
            "type": "string",
            "description": "The Group Code which the User Defined Field Value belongs to.",
            "name": "groupCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "valueCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Specifies the User Defined Field Value description to search.",
            "name": "descriptionWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching User Defined Field Values.",
            "schema": {
              "$ref": "#/definitions/userDefinedFieldValuesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "UserDefinedFieldValues not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create a new User Defined Field (UDF) Value. The LOV Group and LOV Values functionality allows a property create a custom group of values to be used in a specified user defined field (UDF).  This functionality provides added flexibility in allowing a site to track information or details that are specific to their business and outside of the standard fields offered in the OPERA Cloud. <p><strong>OperationId:</strong>postUserDefinedFieldValues</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Create User Defined Field (UDF) Values",
        "operationId": "postUserDefinedFieldValues",
        "parameters": [
          {
            "description": "Request object for creating User Defined Field Values.",
            "name": "userDefinedFieldValuesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/userDefinedFieldValuesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/userDefinedFieldValues/{udfValue}": {
      "put": {
        "description": "Use this API to update user defined field values based on udfValue, userDefinedFieldValuesToBeChanged. The LOV group and LOV values functionality allows a property create a custom group of values to be used in a specified user defined field (UDF). This functionality provides added flexibility in allowing a site to track information or details that are specific to their business and outside of the standard fields offered in the OPERA Cloud. <p><strong>OperationId:</strong>changeUserDefinedFieldValues</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Change a User Defined Field Value ",
        "operationId": "changeUserDefinedFieldValues",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Value of User Defined Field.",
            "name": "udfValue",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing User Defined Field Values.",
            "name": "userDefinedFieldValuesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/userDefinedFieldValuesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete user defined field values based on udfValue, groupCode. The LOV group and LOV values functionality allows a property create a custom group of values to be used in a specified user defined field (UDF). This functionality provides added flexibility in allowing a site to track information or details that are specific to their business and outside of the standard fields offered in the OPERA Cloud. <p><strong>OperationId:</strong>removeUserDefinedFieldValues</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ],
        "summary": "Delete a User Defined Field Value ",
        "operationId": "removeUserDefinedFieldValues",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Value of User Defined Field.",
            "name": "udfValue",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The Group Code which the User Defined Field Value belongs to.",
            "name": "groupCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/yieldMarketTypes": {
      "get": {
        "description": "Use this API to get Yield Market Types. <p><strong>OperationId:</strong>getYieldMarketTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Get Yield Market Types",
        "operationId": "getYieldMarketTypes",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "name": "yieldMarketTypesCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hotel Codes criteria for which the yield market type belong to.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Yield Market Types.",
            "schema": {
              "$ref": "#/definitions/yieldMarketTypesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "YieldMarketTypes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to update yield market types based on yieldMarketTypesToBeChanged. <p><strong>OperationId:</strong>changeYieldMarketTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Change Yield Market Types",
        "operationId": "changeYieldMarketTypes",
        "parameters": [
          {
            "description": "Request object for changing existing Yield Market Types.",
            "name": "yieldMarketTypesToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/yieldMarketTypesToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Yield Market Types. <p><strong>OperationId:</strong>postYieldMarketTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ],
        "summary": "Create Yield Market Types",
        "operationId": "postYieldMarketTypes",
        "parameters": [
          {
            "description": "Request object for creating new Yield Market Types.",
            "name": "yieldMarketTypesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/yieldMarketTypesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    }
  },
  "definitions": {
    "aRAccountShortInfoType": {
      "description": "Accounts Receivabales Account details type charged for batched posting.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        }
      }
    },
    "aRAccountStatusType": {
      "description": "Type for the Account Status. Status can be restricted and a message/description added to the Account.",
      "type": "object",
      "properties": {
        "description": {
          "description": "User defined status message on the Account.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "restricted": {
          "description": "Flag to indicate if the Account is restricted.",
          "type": "boolean"
        },
        "restriction": {
          "description": "The Restriction Code added on the Account. This is available when the functionality for adding restriction codes is ON.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "activityLogListType": {
      "type": "object",
      "properties": {
        "activityLog": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/activityLogType"
          }
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "activityLogType": {
      "type": "object",
      "properties": {
        "actionDescription": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "actionType": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "croCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "iPAddress": {
          "description": "The IP Address of the machine that performed the activity",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "logDate": {
          "type": "string",
          "format": "date-time"
        },
        "logUserId": {
          "type": "integer"
        },
        "logUserName": {
          "type": "string"
        },
        "machineStation": {
          "type": "string"
        },
        "module": {
          "type": "string"
        },
        "refActionId": {
          "type": "number"
        }
      }
    },
    "additionalGuestAmountType": {
      "type": "object",
      "properties": {
        "ageQualifyingCode": {
          "type": "string",
          "enum": [
            "ADULT",
            "CHILD",
            "OTHER",
            "CHILDBUCKET1",
            "CHILDBUCKET2",
            "CHILDBUCKET3",
            "CHILDBUCKET4",
            "CHILDBUCKET5"
          ]
        },
        "amount": {
          "$ref": "#/definitions/totalType"
        }
      }
    },
    "addressInfoType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "addressSearchType": {
      "description": "Address Details such as city, state, country, postal code etc.",
      "type": "object",
      "properties": {
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "excludeNoCity": {
          "description": "When true indicates that only profiles with city will be fetched.",
          "type": "boolean"
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "streetAddress": {
          "description": "First Line of Street Address. For profile search it matches the first Address line.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "addressType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "maxLength": 80,
            "minLength": 0
          }
        },
        "barCode": {
          "description": "The postal barcode for the address.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string"
        },
        "updateReservations": {
          "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
          "type": "boolean"
        }
      }
    },
    "addtionalCodeInfoType": {
      "description": "Holds name of additional code information",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Holds name of additional code information",
            "$ref": "#/definitions/masterInfoCodeDetailType"
          },
          "value": {
            "description": "Holds value of additional code information",
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          }
        }
      }
    },
    "advanceCheckInType": {
      "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
      "type": "object",
      "properties": {
        "advanceCheckedIn": {
          "description": "Indicates if the reservation is marked as Advance Checked In",
          "type": "boolean"
        },
        "eTRComments": {
          "description": "ETR Comments",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "expectedReturnTime": {
          "description": "Expected Return Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "airportType": {
      "description": "Base details of the airport.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Airport code identifying the airport.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "description": {
          "description": "Description of the airport.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "direction": {
          "description": "Direction of the airport in relation to the hotel.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "distance": {
          "description": "Distance from the hotel to the airport.",
          "type": "number"
        },
        "distanceType": {
          "description": "Unit of distance for the Distance measurement.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "drivingTime": {
          "description": "Driving time from the hotel to the airport.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel code that the airport belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sequence": {
          "description": "Sequence number for displaying the airport.",
          "type": "integer"
        },
        "transportationOptions": {
          "description": "Transportation option available for the airport.",
          "type": "array",
          "maxItems": 8,
          "items": {
            "$ref": "#/definitions/transportationInfoType"
          }
        },
        "website": {
          "description": "URL of the airport's website.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        }
      }
    },
    "airportsCriteria": {
      "description": "Request object for creating new airports for hotels.",
      "type": "object",
      "properties": {
        "airports": {
          "description": "Collection of airports to be created.",
          "$ref": "#/definitions/airportsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "airportsDetails": {
      "description": "Response object for fetching airports configured for hotels.",
      "type": "object",
      "properties": {
        "airports": {
          "description": "Collection of airports.",
          "$ref": "#/definitions/airportsType"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "airportsToBeChanged": {
      "description": "Request object for modifying airports for hotels.",
      "type": "object",
      "properties": {
        "airports": {
          "description": "Collection of airports to be modified.",
          "$ref": "#/definitions/airportsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "airportsType": {
      "description": "Airport details for a hotel.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/airportType"
      }
    },
    "alienInfoType": {
      "description": "immigration/visa information of a foreign person.",
      "type": "object",
      "properties": {
        "alienRegistrationNo": {
          "description": "Alien Registration Number.",
          "type": "string"
        },
        "immigrationStatus": {
          "description": "Immigration Status on an Alien.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "visaValidityType": {
          "description": "Visa Type of an Alien.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "alternateHotelType": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/addressType"
        },
        "alternate": {
          "type": "boolean"
        },
        "alternateHotelCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "availableRooms": {
          "type": "integer"
        },
        "chainCode": {
          "description": "The code that identifies a hotel chain or management group. The hotel chain code is decided between vendors. This attribute is optional if the hotel is an independent property that can be identified by the HotelCode attribute.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "chainName": {
          "description": "The name of the hotel chain (e.g., Hilton, Marriott, Hyatt).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "channelSummaryInfo": {
          "description": "Channel related information if availability request is send for a channel.",
          "$ref": "#/definitions/channelSummaryInfoType"
        },
        "comments": {
          "description": "Comments of alternate Hotel.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "contactNumbers": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/telephoneType"
          }
        },
        "currencyExchangeRates": {
          "description": "Exchange Rate information for currency codes of the requested hotel.",
          "$ref": "#/definitions/currencyExchangeRatesType"
        },
        "direction": {
          "description": "Compass direction to the attraction from the hotel (North/South, etc).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "displayOrder": {
          "type": "number"
        },
        "event": {
          "description": "True if the hotel has any scheduled events within the requested date range.",
          "type": "boolean"
        },
        "hotelAmenities": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelAmenityType"
          }
        },
        "hotelCityCode": {
          "description": "The IATA city code; for example DCA, ORD.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelCodeContext": {
          "description": "A text field used to communicate the context (or source of - ex Sabre, Galileo, Worldspan, Amadeus) the HotelReferenceGroup codes.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "The code that uniquely identifies a single hotel property. The hotel code is decided between vendors.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelName": {
          "description": "A text field used to communicate the proper name of the hotel.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "hotelType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inventoryRooms": {
          "type": "integer"
        },
        "maxRate": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "minRate": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "negotiated": {
          "type": "boolean"
        },
        "newAlternateHotelCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateRoomDetails": {
          "description": "Any additional information like membership, restriction status, room stay information of the requested hotels etc.",
          "$ref": "#/definitions/rateRoomDetailsType"
        },
        "reciprocalRelationship": {
          "description": "whether the alternate relationship should be applied to the alternate hotel as well. If this flag is true, not only will the AlternateHotelCode hotel be an alternate for HotelCode hotel, but HotelCode hotel will also be an alternate for AlternateHotelCode hotel.",
          "type": "boolean"
        },
        "relativePosition": {
          "$ref": "#/definitions/relativePositionType"
        },
        "sellMessages": {
          "description": "Sell messages retrieved based on the Time Span criteria for all Rate Codes and Room Types of the requested hotel.",
          "$ref": "#/definitions/sellMessagesType"
        }
      }
    },
    "alternateHotelsCriteria": {
      "description": "Request object for creating new Alternate Hotels for hotels.",
      "type": "object",
      "properties": {
        "alternateHotels": {
          "description": "Collection of Alternate Hotels to be created.",
          "$ref": "#/definitions/alternateHotelsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "alternateHotelsToBeChanged": {
      "description": "Request object for changing hotel Alternate Hotels for hotels.",
      "type": "object",
      "properties": {
        "alternateHotels": {
          "description": "Collection of Alternate Hotels to be modified.",
          "$ref": "#/definitions/alternateHotelsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "alternateHotelsType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/alternateHotelType"
      }
    },
    "amenitiesCriteria": {
      "description": "Request object for creating amenities at the property level.",
      "type": "object",
      "properties": {
        "hotelAmenities": {
          "description": "Collection containing details of amenities specified at the property level.",
          "$ref": "#/definitions/configHotelAmenitiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "amenitiesDetails": {
      "description": "Response object for fetching amenities at the property level.",
      "type": "object",
      "properties": {
        "hotelAmenities": {
          "description": "Collection of amenities specified at the property level.",
          "$ref": "#/definitions/configHotelAmenitiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "amenitiesToBeChanged": {
      "description": "Request object for changing amenities at the property level.",
      "type": "object",
      "properties": {
        "hotelAmenities": {
          "description": "Collection containing details of amenities specified at the property level.",
          "$ref": "#/definitions/configHotelAmenitiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "amenityTypeType": {
      "description": "Simple type for storing amenity type.",
      "type": "string",
      "enum": [
        "General",
        "Meeting"
      ]
    },
    "amountDeterminationType": {
      "description": "Used to indicate if an amount is inclusive or exclusive of other charges, such as taxes.",
      "type": "string",
      "enum": [
        "Inclusive",
        "Exclusive"
      ]
    },
    "amountType": {
      "description": "Base charge and additional charges related to a room that includes such things as additional guest amounts, cancel fees, etc. Also includes Discount percentages, total amount, and the rate description.",
      "type": "object",
      "properties": {
        "additionalGuestAmounts": {
          "description": "Collection of incremental charges per age qualifying code for additional guests. Amount charged for additional occupant is with respect to age group of the base guests.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/additionalGuestAmountType"
          }
        },
        "base": {
          "description": "The base amount charged for the accommodation or service per unit of time (ex: Nightly, Weekly, etc). If TaxInclusive is set to True, then taxes are included in the base amount. Note that any additional charges should itemized in the other elements.",
          "$ref": "#/definitions/totalType"
        },
        "discount": {
          "description": "Discount percentage and/or Amount, code and textual reason for discount",
          "$ref": "#/definitions/discountType"
        },
        "effectiveRate": {
          "description": "The reservation effective amount charged for the accommodation or service (i.e. base amount + amount for Add to Rate Combine Line packages) per unit of time",
          "$ref": "#/definitions/totalType"
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "requiredPoints": {
          "description": "The Points contains the number of points required to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "shareDistributionInstruction": {
          "description": "Last rate share distribution instruction applied on share reservation daily rate segment.",
          "$ref": "#/definitions/shareDistributionInstructionType"
        },
        "shareRatePercentage": {
          "description": "Indicates the share rate percentage for the reservation if set to CUSTOMSPLIT.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "total": {
          "description": "The total amount charged for this rate including additional occupant amounts and fees.",
          "$ref": "#/definitions/totalType"
        }
      }
    },
    "anonymizationStatusType": {
      "description": "Guest has been anonymized.",
      "type": "string",
      "enum": [
        "Requested",
        "Anonymized"
      ]
    },
    "anonymizationType": {
      "description": "Provides information about guest's anonymization status.",
      "type": "object",
      "properties": {
        "anonymizationDate": {
          "description": "Date and Time when the guest was anonymized.",
          "type": "string",
          "format": "date-time"
        },
        "anonymizationStatus": {
          "description": "Status of anonymization such as Requested or Anonymized.",
          "$ref": "#/definitions/anonymizationStatusType"
        }
      }
    },
    "applicationSettingConversionType": {
      "type": "string",
      "enum": [
        "Default",
        "Parameter"
      ]
    },
    "applicationSettingGroupType": {
      "description": "This element simply groups the different Application Functions.",
      "type": "object",
      "properties": {
        "appSettings": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/applicationSettingType"
          }
        },
        "groupDisplayName": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "groupName": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "applicationSettingLevelType": {
      "type": "string",
      "enum": [
        "Global",
        "Hotel",
        "Cro"
      ]
    },
    "applicationSettingSimpleType": {
      "description": "Internal settings that is mainly used to get a quick information on the type.",
      "type": "object",
      "properties": {
        "configurations": {
          "description": "This element is used for additional items (Key-Value-Pair) that has relevance to the operation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/applicationSettingSimpleType"
          }
        },
        "levelCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "levelType": {
          "$ref": "#/definitions/applicationSettingLevelType"
        },
        "name": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "value": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "applicationSettingType": {
      "description": "Internal settings that can be of a certain valueType.",
      "type": "object",
      "properties": {
        "conversionType": {
          "description": "Represents whether the value is OXI Parameter or Conversion code default.",
          "$ref": "#/definitions/applicationSettingConversionType"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "displayName": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "editAllowed": {
          "type": "boolean"
        },
        "hotelId": {
          "description": "Each configuration item will come with a HotelCode which will help the configuration to specify what context the update has to be. Eg. _Global,ORS,'CRO', etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "levelCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "levelType": {
          "$ref": "#/definitions/applicationSettingLevelType"
        },
        "name": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "scope": {
          "type": "string",
          "enum": [
            "P",
            "G",
            "Ch",
            "C"
          ]
        },
        "sequence": {
          "type": "number"
        },
        "settings": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/baseApplicationSettingType"
          }
        },
        "shortDescription": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "type": {
          "$ref": "#/definitions/applicationSettingTypeType"
        },
        "value": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "valueType": {
          "type": "string",
          "enum": [
            "Yn",
            "Integer",
            "String",
            "SingleSelectLov",
            "MultiSelectLov",
            "ShuttleLov",
            "Custom",
            "Double",
            "Secure"
          ]
        },
        "wildCardMatch": {
          "description": "A flag which indicate whether a wild card search should be made.",
          "type": "boolean"
        }
      }
    },
    "applicationSettingTypeType": {
      "type": "string",
      "enum": [
        "Function",
        "Parameter",
        "Setting"
      ]
    },
    "attractionClassType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "attractionClassesCriteria": {
      "description": "Request object for creating Attraction Classes.",
      "type": "object",
      "properties": {
        "attractionClasses": {
          "description": "Attraction Classesto be created.",
          "$ref": "#/definitions/attractionClassesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "attractionClassesDetails": {
      "description": "Response object for fetching Attraction Classes.",
      "type": "object",
      "properties": {
        "attractionClasses": {
          "description": "Collection of Attraction Classes.",
          "$ref": "#/definitions/attractionClassesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "attractionClassesToBeChanged": {
      "description": "Request object for changing Attraction Classes.",
      "type": "object",
      "properties": {
        "attractionClasses": {
          "description": "Attraction Classesto be changed.",
          "$ref": "#/definitions/attractionClassesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "attractionClassesType": {
      "description": "List of Attraction Classes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/attractionClassType"
      }
    },
    "attractionCodeType": {
      "description": "Information about the attractions near the hotel.",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address of the attraction.",
          "$ref": "#/definitions/addressType"
        },
        "class": {
          "description": "The class of the attraction.",
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "code": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "displaySeq": {
          "description": "Display sequence of the attraction.",
          "type": "integer"
        },
        "generalDirections": {
          "description": "Directions to the attraction from the hotel.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code for attraction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactiveDate": {
          "description": "The date the record was marked as inactive.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "latitude": {
          "type": "number",
          "maximum": 90,
          "minimum": -90
        },
        "longitude": {
          "description": "The longitude of the location from which the organism or observation was collected, expressed in decimal degrees. Positive values are East of the Greenwich Meridian, negative values are West of the Greenwich Meridian.",
          "type": "number",
          "maximum": 180,
          "minimum": -180
        },
        "name": {
          "description": "Attraction name for the hotel.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "operationHours": {
          "description": "Price range for the attraction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "priceRange": {
          "description": "Price range for the attraction.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "region": {
          "description": "The region in which this attraction is located.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "relativePosition": {
          "$ref": "#/definitions/relativePositionType"
        },
        "type": {
          "description": "The type of the attraction.",
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "website": {
          "description": "Website for the attraction.",
          "$ref": "#/definitions/uRLType"
        }
      }
    },
    "attractionCodesType": {
      "description": "Collection of hotel level alert codes with attached alert types.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/attractionCodeType"
      }
    },
    "attractionTemplateType": {
      "description": "Information about the attractions near the hotel.",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address of the attraction.",
          "$ref": "#/definitions/addressType"
        },
        "class": {
          "description": "The class of the attraction.",
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "code": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "displaySeq": {
          "description": "Display sequence of the attraction.",
          "type": "integer"
        },
        "generalDirections": {
          "description": "Directions to the attraction from the hotel.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "inactiveDate": {
          "description": "The date the record was marked as inactive.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "latitude": {
          "type": "number",
          "maximum": 90,
          "minimum": -90
        },
        "longitude": {
          "description": "The longitude of the location from which the organism or observation was collected, expressed in decimal degrees. Positive values are East of the Greenwich Meridian, negative values are West of the Greenwich Meridian.",
          "type": "number",
          "maximum": 180,
          "minimum": -180
        },
        "name": {
          "description": "Attraction name for the hotel.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "operationHours": {
          "description": "Price range for the attraction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "priceRange": {
          "description": "Price range for the attraction.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "region": {
          "description": "The region in which this attraction is located.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "relativePosition": {
          "$ref": "#/definitions/relativePositionType"
        },
        "type": {
          "description": "The type of the attraction.",
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "website": {
          "description": "Website for the attraction.",
          "$ref": "#/definitions/uRLType"
        }
      }
    },
    "attractionTemplatesCriteria": {
      "description": "Request object for creating a new attraction code template.",
      "type": "object",
      "properties": {
        "attractionTemplates": {
          "description": "Attraction template details to be created.",
          "$ref": "#/definitions/attractionTemplatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "attractionTemplatesDetails": {
      "description": "Response object for information regarding attraction templates.",
      "type": "object",
      "properties": {
        "attractionTemplates": {
          "description": "Collection of attraction templates and their information.",
          "$ref": "#/definitions/attractionTemplatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "attractionTemplatesToBeChanged": {
      "description": "Request object for modifying the existing attraction attraction templates.",
      "type": "object",
      "properties": {
        "attractionTemplates": {
          "description": "Attraction template group details to be changed.",
          "$ref": "#/definitions/attractionTemplatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "attractionTemplatesType": {
      "description": "Collection of attraction templates.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/attractionTemplateType"
      }
    },
    "attractionsCriteria": {
      "description": "Request object for creating a new group of attractions.",
      "type": "object",
      "properties": {
        "attractions": {
          "description": "Group of attractions to be created.",
          "$ref": "#/definitions/attractionCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "attractionsDetails": {
      "description": "Response object for information regarding attraction.",
      "type": "object",
      "properties": {
        "attractions": {
          "description": "Collection of attractions and their information.",
          "$ref": "#/definitions/attractionCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "attractionsToBeChanged": {
      "description": "Request object for modifying an existing attraction.",
      "type": "object",
      "properties": {
        "attractions": {
          "description": "Attraction group to be changed.",
          "$ref": "#/definitions/attractionCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizationRuleType": {
      "description": "Configured rule for computing the amount to authorize.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The amount applicable to the authorization rule.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "code": {
          "description": "The authorization rule code.",
          "type": "integer",
          "pattern": "[0-9]{1,9}"
        },
        "percent": {
          "description": "A percentage value if the authorization rule is percentage based.",
          "type": "number"
        }
      }
    },
    "authorizerInfoType": {
      "description": "Authorizer Information",
      "type": "object",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        }
      }
    },
    "awardId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "awardVouchersType": {
      "description": "This stores the Membership Awards code applied on the reservation.",
      "type": "array",
      "maxItems": 5,
      "items": {
        "type": "object",
        "properties": {
          "awardCode": {
            "description": "Membership Award code applied on the reservation.",
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          },
          "voucherNo": {
            "description": "Membership Award number.",
            "type": "string",
            "maxLength": 80,
            "minLength": 0
          }
        }
      }
    },
    "baseApplicationSettingType": {
      "description": "Internal settings that can be of a certain valueType.",
      "type": "object",
      "properties": {
        "conversionType": {
          "description": "Represents whether the value is OXI Parameter or Conversion code default.",
          "$ref": "#/definitions/applicationSettingConversionType"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "displayName": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "editAllowed": {
          "type": "boolean"
        },
        "hotelId": {
          "description": "Each configuration item will come with a HotelCode which will help the configuration to specify what context the update has to be. Eg. _Global,ORS,'CRO', etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "name": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "scope": {
          "type": "string",
          "enum": [
            "P",
            "G",
            "Ch",
            "C"
          ]
        },
        "sequence": {
          "type": "number"
        },
        "shortDescription": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "type": {
          "$ref": "#/definitions/applicationSettingTypeType"
        },
        "value": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "valueType": {
          "type": "string",
          "enum": [
            "Yn",
            "Integer",
            "String",
            "SingleSelectLov",
            "MultiSelectLov",
            "ShuttleLov",
            "Custom",
            "Double",
            "Secure"
          ]
        },
        "wildCardMatch": {
          "description": "A flag which indicate whether a wild card search should be made.",
          "type": "boolean"
        }
      }
    },
    "basicEmailType": {
      "description": "Email address",
      "type": "string",
      "maxLength": 2000,
      "minLength": 0
    },
    "bedTaxReportingType": {
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "type": "object",
      "properties": {
        "taxRegistrationNo": {
          "description": "Tax Registration Number for Maldives Bed Tax Reporting.",
          "type": "number"
        },
        "taxableDays": {
          "description": "Number of days for which the Maldives tax is applicable.",
          "type": "integer"
        },
        "visaExpiryDate": {
          "description": "Visa Expiration Date used for Maldives Bed Tax Reporting",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaIssueDate": {
          "description": "Visa Issue Date used for Maldives Bed Tax Reporting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaNumber": {
          "description": "Visa number used for Maldives Bed Tax Reporting",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "benefitType": {
      "description": "Basic information about membership benefit.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Benefit code associated with a membership.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicates whether membership benefit is active or inactive.",
          "type": "boolean"
        },
        "message": {
          "description": "Processing message for membership benefit.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        }
      }
    },
    "benefitsType": {
      "description": "Basic information about membership benefit.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/benefitType"
      }
    },
    "billingPrivilegesType": {
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "type": "object",
      "properties": {
        "allowAutoCheckin": {
          "description": "Indicated if a new reservation should be created and automatically checked in whenever the room is checked out. Available for pseudo room types only.",
          "type": "boolean"
        },
        "autoSettlement": {
          "description": "Indicates if the is a candidate for auto folio settlement.",
          "type": "boolean"
        },
        "autoSettlementFreq": {
          "description": "The interval of days between each auto folio settlement.",
          "type": "integer"
        },
        "autoSettlementType": {
          "description": "The folio settlement type for auto folio settlement.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "creditLimitAutoPay": {
          "description": "Indicates if the reservation will be included in the Automatic Credit Limit Overages process and also be listed in the Credit Limit Overages screen results.",
          "type": "boolean"
        },
        "directBillAuthorized": {
          "description": "If Direct bill is authorized this will hold User ID who authorized it.",
          "type": "boolean"
        },
        "folioCloseDate": {
          "description": "Date when folio was closed. This works with PostStayCharging flag.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postStayCharging": {
          "description": "Indicates if the reservation has charging privileges after checkout.",
          "type": "boolean"
        },
        "postingRestriction": {
          "description": "Flag used by interface program during check in.",
          "type": "boolean"
        },
        "preStayCharging": {
          "description": "Indicates if the reservation has charging privileges before arrival.",
          "type": "boolean"
        },
        "scheduledCheckout": {
          "description": "Indicates if the guest is scheduled for automatic check out.",
          "type": "boolean"
        },
        "scheduledCheckoutTime": {
          "description": "Time of automatic check out if guest is schedule for automatic check out.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "videoCheckout": {
          "description": "Indicates if the guest can do video checkout",
          "type": "boolean"
        }
      }
    },
    "blockIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "bookingChannelType": {
      "type": "object",
      "properties": {
        "channelCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelName": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "channelType": {
          "type": "string",
          "maxLength": 240,
          "minLength": 0
        }
      }
    },
    "brandCodeType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "brandCodesCriteria": {
      "description": "Request object for creating Brand Codes.",
      "type": "object",
      "properties": {
        "brandCodes": {
          "description": "Brand Codes to be created.",
          "$ref": "#/definitions/brandCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "brandCodesDetails": {
      "description": "Response object for fetching Brand Codes.",
      "type": "object",
      "properties": {
        "brandCodes": {
          "description": "Collection of Brand Codes.",
          "$ref": "#/definitions/brandCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "brandCodesToBeChanged": {
      "description": "Request object for changing Brand Codes.",
      "type": "object",
      "properties": {
        "brandCodes": {
          "description": "Brand Codes to be changed.",
          "$ref": "#/definitions/brandCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "brandCodesType": {
      "description": "List of Brand Codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/brandCodeType"
      }
    },
    "cardNumberTypeType": {
      "description": "Simple type for indicating if credit card number is tokenized.",
      "type": "string",
      "enum": [
        "CardNumber",
        "Token"
      ]
    },
    "cardProcessingType": {
      "type": "string",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "cardReIssueType": {
      "description": "Request to re issue a new card.",
      "type": "string",
      "enum": [
        "Pending",
        "NotApplicable",
        "Requested"
      ]
    },
    "cardTypeType": {
      "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
      "type": "string",
      "enum": [
        "Ab",
        "Am",
        "Ax",
        "Cb",
        "Dc",
        "Ds",
        "Dt",
        "Ec",
        "Er",
        "Jc",
        "Jl",
        "Mc",
        "Nb",
        "So",
        "St",
        "Sw",
        "Va",
        "Xy",
        "Zz",
        "Cp",
        "Cu"
      ]
    },
    "chainConfigInfoType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/chainDetailInfoType"
      }
    },
    "chainDetailInfoType": {
      "type": "object",
      "properties": {
        "aspYn": {
          "description": "Flag to check if chain has ASP.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "bookingConditions": {
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "chainAddress": {
          "$ref": "#/definitions/addressType"
        },
        "chainCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "chainDesc": {
          "type": "string"
        },
        "chainName": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "email": {
          "description": "The email address of the chain.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "endDate": {
          "description": "This represents the end date of chain.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fax": {
          "description": "The fax number of the chain.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "frequentFlierCardsAcceptYn": {
          "description": "Flag to check if chain accepts Frequent Flier Cards.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "loyaltyProgram": {
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "marketingText": {
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "phone": {
          "description": "The phone number of the chain.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "shareProfilesYn": {
          "description": "Flag to check if chain allows share Profiles.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "startDate": {
          "description": "This represents the begin date of Chain.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "chainDetails": {
      "description": "Response object for fetching Chain.",
      "type": "object",
      "properties": {
        "chains": {
          "description": "A collection of chain records including address of the chain.",
          "$ref": "#/definitions/chainConfigInfoType"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "chainToBeChanged": {
      "description": "Request object for changing Chain.",
      "type": "object",
      "properties": {
        "chains": {
          "description": "A collection of chain records including address of the chain.",
          "$ref": "#/definitions/chainConfigInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeRelationsType": {
      "description": "Detailed information regarding the changes made to relationships for the profile.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "relation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "relationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "channelSummaryInfoType": {
      "description": "Depicts channel information such as the type and code.",
      "type": "object",
      "properties": {
        "bookingChannel": {
          "$ref": "#/definitions/bookingChannelType"
        },
        "messageId": {
          "description": "Indicates the transaction identifier.",
          "type": "string"
        },
        "summaryOnly": {
          "description": "Used to indicate whether to return summarized or detailed rate room information.",
          "type": "boolean"
        }
      }
    },
    "characterUDFType": {
      "description": "Used to hold user defined field of Character/String Type.",
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "name": {
          "description": "Used to hold user defined field of Character Type. It is highly recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "characterUDFsType": {
      "description": "Used to hold collection of user defined fields of Character/String Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/characterUDFType"
      }
    },
    "childAgeType": {
      "description": "Defines Child's Age.",
      "type": "object",
      "properties": {
        "age": {
          "description": "Age of a child in years.",
          "type": "integer"
        }
      }
    },
    "childAgesType": {
      "description": "Age of a child in years.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/childAgeType"
      }
    },
    "childBucketsType": {
      "description": "Defines children counts with Age Qualifying Group(Child Bucket) classification.",
      "type": "object",
      "properties": {
        "bucket1Count": {
          "description": "Number of children classified under the first Age Qualifying Group(Child Bucket#1).",
          "type": "integer"
        },
        "bucket2Count": {
          "description": "Number of children classified under the second Age Qualifying Group(Child Bucket#2).",
          "type": "integer"
        },
        "bucket3Count": {
          "description": "Number of children classified under the third Age Qualifying Group(Child Bucket#3).",
          "type": "integer"
        },
        "bucket4Count": {
          "description": "Number of children classified under the fourth Age Qualifying Group(Child Bucket#4).",
          "type": "integer"
        },
        "bucket5Count": {
          "description": "Number of children classified under the fifth Age Qualifying Group(Child Bucket#5).",
          "type": "integer"
        }
      }
    },
    "cityHotelInfoType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotels under this Marketing City.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "name": {
          "description": "Hotel Name for the Hotel Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "codeDescriptionType": {
      "description": "This contains a generic code and description information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "codeInfoType": {
      "type": "object",
      "properties": {
        "addtionalCodeInfo": {
          "$ref": "#/definitions/addtionalCodeInfoType"
        },
        "code": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "maxLength": 20,
        "minLength": 0
      }
    },
    "codeType": {
      "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
      "type": "string",
      "maxLength": 20,
      "minLength": 0
    },
    "colorType": {
      "description": "Color configuration type. This color configuration provides a visual category of entities.",
      "type": "string",
      "enum": [
        "Red",
        "DarkRed",
        "Green",
        "DarkGreen",
        "LightGreen",
        "Orange",
        "White",
        "Yellow",
        "DarkYellow",
        "Purple",
        "Brown",
        "Gray",
        "Aqua",
        "Chocolate",
        "Blue",
        "LightBlue",
        "DarkBlue",
        "Cyan",
        "DarkCyan",
        "Magenta",
        "DarkMagenta",
        "Black"
      ]
    },
    "commentInfoType": {
      "description": "Comment related to the profile/reservation.",
      "type": "object",
      "properties": {
        "comment": {
          "description": "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref": "#/definitions/commentType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "commentType": {
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "type": "object",
      "properties": {
        "actionDate": {
          "description": "Indicates at which date an action described in the comment must be taken.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "actionType": {
          "description": "Specifies type of action described in the comments.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "commentTitle": {
          "description": "Specifies Comment's Title.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "confidential": {
          "description": "When true, the comment may be confidential.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "If specified comment belongs to the Hotel, otherwise it is a global comment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "internal": {
          "description": "When true, the comment may not be shown to the consumer. When false, the comment may be shown to the consumer.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "notificationLocation": {
          "description": "Notification Location associated with the Note.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "overrideInternal": {
          "description": "When true, the note internal could be modified.",
          "type": "boolean"
        },
        "protectDescription": {
          "description": "When true, the note title will be populated from the note type description and couldn't be modified.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "type": {
          "description": "Specifies type of the comment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Comment type Description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        }
      }
    },
    "commissionPaymentMethods": {
      "description": "Check",
      "type": "string",
      "enum": [
        "Cent",
        "Eft",
        "Chk"
      ]
    },
    "commissionPayoutToType": {
      "type": "string",
      "enum": [
        "TravelAgent",
        "Source",
        "TravelAgentSource",
        "None"
      ]
    },
    "communicationMethodsEntDetailType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "communicationMethodsEntDetailsCriteria": {
      "description": "Request object for creating Communication Methods Ent Details.",
      "type": "object",
      "properties": {
        "communicationMethodsEntDetails": {
          "description": "Communication Methods Ent Detailsto be created.",
          "$ref": "#/definitions/communicationMethodsEntDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "communicationMethodsEntDetailsDetails": {
      "description": "Response object for fetching Communication Methods Ent Details.",
      "type": "object",
      "properties": {
        "communicationMethodsEntDetails": {
          "description": "Collection of Communication Methods Ent Details.",
          "$ref": "#/definitions/communicationMethodsEntDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "communicationMethodsEntDetailsToBeChanged": {
      "description": "Request object for changing Communication Methods Ent Details.",
      "type": "object",
      "properties": {
        "communicationMethodsEntDetails": {
          "description": "Communication Methods Ent Detailsto be changed.",
          "$ref": "#/definitions/communicationMethodsEntDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "communicationMethodsEntDetailsType": {
      "description": "List of Communication Methods Ent Details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/communicationMethodsEntDetailType"
      }
    },
    "communicationStatusType": {
      "description": "Enum to denote the Status of Readiness messages sent to Guest Devices.",
      "type": "string",
      "enum": [
        "Pending",
        "Completed",
        "Failed",
        "Sent",
        "Received",
        "Cancelled",
        "PendingAvailability"
      ]
    },
    "companyInfoType": {
      "description": "Company Information of the Profile.",
      "type": "object",
      "properties": {
        "department": {
          "description": "Department of the Profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "legalCompany": {
          "description": "Legal Company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "position": {
          "description": "Business Title or Position of the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "companyType": {
      "type": "object",
      "properties": {
        "alternateLanguage": {
          "description": "Alternate Language of the company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "alternateName": {
          "description": "Alternate Name of the Company. Mainly, it's the name of the company written in the Alternate Language.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "blacklist": {
          "description": "This element tells if profile is blacklisted or not.",
          "type": "boolean"
        },
        "businessLocale": {
          "description": "A jurisdiction(Territory) in which a company is authorized to do business.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "businessTitle": {
          "description": "Business Title.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "commissionCode": {
          "description": "Commission code of the company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "companyName2": {
          "description": "Second Name of the company.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "companyName3": {
          "description": "Third Name of the company.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "corporateIdType": {
          "description": "The type of corporate ID",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "creditRating": {
          "description": "Credit Rating of the company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "iATAInfo": {
          "description": "IATA Information of the profile.",
          "$ref": "#/definitions/iATAInfoType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nationalityDescription": {
          "description": "Nationality code description",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "vipStatus": {
          "description": "VIP status of the company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "configActivitiesType": {
      "description": "Changes log record to import/Export/Delete customization operations.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/configActivityType"
      }
    },
    "configActivityLogDetails": {
      "description": "Response object for fetching configuration activity log.",
      "type": "object",
      "properties": {
        "activityLog": {
          "description": "Contains list of the activity logs.",
          "$ref": "#/definitions/activityLogListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "configActivityType": {
      "description": "Changes log record to import/Export/Delete customization operations.",
      "type": "object",
      "properties": {
        "actionDescription": {
          "description": "action, layer, org name, user name and screen name or file name or path.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "actionType": {
          "description": "Action Type: MDS_IMP, MDS_EXP, MDS_DEL, MDS_EXP_UNENC, MDS_IMP_UNENC.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code that uniquely identifies the hotel belonging to the organization.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "configHotelAmenitiesType": {
      "description": "This type holds a collection of amenities at the property level.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/configHotelAmenityType"
      }
    },
    "configHotelAmenityType": {
      "description": "Base details used for amenities.",
      "type": "object",
      "properties": {
        "amenityType": {
          "description": "The type of amenity (general or meeting) selected from the list of values.",
          "$ref": "#/definitions/amenityTypeType"
        },
        "beginDate": {
          "description": "The date the amenity is scheduled to become active.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "comments": {
          "description": "The comments about amenity of the hotel.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "description": {
          "description": "The description about amenity of the hotel.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "endDate": {
          "description": "The date the amenity is scheduled to become inactive.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "featureCode": {
          "description": "Specifies the feature code (aka amenity code).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Specifies the hotel code for which the amenity is specified.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hours": {
          "description": "The hours of operation of the amenity in the hotel.",
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        },
        "newAmenityCode": {
          "description": "The new amenity code which is used in the change method.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "newBeginDate": {
          "description": "The new date the amenity is scheduled to become active.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "priceRange": {
          "description": "The price range of the amenity in the hotel.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "configLanguageType": {
      "description": "This gives detailed information about a language.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description gives the full text language name associated with the code.",
          "$ref": "#/definitions/translationTextType50"
        },
        "languageCode": {
          "description": "Language Code is a user definable code that identifies a language.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "locale": {
          "description": "Geographic, political or cultural region.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "localeDescription": {
          "description": "Description for the locale.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "reportDateLanguage": {
          "description": "Report Date Language if filled will represent correctly in the report language date elements that might be spelled out, like the day-of-week or the month.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "translationLanguageCode": {
          "description": "Translation Language Code is required for the Translation Studio program to display language into which object has been translated.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "useAsAlternateLanguage": {
          "description": "This is a placeholder element for future use. Functionality may not be available for the current implementation.",
          "type": "boolean"
        }
      }
    },
    "configLanguagesType": {
      "description": "This type holds a collection of languages.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/configLanguageType"
      }
    },
    "configTemplateAmenitiesType": {
      "description": "This type holds a collection of amenities at the template level.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/configTemplateAmenityType"
      }
    },
    "configTemplateAmenityType": {
      "description": "Base details used for amenities.",
      "type": "object",
      "properties": {
        "amenityType": {
          "description": "The type of amenity (general or meeting) selected from the list of values.",
          "$ref": "#/definitions/amenityTypeType"
        },
        "beginDate": {
          "description": "The date the amenity is scheduled to become active.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "comments": {
          "description": "The comments about amenity of the hotel.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "description": {
          "description": "The description about amenity of the hotel.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "endDate": {
          "description": "The date the amenity is scheduled to become inactive.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "featureCode": {
          "description": "Specifies the feature code (aka amenity code).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "newChainCode": {
          "description": "The new chain code which is used in the change method.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "copyConfigurationCodeType": {
      "description": "Information needed to copy configuration code from one property to the other.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Source hotel code from which code is to be copied from.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceHotelCode": {
          "description": "Code that is to be copied.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "targetHotelCode": {
          "description": "Property to which configuration code type to be copied to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        }
      }
    },
    "copyDepartments": {
      "type": "object",
      "properties": {
        "departments": {
          "description": "List of the departments to be copied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyHotelDetails": {
      "description": "Request object for copying template hotel details to hotel(s).",
      "type": "object",
      "properties": {
        "copyInstructions": {
          "description": "List of the template hotel details to be copied to hotel(s).",
          "$ref": "#/definitions/copyHotelDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyHotelDetailsType": {
      "description": "Instructions for copying template hotel details to hotel(s).",
      "type": "object",
      "properties": {
        "hotels": {
          "description": "Hotel codes to copy the template hotel details to.",
          "$ref": "#/definitions/codeListType"
        },
        "templateHotelDetails": {
          "description": "Template hotel details to be copied to the hotel(s).",
          "$ref": "#/definitions/templateHotelDetailsIDType"
        }
      }
    },
    "copyMarketingCities": {
      "description": "Request object for copying template marketing cities to hotel(s).",
      "type": "object",
      "properties": {
        "copyInstructions": {
          "description": "List of the template marketing city(s) to be copied to hotel(s).",
          "$ref": "#/definitions/copyMarketingCitiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyMarketingCitiesType": {
      "description": "Copy instructions for template marketing cities to hotel(s).",
      "type": "object",
      "properties": {
        "hotelCodes": {
          "description": "Hotel codes to copy the marketing city templates to.",
          "$ref": "#/definitions/codeListType"
        },
        "templateMarketingCities": {
          "description": "Marketing city template to be copied to the hotel(s).",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/templateMarketingCityInfoType"
          }
        }
      }
    },
    "copyTemplateCodes": {
      "type": "object",
      "properties": {
        "codes": {
          "description": "List of template codes to be copied.",
          "$ref": "#/definitions/codeListType"
        },
        "hotelCodes": {
          "description": "List of hotel codes for which the template needs to be copied.",
          "$ref": "#/definitions/hotelCodeListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateName": {
          "description": "Template name to be copied.",
          "$ref": "#/definitions/copyTemplateType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyTemplateType": {
      "description": "Template name for template copy operation. Eg: RateCategory",
      "type": "string",
      "enum": [
        "RateCategory",
        "PromotionCode",
        "RateClass",
        "DepositPolicy",
        "CancellationPolicy",
        "GuaranteeCode",
        "MarketCode",
        "MarketGroup",
        "SourceCode",
        "SourceGroup",
        "RoomType",
        "RoomClass",
        "CustomNumbers",
        "AlertCode",
        "AttractionCode",
        "Transportation",
        "RoomCondition",
        "RateSeason",
        "Amenity",
        "TransactionCode",
        "CompTransactionCode",
        "PkgForecastGroup",
        "RoomMaintenance",
        "DayTypeCode",
        "TurnawayCodes",
        "EventCode",
        "MessageCode",
        "Airport",
        "OutOfService",
        "Floor",
        "TransactionGroup",
        "LocatorCode",
        "RoomFeatures",
        "JobTitle",
        "DeviceLocations",
        "ShiftDropLocations",
        "HousekeepingTasks"
      ]
    },
    "copyYieldAdjustmentCodes": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "yieldAdjustmentCodes": {
          "description": "List of the Yield AdjustmentCodes to be copied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        }
      }
    },
    "copyYieldCategories": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "yieldCategories": {
          "description": "List of the Yield Category to be copied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        }
      }
    },
    "corporateBusinessUnitType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "corporateBusinessUnitsCriteria": {
      "description": "Request object for creating Corporate Business Units.",
      "type": "object",
      "properties": {
        "corporateBusinessUnits": {
          "description": "Corporate Business Units to be created.",
          "$ref": "#/definitions/corporateBusinessUnitsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateBusinessUnitsDetails": {
      "description": "Response object for fetching Corporate Business Units.",
      "type": "object",
      "properties": {
        "corporateBusinessUnits": {
          "description": "Collection of Corporate Business Units.",
          "$ref": "#/definitions/corporateBusinessUnitsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateBusinessUnitsToBeChanged": {
      "description": "Request object for changing Corporate Business Units.",
      "type": "object",
      "properties": {
        "corporateBusinessUnits": {
          "description": "Corporate Business Units to be changed.",
          "$ref": "#/definitions/corporateBusinessUnitsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateBusinessUnitsType": {
      "description": "List of Corporate Business Units.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/corporateBusinessUnitType"
      }
    },
    "corporateDepartmentCodeType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "corporateDepartmentCodesCriteria": {
      "description": "Request object for creating Corporate Department Codes.",
      "type": "object",
      "properties": {
        "corporateDepartmentCodes": {
          "description": "Corporate Department Codes to be created.",
          "$ref": "#/definitions/corporateDepartmentCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateDepartmentCodesDetails": {
      "description": "Response object for fetching Corporate Department Codes.",
      "type": "object",
      "properties": {
        "corporateDepartmentCodes": {
          "description": "Collection of Corporate Department Codes.",
          "$ref": "#/definitions/corporateDepartmentCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateDepartmentCodesToBeChanged": {
      "description": "Request object for changing Corporate Department Codes.",
      "type": "object",
      "properties": {
        "corporateDepartmentCodes": {
          "description": "Corporate Department Codes to be changed.",
          "$ref": "#/definitions/corporateDepartmentCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateDepartmentCodesType": {
      "description": "List of Corporate Department Codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/corporateDepartmentCodeType"
      }
    },
    "corporateDivisionType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "corporateDivisionsCriteria": {
      "description": "Request object for creating Corporate Divisions.",
      "type": "object",
      "properties": {
        "corporateDivisions": {
          "description": "Corporate Divisions to be created.",
          "$ref": "#/definitions/corporateDivisionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateDivisionsDetails": {
      "description": "Response object for fetching Corporate Divisions.",
      "type": "object",
      "properties": {
        "corporateDivisions": {
          "description": "Collection of Corporate Divisions.",
          "$ref": "#/definitions/corporateDivisionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateDivisionsToBeChanged": {
      "description": "Request object for changing Corporate Divisions.",
      "type": "object",
      "properties": {
        "corporateDivisions": {
          "description": "Corporate Divisions to be changed.",
          "$ref": "#/definitions/corporateDivisionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateDivisionsType": {
      "description": "List of Corporate Divisions.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/corporateDivisionType"
      }
    },
    "corporateOperatingUnitType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "corporateOperatingUnitsCriteria": {
      "description": "Request object for creating Corporate Operating Units.",
      "type": "object",
      "properties": {
        "corporateOperatingUnits": {
          "description": "Corporate Operating Units to be created.",
          "$ref": "#/definitions/corporateOperatingUnitsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateOperatingUnitsDetails": {
      "description": "Response object for fetching Corporate Operating Units.",
      "type": "object",
      "properties": {
        "corporateOperatingUnits": {
          "description": "Collection of Corporate Operating Units.",
          "$ref": "#/definitions/corporateOperatingUnitsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateOperatingUnitsToBeChanged": {
      "description": "Request object for changing Corporate Operating Units.",
      "type": "object",
      "properties": {
        "corporateOperatingUnits": {
          "description": "Corporate Operating Units to be changed.",
          "$ref": "#/definitions/corporateOperatingUnitsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateOperatingUnitsType": {
      "description": "List of Corporate Operating Units.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/corporateOperatingUnitType"
      }
    },
    "countriesDetails": {
      "description": "Response object for fetching Countries.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "countries": {
          "description": "Collection of Countries.",
          "$ref": "#/definitions/countriesType"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "countriesToBeChanged": {
      "description": "Request object for modifying Countries for hotels.",
      "type": "object",
      "properties": {
        "countries": {
          "description": "Collection of Countries to be modified.",
          "$ref": "#/definitions/countriesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "countriesType": {
      "description": "Country details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/countryType"
      }
    },
    "countryGuestTypeType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "countryGuestTypesCriteria": {
      "description": "Request object for creating Country Guest Types.",
      "type": "object",
      "properties": {
        "countryGuestTypes": {
          "description": "Philippines Country Guest Types to be created.",
          "$ref": "#/definitions/countryGuestTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "countryGuestTypesDetails": {
      "description": "Response object for fetching Philippines Country Guest Types.",
      "type": "object",
      "properties": {
        "countryGuestTypes": {
          "description": "Collection of Philippines Country Guest Types.",
          "$ref": "#/definitions/countryGuestTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "countryGuestTypesToBeChanged": {
      "description": "Request object for changing Philippines Country Guest Types.",
      "type": "object",
      "properties": {
        "countryGuestTypes": {
          "description": "Philippines Country Guest Types to be changed.",
          "$ref": "#/definitions/countryGuestTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "countryGuestTypesType": {
      "description": "List of Philippines Country specific Guest Types.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/countryGuestTypeType"
      }
    },
    "countryMainGroupType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "countryMainGroupsCriteria": {
      "description": "Request object for creating Country Main Groups.",
      "type": "object",
      "properties": {
        "countryMainGroups": {
          "description": "Country Main Groups to be created.",
          "$ref": "#/definitions/countryMainGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "countryMainGroupsDetails": {
      "description": "Response object for fetching Country Main Groups.",
      "type": "object",
      "properties": {
        "countryMainGroups": {
          "description": "Collection of Country Main Groups.",
          "$ref": "#/definitions/countryMainGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "countryMainGroupsToBeChanged": {
      "description": "Request object for changing Country Main Groups.",
      "type": "object",
      "properties": {
        "countryMainGroups": {
          "description": "Country Main Groups to be changed.",
          "$ref": "#/definitions/countryMainGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "countryMainGroupsType": {
      "description": "List of Country Main Groups.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/countryMainGroupType"
      }
    },
    "countryNameType": {
      "description": "Code for a country or a nationality.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Used for Character Strings, length 0 to 200.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "countryType": {
      "description": "Base details of the country.",
      "type": "object",
      "properties": {
        "addressDoctorMode": {
          "description": "Defines the mode used to invoke address doctor service.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "countryCode": {
          "description": "Country code identifying the country.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "displayFlag": {
          "description": "Indicates if the country flag should be displayed.",
          "type": "boolean"
        },
        "displaySequence": {
          "description": "Sequence number for displaying the countries.",
          "type": "number"
        },
        "guestAddressFormat": {
          "description": "Guest Address format Codes for confirmation letter.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel code the country belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "isoCode": {
          "description": "ISO standard code for country.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "isoName": {
          "description": "ISO standard name for country.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "mainGroup": {
          "description": "Main Group of Country. Used in statistic reports.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "name": {
          "description": "Name for the country.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "printSequence": {
          "description": "Print Sequence number for report.",
          "type": "number"
        },
        "regionCode": {
          "description": "Regin to which the Country belongs.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "statisticCode": {
          "description": "Statistic code for the country.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        }
      }
    },
    "createConfigActivityLogCriteria": {
      "description": "Request object for creating Config Activity Logs.",
      "type": "object",
      "properties": {
        "configActivities": {
          "description": "Confic Activity Logs to be created.",
          "$ref": "#/definitions/configActivitiesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardTypeType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "hotelId": {
          "description": "Hotel of the record.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "creditCardTypesCriteria": {
      "description": "Request object for creating Credit Card Types.",
      "type": "object",
      "properties": {
        "creditCardTypes": {
          "description": "Credit Card Types to be created.",
          "$ref": "#/definitions/creditCardTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardTypesDetails": {
      "description": "Response object for fetching Credit Card Types.",
      "type": "object",
      "properties": {
        "creditCardTypes": {
          "description": "Collection of Credit Card Types.",
          "$ref": "#/definitions/creditCardTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardTypesToBeChanged": {
      "description": "Request object for changing Credit Card Types.",
      "type": "object",
      "properties": {
        "creditCardTypes": {
          "description": "Credit Card Types to be changed.",
          "$ref": "#/definitions/creditCardTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardTypesType": {
      "description": "List of Credit Card Types.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/creditCardTypeType"
      }
    },
    "currencyAmountType": {
      "description": "A monetary value expressed with a currency code.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        }
      }
    },
    "currencyExchangeRateType": {
      "description": "Currency code configuration.",
      "type": "object",
      "properties": {
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "description": {
          "description": "Description of the currency code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "exchangeRate": {
          "description": "Exchange Rate for the currency code. Exchange rate is based on the current business date of the property.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "currencyExchangeRatesDetails": {
      "description": "Response with the list of currency codes and their exchange rates for each property requested.",
      "type": "object",
      "properties": {
        "exchangeRates": {
          "description": "List of currency codes with their exchange rates.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "exchangeInfo": {
                "description": "Exchange Rate information for a currency code.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/currencyExchangeRateType"
                }
              },
              "hotelId": {
                "$ref": "#/definitions/codeType"
              }
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "currencyExchangeRatesType": {
      "description": "Exchange Rate information for a currency code.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/currencyExchangeRateType"
      }
    },
    "currentRoomInfoType": {
      "description": "Room information of the reservation for the current day.",
      "type": "object",
      "properties": {
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "roomDescription": {
          "description": "Current room description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "roomId": {
          "description": "Current room number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "Current room type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomViewCode": {
          "description": "Represents the room view code like City view, River view, Ocean view etc.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "suggestedRoomNumbers": {
          "description": "Suggested room numbers.",
          "$ref": "#/definitions/codeListType"
        },
        "upgradedByAI": {
          "description": "Represents the room was upgraded by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "customerType": {
      "description": "Contains basic data on the customer's identity, location, relationships, finances, memberships, etc.",
      "type": "object",
      "properties": {
        "alienInfo": {
          "description": "Immigration/visa information of a foreign person.",
          "$ref": "#/definitions/alienInfoType"
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "birthCountry": {
          "description": "Country of birth.",
          "$ref": "#/definitions/countryNameType"
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        },
        "birthPlace": {
          "description": "Place of birth.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "blacklist": {
          "description": "This element tells if profile is blacklisted or not.",
          "type": "boolean"
        },
        "businessTitle": {
          "description": "Business Title.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "citizenCountry": {
          "description": "Name of the (self-professed) country that is claimed for citizenship.",
          "$ref": "#/definitions/countryNameType"
        },
        "companyInfo": {
          "description": "Company Information of the Profile.",
          "$ref": "#/definitions/companyInfoType"
        },
        "creditRating": {
          "description": "Credit Rating of the customer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "customerValue": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "gender": {
          "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "identifications": {
          "description": "List of identification of the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "identificationInfo": {
              "description": "Collection of detailed information on the identification of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/identificationInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "legalCompany": {
          "description": "Name Of the company the individual is associated with.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nationalityDescription": {
          "description": "Nationality code description",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "personName": {
          "description": "Detailed name information for the customer.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/personNameType"
          }
        },
        "privateProfile": {
          "description": "This element tells profile is property exclusive or not.",
          "type": "boolean"
        },
        "profession": {
          "description": "Profession of a person.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "vipStatus": {
          "description": "VIP status of the customer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "dateUDFType": {
      "description": "Used to hold user defined field of Date Type.",
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "name": {
          "description": "Used to hold user defined field of Date Type. It is highly recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "dateUDFsType": {
      "description": "Used to hold collection of user defined fields of Date Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dateUDFType"
      }
    },
    "defaultNoteDetails": {
      "description": "Response object for fetching Default Application Note text.",
      "type": "object",
      "properties": {
        "defaultNote": {
          "description": "Default Application Note text details.",
          "$ref": "#/definitions/defaultNoteTextDetailType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "defaultNoteTextDetailType": {
      "description": "Default Note Text Information Type.",
      "type": "object",
      "properties": {
        "defaultNoteText": {
          "description": "Default Note Text if Note Type has default note.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Indicates the Property for which the Default Note Text is specified.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "defaultNoteTextsDetailType": {
      "description": "Collection of individual Default Note Text details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/defaultNoteTextDetailType"
      }
    },
    "departmentType": {
      "description": "Type provides department information.",
      "type": "object",
      "properties": {
        "departmentCode": {
          "description": "Department Code.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "departmentName": {
          "description": "Description of the department.",
          "$ref": "#/definitions/translationTextType30"
        },
        "displaySequence": {
          "description": "Display Sequence for the department.",
          "type": "integer"
        },
        "email": {
          "description": "Department email address.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property Code where the department belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "departmentsCriteria": {
      "description": "Request object for creating new departments.",
      "type": "object",
      "properties": {
        "departments": {
          "description": "Departments to be created.",
          "$ref": "#/definitions/departmentsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "departmentsDetails": {
      "description": "Response object for fetching departments.",
      "type": "object",
      "properties": {
        "departments": {
          "description": "Type contains departments.",
          "$ref": "#/definitions/departmentsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "departmentsToBeChanged": {
      "description": "Request object for updating departments.",
      "type": "object",
      "properties": {
        "departments": {
          "description": "Departments to be modified.",
          "$ref": "#/definitions/departmentsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "departmentsType": {
      "description": "Collection of departments.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/departmentType"
      }
    },
    "directBillingType": {
      "description": "This is the preconfigured routing instruction type.",
      "type": "object",
      "properties": {
        "aRNumber": {
          "description": "Hotel Code for which the details of direct billing is provided for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code for which the details of direct billing is provided for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "directionType": {
      "description": "Direction details to get into Hotel.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description about the Hotel direction.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "title": {
          "description": "Title of Hotel direction.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "directionsType": {
      "description": "Collection of direction details to get into Hotel.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/directionType"
      }
    },
    "discountType": {
      "description": "Identifies and provides details about the discount. This allows for both percentages and flat amounts. If one field is used, the other should be zero/not specified since logically.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "discountCode": {
          "description": "Specifies the type of discount (e.g., No condition, LOS, Deposit or Total amount spent).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "discountReason": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "percent": {
          "description": "Percentage discount.",
          "type": "number"
        }
      }
    },
    "downgradeType": {
      "description": "Do not downgrade membership when the next downgrade process runs. When the downgrade process runs, the membership will be automatically set to Grace.",
      "type": "string",
      "enum": [
        "Grace",
        "Never",
        "Period"
      ]
    },
    "eCertificateConsumeSourceType": {
      "description": "Indicates that OPERA E-Certificate is consumed by hotelPMS.",
      "type": "string",
      "enum": [
        "Central",
        "Web",
        "Hotel"
      ]
    },
    "eCertificateConsumptionType": {
      "description": "E-Certificates details.",
      "type": "object",
      "properties": {
        "authorizationCode": {
          "description": "Authorization code for consumption.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "date": {
          "description": "Date the certificate was consumed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "email": {
          "description": "Email of the person who consumed the certificate.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "firstName": {
          "description": "First name of the person who consumed the certificate.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property where certificate was consumed for.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "locationType": {
          "description": "Consumption location type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "middleName": {
          "description": "Middle name of the person who consumed the certificate.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "referenceId": {
          "description": "Any reference like reservation no etc against which the certificate was consumed.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "serviceDate": {
          "description": "Date on which the service is due (arrival date in case of reservation).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "source": {
          "description": "Source of consumption.",
          "$ref": "#/definitions/eCertificateConsumeSourceType"
        },
        "surname": {
          "description": "Last name of the person who consumed the certificate..",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "userName": {
          "description": "Application user who created the consumption.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "userNotes": {
          "description": "Any notes on the certificate entered at time of consumption.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        }
      }
    },
    "eCertificateGenerationType": {
      "description": "E-Certificates details.",
      "type": "object",
      "properties": {
        "generationDetail": {
          "description": "Reason for which e-certificate was generated.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "referenceValue": {
          "description": "Type of value that is in the certificate.valid values are membership_level.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ruleId": {
          "description": "Key to identify the generation rule id.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "eCertificateInfoType": {
      "description": "E-Certificates details.",
      "type": "object",
      "properties": {
        "awardCode": {
          "description": "Award type to which the certificate is linked to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "benefitSummary": {
          "description": "Summary of Benefits attached to this ECertificate.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "certificateType": {
          "description": "User defined certificate code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cost": {
          "description": "Cost of certificate.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "description": "Description about the certificate.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotels": {
          "description": "Hotel to which certificate is attached to.",
          "type": "object",
          "properties": {
            "code": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              }
            },
            "scope": {
              "description": "Scope of e-cert: global,single property or multi property.",
              "$ref": "#/definitions/eCertificateScopeType"
            }
          }
        },
        "label": {
          "description": "Label for the certificate.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "longDescription": {
          "description": "Detail description about the certificate.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "maxExtensionAllowed": {
          "description": "Number of times e-certificate can be extended.",
          "type": "integer"
        },
        "membershipType": {
          "description": "Membership type to which the certificate is linked to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "promotionCode": {
          "description": "Promotion code to which certificate is attached to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "usageCriteria": {
          "$ref": "#/definitions/eCertificateUsageCriteriaType"
        },
        "value": {
          "description": "Value of the certificate for the guest.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "voucherBenefitCode": {
          "description": "Voucher benefit code attached to the certificate.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "eCertificateIssueSourceType": {
      "description": "Indicates that OPERA E-Certificate is issued by external system.",
      "type": "string",
      "enum": [
        "Opera",
        "Web",
        "Interface"
      ]
    },
    "eCertificateIssueType": {
      "description": "Indicates that guest purchased OPERA E-Certificate.",
      "type": "string",
      "enum": [
        "Assigned",
        "OptedIn",
        "Purchased"
      ]
    },
    "eCertificateScopeType": {
      "description": "Indicates that OPERA E-Certificate is available for a specific list of hotels.",
      "type": "string",
      "enum": [
        "Global",
        "Hotel",
        "MultiHotel"
      ]
    },
    "eCertificateStatusType": {
      "description": "Indicates that OPERA E-Certificate is reserved.",
      "type": "string",
      "enum": [
        "Cancelled",
        "Consumed",
        "Deleted",
        "Expired",
        "Issued",
        "Reserved"
      ]
    },
    "eCertificateType": {
      "description": "E-Certificates details.",
      "type": "object",
      "properties": {
        "awardId": {
          "description": "AwardID.",
          "$ref": "#/definitions/awardId"
        },
        "awardPoints": {
          "description": "Award points if any in case of certificate use membership award.",
          "type": "integer"
        },
        "cancelRequestDate": {
          "description": "Date on which the cancellation was requested.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "certificateId": {
          "description": "System generated unique certificate id.",
          "type": "integer"
        },
        "certificateNo": {
          "description": "Printed certificate no. This has to be unique.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "consumptionDetail": {
          "$ref": "#/definitions/eCertificateConsumptionType"
        },
        "databaseId": {
          "description": "External reference from which the record is created.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "eCertificateInfo": {
          "$ref": "#/definitions/eCertificateInfoType"
        },
        "expiryDate": {
          "description": "Date of expiry.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "extensionCount": {
          "description": "Number of times e-certificate is already extended.",
          "type": "integer"
        },
        "generationDetail": {
          "$ref": "#/definitions/eCertificateGenerationType"
        },
        "inLieuSequence": {
          "description": "Seq of the in lieu of certificate. 1..n. original certificate will be treated as null = 0.",
          "type": "integer"
        },
        "inactiveDate": {
          "description": "Date the record was marked as inactive.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "issueDate": {
          "description": "Date when certificate was issued.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "issueType": {
          "description": "Process action issued the certificate. valid values are assigned (a),opt in (o) and purchased (p).",
          "$ref": "#/definitions/eCertificateIssueType"
        },
        "newExpiryDate": {
          "description": "New Date of expiry to extend e-certificate.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "originalCertificateNo": {
          "description": "In case of in lieu of certificate this will contain the original certificate no.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "originalVoucherNo": {
          "description": "In case of in lieu of certificate this will contain the original voucher no.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "printed": {
          "description": "Print status of the certificate.",
          "type": "boolean"
        },
        "profileId": {
          "description": "NameId.",
          "$ref": "#/definitions/profileId"
        },
        "source": {
          "description": "Source of e-certificate.",
          "$ref": "#/definitions/eCertificateIssueSourceType"
        },
        "status": {
          "description": "Status of the certificate.",
          "$ref": "#/definitions/eCertificateStatusType"
        },
        "voucherNo": {
          "description": "System generated unique voucher number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "eCertificateUsageCriteriaType": {
      "description": "E-Certificates details.",
      "type": "object",
      "properties": {
        "benefit": {
          "description": "Indicates to attach a rate code to the e-certificate as a benefit.",
          "type": "boolean"
        },
        "cancelAllowed": {
          "description": "Identify if cancel is allowed or not.",
          "type": "boolean"
        },
        "generateInLieuCertificate": {
          "description": "Identify if in lieu of certificate can be generated or not.",
          "type": "boolean"
        },
        "hotel": {
          "description": "Indicates if web certificate can be consumed in hotel.",
          "type": "boolean"
        },
        "reservation": {
          "description": "Indicates if certificate is to be used against reservation or not.",
          "type": "boolean"
        },
        "verifyCertificateNo": {
          "description": "Specify if the certificate number verification is required at time of consumption or not.",
          "type": "boolean"
        },
        "web": {
          "description": "Indicates if web certificate can be consumed in OWS.",
          "type": "boolean"
        },
        "webAllowed": {
          "description": "Indicates if certificate consumption allowable on the web.",
          "type": "boolean"
        }
      }
    },
    "eCertificatesType": {
      "description": "List of e-certificates for the profile.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eCertificateType"
      }
    },
    "emailInfoType": {
      "description": "Information on an email for the customer.",
      "type": "object",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "emailType": {
      "description": "Information on an email for the customer.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "errorInstance": {
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "title": "Error Instance Details",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "eventSpaceMaxOccupanciesType": {
      "description": "List of event space max occupancy.",
      "type": "array",
      "maxItems": 5,
      "items": {
        "type": "integer"
      }
    },
    "exceptionDetailType": {
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "title": "Error Detail",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "externalReferenceType": {
      "description": "This type contains unique information of external reference.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique ID of external reference.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "ID context for external reference.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "ID extension for external reference.",
          "type": "integer"
        }
      }
    },
    "externalReferencesType": {
      "description": "This type contains unique information of external reference.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/externalReferenceType"
      }
    },
    "facilityCodeType": {
      "description": "Facility Housekeeping Code, its description and quantity.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Facility code value.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Facility Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "quantity": {
          "description": "Signifies the quantity.",
          "type": "integer"
        }
      }
    },
    "facilityCodesType": {
      "description": "List of the facility codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/facilityCodeType"
      }
    },
    "facilityTaskType": {
      "description": "Information regarding facility task on a reservation.",
      "type": "object",
      "properties": {
        "date": {
          "description": "The Date on which the task is applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "supplies": {
          "description": "Supplies associated with the task.",
          "$ref": "#/definitions/facilityCodesType"
        },
        "task": {
          "description": "The Task Code.",
          "$ref": "#/definitions/housekeepingTaskCodeType"
        }
      }
    },
    "feeType": {
      "description": "Applicable service charges or fees.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "code": {
          "description": "Code identifying the fee (e.g.,agency fee, municipality fee).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "type": {
          "description": "Used to indicate if the amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).",
          "$ref": "#/definitions/amountDeterminationType"
        }
      }
    },
    "feesType": {
      "description": "A collection of fees or service charges.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "fee": {
          "description": "An individual fee or service charge.",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/feeType"
          }
        }
      }
    },
    "folioTextsType": {
      "description": "This stores the description for the type of tax calculation especially with tax exemption, etc.",
      "type": "array",
      "maxItems": 2,
      "items": {
        "type": "object",
        "properties": {
          "row": {
            "description": "Row number of the additional text.",
            "type": "integer"
          },
          "text": {
            "description": "Additional text field to display on the folio.",
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          }
        }
      }
    },
    "foreignExchangeType": {
      "description": "Foreign Exchange info.",
      "type": "object",
      "properties": {
        "effectiveDate": {
          "description": "Effective Exchange date for the foreign currency posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "Exchange Type for the postings.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "formattedTextTextType": {
      "description": "Provides text and indicates whether it is formatted or not.",
      "type": "object",
      "properties": {
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "futureListType": {
      "description": "A collection of reservation history details attached to Profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : Future reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "gdsNegotiatedInfoType": {
      "description": "This provides information for a channel negotiated rate.",
      "type": "object",
      "properties": {
        "accessCode": {
          "description": "The GDS negotiated rate code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "inactive": {
          "description": "The GDS Negotiated Rate is inactive or not",
          "type": "boolean"
        },
        "order": {
          "description": "The sell order.",
          "type": "integer"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "gdsNegotiatedType": {
      "description": "This holds a list of GdsNegotiatedInfoType.",
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "description": "Booking Channel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "channelRatePlanCode": {
          "description": "Channel Room Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "gdsNegotiatedInfoList": {
          "description": "List of channel negotiated rates for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/gdsNegotiatedInfoType"
          }
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "generalNoteType": {
      "description": "General note/information about the Hotel.",
      "type": "object",
      "properties": {
        "note": {
          "description": "The body of the note.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "title": {
          "description": "The note's title.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "generalNotesType": {
      "description": "Collection of general notes about the Hotel.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/generalNoteType"
      }
    },
    "genericHotelCodeCodeListType": {
      "description": "List of HotelCode and Code combinations.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/genericHotelCodeCodeType"
      }
    },
    "genericHotelCodeCodeType": {
      "description": "Generic Type to specify unique/primary id for the code. mostly used for Hotel level configuration codes removal request.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Configuration code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel where the code is configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "givenNameType": {
      "description": "Given name, first name or names",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "guestCountsType": {
      "description": "A collection of GuestCount by age group.",
      "type": "object",
      "properties": {
        "adults": {
          "description": "Defines the number of Adults.",
          "type": "integer"
        },
        "childAges": {
          "description": "Defines Children's Ages. Number of children ages mentioned may mot match with children counts.",
          "$ref": "#/definitions/childAgesType"
        },
        "childBuckets": {
          "description": "Defines children counts with Age Qualifying Group(Child Bucket#1) classification.",
          "$ref": "#/definitions/childBucketsType"
        },
        "children": {
          "description": "Defines the number of Children.",
          "type": "integer"
        }
      }
    },
    "guestHousekeepingServiceRequestType": {
      "description": "Possible values for the Guest Service Status.",
      "type": "string",
      "enum": [
        "DoNotDisturb",
        "MakeUpRoom",
        "NoStatusSelected"
      ]
    },
    "guestLastStayInfoType": {
      "description": "Contains last stay related details of the guest.",
      "type": "object",
      "properties": {
        "lastStayDate": {
          "description": "Guest's last stay date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastStayRate": {
          "description": "The Rate amount of the guest's last stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "lastStayRoom": {
          "description": "Room Number where the guest stayed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "totalStay": {
          "description": "The total number of previous stay of the guest.",
          "type": "integer"
        }
      }
    },
    "historyListType": {
      "description": "A collection of reservation history details attached to Profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : History reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "hotelAirportType": {
      "description": "Airport details of the Hotel",
      "type": "object",
      "properties": {
        "airportCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the airport",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "direction": {
          "description": "Directions from the airport to the Hotel.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "relativePosition": {
          "$ref": "#/definitions/relativePositionType"
        },
        "transportationList": {
          "description": "List of Transportation available from Airport to Hotel.",
          "$ref": "#/definitions/transportationCodeListType"
        }
      }
    },
    "hotelAirportsType": {
      "description": "Collection of Airport details of the Hotel",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelAirportType"
      }
    },
    "hotelAmenityType": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "displayOrder": {
          "type": "number"
        },
        "type": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "hotelAttractionType": {
      "description": "Information about the attractions near the hotel.",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address of the attraction.",
          "$ref": "#/definitions/addressType"
        },
        "class": {
          "description": "The class of the attraction.",
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "code": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "displaySeq": {
          "description": "Display sequence of the attraction.",
          "type": "integer"
        },
        "generalDirections": {
          "description": "Directions to the attraction from the hotel.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "name": {
          "description": "Attraction name for the hotel.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "operationHours": {
          "description": "Price range for the attraction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "priceRange": {
          "description": "Price range for the attraction.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "relativePosition": {
          "$ref": "#/definitions/relativePositionType"
        },
        "type": {
          "description": "The type of the attraction.",
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "website": {
          "description": "Website for the attraction.",
          "$ref": "#/definitions/uRLType"
        }
      }
    },
    "hotelAttractionsType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelAttractionType"
      }
    },
    "hotelBanquetSpaceType": {
      "description": "Defines the Banquet and Meeting Area of the Hotel",
      "type": "object",
      "properties": {
        "banquetArea": {
          "description": "Defines the BanquetArea of the Hotel",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "banquetSeats": {
          "type": "integer"
        },
        "meetingArea": {
          "description": "Defines the Meeting Area of the hotel",
          "type": "number"
        },
        "meetingRooms": {
          "type": "integer"
        },
        "unitOfMeasureCode": {
          "description": "The unit of measure in a code format.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "hotelBrochureDetails": {
      "description": "Response object for fetching Basic Property information.",
      "type": "object",
      "properties": {
        "hotelBrochure": {
          "$ref": "#/definitions/hotelBrochureType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelBrochureType": {
      "description": "Contains the basic configuration information about a Hotel.",
      "type": "object",
      "properties": {
        "accommodationDetails": {
          "description": "Accommodation Details of the hotel.",
          "type": "object",
          "properties": {
            "accessibleRooms": {
              "description": "The number of Accessible Rooms of the Hotel.",
              "type": "integer"
            },
            "connectingRooms": {
              "description": "The number of Connecting Rooms of the Hotel.",
              "type": "integer"
            },
            "doubleRooms": {
              "description": "The number of Double Rooms of the Hotel.",
              "type": "integer"
            },
            "executiveFloorNo": {
              "description": "The floor number of Executive Floors of the Hotel.",
              "type": "string",
              "maxLength": 1000,
              "minLength": 0
            },
            "familyRooms": {
              "description": "The number of Family Rooms of the Hotel.",
              "type": "integer"
            },
            "guestRoomElevators": {
              "description": "The number of Guest Room Elevators.",
              "type": "integer"
            },
            "guestRoomFloors": {
              "description": "The total number of the Guest Room Floors.",
              "type": "integer"
            },
            "maxAdultsInFamilyRoom": {
              "description": "Maximum Adults for Family Room Type.",
              "type": "integer"
            },
            "maxChildrenInFamilyRoom": {
              "description": "Maximum Children for Family Room Type.",
              "type": "integer"
            },
            "nonSmokingRooms": {
              "description": "The number of Non-Smoking Rooms of the Hotel.",
              "type": "integer"
            },
            "roomAmenties": {
              "description": "The information about the Room Amenities.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "shopDescription": {
              "description": "The Description of the shops in the Hotel.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "singleRooms": {
              "description": "The number of Single Rooms of the Hotel.",
              "type": "integer"
            },
            "suites": {
              "description": "The number of Suites of the Hotel.",
              "type": "integer"
            },
            "twinRooms": {
              "description": "The number of Twin Rooms of the Hotel.",
              "type": "integer"
            }
          }
        },
        "address": {
          "description": "Provides address information.",
          "type": "object",
          "properties": {
            "addressLine": {
              "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
              "type": "array",
              "maxItems": 4,
              "items": {
                "type": "string",
                "maxLength": 80,
                "minLength": 0
              }
            },
            "barCode": {
              "description": "The postal barcode for the address.",
              "type": "string",
              "maxLength": 100,
              "minLength": 0
            },
            "cityExtension": {
              "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "cityName": {
              "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "country": {
              "description": "Country name (e.g., Ireland).",
              "$ref": "#/definitions/countryNameType"
            },
            "county": {
              "description": "County or District Name (e.g., Fairfax). This is read only.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "createDateTime": {
              "description": "Time stamp of the creation.",
              "type": "string",
              "format": "date-time"
            },
            "creatorId": {
              "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
              "type": "string",
              "maxLength": 200,
              "minLength": 0
            },
            "isValidated": {
              "description": "Indicator to define if the Address is validated by the Address Validation System.",
              "type": "boolean"
            },
            "language": {
              "description": "Language identification.",
              "type": "string",
              "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
            },
            "lastModifierId": {
              "description": "Identifies the last software system or person to modify a record.",
              "type": "string",
              "maxLength": 200,
              "minLength": 0
            },
            "lastModifyDateTime": {
              "description": "Time stamp of last modification.",
              "type": "string",
              "format": "date-time"
            },
            "postalCode": {
              "description": "Post Office Code number.",
              "type": "string",
              "maxLength": 15,
              "minLength": 0
            },
            "primaryInd": {
              "description": "When true, indicates a primary information.",
              "type": "boolean"
            },
            "purgeDate": {
              "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "regionCode": {
              "description": "The region code of the hotel.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "state": {
              "description": "State or Province name (e.g., Texas).",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "type": {
              "description": "Defines the type of address (e.g. home, business, other).",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "typeDescription": {
              "description": "Describes the type code",
              "type": "string"
            },
            "updateReservations": {
              "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
              "type": "boolean"
            }
          }
        },
        "alternateHotels": {
          "description": "Informations about alternative hotels provided by the Hotel.",
          "$ref": "#/definitions/alternateHotelsType"
        },
        "attractions": {
          "description": "List of Attractions for the hotel.",
          "$ref": "#/definitions/hotelAttractionsType"
        },
        "baseLanguage": {
          "description": "The base language of the Hotel.",
          "$ref": "#/definitions/languageType"
        },
        "chainCode": {
          "description": "The code that identifies a hotel chain or management group. The hotel chain code is decided between vendors. This attribute is optional if the hotel is an independent property that can be identified by the HotelCode attribute.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "chainName": {
          "description": "The name of the hotel chain (e.g., Hilton, Marriott, Hyatt).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "communication": {
          "description": "Communication information of the hotel.",
          "type": "object",
          "properties": {
            "emailAddress": {
              "description": "Email address of the hotel.",
              "$ref": "#/definitions/basicEmailType"
            },
            "faxNumber": {
              "description": "Fax phone number of the hotel.",
              "$ref": "#/definitions/telephoneType"
            },
            "phoneNumber": {
              "description": "The direct dial phone number of the hotel.",
              "$ref": "#/definitions/telephoneType"
            },
            "tollFreeNumber": {
              "description": "Toll free phone number of the hotel.",
              "$ref": "#/definitions/telephoneType"
            },
            "webPage": {
              "description": "The web address of the hotel.",
              "$ref": "#/definitions/uRLType"
            }
          }
        },
        "currentTime": {
          "description": "The time when login hotel brochure.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "directions": {
          "description": "Instructions and direction to help reaching the Hotel.",
          "$ref": "#/definitions/directionsType"
        },
        "generalInformation": {
          "description": "General Information of the hotel.",
          "type": "object",
          "properties": {
            "baseLanguage": {
              "description": "The base language of the Hotel.",
              "$ref": "#/definitions/languageType"
            },
            "bedCount": {
              "description": "The total number of beds in the Hotel.",
              "type": "integer"
            },
            "checkInTime": {
              "description": "The official check in time of the Hotel.",
              "type": "string",
              "format": "date-time"
            },
            "checkOutTime": {
              "description": "The official check out time of the Hotel.",
              "type": "string",
              "format": "date-time"
            },
            "floorCount": {
              "description": "The total number of floors of the Hotel.",
              "type": "integer"
            },
            "hotelInfoWebsite": {
              "description": "URL where property information is located.",
              "$ref": "#/definitions/uRLType"
            },
            "hotelType": {
              "description": "The type of the Hotel.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "latitude": {
              "description": "Latitude of the hotel.",
              "type": "number"
            },
            "longitude": {
              "description": "Longitude of the hotel.",
              "type": "number"
            },
            "roomCount": {
              "description": "The total number of rooms in the Hotel.",
              "type": "integer"
            }
          }
        },
        "generalNotes": {
          "description": "General Notes provided about the Hotel.",
          "$ref": "#/definitions/generalNotesType"
        },
        "hotelAirports": {
          "description": "Informations about different airports near by.",
          "$ref": "#/definitions/hotelAirportsType"
        },
        "hotelAttractions": {
          "description": "Information about attractive places that can be found around the Hotel.",
          "$ref": "#/definitions/hotelAttractionsType"
        },
        "hotelCityCode": {
          "description": "The IATA city code; for example DCA, ORD.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelCodeContext": {
          "description": "A text field used to communicate the context (or source of - ex Sabre, Galileo, Worldspan, Amadeus) the HotelReferenceGroup codes.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelConferenceFacilities": {
          "description": "Information about the conference rooms in the Hotel.",
          "$ref": "#/definitions/hotelConferenceFacilitiesType"
        },
        "hotelContacts": {
          "description": "The contacts information the hotels.",
          "$ref": "#/definitions/hotelContactsType"
        },
        "hotelCorporateInformations": {
          "$ref": "#/definitions/hotelCorporateInformationsType"
        },
        "hotelEventSpaces": {
          "description": "Even Space information of the hotel.",
          "$ref": "#/definitions/hotelEventSpacesType"
        },
        "hotelFeatures": {
          "description": "Lists of features provided by the Hotel",
          "$ref": "#/definitions/hotelFeaturesType"
        },
        "hotelId": {
          "description": "The code that uniquely identifies a single hotel property. The hotel code is decided between vendors.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelMiscellaneousInformation": {
          "description": "General user defined information provided about the Hotel.",
          "$ref": "#/definitions/hotelUserDefinedFieldsType"
        },
        "hotelName": {
          "description": "A text field used to communicate the proper name of the hotel.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "hotelNotes": {
          "description": "List of notes for the hotel.",
          "$ref": "#/definitions/hotelNotesType"
        },
        "hotelPackages": {
          "description": "Packages and offers offered by the Hotel.",
          "$ref": "#/definitions/hotelPackagesType"
        },
        "hotelRateRanges": {
          "description": "The rate ranges which are offered by the hotels.",
          "$ref": "#/definitions/hotelRateRangesType"
        },
        "hotelRestaurants": {
          "description": "Names of restaurants which can be found in the Hotel.",
          "$ref": "#/definitions/hotelRestaurantsType"
        },
        "hotelTransportations": {
          "description": "List of different transportation companies around the Hotel.",
          "$ref": "#/definitions/hotelTransportationsType"
        },
        "meetingRooms": {
          "description": "List of Meeting Rooms for the hotel.",
          "$ref": "#/definitions/meetingRoomsType"
        },
        "primaryDetails": {
          "description": "Primary Information of the hotel.",
          "type": "object",
          "properties": {
            "legalOwner": {
              "description": "Legal owner of the hotel.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            }
          }
        },
        "propertyControls": {
          "description": "Property controls information configuration of the hotel.",
          "type": "object",
          "properties": {
            "applicationMode": {
              "description": "Application Mode information configuration of the hotel.",
              "type": "object",
              "properties": {
                "configurationMode": {
                  "description": "The hotel's configuration mode if applicable.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "countryMode": {
                  "description": "The hotel's country code.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "expHotelCode": {
                  "description": "Hotel Code used for third party exports.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "mbsSupported": {
                  "description": "Indicates if the hotel uses MBS (Marriott Business Services).",
                  "type": "boolean"
                },
                "touristNumber": {
                  "description": "The Tourist Number of the hotel.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                }
              }
            },
            "cateringCurrencyFormatting": {
              "description": "Catering Currency Formatting information configuration of the hotel.",
              "type": "object",
              "properties": {
                "currencyCode": {
                  "description": "The base currency code for this hotel..",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "currencyFormat": {
                  "description": "Format for the local currency.",
                  "type": "string",
                  "maxLength": 80,
                  "minLength": 0
                }
              }
            },
            "currencyFormatting": {
              "description": "Currency Formatting information configuration of the hotel.",
              "type": "object",
              "properties": {
                "currencyCode": {
                  "description": "The base currency code for this hotel..",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "currencyFormat": {
                  "description": "Format for the local currency.",
                  "type": "string",
                  "maxLength": 80,
                  "minLength": 0
                },
                "currencySymbol": {
                  "description": "Symbol to designate the default currency of the hotel.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "decimalPositions": {
                  "description": "Number of decimal positions used for this currency type.",
                  "type": "integer"
                }
              }
            },
            "dateTimeFormatting": {
              "description": "Date Time Formatting information configuration of the hotel",
              "type": "object",
              "properties": {
                "longDateFormat": {
                  "description": "Long date format of the hotel.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "shortDateFormat": {
                  "description": "Short date format of the hotel.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "timeFormat": {
                  "description": "Time format for the hotel.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "timeZoneRegion": {
                  "description": "Time zone region of the hotel.",
                  "type": "string",
                  "maxLength": 80,
                  "minLength": 0
                }
              }
            },
            "sellControls": {
              "description": "The sell controls information configuration of the hotel.",
              "type": "object",
              "properties": {
                "endDate": {
                  "description": "The end date of the hotel.",
                  "type": "string",
                  "format": "date",
                  "maxLength": 8
                },
                "hotelId": {
                  "description": "The hotel code.",
                  "type": "string",
                  "maxLength": 80,
                  "minLength": 0
                },
                "startDate": {
                  "description": "Date when the hotel become valid for use.",
                  "type": "string",
                  "format": "date",
                  "maxLength": 8
                }
              }
            }
          }
        }
      }
    },
    "hotelCalendarDayType": {
      "description": "Details of calendar entries for a specific day for a specific hotel.",
      "type": "object",
      "properties": {
        "date": {
          "description": "Indicates a specific hotel for which the calendar is being represented.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "dayType": {
          "description": "Details of Day Type of that calendar day.",
          "$ref": "#/definitions/hotelCalendarDayTypeType"
        },
        "events": {
          "description": "Details of an event on that calendar day.",
          "$ref": "#/definitions/hotelCalendarEventsType"
        }
      }
    },
    "hotelCalendarDayTypeType": {
      "description": "Details of Day Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Day Type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "color": {
          "description": "Associated color for the selected Day Type.",
          "$ref": "#/definitions/colorType"
        },
        "description": {
          "description": "Description of the Day Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "hotelCalendarDetails": {
      "description": "Response object for fetching calendar entries for a hotel.",
      "type": "object",
      "properties": {
        "hotelCalendar": {
          "description": "Collection of hotel level calendar entries.",
          "$ref": "#/definitions/hotelCalendarType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelCalendarEventType": {
      "description": "Details of event.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code for a specific event.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description for a specific event.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "hotelCalendarEventsType": {
      "description": "Details of hotel events",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelCalendarEventType"
      }
    },
    "hotelCalendarType": {
      "description": "Represents the calendar with individual days having corresponding entries (day type, event, etc.) for a hotel.",
      "type": "object",
      "properties": {
        "calendarDay": {
          "description": "Entries for a specific calendar day.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelCalendarDayType"
          }
        },
        "hotelId": {
          "description": "Indicates a specific hotel for which the calendar is being represented.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "hotelCategoriesCriteria": {
      "description": "Request object for creating Hotel Categories.",
      "type": "object",
      "properties": {
        "hotelCategories": {
          "description": "Hotel Categories to be created.",
          "$ref": "#/definitions/hotelCategoriesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelCategoriesDetails": {
      "description": "Response object for fetching Hotel Categories.",
      "type": "object",
      "properties": {
        "hotelCategories": {
          "description": "Collection of Hotel Categories.",
          "$ref": "#/definitions/hotelCategoriesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelCategoriesToBeChanged": {
      "description": "Request object for changing Hotel Categories.",
      "type": "object",
      "properties": {
        "hotelCategories": {
          "description": "Hotel Categories to be changed.",
          "$ref": "#/definitions/hotelCategoriesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelCategoriesType": {
      "description": "List of Hotel Categories.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelCategoryType"
      }
    },
    "hotelCategoryType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "hotelCodeListType": {
      "description": "Hotel code.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "maxLength": 20,
        "minLength": 0
      }
    },
    "hotelConferenceFacilitiesType": {
      "type": "object",
      "properties": {
        "hotelBanquetSpace": {
          "description": "Banquet Space of the hotel.",
          "$ref": "#/definitions/hotelBanquetSpaceType"
        },
        "hotelConferenceRooms": {
          "description": "Conference Rooms of the Hotel.",
          "$ref": "#/definitions/hotelConferenceRoomsType"
        }
      }
    },
    "hotelConferenceRoomType": {
      "description": "Information about the Conference rooms in the hotel.",
      "type": "object",
      "properties": {
        "roomCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomName": {
          "description": "The name of the Restaurant.",
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        },
        "roomType": {
          "description": "The Type of Restaurant.",
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        }
      }
    },
    "hotelConferenceRoomsType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelConferenceRoomType"
      }
    },
    "hotelContactRoleType": {
      "description": "The contact's role in the hotel. Possible values are Lead, General, and Contract.",
      "type": "string",
      "enum": [
        "Lead",
        "General",
        "Contract"
      ]
    },
    "hotelContactRolesType": {
      "description": "Lists of HotelContactRoles of the hotel.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelContactRoleType"
      }
    },
    "hotelContactType": {
      "description": "Contact identification details.",
      "type": "object",
      "properties": {
        "communicationAddress": {
          "description": "Details about the preferred communication method. Example: email address, fax number, etc.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "communicationMethod": {
          "description": "The preferred method of communication for the contact.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "The code of the hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "name": {
          "description": "Name of the hotel contact.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "nameId": {
          "description": "Contact or employee identifier..",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "ownerCode": {
          "description": "The contact's code in the hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "primary": {
          "description": "Primary flag.",
          "type": "boolean"
        },
        "roles": {
          "description": "List of HotelContactType.",
          "$ref": "#/definitions/hotelContactRolesType"
        }
      }
    },
    "hotelContactsCriteria": {
      "description": "Request object for creating new Contacts for hotels.",
      "type": "object",
      "properties": {
        "hotelContacts": {
          "description": "Collection of hotel contacts to be created.",
          "$ref": "#/definitions/hotelContactsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelContactsToBeChanged": {
      "description": "Request object for changing hotel Contacts for hotels.",
      "type": "object",
      "properties": {
        "hotelContacts": {
          "description": "Collection of Contacts to be modified.",
          "$ref": "#/definitions/hotelContactsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelContactsType": {
      "description": "Lists of contacts of the hotel.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelContactType"
      }
    },
    "hotelCorporateInformationsType": {
      "description": "Corporate information details of the property",
      "type": "object",
      "properties": {
        "brandCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "businessUnit": {
          "$ref": "#/definitions/primaryCodesType"
        },
        "departmentCode": {
          "$ref": "#/definitions/primaryCodesType"
        },
        "division": {
          "$ref": "#/definitions/primaryCodesType"
        },
        "hotelCategory": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "opertingUnit": {
          "$ref": "#/definitions/primaryCodesType"
        }
      }
    },
    "hotelDayTypeCodeType": {
      "description": "Base structure for Day Type Code at both template and hotel levels.",
      "type": "object",
      "properties": {
        "adder": {
          "description": "Value that will be added to rate on a day.",
          "type": "number"
        },
        "code": {
          "description": "Code of a Day Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "color": {
          "description": "Color used to represent Day Type.",
          "$ref": "#/definitions/colorType"
        },
        "description": {
          "description": "Description of a Day Type.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "hotel": {
          "description": "Hotel code to which the Day Type is associated.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "multiplier": {
          "description": "Value by which the rates will be multiplied on a day.",
          "type": "number"
        },
        "sellSequence": {
          "description": "Sell sequence for a Day Type.",
          "type": "number"
        }
      }
    },
    "hotelDayTypeCodesCriteria": {
      "description": "Request object for creating new day type codes for a hotel.",
      "type": "object",
      "properties": {
        "hotelDayTypeCodes": {
          "description": "Collection of hotel day type codes to be created.",
          "$ref": "#/definitions/hotelDayTypeCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelDayTypeCodesDetails": {
      "description": "Response object for fetching day type codes for a hotel.",
      "type": "object",
      "properties": {
        "hotelDayTypeCodes": {
          "description": "Collection of hotel level day type codes.",
          "$ref": "#/definitions/hotelDayTypeCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelDayTypeCodesToBeChanged": {
      "description": "Request object for modifying day type codes for a hotel.",
      "type": "object",
      "properties": {
        "hotelDayTypeCodes": {
          "description": "Collection of hotel day type codes to be changed.",
          "$ref": "#/definitions/hotelDayTypeCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelDayTypeCodesType": {
      "description": "Details for day type code at hotel level.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelDayTypeCodeType"
      }
    },
    "hotelDayTypeType": {
      "description": "Details of Day Type to be used to set day types for a hotel.",
      "type": "object",
      "properties": {
        "dateRange": {
          "description": "Date Range with days of week where the range update has to be applied.",
          "$ref": "#/definitions/timeSpanDaysOfWeekType"
        },
        "dayTypeCode": {
          "description": "Day type code selected.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Day type code selected.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "hotelDayTypesType": {
      "description": "Collection of type details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelDayTypeType"
      }
    },
    "hotelDetailType": {
      "description": "Base details used for storing information about a hotel detail.",
      "type": "object",
      "properties": {
        "category": {
          "description": "Specifies the hotel detail category.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "code": {
          "description": "Specifies the hotel detail code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Specifies the hotel detail description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelDetailValues": {
          "description": "Collection of values which are associated with the hotel detail.",
          "$ref": "#/definitions/hotelDetailValuesType"
        },
        "hotelId": {
          "description": "Specifies the hotel code of the hotel detail.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sequence": {
          "description": "Specifies the sorting sequence number for the hotel detail.",
          "type": "integer"
        }
      }
    },
    "hotelDetailValueType": {
      "description": "This type holds the base information of the hotel detail value which will be associated with a hotel detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Specifies the hotel detail value code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Specifies the description of the hotel detail value.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "newCode": {
          "description": "Specifies the new hotel detail value code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sequence": {
          "description": "Specifies the sorting sequence number for the hotel detail value.",
          "type": "integer"
        }
      }
    },
    "hotelDetailValuesType": {
      "description": "Collection of property level hotel detail values.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelDetailValueType"
      }
    },
    "hotelDetails": {
      "description": "Response object for fetching Property configuration information.",
      "type": "object",
      "properties": {
        "hotelConfigInfo": {
          "description": "Hotel configuration information.",
          "$ref": "#/definitions/hotelInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "masterInfoList": {
          "description": "Refer to Generic common types document.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelDetailsDetails": {
      "description": "Response object for fetching hotel details at the property level.",
      "type": "object",
      "properties": {
        "hotelDetails": {
          "description": "Collection of hotel details specified at the property level.",
          "$ref": "#/definitions/hotelDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelDetailsType": {
      "description": "Collection of property level hotel details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelDetailType"
      }
    },
    "hotelEventCodeType": {
      "description": "Details of Event to be used to set events for a hotel.",
      "type": "object",
      "properties": {
        "dateRange": {
          "description": "Date Range with days of week where the range update has to be applied.",
          "$ref": "#/definitions/timeSpanDaysOfWeekType"
        },
        "eventCode": {
          "description": "Event code selected.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the hotel for which the events are being set.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "hotelEventCodesType": {
      "description": "Collection of hotel events.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelEventCodeType"
      }
    },
    "hotelEventSpaceDetailType": {
      "description": "The detail info of hotel event space",
      "type": "object",
      "properties": {
        "code": {
          "description": "The code of hotel event space.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Th description of the hotel event space",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "maxCapacity": {
          "description": "Th max capacity of the hotel event space",
          "type": "integer"
        },
        "maxOccupancies": {
          "description": "List of max occupancies of the event space based on the setup code.",
          "$ref": "#/definitions/eventSpaceMaxOccupanciesType"
        }
      }
    },
    "hotelEventSpaceDetailsType": {
      "description": "List of detail info of hotel event space",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelEventSpaceDetailType"
      }
    },
    "hotelEventSpaceSummariesType": {
      "description": "List of summary info of hotel event space",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelEventSpaceSummaryType"
      }
    },
    "hotelEventSpaceSummaryType": {
      "description": "The summary info of hotel event space",
      "type": "object",
      "properties": {
        "maxCapacity": {
          "description": "The max capacity of this event space group",
          "type": "integer"
        },
        "maxOccupancies": {
          "description": "List of max occupancies of the event space based on the setup code.",
          "$ref": "#/definitions/eventSpaceMaxOccupanciesType"
        },
        "no": {
          "description": "The total event space number which has the same space type, max capacity and setup style.",
          "type": "integer"
        },
        "spaceType": {
          "description": "The type of the event space",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "hotelEventSpacesType": {
      "description": "The Detail and Summary info of event space about the hotel",
      "type": "object",
      "properties": {
        "eventSpaceDetails": {
          "description": "Even Space Detail information of the hotel.",
          "$ref": "#/definitions/hotelEventSpaceDetailsType"
        },
        "eventSpaceSummaries": {
          "description": "Event Space Summary information of the hotel.",
          "$ref": "#/definitions/hotelEventSpaceSummariesType"
        },
        "setupStyles": {
          "description": "List of hotel setup style codes of the hotel.",
          "$ref": "#/definitions/hotelSetupStylesType"
        }
      }
    },
    "hotelFeatureType": {
      "description": "Base details used for amenities.",
      "type": "object",
      "properties": {
        "comments": {
          "description": "The comments about amenity of the hotel.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "description": {
          "description": "The description about amenity of the hotel.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "featureCode": {
          "description": "Specifies the feature code (aka amenity code).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hours": {
          "description": "The hours of operation of the amenity in the hotel.",
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "priceRange": {
          "description": "The price range of the amenity in the hotel.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "hotelFeaturesType": {
      "description": "Collection of Features in the Hotel",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelFeatureType"
      }
    },
    "hotelInfoType": {
      "description": "Contains the basic configuration information about a Hotel.",
      "type": "object",
      "properties": {
        "accommodationDetails": {
          "description": "Accommodation Details of the hotel.",
          "type": "object",
          "properties": {
            "accessibleRooms": {
              "description": "The number of Accessible Rooms of the Hotel.",
              "type": "integer"
            },
            "connectingRooms": {
              "description": "The number of Connecting Rooms of the Hotel.",
              "type": "integer"
            },
            "doubleRooms": {
              "description": "The number of Double Rooms of the Hotel.",
              "type": "integer"
            },
            "executiveFloorNo": {
              "description": "The floor number of Executive Floors of the Hotel.",
              "type": "string",
              "maxLength": 1000,
              "minLength": 0
            },
            "familyRooms": {
              "description": "The number of Family Rooms of the Hotel.",
              "type": "integer"
            },
            "guestRoomElevators": {
              "description": "The number of Guest Room Elevators.",
              "type": "integer"
            },
            "guestRoomFloors": {
              "description": "The total number of the Guest Room Floors.",
              "type": "integer"
            },
            "maxAdultsInFamilyRoom": {
              "description": "Maximum Adults for Family Room Type.",
              "type": "integer"
            },
            "maxChildrenInFamilyRoom": {
              "description": "Maximum Children for Family Room Type.",
              "type": "integer"
            },
            "nonSmokingRooms": {
              "description": "The number of Non-Smoking Rooms of the Hotel.",
              "type": "integer"
            },
            "roomAmenties": {
              "description": "The information about the Room Amenities.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "shopDescription": {
              "description": "The Description of the shops in the Hotel.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "singleRooms": {
              "description": "The number of Single Rooms of the Hotel.",
              "type": "integer"
            },
            "suites": {
              "description": "The number of Suites of the Hotel.",
              "type": "integer"
            },
            "twinRooms": {
              "description": "The number of Twin Rooms of the Hotel.",
              "type": "integer"
            }
          }
        },
        "address": {
          "description": "Provides address information.",
          "type": "object",
          "properties": {
            "addressLine": {
              "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
              "type": "array",
              "maxItems": 4,
              "items": {
                "type": "string",
                "maxLength": 80,
                "minLength": 0
              }
            },
            "barCode": {
              "description": "The postal barcode for the address.",
              "type": "string",
              "maxLength": 100,
              "minLength": 0
            },
            "cityExtension": {
              "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "cityName": {
              "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "country": {
              "description": "Country name (e.g., Ireland).",
              "$ref": "#/definitions/countryNameType"
            },
            "county": {
              "description": "County or District Name (e.g., Fairfax). This is read only.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "createDateTime": {
              "description": "Time stamp of the creation.",
              "type": "string",
              "format": "date-time"
            },
            "creatorId": {
              "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
              "type": "string",
              "maxLength": 200,
              "minLength": 0
            },
            "isValidated": {
              "description": "Indicator to define if the Address is validated by the Address Validation System.",
              "type": "boolean"
            },
            "language": {
              "description": "Language identification.",
              "type": "string",
              "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
            },
            "lastModifierId": {
              "description": "Identifies the last software system or person to modify a record.",
              "type": "string",
              "maxLength": 200,
              "minLength": 0
            },
            "lastModifyDateTime": {
              "description": "Time stamp of last modification.",
              "type": "string",
              "format": "date-time"
            },
            "postalCode": {
              "description": "Post Office Code number.",
              "type": "string",
              "maxLength": 15,
              "minLength": 0
            },
            "primaryInd": {
              "description": "When true, indicates a primary information.",
              "type": "boolean"
            },
            "purgeDate": {
              "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "regionCode": {
              "description": "The region code of the hotel.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "state": {
              "description": "State or Province name (e.g., Texas).",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "type": {
              "description": "Defines the type of address (e.g. home, business, other).",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "typeDescription": {
              "description": "Describes the type code",
              "type": "string"
            },
            "updateReservations": {
              "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
              "type": "boolean"
            }
          }
        },
        "alternateHotels": {
          "description": "Informations about alternative hotels provided by the Hotel.",
          "$ref": "#/definitions/alternateHotelsType"
        },
        "attractions": {
          "description": "List of Attractions for the hotel.",
          "$ref": "#/definitions/hotelAttractionsType"
        },
        "chainCode": {
          "description": "The code that identifies a hotel chain or management group. The hotel chain code is decided between vendors. This attribute is optional if the hotel is an independent property that can be identified by the HotelCode attribute.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "chainName": {
          "description": "The name of the hotel chain (e.g., Hilton, Marriott, Hyatt).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "communication": {
          "description": "Communication information of the hotel.",
          "type": "object",
          "properties": {
            "emailAddress": {
              "description": "Email address of the hotel.",
              "$ref": "#/definitions/basicEmailType"
            },
            "faxNumber": {
              "description": "Fax phone number of the hotel.",
              "$ref": "#/definitions/telephoneType"
            },
            "phoneNumber": {
              "description": "The direct dial phone number of the hotel.",
              "$ref": "#/definitions/telephoneType"
            },
            "tollFreeNumber": {
              "description": "Toll free phone number of the hotel.",
              "$ref": "#/definitions/telephoneType"
            },
            "webPage": {
              "description": "The web address of the hotel.",
              "$ref": "#/definitions/uRLType"
            }
          }
        },
        "generalInformation": {
          "description": "General Information of the hotel.",
          "type": "object",
          "properties": {
            "baseLanguage": {
              "description": "The base language of the Hotel.",
              "$ref": "#/definitions/languageType"
            },
            "bedCount": {
              "description": "The total number of beds in the Hotel.",
              "type": "integer"
            },
            "checkInTime": {
              "description": "The official check in time of the Hotel.",
              "type": "string",
              "format": "date-time"
            },
            "checkOutTime": {
              "description": "The official check out time of the Hotel.",
              "type": "string",
              "format": "date-time"
            },
            "floorCount": {
              "description": "The total number of floors of the Hotel.",
              "type": "integer"
            },
            "hotelInfoWebsite": {
              "description": "URL where property information is located.",
              "$ref": "#/definitions/uRLType"
            },
            "hotelType": {
              "description": "The type of the Hotel.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "latitude": {
              "description": "Latitude of the hotel.",
              "type": "number"
            },
            "longitude": {
              "description": "Longitude of the hotel.",
              "type": "number"
            },
            "roomCount": {
              "description": "The total number of rooms in the Hotel.",
              "type": "integer"
            }
          }
        },
        "hotelCityCode": {
          "description": "The IATA city code; for example DCA, ORD.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelCodeContext": {
          "description": "A text field used to communicate the context (or source of - ex Sabre, Galileo, Worldspan, Amadeus) the HotelReferenceGroup codes.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelContacts": {
          "description": "The contacts information the hotels.",
          "$ref": "#/definitions/hotelContactsType"
        },
        "hotelCorporateInformations": {
          "$ref": "#/definitions/hotelCorporateInformationsType"
        },
        "hotelEventSpaces": {
          "description": "Even Space information of the hotel.",
          "$ref": "#/definitions/hotelEventSpacesType"
        },
        "hotelId": {
          "description": "The code that uniquely identifies a single hotel property. The hotel code is decided between vendors.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelName": {
          "description": "A text field used to communicate the proper name of the hotel.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "hotelNotes": {
          "description": "List of notes for the hotel.",
          "$ref": "#/definitions/hotelNotesType"
        },
        "hotelRateRanges": {
          "description": "The rate ranges which are offered by the hotels.",
          "$ref": "#/definitions/hotelRateRangesType"
        },
        "hotelRestaurants": {
          "description": "Names of restaurants which can be found in the Hotel.",
          "$ref": "#/definitions/hotelRestaurantsType"
        },
        "meetingRooms": {
          "description": "List of Meeting Rooms for the hotel.",
          "$ref": "#/definitions/meetingRoomsType"
        },
        "primaryDetails": {
          "description": "Primary Information of the hotel.",
          "type": "object",
          "properties": {
            "legalOwner": {
              "description": "Legal owner of the hotel.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            }
          }
        },
        "propertyControls": {
          "description": "Property controls information configuration of the hotel.",
          "type": "object",
          "properties": {
            "applicationMode": {
              "description": "Application Mode information configuration of the hotel.",
              "type": "object",
              "properties": {
                "configurationMode": {
                  "description": "The hotel's configuration mode if applicable.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "countryMode": {
                  "description": "The hotel's country code.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "expHotelCode": {
                  "description": "Hotel Code used for third party exports.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "mbsSupported": {
                  "description": "Indicates if the hotel uses MBS (Marriott Business Services).",
                  "type": "boolean"
                },
                "touristNumber": {
                  "description": "The Tourist Number of the hotel.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                }
              }
            },
            "cateringCurrencyFormatting": {
              "description": "Catering Currency Formatting information configuration of the hotel.",
              "type": "object",
              "properties": {
                "currencyCode": {
                  "description": "The base currency code for this hotel..",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "currencyFormat": {
                  "description": "Format for the local currency.",
                  "type": "string",
                  "maxLength": 80,
                  "minLength": 0
                }
              }
            },
            "currencyFormatting": {
              "description": "Currency Formatting information configuration of the hotel.",
              "type": "object",
              "properties": {
                "currencyCode": {
                  "description": "The base currency code for this hotel..",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "currencyFormat": {
                  "description": "Format for the local currency.",
                  "type": "string",
                  "maxLength": 80,
                  "minLength": 0
                },
                "currencySymbol": {
                  "description": "Symbol to designate the default currency of the hotel.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "decimalPositions": {
                  "description": "Number of decimal positions used for this currency type.",
                  "type": "integer"
                }
              }
            },
            "dateTimeFormatting": {
              "description": "Date Time Formatting information configuration of the hotel",
              "type": "object",
              "properties": {
                "longDateFormat": {
                  "description": "Long date format of the hotel.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "shortDateFormat": {
                  "description": "Short date format of the hotel.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "timeFormat": {
                  "description": "Time format for the hotel.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "timeZoneRegion": {
                  "description": "Time zone region of the hotel.",
                  "type": "string",
                  "maxLength": 80,
                  "minLength": 0
                }
              }
            },
            "sellControls": {
              "description": "The sell controls information configuration of the hotel.",
              "type": "object",
              "properties": {
                "endDate": {
                  "description": "The end date of the hotel.",
                  "type": "string",
                  "format": "date",
                  "maxLength": 8
                },
                "hotelId": {
                  "description": "The hotel code.",
                  "type": "string",
                  "maxLength": 80,
                  "minLength": 0
                },
                "startDate": {
                  "description": "Date when the hotel become valid for use.",
                  "type": "string",
                  "format": "date",
                  "maxLength": 8
                }
              }
            }
          }
        }
      }
    },
    "hotelInterfaceStatusType": {
      "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
      "type": "string",
      "enum": [
        "Stopped",
        "Running",
        "Waiting",
        "StopInitiated",
        "StartInitiated",
        "RebootInitiated",
        "Other"
      ]
    },
    "hotelInterfaceType": {
      "type": "object",
      "properties": {
        "activeFlag": {
          "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "interfaceId": {
          "description": "Unique DB internal number of a Hotel Interface record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "interfaceName": {
          "description": "Name of the Hotel Interface",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "interfaceType": {
          "description": "Three letter code for each interface that identifies the interface.",
          "$ref": "#/definitions/hotelInterfaceTypeType"
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "machineName": {
          "description": "Unique machine name of the running IFC.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "status": {
          "description": "The current status of the IFC.",
          "$ref": "#/definitions/hotelInterfaceStatusType"
        }
      }
    },
    "hotelInterfaceTypeType": {
      "description": "XML Posting Interface",
      "type": "string",
      "enum": [
        "Bms",
        "Cas",
        "Ccw",
        "Dls",
        "Eft",
        "Exp",
        "Mak",
        "Mbs",
        "Msc",
        "Pbx",
        "Pos",
        "Svs",
        "Tik",
        "Vid",
        "Vms",
        "Www",
        "Xml"
      ]
    },
    "hotelNotesCriteria": {
      "description": "Request object for creating new Notes for the hotels",
      "type": "object",
      "properties": {
        "hotelNotes": {
          "description": "Collection of hotel notes to be created.",
          "$ref": "#/definitions/hotelNotesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelNotesToBeChanged": {
      "description": "Request object for changing hotel Notes for hotels.",
      "type": "object",
      "properties": {
        "hotelNotes": {
          "description": "Collection of Hotel Notes to be modified.",
          "$ref": "#/definitions/hotelNotesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelNotesType": {
      "description": "List of Notes of the hotel.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commentInfoType"
      }
    },
    "hotelPackageType": {
      "description": "Information about the packages of the hotel.",
      "type": "object",
      "properties": {
        "beginDate": {
          "description": "The begin date of the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "The end date of the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "packageCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "packageName": {
          "description": "The name of the package.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "packagePrice": {
          "description": "The price of the package.",
          "type": "number"
        },
        "pointsRequired": {
          "description": "Indicates the required membership points for the package.",
          "type": "number"
        },
        "rateCode": {
          "description": "Indicates the rate code for the package.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "hotelPackagesType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelPackageType"
      }
    },
    "hotelRateRangeType": {
      "description": "The rate rage information of the hotel.",
      "type": "object",
      "properties": {
        "currencyCode": {
          "description": "The base currency code for rate range(The currency code used by the hotel which the rate range belongs to).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "maxRate": {
          "description": "Maximum Rate offered by the hotel.",
          "type": "number"
        },
        "minRate": {
          "description": "Minimum Rate offered by the hotel.",
          "type": "number"
        },
        "timeSpan": {
          "description": "The Start Date and End Date of the Hotel rate range.",
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "hotelRateRangesCriteria": {
      "description": "Request object for creating new Rate Ranges for hotels.",
      "type": "object",
      "properties": {
        "hotelRateRanges": {
          "description": "Collection of Rate Range to be created.",
          "$ref": "#/definitions/hotelRateRangesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelRateRangesToBeChanged": {
      "description": "Request object for changing hotel Rate Ranges for hotels.",
      "type": "object",
      "properties": {
        "hotelRateRanges": {
          "description": "Collection of Rate Ranges to be modified.",
          "$ref": "#/definitions/hotelRateRangesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelRateRangesType": {
      "description": "Lists of rate ranges of the hotel.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelRateRangeType"
      }
    },
    "hotelRestaurantType": {
      "description": "Information about the Restaurants in the hotel.",
      "type": "object",
      "properties": {
        "category": {
          "description": "The category that the Restaurant belongs to.",
          "$ref": "#/definitions/restaurantCategoryType"
        },
        "comments": {
          "description": "Comments about the Restaurant.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hours": {
          "description": "The Hours of Operation of the Restaurant.",
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        },
        "newRestaurantCode": {
          "description": "The new Restaurant Code which is used in the change method.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "orderBy": {
          "type": "integer"
        },
        "priceRange": {
          "description": "The price range of the Restaurant.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "restaurantCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "restaurantName": {
          "description": "The name of the Restaurant.",
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        },
        "restaurantType": {
          "description": "The Type of Restaurant.",
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        },
        "timeSpan": {
          "description": "The Start Date and End Date of the Restaurant.",
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "hotelRestaurantsCriteria": {
      "description": "Request object for creating new restaurants for hotels.",
      "type": "object",
      "properties": {
        "hotelRestaurants": {
          "description": "Collection of restaurants to be created.",
          "$ref": "#/definitions/hotelRestaurantsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelRestaurantsToBeChanged": {
      "description": "Request object for changing hotel restaurants for hotels.",
      "type": "object",
      "properties": {
        "hotelRestaurants": {
          "description": "Collection of restaurants to be modified.",
          "$ref": "#/definitions/hotelRestaurantsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelRestaurantsType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelRestaurantType"
      }
    },
    "hotelSetupStylesType": {
      "description": "List of event space setup style codes.",
      "type": "array",
      "maxItems": 5,
      "items": {
        "type": "string",
        "maxLength": 20,
        "minLength": 0
      }
    },
    "hotelSummaryType": {
      "description": "A brief summary of information about a hotel.",
      "type": "object",
      "properties": {
        "activeDate": {
          "description": "Date when the hotel becomes valid for use.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "chainCode": {
          "description": "Hotels Chain Code. This attribute uniquely assign Hotel to a single chain.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code identifying the hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelName": {
          "description": "The name of the hotel.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "inactiveDate": {
          "description": "Date when the hotel becomes invalid for use.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "hotelTransportationType": {
      "description": "Information about the transportations of the hotel.",
      "type": "object",
      "properties": {
        "comments": {
          "description": "Comments about the transportation.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "description": {
          "description": "The description of the transportation.",
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        },
        "keyOptions": {
          "description": "This is a placeholder element for future use. Functionality may not be available for the current implementation.",
          "$ref": "#/definitions/codeListType"
        },
        "label": {
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "orderBy": {
          "type": "integer"
        },
        "phoneNumber": {
          "description": "The name of the package.",
          "$ref": "#/definitions/telephoneType"
        },
        "priceRange": {
          "description": "The price range of the transportation.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "relativePosition": {
          "$ref": "#/definitions/relativePositionType"
        },
        "transportationCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "website": {
          "description": "Web address associated with transportation.",
          "$ref": "#/definitions/uRLType"
        }
      }
    },
    "hotelTransportationsType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelTransportationType"
      }
    },
    "hotelUserDefinedFieldType": {
      "description": "User defined information(UDF) for the hotel.",
      "type": "object",
      "properties": {
        "category": {
          "description": "The UDF Category for this information.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "infoType": {
          "description": "The UDF Type for this information.",
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        },
        "information": {
          "description": "The UDF attribute for this information.",
          "type": "string",
          "maxLength": 60,
          "minLength": 0
        }
      }
    },
    "hotelUserDefinedFieldsType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelUserDefinedFieldType"
      }
    },
    "hotelsDetails": {
      "description": "Response object for fetching lists of Property summary information.",
      "type": "object",
      "properties": {
        "hotelSummaryInfoList": {
          "$ref": "#/definitions/hotelsSummaryType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelsSummaryType": {
      "description": "Lists of Hotel summary information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelSummaryType"
      }
    },
    "housekeepingRoomStatusType": {
      "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
      "type": "string",
      "enum": [
        "Clean",
        "Dirty",
        "Pickup",
        "Inspected",
        "OutOfOrder",
        "OutOfService"
      ]
    },
    "housekeepingTaskCodeType": {
      "description": "Information related to a Task Code. Task Codes are used to generate task sheets in Rooms Management.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The Code for the task.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Task Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "facilityDepartureTask": {
          "description": "Indicates if this task code is the default departure task for Facility Tasks. This requires",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property where this task code is configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "instructions": {
          "description": "Instructions for this Task Code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "sequence": {
          "description": "Ordering sequence for display.",
          "type": "integer"
        }
      }
    },
    "iATAInfoType": {
      "description": "IATA Information of the profile.",
      "type": "object",
      "properties": {
        "iATACompany": {
          "description": "IATA Company Detail.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "iATAConsortia": {
          "description": "IATA Consortia.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "iATAValidationResult": {
          "description": "IATA Validation Result.",
          "type": "boolean"
        }
      }
    },
    "identificationInfoType": {
      "description": "Information on the identification of the customer.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "identification": {
          "description": "Detailed information on the identification of the customer.",
          "$ref": "#/definitions/identificationType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "identificationType": {
      "description": "Identification information of the customer.",
      "type": "object",
      "properties": {
        "expirationDate": {
          "description": "Expiration date of Identification.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "idNumber": {
          "description": "Identification Number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idNumberMasked": {
          "description": "Masked Identification Number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idType": {
          "description": "Identification Type. Eg Passport, Driving License etc.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "issuedCountry": {
          "description": "The country where Identification was issued.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "issuedDate": {
          "description": "Issued date of Identification.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "issuedPlace": {
          "description": "The place where Identification was issued.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "registeredProperty": {
          "description": "Property where the identification belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "imageSetType": {
      "description": "Represents on image set record.",
      "type": "object",
      "properties": {
        "chainCode": {
          "description": "The image set chain code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "The image set description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "The image set hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "imageOrder": {
          "description": "The image set order.",
          "type": "integer"
        },
        "imageSet": {
          "description": "The image set name.",
          "type": "string",
          "maxLength": 800,
          "minLength": 0
        },
        "imageStyle": {
          "description": "The image set enumerated style.",
          "$ref": "#/definitions/imageStyleType"
        },
        "imageType": {
          "description": "The image set type.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "imageURL": {
          "description": "The image set URL.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "sequenceId": {
          "description": "The image set sequence ID.",
          "type": "integer"
        },
        "website": {
          "description": "The image set website.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "imageStyleType": {
      "description": "An enumeration of image styles.",
      "type": "string",
      "enum": [
        "Full",
        "Thumbnail",
        "Icon",
        "Square",
        "Banner",
        "Button",
        "Lowres",
        "Highres"
      ]
    },
    "indicatorType": {
      "description": "Lamp indicator Type.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        },
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "indicatorsType": {
      "description": "Collection of lamp indicators.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "instanceLink": {
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "type": "object",
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ],
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "interfaceRightsStatusType": {
      "type": "object",
      "properties": {
        "category": {
          "description": "Category code of this interface right.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "description": {
          "description": "User defined description for an Interface Right.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "right": {
          "description": "Internal code for each allowed right of a Hotel Interface record.",
          "type": "integer"
        },
        "statusCode": {
          "description": "User defined code for an Interface Right.",
          "type": "string",
          "maxLength": 5,
          "minLength": 0
        }
      }
    },
    "jobTitleType": {
      "description": "Base details common between both template and hotel job titles.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Job Title Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the job title.",
          "$ref": "#/definitions/translationTextType80"
        },
        "displayClosingScript": {
          "description": "Flag to indicate if display reservation closing script.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property Code where the job title belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "jobTitlesCriteria": {
      "description": "Request object for creating new job titles for hotels.",
      "type": "object",
      "properties": {
        "jobTitles": {
          "description": "Collection of job titles to be created.",
          "$ref": "#/definitions/jobTitlesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "jobTitlesDetails": {
      "description": "Response object for fetching job titles configured for hotels.",
      "type": "object",
      "properties": {
        "jobTitles": {
          "description": "Collection of job titles.",
          "$ref": "#/definitions/jobTitlesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "jobTitlesToBeChanged": {
      "description": "Request object for modifying job titles for hotels.",
      "type": "object",
      "properties": {
        "jobTitles": {
          "description": "Collection of job titles to be modified.",
          "$ref": "#/definitions/jobTitlesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "jobTitlesType": {
      "description": "Job Title details for a hotel.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/jobTitleType"
      }
    },
    "keywordDetailType": {
      "type": "object",
      "properties": {
        "newKeyword": {
          "description": "The new keyword value.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "keywordType": {
      "type": "object",
      "properties": {
        "keyword": {
          "description": "The keyword value.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "keywordDetail": {
          "description": "The keyword new value, in case keyword value is modified.",
          "$ref": "#/definitions/keywordDetailType"
        },
        "type": {
          "description": "The type of keyword",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "languageType": {
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "languagesCriteria": {
      "description": "Request object for creating new language records.",
      "type": "object",
      "properties": {
        "languages": {
          "description": "Collection containing details of languages to be created.",
          "$ref": "#/definitions/configLanguagesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "languagesDetails": {
      "description": "Response object for fetching languages.",
      "type": "object",
      "properties": {
        "languages": {
          "description": "Collection of languages.",
          "$ref": "#/definitions/configLanguagesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "languagesToBeChanged": {
      "description": "Request object for changing details of existing language records.",
      "type": "object",
      "properties": {
        "languages": {
          "description": "Collection containing details of languages to be changed.",
          "$ref": "#/definitions/configLanguagesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "lastStayInfoType": {
      "description": "Contains last stay related details for the profile",
      "type": "object",
      "properties": {
        "lastRate": {
          "description": "Used to hold last rate information for the profile.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "lastRoom": {
          "description": "Used to hold last room information for the profile.",
          "type": "string"
        },
        "lastVisit": {
          "description": "Used to hold last stay information for the profile.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "totalStay": {
          "description": "The total number of previous stay of the profile.",
          "type": "integer"
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "mailingActionsType": {
      "description": "Defines mailing action list for the profile.",
      "type": "object",
      "properties": {
        "active": {
          "description": "When true indicates that profile has subscribed to the mailing list.",
          "type": "boolean"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "mailingAction": {
          "description": "Defines mailing action code and description.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "marketingCitiesByRegionDetails": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "marketingCities": {
          "$ref": "#/definitions/regionsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "marketingCitiesCriteria": {
      "description": "Request object for creating new marketing cities for hotels.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "marketingCities": {
          "description": "Collection of marketing cities to be created.",
          "$ref": "#/definitions/marketingCitiesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "marketingCitiesDetails": {
      "description": "Response object for fetching marketing cities configured for hotels.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "marketingCities": {
          "description": "Collection of marketing cities.",
          "$ref": "#/definitions/marketingCitiesType"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "marketingCitiesToBeChanged": {
      "description": "Request object for modifying marketing cities for hotels.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "marketingCities": {
          "description": "Collection of marketing cities to be modified.",
          "$ref": "#/definitions/marketingCitiesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "marketingCitiesType": {
      "description": "Marketing city details for a hotel.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/marketingCityConfigType"
      }
    },
    "marketingCityConfigType": {
      "description": "Base details of the marketing city.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the marketing city.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "direction": {
          "description": "Direction of the marketing city in relation to the hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "distance": {
          "description": "Distance from the hotel to the marketing city.",
          "type": "number"
        },
        "distanceType": {
          "description": "Unit of distance for the Distance measurement.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "drivingTime": {
          "description": "Driving time from the hotel to the marketing city.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel the marketing city belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Flag to indicate whether the marketing city is inactive or not.",
          "type": "boolean"
        },
        "marketingCity": {
          "description": "Marketing city code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "regionCode": {
          "description": "Region that the marketing city belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sequence": {
          "description": "Sequence number for displaying the marketing city.",
          "type": "integer"
        }
      }
    },
    "marketingCityType": {
      "type": "object",
      "properties": {
        "cityHotels": {
          "description": "Hotels under this Marketing City.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cityHotelInfoType"
          }
        },
        "description": {
          "description": "Description of the Marketing City",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "marketingCity": {
          "description": "Hotels under this Marketing City.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "marketingRegionType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "marketingRegionsCriteria": {
      "description": "Request object for creating Marketing Regions.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "marketingRegions": {
          "description": "Marketing Regionsto be created.",
          "$ref": "#/definitions/marketingRegionsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "marketingRegionsDetails": {
      "description": "Response object for fetching Marketing Regions.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "marketingRegions": {
          "description": "Collection of Marketing Regions.",
          "$ref": "#/definitions/marketingRegionsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "marketingRegionsToBeChanged": {
      "description": "Request object for changing Marketing Regions.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "marketingRegions": {
          "description": "Marketing Regionsto be changed.",
          "$ref": "#/definitions/marketingRegionsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "marketingRegionsType": {
      "description": "List of Marketing Regions.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/marketingRegionType"
      }
    },
    "masterAccountInfoType": {
      "type": "object",
      "properties": {
        "masterAccountId": {
          "description": "Unique ID of the Master account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "masterAccountName": {
          "description": "Name of the Master account.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "masterInfoCodeDetailType": {
      "type": "string",
      "enum": [
        "LongDescription",
        "ShortDescription"
      ]
    },
    "masterInfoType": {
      "type": "object",
      "properties": {
        "codeInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeInfoType"
          }
        },
        "codeType": {
          "$ref": "#/definitions/masterType"
        }
      }
    },
    "masterRestrictionStatusesType": {
      "type": "string",
      "enum": [
        "Closed",
        "ClosedForArrival",
        "ClosedForDeparture",
        "MinimumStayThrough",
        "MaximumStayThrough",
        "MinimumLengthOfStay",
        "MaximumLengthOfStay",
        "LOSNotAvailable",
        "MinimumAdvanceBooking",
        "MaximumAdvanceBooking",
        "Open",
        "OpenForArrival",
        "OpenForDeparture",
        "Hurdle",
        "MinimumOccupancy",
        "MaximumOccupancy",
        "RateStrategy",
        "RateDetailsNotSet",
        "InventoryItemNotAvailable",
        "RankRestriction",
        "MaximumAuth",
        "InventoryNotAvailable",
        "RoomClassNotAvailable",
        "RoomTypeNotAvailable",
        "BlockSellLimit",
        "OnRequest"
      ]
    },
    "masterType": {
      "type": "string",
      "enum": [
        "Country",
        "State",
        "AddressType",
        "PhoneType",
        "RateCategory",
        "CalculationRule",
        "PostingRythym",
        "BillingInstruction",
        "TransactionCode",
        "DisplaySet",
        "MailingActions",
        "DistanceType",
        "District",
        "Territory",
        "FiscalRegion",
        "InventoryItem",
        "Package",
        "RoomFeaturePreference",
        "SpecialPreference",
        "Promotion",
        "Department",
        "ReservationPreference",
        "FacilityTask",
        "RoomType",
        "RateCode",
        "OutOfOrderReason",
        "Block"
      ]
    },
    "mealPlanCodeType": {
      "description": "Meal plan codes associated with the rate codes.",
      "type": "object",
      "properties": {
        "breakfastIncluded": {
          "description": "Represents if the meal plan code is available for breakfast or not.",
          "type": "boolean"
        },
        "code": {
          "description": "Meal plan code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "dinnerIncluded": {
          "description": "Represents if the meal plan code is available for dinner or not.",
          "type": "boolean"
        },
        "included": {
          "description": "Represents if the meal plan code is included in rate code or not.",
          "type": "boolean"
        },
        "lunchIncluded": {
          "description": "Represents if the meal plan code is available for lunch or not.",
          "type": "boolean"
        }
      }
    },
    "mealPlansType": {
      "description": "Meal plan codes associated with the rate codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/mealPlanCodeType"
      }
    },
    "meetingRoomType": {
      "description": "Information about the meeting rooms of the hotel.",
      "type": "object",
      "properties": {
        "charge": {
          "description": "The charge for the meeting room.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "code": {
          "description": "the code of the meeting room",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "A description of the meeting room.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "meetingRoomsType": {
      "description": "List of meeting rooms of the hotel.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/meetingRoomType"
      }
    },
    "membershipEarningPreferenceType": {
      "description": "The earning preference of a membership, it depends on the type of property. eg. when the property is a airline it should be Miles, other than Points.",
      "type": "string",
      "enum": [
        "Points",
        "Miles"
      ]
    },
    "membershipInfoType": {
      "description": "The Membership object identifies the frequent customer reward program.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The account identification number for this particular member in this particular program.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "bonusCode": {
          "description": "The code or name of the bonus program. BonusCode can be used to indicate the level of membership (Gold Club, Platinum member, etc.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipId": {
          "description": "Membership ID (Unique ID from the memberships table).",
          "type": "number"
        },
        "membershipLevel": {
          "description": "The code or name of the membership level and indicates the level of membership (Gold Club, Platinum member, etc.). This is same as the BonusCode.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipLevelDesc": {
          "description": "The description of the Bonus Code.(Platinum for code P)",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "membershipTypeDesc": {
          "description": "The description of the ProgramCode.(Delta Previlige for code DP)",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "programCode": {
          "description": "The code or name of the membership program ('Hertz', 'AAdvantage', etc.).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "membershipSearchType": {
      "description": "Identifies criteria for searching frequent customer reward program.",
      "type": "object",
      "properties": {
        "associatedReservationsOnly": {
          "description": "If this is true,the reservations which has membership information associated will be resulted .",
          "type": "boolean"
        },
        "membershipId": {
          "description": "Membership ID criteria.",
          "type": "string"
        },
        "membershipLevel": {
          "description": "Membership Level criteria.",
          "$ref": "#/definitions/codeListType"
        },
        "membershipType": {
          "description": "Membership Type criteria.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "namePrefixType": {
      "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "nameTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Agent",
        "Contact",
        "Source",
        "Group",
        "Employee",
        "Hotel",
        "Purge"
      ]
    },
    "negotiatedInfoType": {
      "description": "This provides information for a profile negotiated rate.",
      "type": "object",
      "properties": {
        "comissionCode": {
          "description": "Informational purposes only in numeric format.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "corporateAgreementId": {
          "description": "The master identifier for multiple offices/locations under the same company profile. This is optional",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "inactive": {
          "description": "Negotiated Rate is inactive or not",
          "type": "boolean"
        },
        "order": {
          "description": "The sell order.",
          "type": "integer"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "negotiatedType": {
      "description": "This holds a list of NegotiatedInfoType.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel code for the negotiated rate.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "negotiatedInfoList": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/negotiatedInfoType"
          }
        },
        "rateCode": {
          "description": "Rate plan code for the negotiated rate.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "noteTypeType": {
      "description": "Note Types Information Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Note Types.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "defaultNoteText": {
          "description": "Default Note Text if Note Type has default note.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "defaultNoteType": {
          "description": "Indicates if the Note Types Code is default.",
          "type": "boolean"
        },
        "defaultText": {
          "description": "Indicates if the Note Types Code has at least one default text defined.",
          "type": "boolean"
        },
        "departmentNotes": {
          "description": "Indicates if the Note Types Code has department notes.",
          "type": "boolean"
        },
        "departments": {
          "description": "Departments that can see Department Notes of the Note Types Code.",
          "$ref": "#/definitions/genericHotelCodeCodeListType"
        },
        "description": {
          "description": "Description of the Note Types Code.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "displaySequence": {
          "description": "Display Sequence.",
          "type": "number"
        },
        "globalAllowed": {
          "description": "Indicates if the Note Types Code is globally allowed.",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicates if the Note Types Code is inactive.",
          "type": "boolean"
        },
        "internal": {
          "description": "Indicates if the Note Types Code is internal.",
          "type": "boolean"
        },
        "noteGroup": {
          "description": "Notes Group of the Note Types code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "notificationAreas": {
          "description": "Display Sequence.",
          "$ref": "#/definitions/codeListType"
        },
        "overrideInternal": {
          "description": "Indicates if the Note Types Code is override internal.",
          "type": "boolean"
        },
        "propertyDefaultNoteTexts": {
          "description": "Collection of multiple Default Note Text for different Properties/Global for specific Note Type/Node Code.",
          "$ref": "#/definitions/defaultNoteTextsDetailType"
        }
      }
    },
    "noteTypesCriteria": {
      "description": "Request object for creating new Note Types.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "noteTypes": {
          "description": "Note Types to be created.",
          "$ref": "#/definitions/noteTypesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "noteTypesDetails": {
      "description": "Response object for fetching Note Types of specific Notes Group.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "noteTypes": {
          "description": "Collection of Note Types.",
          "$ref": "#/definitions/noteTypesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "noteTypesToBeChanged": {
      "description": "Request object for changing existing Note Types.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "noteTypes": {
          "description": "Note Types to be changed.",
          "$ref": "#/definitions/noteTypesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "noteTypesType": {
      "description": "Note Types Collection element.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/noteTypeType"
      }
    },
    "numericUDFType": {
      "description": "Used to hold user defined field of Numeric Type. It is highly recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "name": {
          "description": "Name of user defined field.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "number"
        }
      }
    },
    "numericUDFsType": {
      "description": "Used to hold collection of user defined fields of Numeric Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/numericUDFType"
      }
    },
    "operaHotelContextDetails": {
      "description": "The result element returned with general hotel contextual information.",
      "type": "object",
      "properties": {
        "hotelContext": {
          "description": "A record containing hotel contextual information, stored as attributes.",
          "type": "object",
          "properties": {
            "businessDate": {
              "description": "The hotel's business date.",
              "type": "string",
              "format": "date"
            },
            "cateringCurrencyCode": {
              "description": "Catering Currency Code, used when Catering Currency differs from base currency.",
              "type": "string",
              "maxLength": 3,
              "minLength": 3
            },
            "chainCode": {
              "description": "The hotel's chain code.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "checkInTime": {
              "description": "The hotel's check-in time.",
              "type": "string",
              "format": "date"
            },
            "checkOutTime": {
              "description": "The hotel's check-out time.",
              "type": "string",
              "format": "date"
            },
            "configurationMode": {
              "description": "The hotel's configuration mode if applicable.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "countryMode": {
              "description": "The hotel's country code.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "currencyCode": {
              "description": "Provides the hotel's currency code.",
              "type": "string",
              "maxLength": 3,
              "minLength": 3
            },
            "hotelId": {
              "description": "The hotel code.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "hotelName": {
              "description": "The hotel name.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "languageCode": {
              "description": "The hotel's language code.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "loginUserId": {
              "description": "The login user.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "timezone": {
              "description": "The hotel's timezone.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "operaParametersDetails": {
      "description": "The result element containing a collection of the requested application parameters.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "parameters": {
          "description": "Represents a single application parameter and its value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationSettingSimpleType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "operaSettingsDetails": {
      "description": "The result element containing the requested application settings.",
      "type": "object",
      "properties": {
        "activeFunctions": {
          "description": "Count of active property services functions.",
          "type": "integer"
        },
        "groups": {
          "description": "Contains a collection of application settings for a particular group.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationSettingGroupType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "operaVersionNumberType": {
      "description": "Current Opera Version Number",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "ownerResTypeType": {
      "type": "string",
      "enum": [
        "Owner",
        "AuthorizedUser"
      ]
    },
    "ownerType": {
      "description": "Generic type for information about an owner.",
      "type": "object",
      "properties": {
        "department": {
          "description": "Department to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "email": {
          "description": "Email information of the owner.",
          "$ref": "#/definitions/emailInfoType"
        },
        "hotel": {
          "description": "Hotel to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "name": {
          "description": "Provides name information of the owner.",
          "$ref": "#/definitions/personNameType"
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phone": {
          "description": "Information on the telephone number of the owner.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "primary": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        },
        "profileId": {
          "description": "Unique owner profile information.",
          "$ref": "#/definitions/profileId"
        },
        "relationship": {
          "description": "Relationship of the owner within the profile or block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "userId": {
          "description": "Unique application user ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "userName": {
          "description": "Unique application user name of the owner.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "pMS_ResStatusType": {
      "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "type": "string",
      "enum": [
        "Reserved",
        "Requested",
        "NoShow",
        "Cancelled",
        "InHouse",
        "CheckedOut",
        "Waitlisted",
        "DueIn",
        "DueOut",
        "Walkin",
        "PendingCheckout"
      ]
    },
    "packageElementType": {
      "type": "object",
      "properties": {
        "addRateCombinedLine": {
          "type": "boolean"
        },
        "addRateSeprateLine": {
          "type": "boolean"
        },
        "allowance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "amount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "calculationRule": {
          "type": "string"
        },
        "description": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          }
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endTime": {
          "type": "string"
        },
        "includedInRate": {
          "type": "boolean"
        },
        "packageCode": {
          "type": "string"
        },
        "postingRhythm": {
          "type": "string"
        },
        "quantity": {
          "type": "integer"
        },
        "sellSeparate": {
          "type": "boolean"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "startTime": {
          "type": "string"
        }
      }
    },
    "paragraphType": {
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "type": "object",
      "properties": {
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        }
      }
    },
    "payeeInfoType": {
      "description": "Payee information.",
      "type": "object",
      "properties": {
        "payeeAccountInfo": {
          "description": "AR account short info of the payee.",
          "$ref": "#/definitions/aRAccountShortInfoType"
        },
        "payeeAddress": {
          "description": "Address of the payee.",
          "$ref": "#/definitions/addressInfoType"
        },
        "payeeAddressCount": {
          "description": "Payee multiple address count.",
          "type": "integer"
        },
        "payeeId": {
          "description": "Opera name id of the payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "payeeName": {
          "description": "Name of the payee.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "payeeReferenceCurrency": {
          "description": "Reference currency of the payee.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "payeeTaxNumber": {
          "description": "The tax number of the payee.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "personNameType": {
      "description": "This provides name information for a person.",
      "type": "object",
      "properties": {
        "envelopeGreeting": {
          "description": "Envelope Greeting of the profile",
          "type": "string"
        },
        "externalSystem": {
          "description": "When name type is external, indicates the external system the name belongs to.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "nameTitleSuffix": {
          "description": "Title Suffix. Must be populated if ADVANCED_TITLE is on.",
          "type": "integer"
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        },
        "salutation": {
          "description": "Salutation of the profile",
          "type": "string"
        },
        "surname": {
          "description": "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "personNameTypeType": {
      "description": "Person's name in an external system.",
      "type": "string",
      "enum": [
        "Primary",
        "Alternate",
        "Incognito",
        "External",
        "Phonetic"
      ]
    },
    "phoneNumberType": {
      "description": "Phone number",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "pointsType": {
      "description": "The Redeem Points contains the number of points required to book a room type.",
      "type": "object",
      "properties": {
        "awardsType": {
          "description": "Awards type for the award type rate code.",
          "type": "string"
        },
        "points": {
          "description": "No of points required to book this Room Stay.",
          "type": "integer"
        }
      }
    },
    "preferenceType": {
      "description": "Guest Preference details for the profile.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Preference Description for display purposes.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "excludedPreferencesCount": {
          "description": "Specifies the count of preferences excluded for the attached reservation preference.",
          "type": "integer"
        },
        "global": {
          "description": "Whether this preference is property specific or not.",
          "type": "boolean"
        },
        "hotels": {
          "description": "If specified preference belongs to the Hotels listed, otherwise it is a global preference.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "preferenceId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferenceValue": {
          "description": "Preference value for display purposes.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "source": {
          "description": "Source of the preference.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "preferenceTypeType": {
      "description": "Preference details for the profile.",
      "type": "object",
      "properties": {
        "availableQuantity": {
          "description": "Available quantity of preferences (maximum quantity - Existing preferences)per preference group.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "maxQuantity": {
          "description": "Maximum quantity of preferences allowed per preference group.",
          "type": "integer"
        },
        "maxResortUsedQuantity": {
          "description": "Maximum quantity of preferences used by any resort per preference group.",
          "type": "integer"
        },
        "preference": {
          "description": "Collection of Preferences for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferenceType"
          }
        },
        "preferenceType": {
          "description": "Preference group code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferenceTypeDescription": {
          "description": "Preference group description.",
          "type": "string"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationPreference": {
          "description": "Whether this preference is reservation preference or not.",
          "type": "boolean"
        },
        "sequence": {
          "description": "Preference Sequence.",
          "type": "string"
        }
      }
    },
    "primaryCodeType": {
      "description": "Primary flag with code and description.",
      "type": "object",
      "properties": {
        "codeDescription": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "primary": {
          "type": "boolean"
        }
      }
    },
    "primaryCodesType": {
      "description": "List of codes with primary flag",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/primaryCodeType"
      }
    },
    "primaryShareTypeType": {
      "type": "string",
      "enum": [
        "Primary",
        "NonPrimary"
      ]
    },
    "privacyInfoType": {
      "description": "Defines Privacy related information for the profile.",
      "type": "object",
      "properties": {
        "allowEmail": {
          "description": "Indicates if the profile wishes to allow Email.",
          "type": "boolean"
        },
        "allowPhone": {
          "description": "Indicates if the profile wishes to allow phone calls.",
          "type": "boolean"
        },
        "allowSMS": {
          "description": "Indicates if the profile wishes to allow SMS.",
          "type": "boolean"
        },
        "autoEnrollLoyaltyProgram": {
          "description": "Indicates if the profile wishes to be automatically enrolled in the property's loyalty program.",
          "type": "boolean"
        },
        "infoFromThirdParty": {
          "description": "Indicates if the profile is ok getting info from third parties.",
          "type": "boolean"
        },
        "lastPrivacyPromptDate": {
          "description": "Indicate the last privacy prompt date of the guest.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "marketResearchParticipation": {
          "description": "Indicates if the profile participates in market research.",
          "type": "boolean"
        },
        "optInAutoEnrollmentMember": {
          "description": "Indicates if the profile wishes to opt in for Auto Enrolment Member.",
          "type": "boolean"
        },
        "optInEmail": {
          "description": "Indicates if the profile wishes to opt in for Email.",
          "type": "boolean"
        },
        "optInMailingList": {
          "description": "Indicates if the profile wishes to opt in for Mailing List.",
          "type": "boolean"
        },
        "optInMarketResearch": {
          "description": "Indicates if the profile wishes to opt in for Market Research.",
          "type": "boolean"
        },
        "optInPhone": {
          "description": "Indicates if the profile wishes to opt in for Phone.",
          "type": "boolean"
        },
        "optInSms": {
          "description": "Indicates if the profile wishes to opt in for SMS.",
          "type": "boolean"
        },
        "optInThirdParty": {
          "description": "Indicates if the profile wishes to opt in for Third Party.",
          "type": "boolean"
        }
      }
    },
    "profileAccessType": {
      "type": "object",
      "properties": {
        "chainCode": {
          "description": "Indicates the Chain code where the profile was created",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "croCode": {
          "description": "Indicates the CRO code where the profile was created",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "Indicates the Hotel code where the profile was created",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "sharedLevel": {
          "description": "Indicates whether the profile is shared at the following levels : global/property/CRO",
          "$ref": "#/definitions/profileSharedLevelType"
        }
      }
    },
    "profileCashieringType": {
      "description": "Contains cashiering related details for the profile",
      "type": "object",
      "properties": {
        "arNoCentral": {
          "description": "Account Receivables Central Number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "autoFolioSettlementType": {
          "description": "Contains the auto folio settlement type for the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "directBillingList": {
          "description": "Contains the direct billing related information for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/directBillingType"
          }
        },
        "paymentDueDays": {
          "description": "Ability to define on the account, the number of days after which the invoice should be paid.",
          "type": "integer"
        },
        "referenceCurrency": {
          "description": "Reference Currency.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "taxPercent1": {
          "description": "Tax1 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent2": {
          "description": "Tax2 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent3": {
          "description": "Tax3 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent4": {
          "description": "Tax4 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent5": {
          "description": "Tax5 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "vATOffsetYN": {
          "description": "VAT Offset Flag.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        }
      }
    },
    "profileCommissionType": {
      "description": "This is the preconfigured routing instruction type.",
      "type": "object",
      "properties": {
        "bankAccount": {
          "description": "Bank account used for the commission for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "commissionCode": {
          "description": "commission Code for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "hotelId": {
          "description": "Hotel Code for the commission being used for a profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "paymentMethod": {
          "description": "Type of payment associated with the bank account.",
          "$ref": "#/definitions/commissionPaymentMethods"
        }
      }
    },
    "profileDeliveryMethod": {
      "description": "Delivery Information type to the profile.",
      "type": "object",
      "properties": {
        "deliveryId": {
          "description": "Delivery ID. It will be empty in case of new delivery method.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "deliveryModule": {
          "description": "Module where this delivery type will be used. Example : EFolio Export, EInvoice , Fiscal, etc..",
          "$ref": "#/definitions/profileDeliveryModuleType"
        },
        "deliveryType": {
          "description": "Delivery type can have a value EMAIL, ELECTRONIC etc and it depends on the parameter set in OPERA Control.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "deliveryValue": {
          "description": "Delivery value holds the corresponding value of the delivery type..",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property that has delivery methods configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        }
      }
    },
    "profileDeliveryModuleType": {
      "description": "Module where this delivery type will be used. Example : EFolio Export, EInvoice , Fiscal, etc..",
      "type": "string",
      "enum": [
        "EfolioExport"
      ]
    },
    "profileId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "profileIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "profileMembershipType": {
      "description": "Detailed information of the memberships.",
      "type": "object",
      "properties": {
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        }
      }
    },
    "profileRestrictions": {
      "type": "object",
      "properties": {
        "reason": {
          "description": "Restriction reason associated with the current profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonDescription": {
          "description": "Description of restriction reason.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "restricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        }
      }
    },
    "profileSharedLevelType": {
      "description": "Simple types for Shared level.",
      "type": "string",
      "enum": [
        "Global",
        "Property",
        "Cro"
      ]
    },
    "profileStatusType": {
      "type": "string",
      "enum": [
        "Active",
        "Inactive"
      ]
    },
    "profileSubscriptionListType": {
      "description": "Details of the OPERA Profile subscription to external system",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/profileSubscriptionType"
      }
    },
    "profileSubscriptionType": {
      "description": "Contains details of the profile subscription. The subscription represents the link between the OPERA profile and the external profile within a particular external system",
      "type": "object",
      "properties": {
        "distributed": {
          "description": "Indicates if the profile was distributed to the external system.",
          "type": "boolean"
        },
        "externalProfileId": {
          "description": "Profile ID within the external system.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "force": {
          "description": "Indicates if the profile information should be overwritten by the external system.",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicates whether this subscription is active or inactive.",
          "type": "boolean"
        },
        "lastDistributionDate": {
          "description": "Timestamp of the most recent distribution of this profile to the external system.",
          "type": "string",
          "format": "date-time"
        },
        "lastExternalUpdateDate": {
          "description": "Timestamp of the most recent update of the subscription information by the external system.",
          "type": "string",
          "format": "date-time"
        },
        "profileId": {
          "description": "OPERA Profile ID that this subscription record corresponds to.",
          "$ref": "#/definitions/profileId"
        },
        "profileInfo": {
          "description": "This provides name information for a person.",
          "type": "object",
          "properties": {
            "fullName": {
              "description": "Full display Name.",
              "type": "string",
              "maxLength": 200,
              "minLength": 0
            },
            "givenName": {
              "description": "Given name, first name or names.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "middleName": {
              "description": "The middle name of the person name.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "name": {
              "description": "Family name, last name or Company Name.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "namePrefix": {
              "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "nameSuffix": {
              "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "nameTitle": {
              "description": "Degree or honors (e.g., Ph.D., M.D.)",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "nameType": {
              "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
              "$ref": "#/definitions/personNameTypeType"
            },
            "profileType": {
              "description": "OPERA profile type such as Individual or Company",
              "$ref": "#/definitions/profileTypeType"
            }
          }
        },
        "subscriptionDate": {
          "description": "Timestamp when the profile was subscribed to.",
          "type": "string",
          "format": "date-time"
        },
        "systemCode": {
          "description": "Code of system where profile is subscribed to.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "systemType": {
          "description": "Type of system where profile is subscribed to.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "profileTaxInfoType": {
      "description": "Profile information related to tax.",
      "type": "object",
      "properties": {
        "businessId": {
          "description": "Business ID. The maximum length of this element should not exceed 120 characters.",
          "type": "string",
          "maxLength": 128,
          "minLength": 0
        },
        "businessRegistration": {
          "description": "Business Registration Code. The maximum length of this element should not exceed 120 characters.",
          "type": "string",
          "maxLength": 128,
          "minLength": 0
        },
        "tax1No": {
          "description": "The tax id of this profile. Usually issued by a government agency. Used by 1099 printing.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "tax2No": {
          "description": "Tax 2 id of this profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "taxCategory": {
          "description": "Tax Category to be changed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "taxOffice": {
          "description": "Tax Office to be changed.",
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "taxType": {
          "description": "Tax type to be changed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "profileType": {
      "description": "Type provides the detailed information about the profile and its children.",
      "type": "object",
      "properties": {
        "addresses": {
          "description": "List of customer addresses.",
          "type": "object",
          "properties": {
            "addressInfo": {
              "description": "Collection of Detailed information on an address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/addressInfoType"
              }
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "businessSegments": {
          "description": "Business/Market Segment associated to the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "cashiering": {
          "description": "Contains cashiering related details for the profile",
          "$ref": "#/definitions/profileCashieringType"
        },
        "comments": {
          "description": "List of Notes for the customer.",
          "type": "object",
          "properties": {
            "commentInfo": {
              "description": "Collection of Detailed information on comments for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/commentInfoType"
              }
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "commissionInfoList": {
          "description": "Contains commission related details for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/profileCommissionType"
          }
        },
        "company": {
          "description": "Detailed company information for this profile.",
          "$ref": "#/definitions/companyType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "customer": {
          "description": "Detailed customer information for this profile.",
          "$ref": "#/definitions/customerType"
        },
        "eCertificates": {
          "description": "E-Certificate assosiated with the profile.",
          "$ref": "#/definitions/eCertificatesType"
        },
        "eligibleForFiscalFolio": {
          "description": "Eligible for Fiscal Folio/Payload generation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "gdsNegotiatedRates": {
          "description": "List of channel negotiated rates that this profile has been assigned to.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "gdsNegotiatedRate": {
              "description": "Collection of Detailed information on channel negotiated rates for the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/gdsNegotiatedType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "hasCommission": {
          "description": "Populates true if the profile has commission configured false otherwise.",
          "type": "boolean"
        },
        "influenceCode": {
          "description": "Influence Code associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "inheritedNegRates": {
          "description": "Flag to indicate if the negotiated rates are inherited from master profile. Flag is available only when the profile is linked to master profile and master profile has negotiated rate codes attached.",
          "type": "boolean"
        },
        "keywords": {
          "description": "List of customer keywords.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "keyword": {
              "description": "Collection of keywords attached to the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/keywordType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastStayInfo": {
          "description": "Information on last stay of the profile.",
          "$ref": "#/definitions/lastStayInfoType"
        },
        "localizationGuestType": {
          "description": "Localization Guest Type assocaited to the profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "mailingActions": {
          "description": "Contains collection of mailing action list associated with the profile",
          "$ref": "#/definitions/mailingActionsType"
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this profile as recently accessed.",
          "type": "boolean"
        },
        "markForHistory": {
          "description": "\"true\" setting marks the profile to be kept from being purged, once the profile is marked inactive.",
          "type": "boolean"
        },
        "negotiatedRates": {
          "description": "List of profile negotiated rates.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "negotiatedRate": {
              "description": "Collection of Detailed information on profile negotiated rates.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/negotiatedType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "ownerCode": {
          "description": "Owner Code associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "preferenceCollection": {
          "description": "List of customer preferences.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "preferenceType": {
              "description": "Collection of Detailed information on preferences of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/preferenceTypeType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "privacyInfo": {
          "description": "Contains privacy related information associated with the profile",
          "$ref": "#/definitions/privacyInfoType"
        },
        "profileAccessType": {
          "description": "Detailed information on access type associated with the profile.",
          "$ref": "#/definitions/profileAccessType"
        },
        "profileDeliveryMethods": {
          "description": "List of Delivery methods configured against a Property for this Profile.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "profileDeliveryMethod": {
              "description": "Collection of delivery methods for this Profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileDeliveryMethod"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "profileImage": {
          "description": "The profile image.",
          "$ref": "#/definitions/imageSetType"
        },
        "profileIndicators": {
          "description": "Indicators of additional information attached to the profile",
          "$ref": "#/definitions/indicatorsType"
        },
        "profileMemberships": {
          "description": "List of loyalty program(s) the profile is subscribed to.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "profileMembership": {
              "description": "Collection of Detailed information on memberships for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileMembershipType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "profileRestrictions": {
          "description": "Detailed information on restrictions associated with the profile.",
          "$ref": "#/definitions/profileRestrictions"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "protectedBy": {
          "description": "What level this profile is protected.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "registeredProperty": {
          "description": "Hotel which this profile is registered with. This attribute is not used for configuration.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "relationships": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "relationship": {
              "description": "A collection of the profiles that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "relationshipsSummary": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "relationship": {
              "description": "A collection of the profiles summary that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoSummaryType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "requestForHotel": {
          "description": "Hotel which this profile is to be registered. This attribute is only used during creation of profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationInfoList": {
          "description": "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref": "#/definitions/reservationHistoryFutureInfoType"
        },
        "salesInfo": {
          "description": "Sales information of the profiles.",
          "$ref": "#/definitions/salesInfoType"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "stayReservationInfoList": {
          "description": "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref": "#/definitions/reservationStayHistoryFutureInfoType"
        },
        "subscriptions": {
          "description": "List of profile subscriptions.",
          "$ref": "#/definitions/profileSubscriptionListType"
        },
        "taxInfo": {
          "description": "Profile information about tax.",
          "$ref": "#/definitions/profileTaxInfoType"
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "territory": {
          "description": "Territory associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "traceCode": {
          "description": "Trace Code associated to the profile.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "uRLs": {
          "description": "List of Information on a URL for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "uRLInfo": {
              "description": "Collection of Detailed information on web url/address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/uRLInfoType"
              }
            }
          }
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "webUserAccounts": {
          "description": "List of Web User Accounts of the profile.",
          "$ref": "#/definitions/webUserAccountsType"
        }
      }
    },
    "profileTypeType": {
      "description": "The types of Profile handled by the web service.",
      "type": "string",
      "enum": [
        "Guest",
        "Agent",
        "Company",
        "Group",
        "Source",
        "Employee",
        "Hotel",
        "Vendor",
        "Contact",
        "Purge",
        "BusinessHeader",
        "BillingAccount",
        "Activity",
        "Potential",
        "Account"
      ]
    },
    "promotionType": {
      "description": "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation.",
      "type": "object",
      "properties": {
        "couponCode": {
          "description": "Promotion Coupon Code when promotion is setup to have a valid coupon code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "promotionCode": {
          "description": "Promotion code associated with the rate plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "promotionName": {
          "description": "Promotion code Name associated with the rate plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "propertyDetailCategoriesCriteria": {
      "description": "Request object for creating Property Detail Categories.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "propertyDetailCategories": {
          "description": "Property Detail Categories to be created.",
          "$ref": "#/definitions/propertyDetailCategoriesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "propertyDetailCategoriesDetails": {
      "description": "Response object for fetching Property Detail Categories.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "propertyDetailCategories": {
          "description": "Collection of Property Detail Categories.",
          "$ref": "#/definitions/propertyDetailCategoriesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "propertyDetailCategoriesToBeChanged": {
      "description": "Request object for changing Property Detail Categories.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "propertyDetailCategories": {
          "description": "Property Detail Categories to be changed.",
          "$ref": "#/definitions/propertyDetailCategoriesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "propertyDetailCategoriesType": {
      "description": "List of Property Detail Categories.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/propertyDetailCategoryType"
      }
    },
    "propertyDetailCategoryType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "propertyTypeType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "propertyTypesCriteria": {
      "description": "Request object for creating Property Types.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "propertyTypes": {
          "description": "Property Typesto be created.",
          "$ref": "#/definitions/propertyTypesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "propertyTypesDetails": {
      "description": "Response object for fetching Property Types.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "propertyTypes": {
          "description": "Collection of Property Types.",
          "$ref": "#/definitions/propertyTypesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "propertyTypesToBeChanged": {
      "description": "Request object for changing Property Types.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "propertyTypes": {
          "description": "Property Typesto be changed.",
          "$ref": "#/definitions/propertyTypesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "propertyTypesType": {
      "description": "List of Property Types.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/propertyTypeType"
      }
    },
    "queueTextInfoType": {
      "description": "Information regarding the message sent to guest.",
      "type": "object",
      "properties": {
        "sentBy": {
          "description": "User name of the user who sent message.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "sentTime": {
          "description": "Time the text was last sent to the user.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "rateRangeType": {
      "description": "Rate Range details like maximum rate amount and minimum rate amount in each available rate category.",
      "type": "object",
      "properties": {
        "base": {
          "description": "The base amount charged for the accommodation or service.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/totalType"
          }
        },
        "rateChange": {
          "description": "Rate Change Indicator.",
          "type": "boolean"
        }
      }
    },
    "rateRoomDetailsType": {
      "type": "object",
      "properties": {
        "memberships": {
          "description": "Detail regarding customer loyalty program.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/membershipSearchType"
          }
        },
        "restrictionType": {
          "description": "Indicates the restriction types if hotel is not available.",
          "$ref": "#/definitions/masterRestrictionStatusesType"
        },
        "roomStays": {
          "description": "Room stay information.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomStayType"
          }
        }
      }
    },
    "ratesType": {
      "description": "Individual rate amount.",
      "type": "object",
      "properties": {
        "rate": {
          "description": "The Rate contains a collection of elements that define the amount of the rate, associated fees, additional occupant amounts. Taxes can be broken out or included within the various amounts. A currency can be associated to each amount.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/amountType"
          }
        },
        "rateRange": {
          "description": "Rate Range details like maximum rate amount and minimum rate amount in each available rate category.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/rateRangeType"
          }
        }
      }
    },
    "regionCodeType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "regionType": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the Region",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "marketingCities": {
          "description": "Marketing Cities under this Region.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/marketingCityType"
          }
        },
        "regionCode": {
          "description": "Code of this Region.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "regionsCodeCriteria": {
      "description": "Request object for creating Regions Code.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "regionsCode": {
          "description": "Regions Code to be created.",
          "$ref": "#/definitions/regionsCodeType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "regionsCodeDetails": {
      "description": "Response object for fetching Regions Code.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "regionsCode": {
          "description": "Collection of Regions Code.",
          "$ref": "#/definitions/regionsCodeType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "regionsCodeToBeChanged": {
      "description": "Request object for changing Regions Code.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "regionsCode": {
          "description": "Regions Code to be changed.",
          "$ref": "#/definitions/regionsCodeType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "regionsCodeType": {
      "description": "List of Regions Code.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/regionCodeType"
      }
    },
    "regionsType": {
      "description": "List of Regions.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/regionType"
      }
    },
    "relationshipAddressType": {
      "description": "Provides address information for a Relationship.",
      "type": "object",
      "properties": {
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "maxLength": 80,
            "minLength": 0
          }
        },
        "city": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "relationshipInfoSummaryType": {
      "description": "RelationshipInfoSummaryType contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles.",
      "type": "object",
      "properties": {
        "masterAccountDetails": {
          "description": "Refer to Master Profile type document.",
          "$ref": "#/definitions/masterAccountInfoType"
        },
        "relationshipID": {
          "description": "Relationship identifier.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "relationshipProfile": {
          "description": "Refer to Relationship Profile Summary type document.",
          "$ref": "#/definitions/relationshipProfileSummaryType"
        },
        "sourceRelation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceRelationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "relationshipInfoType": {
      "description": "Relationship Type contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles.",
      "type": "object",
      "properties": {
        "changeRelationship": {
          "description": "Information about the changes in relationship for the profile",
          "$ref": "#/definitions/changeRelationsType"
        },
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "masterAccountInfo": {
          "description": "Refer to Master Profile type document.",
          "$ref": "#/definitions/masterAccountInfoType"
        },
        "relation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "relationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "relationshipProfile": {
          "description": "Refer to Relationship Profile type document.",
          "$ref": "#/definitions/relationshipProfileType"
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "relationshipProfileSummaryType": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Information on address details for the customer/company",
          "$ref": "#/definitions/relationshipAddressType"
        },
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "customerName": {
          "description": "Name of the customer",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "boolean"
        },
        "primaryOwnerCode": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        },
        "profileIdList": {
          "description": "Original profile details for which the relationships was created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "profileStatus": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "telephoneNumber": {
          "description": "Telephone number assigned to a single location",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "relationshipProfileType": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Information on address details for the customer/company",
          "$ref": "#/definitions/addressInfoType"
        },
        "changeProfileIdList": {
          "description": "Updated/changed profile details for the relationships created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "company": {
          "description": "Detailed information of the Company.",
          "$ref": "#/definitions/companyType"
        },
        "customer": {
          "description": "Detailed information of the customer",
          "$ref": "#/definitions/customerType"
        },
        "email": {
          "description": "Information on email address for the customer/company",
          "$ref": "#/definitions/emailInfoType"
        },
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "primaryOwner": {
          "description": "Primary Owner of the profile",
          "$ref": "#/definitions/ownerType"
        },
        "profileIdList": {
          "description": "Original profile details for which the relationships was created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "telephone": {
          "description": "Information on telephone details for the customer/company",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "uRLs": {
          "description": "Information on web url/address for the customer/company",
          "$ref": "#/definitions/uRLInfoType"
        }
      }
    },
    "relativePositionType": {
      "description": "Defines the position of an entity in relation to another entity (e.g. from an airport to a hotel, the relationship is dependent on use).",
      "type": "object",
      "properties": {
        "distance": {
          "description": "Defines the distance between two points.",
          "type": "number"
        },
        "distanceType": {
          "description": "The unit of measure in a code format.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "drivingTime": {
          "description": "The driving time in a free text format.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resAccessRestrictionType": {
      "description": "Indicates any Updates/Changes on the reservation as well as Reservation Cancellation are not allowed.",
      "type": "string",
      "enum": [
        "Change",
        "Cancel",
        "ChangeOrCancel"
      ]
    },
    "resAccompanyGuestInfoType": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "resAccompanyGuestListType": {
      "description": "Collection of accompany guests",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAccompanyGuestInfoType"
      }
    },
    "resAttachedProfileListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAttachedProfileType"
      }
    },
    "resAttachedProfileType": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Attached profile name",
          "type": "string"
        },
        "profileIdList": {
          "description": "Collection of unique profile identifiers",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "resAwardsType": {
      "description": "Membership Awards code applied on the reservation.",
      "type": "object",
      "properties": {
        "awardVouchers": {
          "$ref": "#/definitions/awardVouchersType"
        },
        "membershipNo": {
          "description": "Membership program under which the award is applied.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "originalRoomType": {
          "description": "Room Type before the Upgrade Award.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "upgradeRoomType": {
          "description": "Room Type after the Upgrade Award.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resCashieringType": {
      "description": "Cashiering Information for the reservation.",
      "type": "object",
      "properties": {
        "bedTaxReporting": {
          "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
          "$ref": "#/definitions/bedTaxReportingType"
        },
        "billingPrivileges": {
          "description": "Billing privileges set on the reservation.",
          "$ref": "#/definitions/billingPrivilegesType"
        },
        "compAccounting": {
          "description": "Information regarding comp accounting on the reservation.",
          "$ref": "#/definitions/resCompAccountingType"
        },
        "financiallyResponsible": {
          "description": "The guest from whom payment has to be recovered (direct guest).",
          "type": "boolean"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "lastRoomAndTaxPostedDate": {
          "description": "Date of the last Room And Tax posting. Used primarily to know the date in case of Advance Billing.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "periodicFolio": {
          "description": "Information regarding periodic folios set on the reservation.",
          "$ref": "#/definitions/resPeriodicFolioType"
        },
        "proratedBilling": {
          "description": "In case of Appartment style billing indicates whether a prorated amount should be used for an Apartment Style Billing rate.",
          "type": "boolean"
        },
        "reservationPreConfiguredRoutingInstruction": {
          "description": "Information regarding the selected preconfigured routing instruction on the reservation.",
          "$ref": "#/definitions/resPreConfiguredRoutingInstrType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "reverseAdvanceCheckInAllowed": {
          "description": "This attribute is to verify if reverse advance check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/reservationTaxTypeInfo"
        },
        "transactionsPosted": {
          "description": "Specifies whether reservation has a financial transaction associated with it.",
          "type": "boolean"
        }
      }
    },
    "resCommunicationType": {
      "description": "Communication details for a reservation.",
      "type": "object",
      "properties": {
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        }
      }
    },
    "resCompAccountingType": {
      "description": "Information regarding comp accounting on the reservation.",
      "type": "object",
      "properties": {
        "authorizer": {
          "description": "ID of the employee who will act as the host for this guest.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "compPostings": {
          "description": "Indicates if the Comp Billing/posting Exist",
          "type": "string",
          "maxLength": 5,
          "minLength": 0
        },
        "compType": {
          "description": "Code used to identify the casino comp type and ranking of a guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resExpectedTimesType": {
      "description": "Holds the Arrival and Departure Time Information",
      "type": "object",
      "properties": {
        "reservationExpectedArrivalTime": {
          "description": "Arrival Time",
          "type": "string",
          "format": "date-time"
        },
        "reservationExpectedDepartureTime": {
          "description": "Departure Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "resGuaranteeType": {
      "description": "Validations type record returned after Validations are done.",
      "type": "object",
      "properties": {
        "guaranteeCode": {
          "description": "Guarantee Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "onHold": {
          "description": "Guarantee Code.",
          "type": "boolean"
        },
        "shortDescription": {
          "description": "Guarantee Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "resGuestExternalInfoType": {
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "type": "object",
      "properties": {
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        }
      }
    },
    "resGuestInfoType": {
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "type": "object",
      "properties": {
        "accompanyGuests": {
          "description": "List of guest names that are accompanying the reservation guest",
          "$ref": "#/definitions/resAccompanyGuestListType"
        },
        "address": {
          "description": "Address information that is attached to the reservation guest",
          "$ref": "#/definitions/addressSearchType"
        },
        "alternateFullName": {
          "description": "Altername full display name",
          "type": "string"
        },
        "alternateGivenName": {
          "description": "Alternate given name, first name or names",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "alternateSurname": {
          "description": "Alternate family name, last name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "birthDate": {
          "description": "Date of birth",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "email": {
          "description": "Email address",
          "$ref": "#/definitions/basicEmailType"
        },
        "externalInfo": {
          "description": "External information about the guest associated with the reservation.",
          "$ref": "#/definitions/resGuestExternalInfoType"
        },
        "fullName": {
          "description": "Full display name",
          "type": "string"
        },
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "guestLastStayInfo": {
          "description": "Contains information regarding the last stay of this guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "guestRestricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        },
        "guestRestrictedCode": {
          "description": "Guest profile restricted reason code",
          "type": "string"
        },
        "guestRestrictedReasonDesc": {
          "description": "Guest profile restricted reason description",
          "type": "string"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "membership": {
          "description": "The Membership object identifying the frequent customer reward program.",
          "$ref": "#/definitions/membershipInfoType"
        },
        "middleName": {
          "description": "The middle name of the person name",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "namePrefix": {
          "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
          "$ref": "#/definitions/namePrefixType"
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nameType": {
          "$ref": "#/definitions/nameTypeType"
        },
        "nationality": {
          "description": "Affiliation or ethnicity to a particular country.",
          "$ref": "#/definitions/countryNameType"
        },
        "phoneNumber": {
          "description": "Phone number",
          "$ref": "#/definitions/phoneNumberType"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        },
        "surnamePrefix": {
          "description": "e.g \"van der\", \"von\", \"de\"",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "vip": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "$ref": "#/definitions/vIPType"
        }
      }
    },
    "resHousekeepingType": {
      "description": "Holds housekeeping turndown service information for the room.",
      "type": "object",
      "properties": {
        "expectedServiceTime": {
          "description": "Expected Start Time for housekeeping task(s).",
          "type": "string"
        },
        "facilityTaskInfo": {
          "description": "The facility task applicable for the current day. This will be information only and not used for any updates.",
          "$ref": "#/definitions/facilityTaskType"
        },
        "instructions": {
          "description": "Turndown instructions for the room.",
          "type": "string"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "roomStatus": {
          "description": "Current room status. Current room status is populated only if room is assigned to the reservation and reservation is due in or in house.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "serviceTime": {
          "description": "This is the Turndown room service time.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "turndownRequested": {
          "description": "Indicates whether guest wants turndown facility or not.",
          "type": "boolean"
        }
      }
    },
    "resMobileNotificationsType": {
      "description": "Contains the status of Room Ready and Key Ready messages.",
      "type": "object",
      "properties": {
        "checkoutMessageReceived": {
          "description": "Indicates if the Mobile checkout message is received.",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "Error message when Mobile Notification has failed.",
          "type": "string"
        },
        "keyReady": {
          "description": "Denotes the status of Key Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "requiresAction": {
          "description": "Indicates if user action is required. The action could be for sending Room Ready or Key Ready Notification. It could also be for initiating Checkout",
          "type": "boolean"
        },
        "roomReady": {
          "description": "Denotes the status of Room Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        }
      }
    },
    "resPaymentCardType": {
      "description": "Information on a credit card for the customer.",
      "type": "object",
      "properties": {
        "approvalAmountNeeded": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "attachCreditCardToProfile": {
          "description": "Attach the credit card to profile.",
          "type": "boolean"
        },
        "cardHolderName": {
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cardNumber": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberMasked": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardOrToken": {
          "description": "This contains information on whether credit card is tokenized (token enabled). A value of 'Token' indicates credit card is token enabled and 'CardNumber' indicates non token environment for this payment card type.",
          "$ref": "#/definitions/cardNumberTypeType"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
          "type": "boolean"
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "currentAuthorizedAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "expirationDate": {
          "description": "Expiration date of the credit card",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expirationDateExpired": {
          "type": "boolean"
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        },
        "swiped": {
          "type": "boolean"
        },
        "userDefinedCardType": {
          "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
          "type": "string",
          "maxLength": 2,
          "minLength": 0
        }
      }
    },
    "resPeriodicFolioType": {
      "description": "Information regarding periodic folios set on the reservation.",
      "type": "object",
      "properties": {
        "frequency": {
          "description": "Frequency in number of days when folios should be printed for this reservation.",
          "type": "integer"
        },
        "lastFolioDate": {
          "description": "Latest date when a folio was printed using the \"Periodic Batch Folios\" option",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastSettlementDate": {
          "description": "Latest date when a direct bill settlement was automatically done using the \"Direct Bill Batch Folios\" option.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "resPreConfiguredRoutingInstrType": {
      "description": "Instruction to attach Pre-Configured Routing Instructions to a Reservation.",
      "type": "object",
      "properties": {
        "authorizerInfo": {
          "description": "The authorizer information for Promotion Code with attached Complimentary Routing",
          "$ref": "#/definitions/authorizerInfoType"
        },
        "profileType": {
          "description": "Profile Type with attached Routing Instruction.",
          "$ref": "#/definitions/resProfileTypeType"
        },
        "promotionCode": {
          "description": "Promotion Code with attached Complimentary Routing.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "Rate Code with attached Routing Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resProfileTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Group",
        "TravelAgent",
        "Source",
        "ReservationContact",
        "BillingContact",
        "Addressee"
      ]
    },
    "resRevenueBalanceType": {
      "description": "Revenue and Balance Amount summary for the reservation.",
      "type": "object",
      "properties": {
        "balance": {
          "description": "Balance amount on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "foodAndBevRevenue": {
          "description": "Food and Beverage Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "nonRevenue": {
          "description": "Total Non Revenue posted on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "otherRevenue": {
          "description": "Other Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomRevenue": {
          "description": "Room Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalFixedCharge": {
          "description": "Total Fixed Charges on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPayment": {
          "description": "Total payment received for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalRevenue": {
          "description": "Total Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "resSharedGuestInfoType": {
      "description": "Contains information regarding the share reservation.",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "profileId": {
          "$ref": "#/definitions/profileId"
        }
      }
    },
    "resSharedGuestListType": {
      "description": "Collection of shared guest reservations.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resSharedGuestInfoType"
      }
    },
    "reservationAllowedActionType": {
      "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
      "type": "string",
      "enum": [
        "Cancel",
        "Move",
        "PreCharge",
        "PostCharge",
        "FacilitySchedule",
        "Upsell",
        "PreCheckIn",
        "PostToNoShowCancel",
        "NoShow",
        "NameChange",
        "Discount",
        "EnrollToPrimaryMembership",
        "EnrollInProgress"
      ]
    },
    "reservationAllowedActionsType": {
      "description": "Allowed action.",
      "type": "array",
      "maxItems": 11,
      "items": {
        "$ref": "#/definitions/reservationAllowedActionType"
      }
    },
    "reservationBlockType": {
      "description": "Key information about the block for a reservation.",
      "type": "object",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers for the reservation.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockName": {
          "description": "The Name of the block that is attached to the reservation.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "This is the HotelCode of the Block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationDepositType": {
      "description": "Reservation Deposit Type.",
      "type": "object",
      "properties": {
        "amountOwed": {
          "description": "Deposit Amount Owed.",
          "type": "number"
        },
        "amountPaid": {
          "description": "Deposit Amount Paid.",
          "type": "number"
        },
        "amountRequired": {
          "description": "Deposit Amount Required.",
          "type": "number"
        },
        "dueDate": {
          "description": "Deposit Due Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hasOutstanding": {
          "description": "Resolves whether reservation has outstanding deposit.",
          "type": "boolean"
        },
        "hasPaid": {
          "description": "Resolves whether reservation has paid deposit.",
          "type": "boolean"
        },
        "postingDate": {
          "description": "Deposit Posting Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "reservationFolioWindowType": {
      "description": "Folio window view which holds the set of folios for a reservation.",
      "type": "object",
      "properties": {
        "balance": {
          "description": "Running balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "payeeInfo": {
          "description": "The window's configured payee information.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "paymentMethod": {
          "description": "Payment Method Type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationFolioWindowsType": {
      "description": "Collection of reservation folio windows.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationFolioWindowType"
      }
    },
    "reservationHistoryFutureInfoType": {
      "description": "Information of History and Future Reservation details attached to Profiles.",
      "type": "object",
      "properties": {
        "futureList": {
          "description": "Refer to Future list type document.",
          "$ref": "#/definitions/futureListType"
        },
        "historyList": {
          "description": "Refer to History list type document.",
          "$ref": "#/definitions/historyListType"
        }
      }
    },
    "reservationIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "reservationInfoType": {
      "description": "The Reservation class contains the current reservation being created or altered.",
      "type": "object",
      "properties": {
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "allowedActions": {
          "description": "Collection of reservation allowed actions.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "cancellationInfo": {
          "description": "Information regarding why reservation has been/was cancelled.",
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "description": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          }
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "commissionPayoutTo": {
          "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
          "$ref": "#/definitions/commissionPayoutToType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "deposit": {
          "description": "Holds reservation deposit information.",
          "$ref": "#/definitions/reservationDepositType"
        },
        "displayColor": {
          "description": "Color setting of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "expectedServiceTime": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "guestPreferredCurrency": {
          "description": "Currency code preferred by guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelInterfaceStatusList": {
          "description": "Collection of Hotel Interfaces and rights, this is populated only when fetching interface status for rooms.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInterfaceStatusType"
          }
        },
        "hotelName": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "housekeeping": {
          "description": "Information regarding housekeeping for this reservation.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "keyCount": {
          "description": "Number of keys created for the reservation.",
          "type": "integer"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastPrivacyPromptDate": {
          "description": "Last Privacy Prompt Date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready, Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "openFolio": {
          "description": "Returns true when reservation has an open folio.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Attribute OptedForCommunication is set to true when the guest has opted for receiving communicationsl related to the reservation.",
          "type": "boolean"
        },
        "paymentMethod": {
          "description": "Payment Method.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preRegistered": {
          "description": "Defines if the reservation is pre-registered or not.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "reservationFolioWindows": {
          "description": "Collection of reservation folio windows.",
          "$ref": "#/definitions/reservationFolioWindowsType"
        },
        "reservationGuest": {
          "description": "Collection of guests associated with the reservation.",
          "$ref": "#/definitions/resGuestInfoType"
        },
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "reservationPaymentMethod": {
          "description": "Payment method used for this reservation",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "roomStatus": {
          "description": "Current room status",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "specials": {
          "description": "Set of reservation preferences which belongs to the Specials group.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/taxTypeType"
        },
        "turndownInfo": {
          "description": "Currency code preferred by guest.",
          "$ref": "#/definitions/reservationTurndownInfoType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is not in Waitlist status anymore.",
          "$ref": "#/definitions/waitlistResType"
        },
        "walkInIndicator": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "welcomeOffer": {
          "description": "This flag will determine wheather the reservation is eligible for Welcome Offer or not.",
          "type": "boolean"
        }
      }
    },
    "reservationInterfaceStatusType": {
      "description": "Hotel Interface Type for a reservation and status of the various services",
      "type": "object",
      "properties": {
        "hotelInterface": {
          "description": "Hotel interface information for the reservation",
          "$ref": "#/definitions/hotelInterfaceType"
        },
        "interfaceRights": {
          "description": "Contains a list of status/rights for the various services under this interface",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceRightsStatusType"
          }
        },
        "roomExtension": {
          "description": "Identifier for the room extension",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationPaymentMethodType": {
      "type": "object",
      "properties": {
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID element.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            }
          }
        },
        "folioView": {
          "type": "integer"
        },
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "paymentMethod": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationProfileType": {
      "type": "object",
      "properties": {
        "profile": {
          "description": "Provides detailed information regarding either a company or a customer profile.",
          "$ref": "#/definitions/profileType"
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "reservationQueueInformationType": {
      "description": "Information regarding the Date, Duration and Priority of the reservation on Queue for Check in.",
      "type": "object",
      "properties": {
        "averageQueueTimeCurrentReservations": {
          "description": "The average time, in seconds, of the reservations currently in queue.",
          "type": "integer"
        },
        "averageQueueTimeToCheckIn": {
          "description": "The average time, in seconds, a reservation was on queue prior to Check-In.",
          "type": "integer"
        },
        "guestTextInfo": {
          "description": "Information for the message sent to the user",
          "$ref": "#/definitions/queueTextInfoType"
        },
        "priority": {
          "description": "The Queue Priority given to this reservation.",
          "type": "integer"
        },
        "queueDate": {
          "description": "The Business date on which the reservation was due to arrive and is currently placed on Queue for Check In.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "timeSpan": {
          "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
          "type": "object",
          "properties": {
            "duration": {
              "type": "string"
            },
            "durationInSeconds": {
              "description": "The total duration, in seconds, the reservation is on Queue.",
              "type": "integer"
            },
            "endDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        }
      }
    },
    "reservationStayHistoryFutureInfoType": {
      "description": "Information of History and Future Reservation details attached to Profiles.",
      "type": "object",
      "properties": {
        "futureList": {
          "description": "Refer to Future list type document.",
          "$ref": "#/definitions/stayFutureListType"
        },
        "historyList": {
          "description": "Refer to History list type document.",
          "$ref": "#/definitions/stayHistoryListType"
        }
      }
    },
    "reservationTaxTypeInfo": {
      "description": "Provides information about the Tax Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "taxExemptNo": {
          "description": "Tax exempt number on the profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationTurndownInfoType": {
      "description": "Turndown information for a reservation",
      "type": "object",
      "properties": {
        "allowed": {
          "description": "Indicates if turndown is allowed or not",
          "type": "boolean"
        },
        "status": {
          "description": "Indicates turndown status, values could be required, not required, completed",
          "$ref": "#/definitions/turndownStatusType"
        }
      }
    },
    "restaurantCategoryType": {
      "description": "Simple type for Hotel Restaurant.",
      "type": "string",
      "enum": [
        "Restaurant",
        "Retail"
      ]
    },
    "roomAmenitiesCriteria": {
      "description": "Request object for creating Room Amenities.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "roomAmenities": {
          "description": "Room Amenitiesto be created.",
          "$ref": "#/definitions/roomAmenitiesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomAmenitiesDetails": {
      "description": "Response object for fetching Room Amenities.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "roomAmenities": {
          "description": "Collection of Room Amenities.",
          "$ref": "#/definitions/roomAmenitiesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomAmenitiesToBeChanged": {
      "description": "Request object for changing Room Amenities.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "roomAmenities": {
          "description": "Room Amenitiesto be changed.",
          "$ref": "#/definitions/roomAmenitiesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomAmenitiesType": {
      "description": "List of Room Amenities.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomAmenityType"
      }
    },
    "roomAmenityType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "roomRateAvailReasonType": {
      "description": "Indicates the Room Rate is not available due to unavailability of enough items for the rate code.",
      "type": "string",
      "enum": [
        "Available",
        "Restricted",
        "RestrictedDueToInventory",
        "RestrictedDueToOccupancy",
        "RestrictedDueToItemInventory"
      ]
    },
    "roomRateType": {
      "type": "object",
      "properties": {
        "availability": {
          "description": "Used to specify an availability status for the room rate. When available value could be either not specified or \"Available\".",
          "$ref": "#/definitions/roomRateAvailReasonType"
        },
        "awards": {
          "description": "Membership Awards code applied on the reservation.",
          "$ref": "#/definitions/resAwardsType"
        },
        "barRanking": {
          "description": "Best Available rates ranking.",
          "type": "integer"
        },
        "bogoDiscount": {
          "description": "Indicates if the Rate Code has BOGO(Bye one Get one) indicator.",
          "type": "boolean"
        },
        "commissionAmount": {
          "description": "Indicates commission amount used by the rate plan.",
          "type": "integer"
        },
        "commissionCode": {
          "description": "Commission Code applicable for commission calculation for Travel Agent/Company.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "commissionPercentage": {
          "description": "Indicates commission percentage used by the rate plan.",
          "type": "integer"
        },
        "commissionable": {
          "description": "Indicates Commission is applicable for commission calculation for Travel Agent/Company.",
          "type": "boolean"
        },
        "complimentary": {
          "description": "Indicates this reservation rate is complimentary.",
          "type": "boolean"
        },
        "credentialsRequired": {
          "description": "If true, indicates that credentials is required to sell the rate code.",
          "type": "boolean"
        },
        "discountAllowed": {
          "description": "Indicates if the Rate Code is discountable i.e discounts are allowed on the rate code.",
          "type": "boolean"
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fixedRate": {
          "description": "Fixed Rate Indicator.",
          "type": "boolean"
        },
        "foreignExchange": {
          "description": "Exchange Type information for the postings.",
          "$ref": "#/definitions/foreignExchangeType"
        },
        "guestCounts": {
          "description": "A collection of Guest Counts associated with the room rate.",
          "$ref": "#/definitions/guestCountsType"
        },
        "houseUseOnly": {
          "description": "Indicates this reservation is for House use.",
          "type": "boolean"
        },
        "inventoryLender": {
          "description": "Indicates whether the room type inventory was taken from the allotment or House availability.",
          "type": "string"
        },
        "marketCode": {
          "description": "The code that relates to the market being sold to (e.g., the corporate market, packages).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketCodeDescription": {
          "description": "Description of the market code.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "mealPlans": {
          "description": "Meal plan codes for rate plan code.",
          "$ref": "#/definitions/mealPlansType"
        },
        "numberOfUnits": {
          "description": "The number of rooms.",
          "type": "integer"
        },
        "packages": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/packageElementType"
          }
        },
        "promotionCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "rateDescription": {
          "description": "Rate code description.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "rateGroup": {
          "description": "For RatePlanSet equals BESTAVAILABLERATE, in case Rate Groups are enabled the element provides the rate group for the rate plan code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateLevel": {
          "description": "Rate plan type like Corporate,Regular,Military,Weekend etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ratePlanCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rates": {
          "$ref": "#/definitions/ratesType"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "roomId": {
          "description": "A string value representing the unique identification of a room.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomRateInfo": {
          "description": "Information about the Room Rate Combination.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "roomType": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomTypeCharged": {
          "description": "Room Type used for the Rate calculation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCode": {
          "description": "To specify where the business came from e.g. radio, newspaper ad, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "stayProfiles": {
          "description": "Profile associated with the room Stay.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationProfileType"
          }
        },
        "suppressRate": {
          "type": "boolean"
        },
        "taxFreeGuestCounts": {
          "description": "A collection of Tax Free Guest Counts associated with the room rate. This list does not add to the guest count but just indicates number of tax free guests out of guest counts.",
          "$ref": "#/definitions/guestCountsType"
        },
        "taxIncluded": {
          "description": "If true, indicates if tax is included in the rate code.",
          "type": "boolean"
        },
        "total": {
          "$ref": "#/definitions/totalType"
        },
        "totalPoints": {
          "$ref": "#/definitions/pointsType"
        }
      }
    },
    "roomStayType": {
      "type": "object",
      "properties": {
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "availableUpsellOfferCount": {
          "description": "Number of Upsell Offers Available for this stay. This will only be populated if the Upsell Instruction is included in the Allowed Instruction request",
          "type": "integer"
        },
        "bookingMedium": {
          "description": "Classifies the medium(Channel field on reservation screen) through which the reservation is made.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "bookingMediumDescription": {
          "description": "Description of the booking medium.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "currentRoomInfo": {
          "description": "Room information of the reservation for the current day.",
          "$ref": "#/definitions/currentRoomInfoType"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "expectedTimes": {
          "description": "The Expected Arrival and Departure Times.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "guestCounts": {
          "$ref": "#/definitions/guestCountsType"
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready and Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "multiValueAttrs": {
          "description": "Informative indicators indicating different values of an attribute exists over the stay.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 2000
          }
        },
        "originalTimeSpan": {
          "description": "The Original Time Span(Arrival, Departure) which covers the Room Stay. In case of Rolling No Show TimeSpan's StratDate moves forward but OriginalTimeSpan's StratDate remains the same.",
          "$ref": "#/definitions/timeSpanType"
        },
        "ownerReservationType": {
          "description": "Indicates whether reservation is for Unit/Room Owner or Authorized User. If this attribute is not define it is a regular/rental reservation.",
          "$ref": "#/definitions/ownerResTypeType"
        },
        "primaryShareType": {
          "description": "This is populated in case of primary share scenario. This indicates whether this reservation is primary or non primary. Changes or postings to the 'non-primary' share reservation is not allowed.",
          "$ref": "#/definitions/primaryShareTypeType"
        },
        "printRate": {
          "description": "This control whether rate info will be printed in confirmation letter.",
          "type": "boolean"
        },
        "promotion": {
          "description": "Promotions applied to the reservation to get the promotional rate.",
          "$ref": "#/definitions/promotionType"
        },
        "registrationNumber": {
          "description": "Registration Number of the reservation for the current day.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "remoteCheckInAllowed": {
          "description": "Indicates whether the reservation is pre-registered for internet check-in or not.",
          "type": "boolean"
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "roomRates": {
          "description": "A collection of Room Rates associated with a particular Room Stay. Each Room Rate combination can have multiple rates. Example King room, Rack rate plan, Monday through Thursday, weekday amount, Friday and Saturday, weekend amount.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomRateType"
          }
        },
        "suiteWith": {
          "description": "Connecting Rooms.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "total": {
          "description": "The total amount charged for the Room Stay.",
          "$ref": "#/definitions/totalType"
        },
        "totalPoints": {
          "description": "The total number of Points charged for the Room Stay.",
          "$ref": "#/definitions/pointsType"
        },
        "upsellInfo": {
          "description": "Indicates Upsell Information to be applied on Reservation.",
          "$ref": "#/definitions/upsellInfoType"
        }
      }
    },
    "salesInfoType": {
      "description": "Provides sales information about the profiles of type company, travel agent, source and contact.",
      "type": "object",
      "properties": {
        "accountSource": {
          "description": "Defines the account source.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "accountType": {
          "description": "Defines the account type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "actionCode": {
          "description": "Defines the action code.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "businessSegments": {
          "description": "Defines the Business segments.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "competitionCode": {
          "description": "Defines the competition code.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel Code used to filter the sales information.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "industryCode": {
          "description": "Defines the industry code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "influence": {
          "description": "Defines the influence for the contact profile.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "preferredRoom": {
          "description": "Defines the Preferred Room for profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "priority": {
          "description": "Defines the priority.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "roomsPotential": {
          "description": "Defines the rooms potential.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "scope": {
          "description": "Defines the scope.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "scopeCity": {
          "description": "Defines the scope city.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "searchMatchType": {
      "description": "Search match indicating attribute and the matching value.",
      "type": "object",
      "properties": {
        "attribute": {
          "description": "Search match attribute.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "value": {
          "description": "Search match value.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "searchMatchesType": {
      "description": "List of Generic Name-Value-Pair Parameters used for super search matches.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/searchMatchType"
      }
    },
    "sellMessageType": {
      "description": "The SellMessagesType defines the standard attributes that will be retrieved with the sell message.",
      "type": "object",
      "properties": {
        "beginDate": {
          "description": "This is the Begin date for the configured SellMessage.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "chainCode": {
          "description": "This is the chain code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "croCode": {
          "description": "This is the Central Reservation office code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "This is the hotel code or resort.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "languageCode": {
          "description": "This is the language code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "message": {
          "description": "This is the message text.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "This represents the rate plan code of the room type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomType": {
          "description": "This represents the room type code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "stickyFlagYn": {
          "description": "Flag which tells if this message is Sticky (Y/N).",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "usedInModule": {
          "description": "This represents the correct moduletype which should be used for fetching SellMessages.",
          "$ref": "#/definitions/usedInModuleType"
        }
      }
    },
    "sellMessagesType": {
      "description": "The SellMessagesType is the list of message and attributes returned by web service.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "sellMessage": {
          "description": "This is the message text.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/sellMessageType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "setDayTypes": {
      "description": "Request object for setting day type for specified date range.",
      "type": "object",
      "properties": {
        "hotelDayTypes": {
          "description": "Collection of day type entries to be created for specified date range.",
          "$ref": "#/definitions/hotelDayTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "setHotelEvents": {
      "description": "Request object for setting hotel events for specified date range.",
      "type": "object",
      "properties": {
        "hotelEvents": {
          "description": "Collection of hotel calendar event entries to be created.",
          "$ref": "#/definitions/hotelEventCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "shareDistributionInstructionType": {
      "description": "The type of Rate Amount Change to be done on the Sharer reservation. This can be FULL -> Full Rate for each Sharer. SPLIT-> Split the Rate amount between Sharer Reservations. ENTIRE -> This Sharer will get the total amount of the rate code for all the Sharer Reservations.",
      "type": "string",
      "enum": [
        "Full",
        "Entire",
        "Split",
        "CustomSplit"
      ]
    },
    "sourceOfSaleType": {
      "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
      "type": "object",
      "properties": {
        "sourceCode": {
          "description": "The entity/channel who made the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceType": {
          "description": "Type of entity/channel who made the reservation..",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "status": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "stayFutureListType": {
      "description": "A collection of reservation history details attached to Profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : Future reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "stayHistoryListType": {
      "description": "A collection of reservation history details attached to Profiles.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : History reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "stayInfoType": {
      "description": "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties.",
      "type": "object",
      "properties": {
        "adultCount": {
          "description": "A collection of Guest Counts associated with Room Stay.",
          "type": "integer"
        },
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "balance": {
          "description": "Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "bookingChannelCode": {
          "description": "Booking channel code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "childCount": {
          "description": "A collection of Child Counts associated with Room Stay.",
          "type": "integer"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "componentRoomType": {
          "description": "True indicates room type is a component type.",
          "type": "boolean"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "depositPayments": {
          "description": "A collection of deposit and/or payments for the Room Stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "expectedTimes": {
          "description": "The expected arrival, return and departure times of the guest.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "fixedRate": {
          "description": "True if the rate is a fixed rate, otherwise false",
          "type": "boolean"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "guestServiceStatus": {
          "description": "Service Status of In House guest like DND or MUP",
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "linkCode": {
          "description": "Party code",
          "type": "string",
          "maxLength": 2000
        },
        "marketCode": {
          "description": "Market code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketDescription": {
          "description": "Description of Market code",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "numberOfRooms": {
          "description": "Room Id",
          "type": "integer"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "points": {
          "description": "The Points contains the number of points used to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "promotion": {
          "description": "Promotion Codes",
          "$ref": "#/definitions/promotionType"
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "rateAmount": {
          "description": "Rate amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "ratePlanCode": {
          "description": "Rate plan code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateSuppressed": {
          "description": "Whether this rate should be suppressed from view",
          "type": "boolean"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "roomClass": {
          "description": "Room class code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomId": {
          "description": "Room Id",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "roomType": {
          "description": "Room type code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomTypeCharged": {
          "description": "Room type code that was charged",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "scheduledCheckoutTime": {
          "description": "Indicates that this reservation is scheduled for automated check out.",
          "type": "string",
          "format": "date"
        },
        "sourceCode": {
          "description": "Source of business",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "totalAmount": {
          "description": "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "upgradedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "stayReservationInfoType": {
      "description": "The Reservation class contains the current reservation being created or altered.",
      "type": "object",
      "properties": {
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        }
      }
    },
    "surnameType": {
      "description": "Family name, last name.",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "taxType": {
      "description": "Applicable tax element. This element allows for both percentages and flat amounts. If one field is used, the other should be zero since logically, taxes should be calculated in only one of the two ways.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "code": {
          "description": "Code identifying the fee (e.g.,agency fee, municipality fee).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "type": {
          "description": "Used to indicate if the amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).",
          "$ref": "#/definitions/amountDeterminationType"
        }
      }
    },
    "taxTypeType": {
      "description": "Provides information about the Tax Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        }
      }
    },
    "taxesType": {
      "description": "A collection of taxes.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "tax": {
          "description": "An individual tax.",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/taxType"
          }
        }
      }
    },
    "telephoneBookCategoriesCriteria": {
      "description": "Request object for Telephone Book Category.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "telephoneCategories": {
          "description": "Collection of telephone categories to create.",
          "$ref": "#/definitions/telephoneCategoriesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "telephoneBookCategoriesDetails": {
      "description": "Response object for fetch Telephone Categories.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "telephoneCategories": {
          "description": "Collection of telephone categories.",
          "$ref": "#/definitions/telephoneCategoriesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "telephoneBookCategoriesToBeChanged": {
      "description": "Request object for Telephone Book Category.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "telephoneCategories": {
          "description": "Collection of telephone categories to change.",
          "$ref": "#/definitions/telephoneCategoriesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "telephoneBookEntriesCriteria": {
      "description": "Request object for Telephone Book Entries.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "telephoneBookEntries": {
          "description": "Telephone Book Entries to be created.",
          "$ref": "#/definitions/telephoneBookEntriesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "telephoneBookEntriesDetails": {
      "description": "Response object for fetch Telephone Book Entries.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "telephoneBookEntries": {
          "description": "Collection of telephone book entries.",
          "$ref": "#/definitions/telephoneBookEntriesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "telephoneBookEntriesToBeChanged": {
      "description": "Request object for Telephone Book Entries.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "telephoneBookEntries": {
          "description": "Telephone Book Entries to be changed.",
          "$ref": "#/definitions/telephoneBookEntriesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "telephoneBookEntriesType": {
      "description": "This type holds collection of Telephone Book Entries with complete information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/telephoneBookEntryType"
      }
    },
    "telephoneBookEntryType": {
      "description": "This type definition of Telephone Book Entry Type.",
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "categoryDescription": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "categorySequence": {
          "type": "integer"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "id": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "name": {
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "remarks": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "telephone": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "url": {
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        }
      }
    },
    "telephoneCategoriesType": {
      "description": "This type holds collection of Telephone Categories with complete information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/telephoneCategoryType"
      }
    },
    "telephoneCategoryType": {
      "description": "This type definition of Telephone Category Type.",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "generic": {
          "type": "boolean"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "orderBy": {
          "type": "integer"
        }
      }
    },
    "telephoneInfoType": {
      "description": "Information on a telephone number for the customer.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "telephoneType": {
      "description": "Information on a telephone number for the customer.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "extension": {
          "description": "Extension to reach a specific party at the phone number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "templateAirportType": {
      "description": "Base details of the airport.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Airport code identifying the airport.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "description": {
          "description": "Description of the airport.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "direction": {
          "description": "Direction of the airport in relation to the hotel.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "distance": {
          "description": "Distance from the hotel to the airport.",
          "type": "number"
        },
        "distanceType": {
          "description": "Unit of distance for the Distance measurement.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "drivingTime": {
          "description": "Driving time from the hotel to the airport.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sequence": {
          "description": "Sequence number for displaying the airport.",
          "type": "integer"
        },
        "transportationOptions": {
          "description": "Transportation option available for the airport.",
          "type": "array",
          "maxItems": 8,
          "items": {
            "$ref": "#/definitions/transportationInfoType"
          }
        },
        "website": {
          "description": "URL of the airport's website.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        }
      }
    },
    "templateAirportsCriteria": {
      "description": "Request object for creating new template airports.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateAirports": {
          "description": "Collection of template airports to be created.",
          "$ref": "#/definitions/templateAirportsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateAirportsDetails": {
      "description": "Response object for fetching template airports.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateAirports": {
          "description": "Collection of template airports.",
          "$ref": "#/definitions/templateAirportsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateAirportsToBeChanged": {
      "description": "Request object for modifying template airports.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateAirports": {
          "description": "Collection of template airports to be modified.",
          "$ref": "#/definitions/templateAirportsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateAirportsType": {
      "description": "Template airport details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateAirportType"
      }
    },
    "templateAmenitiesCriteria": {
      "description": "Request object for creating amenities at the template level.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateAmenities": {
          "description": "Collection containing details of amenities specified at the template level.",
          "$ref": "#/definitions/configTemplateAmenitiesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateAmenitiesDetails": {
      "description": "Response object for fetching amenities at the template level.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateAmenities": {
          "description": "Collection of amenities specified at the template level.",
          "$ref": "#/definitions/configTemplateAmenitiesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateAmenitiesToBeChanged": {
      "description": "Request object for changing amenities at the template level.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateAmenities": {
          "description": "Collection containing details of amenities specified at the template level.",
          "$ref": "#/definitions/configTemplateAmenitiesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateCodeType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "inactive": {
          "description": "Determines whether this code is inactive or not.",
          "type": "boolean"
        }
      }
    },
    "templateCodesCriteria": {
      "description": "Request object for creating Template Codes.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateCodes": {
          "description": "Template Codes to be created.",
          "$ref": "#/definitions/templateCodesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateCodesDetails": {
      "description": "Response object for fetching Template Codes.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateCodes": {
          "description": "Collection of Template Codes.",
          "$ref": "#/definitions/templateCodesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateCodesToBeChanged": {
      "description": "Request object for changing Template Codes.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateCodes": {
          "description": "Template Codes to be changed.",
          "$ref": "#/definitions/templateCodesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateCodesType": {
      "description": "List of Template Codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateCodeType"
      }
    },
    "templateCountriesCriteria": {
      "description": "Request object for creating new template Countries.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateCountries": {
          "description": "Collection of template of Countries to be created.",
          "$ref": "#/definitions/templateCountriesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateCountriesDetails": {
      "description": "Response object for fetching template Countries.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateCountries": {
          "description": "Collection of template Countries.",
          "$ref": "#/definitions/templateCountriesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateCountriesToBeChanged": {
      "description": "Request object for modifying template Countries.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateCountries": {
          "description": "Collection of template of Countries to be modified.",
          "$ref": "#/definitions/templateCountriesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateCountriesType": {
      "description": "Template of country details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateCountryType"
      }
    },
    "templateCountryType": {
      "description": "Base details of the country",
      "type": "object",
      "properties": {
        "addressDoctorMode": {
          "description": "Defines the mode used to invoke address doctor service.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "countryCode": {
          "description": "Country code identifying the country.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "displayFlag": {
          "description": "Indicates if the country flag should be displayed.",
          "type": "boolean"
        },
        "displaySequence": {
          "description": "Sequence number for displaying the countries.",
          "type": "number"
        },
        "guestAddressFormat": {
          "description": "Guest Address format Codes for confirmation letter.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "isoCode": {
          "description": "ISO standard code for country.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "isoName": {
          "description": "ISO standard name for country.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "mainGroup": {
          "description": "Main Group of Country. Used in statistic reports.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "name": {
          "description": "Name for the country.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "printSequence": {
          "description": "Print Sequence number for report.",
          "type": "number"
        },
        "regionCode": {
          "description": "Regin to which the Country belongs.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "statisticCode": {
          "description": "Statistic code for the country.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        }
      }
    },
    "templateDayTypeCodeType": {
      "description": "Base structure for Day Type Code at both template and hotel levels.",
      "type": "object",
      "properties": {
        "adder": {
          "description": "Value that will be added to rate on a day.",
          "type": "number"
        },
        "code": {
          "description": "Code of a Day Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "color": {
          "description": "Color used to represent Day Type.",
          "$ref": "#/definitions/colorType"
        },
        "description": {
          "description": "Description of a Day Type.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "multiplier": {
          "description": "Value by which the rates will be multiplied on a day.",
          "type": "number"
        },
        "sellSequence": {
          "description": "Sell sequence for a Day Type.",
          "type": "number"
        }
      }
    },
    "templateDayTypeCodesCriteria": {
      "description": "Request object for creating new template day type codes.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateDayTypeCodes": {
          "description": "Collection of template day type codes to be created.",
          "$ref": "#/definitions/templateDayTypeCodesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateDayTypeCodesDetails": {
      "description": "Response object for fetching template day type codes.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateDayTypeCodes": {
          "description": "Collection of template level day type codes.",
          "$ref": "#/definitions/templateDayTypeCodesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateDayTypeCodesToBeChanged": {
      "description": "Request object for modifying template day type codes.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateDayTypeCodes": {
          "description": "Collection of template day type codes to be changed.",
          "$ref": "#/definitions/templateDayTypeCodesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateDayTypeCodesType": {
      "description": "Details for day type code at template level.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateDayTypeCodeType"
      }
    },
    "templateHotelDetailIDType": {
      "description": "Base details used for uniquely identifying a hotel detail.",
      "type": "object",
      "properties": {
        "category": {
          "description": "Specifies the hotel detail category.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "code": {
          "description": "Specifies the hotel detail code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "templateHotelDetailType": {
      "description": "Base details used for storing information about a hotel detail.",
      "type": "object",
      "properties": {
        "category": {
          "description": "Specifies the hotel detail category.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "code": {
          "description": "Specifies the hotel detail code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Specifies the hotel detail description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "sequence": {
          "description": "Specifies the sorting sequence number for the hotel detail.",
          "type": "integer"
        },
        "templateHotelDetailValues": {
          "description": "Collection of values which are associated with the hotel detail.",
          "$ref": "#/definitions/templateHotelDetailValuesType"
        }
      }
    },
    "templateHotelDetailValueType": {
      "description": "This type holds the base information of the hotel detail value which will be associated with a hotel detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Specifies the hotel detail value code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Specifies the description of the hotel detail value.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "sequence": {
          "description": "Specifies the sorting sequence number for the hotel detail value.",
          "type": "integer"
        }
      }
    },
    "templateHotelDetailValuesType": {
      "description": "Collection of template level hotel detail values.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateHotelDetailValueType"
      }
    },
    "templateHotelDetailsCriteria": {
      "description": "Request object for creating hotel details at the template level.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateHotelDetails": {
          "description": "Collection containing information of hotel details to be created at the template level.",
          "$ref": "#/definitions/templateHotelDetailsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateHotelDetailsDetails": {
      "description": "Response object for fetching hotel details at the template level.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateHotelDetails": {
          "description": "Collection of hotel details specified at the template level.",
          "$ref": "#/definitions/templateHotelDetailsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateHotelDetailsIDType": {
      "description": "Collection of template level hotel detail identifiers.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateHotelDetailIDType"
      }
    },
    "templateHotelDetailsToBeChanged": {
      "description": "Request object for changing hotel details at the template level.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateHotelDetails": {
          "description": "Collection containing information of hotel details to be changed at the template level.",
          "$ref": "#/definitions/templateHotelDetailsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateHotelDetailsType": {
      "description": "Collection of template level hotel details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateHotelDetailType"
      }
    },
    "templateJobTitleType": {
      "description": "Base details common between both template and hotel job titles.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Job Title Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the job title.",
          "$ref": "#/definitions/translationTextType80"
        },
        "displayClosingScript": {
          "description": "Flag to indicate if display reservation closing script.",
          "type": "boolean"
        }
      }
    },
    "templateJobTitlesCriteria": {
      "description": "Request object for creating new template job titles.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateJobTitles": {
          "description": "Collection of template job titles to be created.",
          "$ref": "#/definitions/templateJobTitlesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateJobTitlesDetails": {
      "description": "Response object for fetching template job titles.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateJobTitles": {
          "description": "Collection of template job titles.",
          "$ref": "#/definitions/templateJobTitlesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateJobTitlesToBeChanged": {
      "description": "Request object for modifying template job titles.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateJobTitles": {
          "description": "Collection of template job titles to be modified.",
          "$ref": "#/definitions/templateJobTitlesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateJobTitlesType": {
      "description": "Template job title details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateJobTitleType"
      }
    },
    "templateMarketingCitiesCriteria": {
      "description": "Request object for creating new template marketing cities.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateMarketingCities": {
          "description": "Collection of template marketing cities to be created.",
          "$ref": "#/definitions/templateMarketingCitiesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateMarketingCitiesDetails": {
      "description": "Response object for fetching template marketing cities.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateMarketingCities": {
          "description": "Collection of template marketing cities.",
          "$ref": "#/definitions/templateMarketingCitiesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateMarketingCitiesToBeChanged": {
      "description": "Request object for modifying template marketing cities.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "templateMarketingCities": {
          "description": "Collection of template marketing cities to be modified.",
          "$ref": "#/definitions/templateMarketingCitiesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateMarketingCitiesType": {
      "description": "Template marketing city details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateMarketingCityConfigType"
      }
    },
    "templateMarketingCityConfigType": {
      "description": "Base details of the marketing city.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the marketing city.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "direction": {
          "description": "Direction of the marketing city in relation to the hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "distance": {
          "description": "Distance from the hotel to the marketing city.",
          "type": "number"
        },
        "distanceType": {
          "description": "Unit of distance for the Distance measurement.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "drivingTime": {
          "description": "Driving time from the hotel to the marketing city.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "inactive": {
          "description": "Flag to indicate whether the marketing city is inactive or not.",
          "type": "boolean"
        },
        "marketingCity": {
          "description": "Marketing city code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "newRegionCode": {
          "description": "New region code to change the marketing city to. Template marketing cities allow editing of the region code. Because this is a key field we need to retain the original region code to locate the appropriate record to update. The original region code element is located in MarketingCityBaseType.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "regionCode": {
          "description": "Region that the marketing city belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sequence": {
          "description": "Sequence number for displaying the marketing city.",
          "type": "integer"
        }
      }
    },
    "templateMarketingCityInfoType": {
      "description": "Template marketing city details.",
      "type": "object",
      "properties": {
        "marketingCity": {
          "description": "Marketing city code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "regionCode": {
          "description": "Region code the marketing city belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "tierAdministrationType": {
      "description": "Do not upgrade membership. The membership may be downgraded.",
      "type": "string",
      "enum": [
        "Disabled",
        "NoUpgrade"
      ]
    },
    "timeSpanDaysOfWeekType": {
      "description": "Container for Time span with days of week.",
      "type": "object",
      "properties": {
        "friday": {
          "type": "boolean"
        },
        "monday": {
          "type": "boolean"
        },
        "saturday": {
          "type": "boolean"
        },
        "sunday": {
          "type": "boolean"
        },
        "thursday": {
          "type": "boolean"
        },
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        },
        "tuesday": {
          "type": "boolean"
        },
        "wednesday": {
          "type": "boolean"
        }
      }
    },
    "timeSpanType": {
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "type": "object",
      "properties": {
        "duration": {
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "totalType": {
      "description": "The total amount charged for the service including additional amounts and fees.",
      "type": "object",
      "properties": {
        "amountAfterTax": {
          "description": "The total amount including all associated taxes (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "amountBeforeTax": {
          "description": "The total amount not including any associated tax (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "code": {
          "description": "Type of charge.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fees": {
          "description": "A collection of fees or service charges.",
          "$ref": "#/definitions/feesType"
        },
        "rateOverride": {
          "description": "When true indicates that the rate amount has been overridden.",
          "type": "boolean"
        },
        "taxes": {
          "description": "A collection of taxes.",
          "$ref": "#/definitions/taxesType"
        }
      }
    },
    "translationTextType2000": {
      "description": "Contains Multiple translated texts and language codes.",
      "type": "object",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 2000.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationTextType30": {
      "description": "Contains Multiple translated texts and language codes.",
      "type": "object",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 30.",
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationTextType50": {
      "description": "Contains Multiple translated texts and language codes.",
      "type": "object",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 50.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationTextType80": {
      "description": "Contains Multiple translated texts and language codes.",
      "type": "object",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 80.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationsTextType": {
      "description": "Language code for the translation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "description": "Language code for the translation.",
        "type": "object",
        "properties": {
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          },
          "value": {
            "description": "Used for Character Strings, length 0 to 2000.",
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          }
        }
      }
    },
    "transportationCodeListType": {
      "description": "List of available transportations from airport to get into Hotel.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transportationCodeType"
      }
    },
    "transportationCodeType": {
      "description": "Transportation Code available from Airport to the Hotel.",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "transportationCriteria": {
      "description": "Request object for creating transportation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transportationList": {
          "$ref": "#/definitions/transportationListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transportationDetails": {
      "description": "Response object for information regarding transportation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transportationList": {
          "$ref": "#/definitions/transportationListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transportationInfoType": {
      "description": "Information about the transportation type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code for the transportation type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the transportation type.",
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        },
        "label": {
          "description": "Single character label for the transportation type.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        }
      }
    },
    "transportationListType": {
      "description": "Collection of hotel level transportation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transportationType"
      }
    },
    "transportationTemplatesCriteria": {
      "description": "Request object for creating transportation templates.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transportationTemplates": {
          "$ref": "#/definitions/transportationTemplatesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transportationTemplatesDetails": {
      "description": "Response object for fetching transportation templates.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transportationTemplates": {
          "$ref": "#/definitions/transportationTemplatesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transportationTemplatesToBeChanged": {
      "description": "Request object for modifying transportation templates.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transportationTemplates": {
          "$ref": "#/definitions/transportationTemplatesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transportationTemplatesType": {
      "description": "Collection of transportation templates.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelTransportationType"
      }
    },
    "transportationToBeChanged": {
      "description": "Request object for modifying transportation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transportationList": {
          "$ref": "#/definitions/transportationListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transportationType": {
      "description": "Information about the transportations of the hotel.",
      "type": "object",
      "properties": {
        "comments": {
          "description": "Comments about the transportation.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "description": {
          "description": "The description of the transportation.",
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel code for the transportation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "keyOptions": {
          "description": "This is a placeholder element for future use. Functionality may not be available for the current implementation.",
          "$ref": "#/definitions/codeListType"
        },
        "label": {
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "orderBy": {
          "type": "integer"
        },
        "phoneNumber": {
          "description": "The name of the package.",
          "$ref": "#/definitions/telephoneType"
        },
        "priceRange": {
          "description": "The price range of the transportation.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "relativePosition": {
          "$ref": "#/definitions/relativePositionType"
        },
        "transportationCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "website": {
          "description": "Web address associated with transportation.",
          "$ref": "#/definitions/uRLType"
        }
      }
    },
    "turndownStatusType": {
      "description": "Simple type for turndown status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Required, Not Required and Completed.",
      "type": "string",
      "enum": [
        "Required",
        "NotRequired",
        "Compeleted"
      ]
    },
    "uRLInfoType": {
      "description": "Web site address.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "url": {
          "description": "Provides URL information.",
          "$ref": "#/definitions/uRLType"
        }
      }
    },
    "uRLType": {
      "description": "Web site address, in IETF(The Internet Engineering Task Force) specified format.",
      "type": "object",
      "properties": {
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "type": {
          "description": "Defines the purpose of the URL address, such as personal, business, public, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "uniqueIDListType": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "uniqueID_Type": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "upsellInfoType": {
      "description": "Information regarding upsell for a reservation.",
      "type": "object",
      "properties": {
        "originalInfo": {
          "description": "Original Values of the reservation prior to upgrade.",
          "type": "object",
          "properties": {
            "nights": {
              "description": "The number of nights of the reservation before being upgraded.",
              "type": "integer"
            },
            "rateCode": {
              "description": "The Rate Code of the Reservation before it was upgraded",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "roomType": {
              "description": "Original Reservation Room Type before being upgraded.",
              "$ref": "#/definitions/codeDescriptionType"
            },
            "totalAmount": {
              "description": "Total Amount of the reservation before it was upgraded.",
              "$ref": "#/definitions/currencyAmountType"
            }
          }
        },
        "upsellInfo": {
          "description": "Information of a reservation during the process of upgrade.",
          "type": "object",
          "properties": {
            "firstNightUpsellAmount": {
              "description": "First Night Total Amount including Upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "firstNightUpsellCharge": {
              "description": "First Night Upsell Charges.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "percentageSavings": {
              "description": "Percentage savings resulting from accepting upsell offer. This will be calculated as the ratio of the amount saved by accepting the upsell offer to the actual room rate (i.e. room rate when upsell is not offered)",
              "type": "number",
              "maximum": 100,
              "minimum": 0
            },
            "roomLongDescription": {
              "description": "Detail description of the Room Type.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "roomType": {
              "description": "Reservation Room Type for Upsell.",
              "$ref": "#/definitions/codeDescriptionType"
            },
            "ruleCode": {
              "description": "Upsell rule code",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "ruleDescription": {
              "description": "Upsell rule description",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "ruleId": {
              "description": "Upsell Rule Id.",
              "type": "integer"
            },
            "totalActualRateAmount": {
              "description": "Actual Total Room Rate for the Target Upsell Room Type.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellCharge": {
              "description": "Amount that was charged for the upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellMoneyAmount": {
              "description": "Total Amount that was charged including upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellPoints": {
              "description": "Total Upsell Points.",
              "type": "integer"
            },
            "upsellDate": {
              "description": "The date on which reservation is upgraded.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "upsellUser": {
              "description": "User who upgraded the reservation.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            }
          }
        }
      }
    },
    "usedInModuleType": {
      "description": "Simple type for indicating the module for which user wants to create the SellMessage. Valid module types are Look To Book Sales,Reservations,Blocks,Function Diary and Group Rooms Control.",
      "type": "string",
      "enum": [
        "Blocks",
        "Reservations",
        "FunctionDiary",
        "LookToBookSales",
        "GroupRoomsControl"
      ]
    },
    "userDefinedFieldGroupDataType": {
      "description": "Simple type used for User Defined Field Group Data Type.",
      "type": "string",
      "enum": [
        "Integer",
        "Char"
      ]
    },
    "userDefinedFieldGroupType": {
      "description": "Information representation of User Defined Field Group.",
      "type": "object",
      "properties": {
        "dataLength": {
          "description": "Length of field values of User Defined Field Group.",
          "type": "number"
        },
        "dataType": {
          "description": "The Data Type of User Defined Field Group(eg. Integer, Char and null).",
          "$ref": "#/definitions/userDefinedFieldGroupDataType"
        },
        "description": {
          "description": "The Description of User Defined Field Group.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "groupCode": {
          "description": "The Code of User Defined Field Group.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "protected": {
          "description": "Indicates that if the group could be deleted. This is a readonly element an it is only used in the fetch operation.",
          "type": "boolean"
        }
      }
    },
    "userDefinedFieldGroupsCriteria": {
      "description": "Request object for creating User Defined Field Groups.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "userDefinedFieldGroups": {
          "description": "User Defined Field Groups to be created.",
          "$ref": "#/definitions/userDefinedFieldGroupsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "userDefinedFieldGroupsDetails": {
      "description": "Response object for fetching User Defined Field Groups.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "userDefinedFieldGroups": {
          "description": "Collection of User Defined Field Groups.",
          "$ref": "#/definitions/userDefinedFieldGroupsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "userDefinedFieldGroupsToBeChanged": {
      "description": "Request object for changing User Defined Field Groups.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "userDefinedFieldGroups": {
          "description": "User Defined Field Groups to be changed.",
          "$ref": "#/definitions/userDefinedFieldGroupsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "userDefinedFieldGroupsType": {
      "description": "A recurring element that identifies the User Defined Field Group.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/userDefinedFieldGroupType"
      }
    },
    "userDefinedFieldValueType": {
      "description": "Contains Common Master configuration detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "groupCode": {
          "description": "The group which the User Defined Field Value belongs to.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "userDefinedFieldValuesCriteria": {
      "description": "Request object for creating User Defined Field Values.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "userDefinedFieldValues": {
          "description": "User Defined Field Value to be created.",
          "$ref": "#/definitions/userDefinedFieldValuesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "userDefinedFieldValuesDetails": {
      "description": "Response object for fetching User Defined Field Values.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "userDefinedFieldValues": {
          "description": "Collection of User Defined Field Values.",
          "$ref": "#/definitions/userDefinedFieldValuesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "userDefinedFieldValuesToBeChanged": {
      "description": "Request object for changing User Defined Field Values.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "userDefinedFieldValues": {
          "description": "User Defined Field Values to be changed.",
          "$ref": "#/definitions/userDefinedFieldValuesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "userDefinedFieldValuesType": {
      "description": "A recurring element that identifies the User Defined Field Value.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/userDefinedFieldValueType"
      }
    },
    "userDefinedFieldsType": {
      "description": "A common type used to hold user defined fields(UDFs). This type should be used to handle UDFs on RReservation, Profiles, etc.",
      "type": "object",
      "properties": {
        "characterUDFs": {
          "description": "Collection of user defined fields of Character/String Type.",
          "$ref": "#/definitions/characterUDFsType"
        },
        "dateUDFs": {
          "description": "Collection of user defined fields of Date Type.",
          "$ref": "#/definitions/dateUDFsType"
        },
        "numericUDFs": {
          "description": "Collection of user defined fields of Numeric Type.",
          "$ref": "#/definitions/numericUDFsType"
        }
      }
    },
    "vIPType": {
      "description": "The supplier's ranking of the customer.",
      "type": "object",
      "properties": {
        "vipCode": {
          "description": "VIP Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "vipDescription": {
          "description": "VIP Description.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "waitlistResType": {
      "description": "Information regarding why reservation is being /has been waitlisted.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description why the reservation is being /has been waitlisted.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "priorityCode": {
          "description": "Waitlist Priority Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "priorityDescription": {
          "description": "Waitlist priority Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reasonCode": {
          "description": "Waitlist Reason Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonDescription": {
          "description": "Waitlist Reason Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "telephone": {
          "description": "Guest telephone number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "warningType": {
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "type": "object",
      "properties": {
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "maxLength": 8,
          "minLength": 1
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "description": "Used in conjunction with the Success element to define a business error.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "webUserAccountType": {
      "description": "Web User Account of the guest.",
      "type": "object",
      "properties": {
        "autoGeneratePassword": {
          "description": "A flag which determines if the password is auto generated.",
          "type": "boolean"
        },
        "comments": {
          "description": "Comments.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "domainCode": {
          "description": "Domain code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "history": {
          "description": "Web User Account History.",
          "$ref": "#/definitions/webUserHistoryType"
        },
        "inactive": {
          "description": "Boolean flag that indicates whether the web account is inactive or not.",
          "type": "boolean"
        },
        "locked": {
          "description": "Boolean flag that indicates whether the web account is locked or not.",
          "type": "boolean"
        },
        "loginName": {
          "description": "Login Name of the guest.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "newLoginName": {
          "description": "New Login Name of the guest.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "newPassword": {
          "description": "Login Password.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "securityAnswer": {
          "description": "Answer to the Security Question.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "securityQuestion": {
          "description": "Security Question and its Code associated with the account to verify the user.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "webUserAccountsType": {
      "description": "Web User Accounts List.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/webUserAccountType"
      }
    },
    "webUserHistoryType": {
      "description": "Creation date time, Creator Id, last modification date time and last Modifier Id.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "inactiveDate": {
          "description": "Inactive date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastLogin": {
          "description": "Last login date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastPasswordChange": {
          "description": "Last Password change date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "yieldAdjustmentCodeType": {
      "description": "Provides information about the Adjustment Codes.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "code": {
          "description": "Code of the Adjustment Codes.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "description": {
          "description": "Description of the Adjustment Codes.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Yield Adjustment Type. e.g. Per Stay for ST",
          "$ref": "#/definitions/yieldAdjustmentTypeType"
        }
      }
    },
    "yieldAdjustmentCodesCriteria": {
      "description": "Request object for creating new Yield AdjustmentCodes Configurations.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "yieldAdjustmentCodes": {
          "description": "Yield AdjustmentCodes Configurations to be created.",
          "$ref": "#/definitions/yieldAdjustmentCodesType"
        }
      }
    },
    "yieldAdjustmentCodesDetails": {
      "description": "Response object for fetching Yield AdjustmentCodes configurations.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "yieldAdjustmentCodes": {
          "description": "Collection of Yield AdjustmentCodes configurations.",
          "$ref": "#/definitions/yieldAdjustmentCodesType"
        }
      }
    },
    "yieldAdjustmentCodesToBeChanged": {
      "description": "Request object for changing existing Yield AdjustmentCodes Configurations.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "yieldAdjustmentCodes": {
          "description": "Yield AdjustmentCodes Configurations to be changed.",
          "$ref": "#/definitions/yieldAdjustmentCodesType"
        }
      }
    },
    "yieldAdjustmentCodesType": {
      "description": "Holds Yield AdjustmentCodes details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/yieldAdjustmentCodeType"
      }
    },
    "yieldAdjustmentTypeType": {
      "description": "Defines values for Yield Adjustment Types.",
      "type": "string",
      "enum": [
        "PerStay",
        "PerNight",
        "PerPersonPerNight",
        "PerPersonPerStay"
      ]
    },
    "yieldCategoriesCriteria": {
      "description": "Request object for creating new Yield Category Configurations.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Yield Category.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Yield Category.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "yieldCategoriesDetails": {
      "description": "Response object for fetching Yield Category configurations.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "yieldCategories": {
          "description": "Collection of Yield Category configurations.",
          "$ref": "#/definitions/yieldCategoriesType"
        }
      }
    },
    "yieldCategoriesToBeChanged": {
      "description": "Request object for changing existing Yield Category Configurations.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Yield Category.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Yield Category.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "yieldCategoriesType": {
      "description": "Holds Yield Category details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/yieldCategoryType"
      }
    },
    "yieldCategoryType": {
      "description": "Provides information about the Yield Category.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Yield Category.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Yield Category.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "yieldMarketTypeType": {
      "description": "Details for Yield Market Type.",
      "type": "object",
      "properties": {
        "alternativeCode": {
          "description": "If the yield market code does not return a result, this alternative yield market code is used instead.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "code": {
          "description": "Yield Market Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "default": {
          "description": "Indicates the default yield market type.",
          "type": "boolean"
        },
        "description": {
          "description": "Description for the yield market code.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel code for which the yield market type belong to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "yieldMarketTypesCriteria": {
      "description": "Request object for creating new Yield Market Types.",
      "type": "object",
      "properties": {
        "alternativeCode": {
          "description": "If the yield market code does not return a result, this alternative yield market code is used instead.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "code": {
          "description": "Yield Market Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "default": {
          "description": "Indicates the default yield market type.",
          "type": "boolean"
        },
        "description": {
          "description": "Description for the yield market code.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel code for which the yield market type belong to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "yieldMarketTypesDetails": {
      "description": "Response object for fetching Yield Market Types.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "yieldMarketTypes": {
          "description": "Collection of Yield Market Types.",
          "$ref": "#/definitions/yieldMarketTypesType"
        }
      }
    },
    "yieldMarketTypesToBeChanged": {
      "description": "Request object for changing existing Yield Market Types.",
      "type": "object",
      "properties": {
        "alternativeCode": {
          "description": "If the yield market code does not return a result, this alternative yield market code is used instead.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "code": {
          "description": "Yield Market Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "default": {
          "description": "Indicates the default yield market type.",
          "type": "boolean"
        },
        "description": {
          "description": "Description for the yield market code.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel code for which the yield market type belong to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "yieldMarketTypesType": {
      "description": "List of Yield Market Type to be configured or fetched",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/yieldMarketTypeType"
      }
    }
  },
  "tags": [
    {
      "description": "The ChainConfigService Web Service offers capability of creating, managing, and retrieving of chain configuration.",
      "name": "ChainConfig"
    },
    {
      "name": "ExternalConfig"
    },
    {
      "description": "The Hotel Config Service Web Service offers capability to configure Master Data needed for Hotel Configuration such as managing Room Classes, Room Types, Rooms, etc.",
      "name": "HotelConfig"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}