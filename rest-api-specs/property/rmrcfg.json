{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "APIs to cater for Room Rotation Configuration functionality in OPERA Cloud. Api provides capability to handle Room Rotation in OPERA Cloud. Room Rotation provides room ownership options for automatic inventory rotation and prioritization for owner rooms assignment and occupancy.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "title": "OPERA Cloud Room Rotation Configuration Service API",
    "version": "23.2",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality-integrations_ww@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "basePath": "/rmr/config/v1",
  "paths": {
    "/adjustmentReasons": {
      "get": {
        "description": "Use this API to get configured Room Rotation Adjustment Reasons. <p><strong>OperationId:</strong>getAdjustmentReasons</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Get Room Rotation Adjustment Reasons",
        "operationId": "getAdjustmentReasons",
        "parameters": [
          {
            "type": "boolean",
            "default": false,
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "maxItems": 4000,
            "type": "array",
            "items": {
              "maxLength": 8,
              "minLength": 0,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Rotation Adjustment Reason Codes to be searched.  Multiple values can be entered by adding multiple query parameters.",
            "name": "code",
            "in": "query"
          },
          {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "description": "Wildcard search on the code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Description of the code.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Room Rotation Adjustment Reasons.",
            "schema": {
              "$ref": "#/definitions/FetchAdjustmentReasonsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AdjustmentReasons not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to post Room Rotation Adjustment Reasons. <p><strong>OperationId:</strong>postAdjustmentReasons</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Post Room Rotation Adjustment Reasons",
        "operationId": "postAdjustmentReasons",
        "parameters": [
          {
            "description": "Request object for creating a new Room Rotation Adjustment Reason.",
            "name": "CreateAdjustmentReasonsDetails",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/CreateAdjustmentReasonsDetails"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/adjustmentReasons/{adjustmentReasonsId}": {
      "put": {
        "description": "Use this API to update Room Rotation Adjustment Reasons. <p><strong>OperationId:</strong>putAdjustmentReasons</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Update Room Rotation Adjustment Reasons",
        "operationId": "putAdjustmentReasons",
        "parameters": [
          {
            "maxLength": 8,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Room Rotation Adjustment Reason",
            "name": "adjustmentReasonsId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing an existing Room Rotation Adjustment Reasons.",
            "name": "ChangeAdjustmentReasonsDetails",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/ChangeAdjustmentReasonsDetails"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/AdjustmentReasonsDetailsUpdated"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete Room Rotation Adjustment Reasons. <p><strong>OperationId:</strong>deleteAdjustmentReasons</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Delete Room Rotation Adjustment Reasons",
        "operationId": "deleteAdjustmentReasons",
        "parameters": [
          {
            "maxLength": 8,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Room Rotation Adjustment Reason.",
            "name": "adjustmentReasonsId",
            "in": "path",
            "required": true
          },
          {
            "maxItems": 4000,
            "type": "array",
            "items": {
              "maxLength": 8,
              "minLength": 0,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Code of the Room Rotation Adjustment Reason.  Multiple values can be entered by adding multiple query parameters.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/revenueTransactionCodes": {
      "get": {
        "description": "Use this API to retrieve all existing Room Rotation Revenue Transaction Codes for a given hotel. <p><strong>OperationId:</strong>getRevenueTransactionCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Retrieve all Room Rotation Revenue Transaction Codes",
        "operationId": "getRevenueTransactionCodes",
        "parameters": [
          {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Indicate to retrieve transaction codes that are marked as Rotation Revenue transaction codes. If this value is omitted, all transaction codes will be returned for the given property.",
            "name": "rotationRevenue",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for retrieving revenue transaction codes for a given property",
            "schema": {
              "$ref": "#/definitions/FetchRevenueTransactionCodesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RevenueTransactionCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to update the room rotation revenue status of a set of transaction codes. <p><strong>OperationId:</strong>putRevenueTransactionCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Update the room rotation revenue status of a set of transaction codes",
        "operationId": "putRevenueTransactionCodes",
        "parameters": [
          {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for updating the rotation revenue status of a transaction code for a given property.",
            "name": "ChangeRevenueTransactionCodesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/ChangeRevenueTransactionCodesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/ChangeRevenueTransactionCodesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rotationPeriod": {
      "get": {
        "description": "Use this API to fetch Room Rotation Period based on criteria. <p><strong>OperationId:</strong>getRotationPeriod</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Fetch Room Rotation Period",
        "operationId": "getRotationPeriod",
        "parameters": [
          {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Object for Fetch Rotation Period",
            "schema": {
              "$ref": "#/definitions/fetchRotationPeriod"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RotationPeriod not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "Use this API to change Room Rotation Period. <p><strong>OperationId:</strong>putRotationPeriod</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Change Room Rotation Period",
        "operationId": "putRotationPeriod",
        "parameters": [
          {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request Object for changing Rotation Period",
            "name": "rotationPeriod",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/rotationPeriod"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/ChangeRotationPeriodDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rotationRules": {
      "post": {
        "description": "This operation will create/update/delete Rotation Setup Rules sent in the request and then recalculate rotation points.  <p><strong>OperationId:</strong>postRoomRotationRules</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Save changes to Rotation Setup Rules and recalculate Rotation Points",
        "operationId": "postRoomRotationRules",
        "parameters": [
          {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for saving changes to room rotation setup rules.",
            "name": "rotationRules",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomRotationRules"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rules": {
      "get": {
        "description": "Use this API to retrieve all existing Room Rotation Setup Rules based on criteria. <p><strong>OperationId:</strong>getRotationRules</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Retrieve all Room Rotation Setup Rules",
        "operationId": "getRotationRules",
        "parameters": [
          {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maximum": 200,
            "type": "integer",
            "default": 25,
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Points",
              "OwnerMultiplier",
              "RoomStatusMultiplier"
            ],
            "type": "string",
            "description": "Simple type for Rotation Setup Rule(s).",
            "name": "setupType",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "description": "If set to True, only Inactive Rotation Setup Rules will be retrieved. Otherwise, only Active Rotation Setup Rules will be retrieved.",
            "name": "inactiveRules",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for retrieving rotation rules for a given property",
            "schema": {
              "$ref": "#/definitions/FetchRotationRules"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RotationRules not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "This API has been deprecated and will be replaced by <p><strong>OperationId:</strong>postRoomRotationRules</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Create Room Rotation Rules",
        "operationId": "postRotationRules",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating Rotation Rules for a given property",
            "name": "rotationRules",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/rotationRules"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/rules/{ruleId}": {
      "put": {
        "description": "This API has been deprecated and will be replaced by <p><strong>OperationId:</strong>postRoomRotationRules</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Change Room Rotation Rules",
        "operationId": "putRotationRules",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Rotation Group Code.",
            "name": "ruleId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing room rotation rules.",
            "name": "rotationRules",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/rotationRules"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "This API has been deprecated and will be replaced by <p><strong>OperationId:</strong>postRoomRotationRules</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Delete an existing Room Rotation Rule",
        "operationId": "deleteRotationRules",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Rotation Rule.",
            "name": "ruleId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/unitGrades": {
      "get": {
        "description": "Use this API to Get Room Rotation Owner Room Grades. <p><strong>OperationId:</strong>getUnitGrades</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Get Room Rotation Owner Room Grades",
        "operationId": "getUnitGrades",
        "parameters": [
          {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxItems": 4000,
            "type": "array",
            "items": {
              "maxLength": 20,
              "minLength": 1,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Unique ID(s) of hotel(s).",
            "name": "hotelIds",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "maxItems": 4000,
            "type": "array",
            "items": {
              "maxLength": 8,
              "minLength": 1,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Configured Owner Room Grade Codes to be searched.  Multiple values can be entered by adding multiple query parameters.",
            "name": "code",
            "in": "query"
          },
          {
            "maxLength": 8,
            "minLength": 1,
            "type": "string",
            "description": "Wildcard search on Owner Room Grade Codes.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Description of Owner Room Grade Codes.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Room Rotation Unit Grades.",
            "schema": {
              "$ref": "#/definitions/FetchUnitGradesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "UnitGrades not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create a new Room Rotation Owner Room Grade Code. <p><strong>OperationId:</strong>postUnitGrades</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Create a new Room Rotation Owner Room Grade Code",
        "operationId": "postUnitGrades",
        "parameters": [
          {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating a new Room Rotation Owner Room Unit Grade.",
            "name": "CreateUnitGradesDetails",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/CreateUnitGradesDetails"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/unitGrades/{unitGradeCode}": {
      "put": {
        "description": "Use this API to update Room Rotation Owner Room Unit Grades. <p><strong>OperationId:</strong>putUnitGrades</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Change an existing Room Rotation Owner Room Unit Grade",
        "operationId": "putUnitGrades",
        "parameters": [
          {
            "maxLength": 8,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Owner Room Unit Grade.",
            "name": "unitGradeCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing an existing Room Rotation Owner Room Unit Grades.",
            "name": "ChangeUnitGradesDetails",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/ChangeUnitGradesDetails"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/UnitGradesDetailsUpdated"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete an existing Room Rotation Owner Room Unit Grade. <p><strong>OperationId:</strong>deleteUnitGrades</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Delete an existing Room Rotation Owner Room Unit Grade",
        "operationId": "deleteUnitGrades",
        "parameters": [
          {
            "maxLength": 8,
            "minLength": 1,
            "type": "string",
            "description": "Unique Code of Owner Room Unit Grade.",
            "name": "unitGradeCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxItems": 4000,
            "type": "array",
            "items": {
              "maxLength": 8,
              "minLength": 1,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Owner Room Unit Grade Code.  Multiple values can be entered by adding multiple query parameters.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/overrideReasons": {
      "get": {
        "description": "Use this API to get configured Room Rotation Override Reasons <p><strong>OperationId:</strong>getOverrideReasons</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Get Room Rotation Override Reasons",
        "operationId": "getOverrideReasons",
        "parameters": [
          {
            "type": "boolean",
            "default": false,
            "description": "Determines wether to fetch inactive records or not.",
            "name": "fetchInactive",
            "in": "query"
          },
          {
            "maxItems": 4000,
            "type": "array",
            "items": {
              "maxLength": 8,
              "minLength": 0,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Room Rotation Override Reason Codes to be searched.  Multiple values can be entered by adding multiple query parameters.",
            "name": "code",
            "in": "query"
          },
          {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "description": "Wildcard search on the Room Rotation Override Reason code.",
            "name": "wildCard",
            "in": "query"
          },
          {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Description of the configured Room Rotation Override Reason.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetching Room Rotation Override Reasons.",
            "schema": {
              "$ref": "#/definitions/overrideReasonsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "OverrideReasons not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create a new Room Rotation Override Reason. <p><strong>OperationId:</strong>postOverrideReasons</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Create a new Room Rotation Override Reason",
        "operationId": "postOverrideReasons",
        "parameters": [
          {
            "description": "Request object for creating a new Room Rotation Override Reason.",
            "name": "overrideReasonsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/overrideReasonsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/overrideReasons/{overrideReasonsId}": {
      "put": {
        "description": "Use this API to update an existing Room Rotation Override Reason. <p><strong>OperationId:</strong>putOverrideReasons</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Change an existing Room Rotation Override Reason",
        "operationId": "putOverrideReasons",
        "parameters": [
          {
            "maxLength": 8,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Room Rotation Override Reason",
            "name": "overrideReasonsId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing an existing Room Rotation Override Reason.",
            "name": "overrideReasonsToBeChanged",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/overrideReasonsToBeChanged"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete an existing Room Rotation Override Reason. <p><strong>OperationId:</strong>deleteOverrideReasons</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Delete an existing Room Rotation Override Reason",
        "operationId": "deleteOverrideReasons",
        "parameters": [
          {
            "maxLength": 8,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of Room Rotation Override Reason",
            "name": "overrideReasonsId",
            "in": "path",
            "required": true
          },
          {
            "maxItems": 4000,
            "type": "array",
            "items": {
              "maxLength": 8,
              "minLength": 0,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Code of the Room Rotation Override Reason.  Multiple values can be entered by adding multiple query parameters.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/roomOwnerReferrals": {
      "get": {
        "description": "Use this API to fetch profile Owner Referral Records. <p><strong>OperationId:</strong>getRoomOwnerReferrals</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Get Profile Owner Referral Records.",
        "operationId": "getRoomOwnerReferrals",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of profile.",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": false,
            "description": "If set to True, Inactive Room Owner Referrals will also be retrieved. Otherwise, only Active Room Owner Referrals details will be retrieved.",
            "name": "includeInactive",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for getRoomOwnerReferrals operation.",
            "schema": {
              "$ref": "#/definitions/roomOwnerReferralDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "getRoomOwnerReferrals not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create multiple Room Owner Referral Records. <p><strong>OperationId:</strong>postRoomOwnerReferrals</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Create Room Owner Referrals",
        "operationId": "postRoomOwnerReferrals",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of profile.",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating room owner referrals.",
            "name": "createRoomOwnerReferralDetails",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/createRoomOwnerReferralDetails"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/roomOwnerReferrals/{roomOwnerReferralId}": {
      "put": {
        "description": "Use this API to update Room Owner Referral Record. <p><strong>OperationId:</strong>putRoomOwnerReferral</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Change Room Owner Referral Record",
        "operationId": "putRoomOwnerReferral",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of profile.",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Room Owner Referral Record.",
            "name": "roomOwnerReferralId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for changing room owner referral record.",
            "name": "changeRoomOwnerReferralDetails",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeRoomOwnerReferralDetails"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "Use this API to delete Room Owner Referral Record. <p><strong>OperationId:</strong>deleteRoomOwnerReferral</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Delete Room Owner Referral Record",
        "operationId": "deleteRoomOwnerReferral",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of profile.",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Room Owner Referral Record.",
            "name": "roomOwnerReferralId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/profiles/{profileId}/roomOwners": {
      "get": {
        "description": "Use this API to fetch profile Room Ownership Records. <p><strong>OperationId:</strong>getProfileRoomOwners</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Get Profile Room Ownership Records",
        "operationId": "getProfileRoomOwners",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of profile.",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": false,
            "description": "If set to True, Inactive Room Ownership Records will also be retrieved. Otherwise, only Active Room Ownership Records will be retrieved.",
            "name": "showInactiveRoomOwners",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for getProfileRoomOwner operation.",
            "schema": {
              "$ref": "#/definitions/roomOwnershipDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "getProfileRoomOwners not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/roomOwners": {
      "put": {
        "description": "Use this API to update Multiple Room Ownership Records across properties. <p><strong>OperationId:</strong>putRoomOwner</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Change Room Ownership Records",
        "operationId": "putRoomOwner",
        "parameters": [
          {
            "description": "Request object for changing room ownership record.",
            "name": "changeRoomOwnerDetails",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeRoomOwnerDetails"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to hold room ownership conflict records.",
            "schema": {
              "$ref": "#/definitions/roomOwnershipDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "Use this API to create Create Room Ownership Record. <p><strong>OperationId:</strong>postRoomOwner</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Create Room Ownership Record",
        "operationId": "postRoomOwner",
        "parameters": [
          {
            "description": "Request object for creating room ownership record..",
            "name": "createRoomOwnerDetails",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/createRoomOwnerDetails"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response object to hold room ownership conflict records.",
            "schema": {
              "$ref": "#/definitions/roomOwnershipDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/roomOwners/{roomOwnershipId}": {
      "delete": {
        "description": "Use this API to delete Room Ownership Record. <p><strong>OperationId:</strong>deleteRoomOwner</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RoomRotationConfig"
        ],
        "summary": "Delete Room Ownership Record",
        "operationId": "deleteRoomOwner",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique Id for Room Ownership Record.",
            "name": "roomOwnershipId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": false,
            "description": "Indicate to Override the Referral record Check if applicable.",
            "name": "overrideReferralCheck",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    }
  },
  "definitions": {
    "AdjustmentReasonsDetailsUpdated": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ChangeAdjustmentReasonsDetails": {
      "description": "Request object for changing Room Rotation Adjustment Reasons.",
      "type": "object",
      "properties": {
        "adjustmentReasons": {
          "description": "Room Rotation Adjustment Reasons to be updated.",
          "$ref": "#/definitions/roomRotationAdjustmentReasonsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ChangeRevenueTransactionCodesCriteria": {
      "description": "Request object for updating the rotation revenue status of a transaction code for a given property.",
      "type": "object",
      "properties": {
        "revenueTransactionCodes": {
          "description": "Revenue transaction codes for a given property value.",
          "$ref": "#/definitions/rotationRevenueTransactionCodesChangeType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ChangeRevenueTransactionCodesDetails": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "Allow end-to-end correlation of log messages with the corresponding Web service message throughout the processing of the Web service message.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "echoToken": {
          "description": "A reference for additional message identification, assigned by the requesting host system. When a request message includes an echo token the corresponding response message MUST include an echo token with an identical value.",
          "type": "string",
          "maxLength": 128,
          "minLength": 0
        },
        "enforceAllowed": {
          "description": "Indicates if the operation supports the ability to force the retry request through OPERA services in the case where the external system continues to fail.",
          "type": "boolean",
          "default": false
        },
        "errors": {
          "description": "Refer to Generic common types document.",
          "$ref": "#/definitions/errorsType"
        },
        "retryAllowed": {
          "description": "Indicates if the operation supports the ability to retry the request.",
          "type": "boolean",
          "default": false
        },
        "success": {
          "description": "Refer to Generic common types document.",
          "$ref": "#/definitions/successType"
        },
        "timeStamp": {
          "description": "Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-MM-DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-20T13:59:38Z).",
          "type": "string",
          "format": "date-time"
        },
        "useLocalAllowed": {
          "description": "This attribute carries the user selected confirmation value on confirmation popup.",
          "type": "boolean",
          "default": false
        },
        "version": {
          "description": "For all Opera versioned messages, the version of the message is indicated by a Opera Version value.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "warnings": {
          "description": "Refer to Generic common types document.",
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ChangeRotationPeriodDetails": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "Allow end-to-end correlation of log messages with the corresponding Web service message throughout the processing of the Web service message.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "echoToken": {
          "description": "A reference for additional message identification, assigned by the requesting host system. When a request message includes an echo token the corresponding response message MUST include an echo token with an identical value.",
          "type": "string",
          "maxLength": 128,
          "minLength": 0
        },
        "enforceAllowed": {
          "description": "Indicates if the operation supports the ability to force the retry request through OPERA services in the case where the external system continues to fail.",
          "type": "boolean",
          "default": false
        },
        "errors": {
          "description": "Refer to Generic common types document.",
          "$ref": "#/definitions/errorsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "retryAllowed": {
          "description": "Indicates if the operation supports the ability to retry the request.",
          "type": "boolean",
          "default": false
        },
        "success": {
          "description": "Refer to Generic common types document.",
          "$ref": "#/definitions/successType"
        },
        "timeStamp": {
          "description": "Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-MM-DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-20T13:59:38Z).",
          "type": "string",
          "format": "date-time"
        },
        "useLocalAllowed": {
          "description": "This attribute carries the user selected confirmation value on confirmation popup.",
          "type": "boolean",
          "default": false
        },
        "version": {
          "description": "For all Opera versioned messages, the version of the message is indicated by a Opera Version value.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "warnings": {
          "description": "Refer to Generic common types document.",
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ChangeUnitGradesDetails": {
      "description": "Request object for changing an existing Room Rotation Owner Room Grade Codes.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "unitGrades": {
          "description": "Room Rotation Owner Room Grade Codes to be changed.",
          "$ref": "#/definitions/roomRotationUnitGradesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "CreateAdjustmentReasonsDetails": {
      "description": "Request object for fetching Room Rotation Adjustment Reasons.",
      "type": "object",
      "properties": {
        "adjustmentReasons": {
          "description": "Room Rotation Adjustment Reasons to be created.",
          "$ref": "#/definitions/roomRotationAdjustmentReasonsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "CreateUnitGradesDetails": {
      "description": "Request object for creating a new Room Rotation Owner Room Grade Code.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "unitGrades": {
          "description": "Room Rotation Owner Room Grade Codes to be created.",
          "$ref": "#/definitions/roomRotationUnitGradesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "FetchAdjustmentReasonsDetails": {
      "description": "Response object for creating Room Rotation Adjustment Reasons.",
      "type": "object",
      "properties": {
        "adjustmentReasons": {
          "description": "Collection of Room Rotation Adjustment Reasons.",
          "$ref": "#/definitions/roomRotationAdjustmentReasonsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "FetchRevenueTransactionCodesDetails": {
      "description": "Response object for retrieving revenue transaction codes for a given property",
      "type": "object",
      "properties": {
        "revenueTransactionCodes": {
          "description": "Revenue transaction codes for a given property value.",
          "$ref": "#/definitions/rotationRevenueTransactionCodesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "FetchRotationRules": {
      "description": "Response object for retrieving rotation setup rules for a given property",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "rotationRulesResult": {
          "description": "Retrieve Rotation Setup Rules for a given property.",
          "$ref": "#/definitions/rotationRulesResultType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "FetchUnitGradesDetails": {
      "description": "Response object for fetching Room Rotation Owner Room Grade Codes.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "unitGrades": {
          "description": "Collection of Room Rotation Owner Room Grade Codes.",
          "$ref": "#/definitions/roomRotationUnitGradesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "UnitGradesDetailsUpdated": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "addressType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "maxLength": 80,
            "minLength": 0
          }
        },
        "barCode": {
          "description": "The postal barcode for the address.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean",
          "default": false
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "changeRoomOwnerDetails": {
      "description": "Request object for changing room ownership records.",
      "type": "object",
      "properties": {
        "overrideOwnerExclusive": {
          "description": "Indicate to override the Owner Exclusive flag in room ownership records with overlapping dates",
          "type": "boolean",
          "default": false
        },
        "roomOwners": {
          "description": "Criteria to change the room ownership records",
          "$ref": "#/definitions/roomOwnershipsList"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeRoomOwnerReferralDetails": {
      "description": "Request object for changing Room Owner Referral records.",
      "type": "object",
      "properties": {
        "roomOwnerReferral": {
          "description": "Criteria to change the Room Owner Referral record.",
          "$ref": "#/definitions/roomOwnerReferralType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "codeInfoType": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "maxLength": 20,
        "minLength": 0
      }
    },
    "countryNameType": {
      "description": "Code for a country or a nationality.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Used for Character Strings, length 0 to 200.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "createRoomOwnerDetails": {
      "description": "Request object for creating room ownership records.",
      "type": "object",
      "properties": {
        "overrideOwnerExclusive": {
          "description": "Indicate to override the Owner Exclusive flag in room ownership records with overlapping dates",
          "type": "boolean",
          "default": false
        },
        "roomOwner": {
          "description": "Details to create room ownership records",
          "$ref": "#/definitions/roomOwnershipType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "createRoomOwnerReferralDetails": {
      "description": "Request object for creating Room Owner Referral records.",
      "type": "object",
      "properties": {
        "roomOwnerReferrals": {
          "description": "Details to create Room Owner Referral records.",
          "$ref": "#/definitions/roomOwnerReferralList"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "daysOfWeekAttrType": {
      "description": "Days of the Week",
      "type": "object",
      "properties": {
        "friday": {
          "type": "boolean",
          "default": false
        },
        "monday": {
          "type": "boolean",
          "default": false
        },
        "saturday": {
          "type": "boolean",
          "default": false
        },
        "sunday": {
          "type": "boolean",
          "default": false
        },
        "thursday": {
          "type": "boolean",
          "default": false
        },
        "tuesday": {
          "type": "boolean",
          "default": false
        },
        "wednesday": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "errorInstance": {
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "title": "Error Instance Details",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "errorType": {
      "description": "Standard way to indicate that an error occurred during the processing of an message. If the message successfully processes, but there are business errors, those errors should be passed in the warning element.",
      "type": "object",
      "properties": {
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nodeList": {
          "description": "An XPath expression that selects all the nodes whose data caused this error. Further, this expression should have an additional contraint which contains the data of the node. This will provide the offending data back to systems that cannot maintain the original message.",
          "type": "string"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string"
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string"
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string"
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "errorsType": {
      "description": "An error that occurred during the processing of a message.",
      "type": "array",
      "maxItems": 99,
      "items": {
        "$ref": "#/definitions/errorType"
      }
    },
    "exceptionDetailType": {
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "title": "Error Detail",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "fetchRotationPeriod": {
      "description": "Response Object for Fetch Rotation Period",
      "type": "object",
      "properties": {
        "currentPeriodStartDate": {
          "description": "The start date for the property's current Rotation Period.",
          "type": "string",
          "format": "date"
        },
        "hotelId": {
          "description": "Property code for Room Rotation Period.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "periodFrequency": {
          "description": "Represents Effective Period reset frequency for the Room Rotation Period Setup.",
          "$ref": "#/definitions/rotationPeriodFrequencyType"
        },
        "startDate": {
          "description": "Represents Effective start date for the Room Rotation Period Setup.",
          "type": "string",
          "format": "date"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "instanceLink": {
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "type": "object",
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ],
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "masterInfoType": {
      "type": "object",
      "properties": {
        "codeInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeInfoType"
          }
        },
        "codeType": {
          "$ref": "#/definitions/masterType"
        }
      }
    },
    "masterType": {
      "type": "string",
      "enum": [
        "Country",
        "State",
        "AddressType",
        "PhoneType",
        "RateCategory",
        "CalculationRule",
        "PostingRythym",
        "BillingInstruction",
        "TransactionCode",
        "DisplaySet",
        "MailingActions",
        "DistanceType",
        "District",
        "Territory",
        "FiscalRegion",
        "InventoryItem",
        "Package",
        "RoomFeaturePreference",
        "SpecialPreference",
        "Promotion",
        "Department",
        "ReservationPreference",
        "FacilityTask",
        "RoomType",
        "RateCode",
        "OutOfOrderReason",
        "Block"
      ]
    },
    "operaVersionNumberType": {
      "description": "Current Opera Version Number",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "overrideReasonsCriteria": {
      "description": "Request object for creating a new Room Rotation Override Reason.",
      "type": "object",
      "properties": {
        "overrideReasons": {
          "description": "Room Rotation Override Reasons to be created.",
          "$ref": "#/definitions/roomRotationOverrideReasonsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "overrideReasonsDetails": {
      "description": "Response object for fetching Room Rotation Override Reasons.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "overrideReasons": {
          "description": "Collection of Room Rotation Override Reasons.",
          "$ref": "#/definitions/roomRotationOverrideReasonsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "overrideReasonsToBeChanged": {
      "description": "Request object for changing an existing Room Rotation Override Reason.",
      "type": "object",
      "properties": {
        "overrideReasons": {
          "description": "Room Rotation Override Reason to be changed.",
          "$ref": "#/definitions/roomRotationOverrideReasonsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "personNameTypeType": {
      "description": "Person's name in an external system.",
      "type": "string",
      "enum": [
        "Primary",
        "Alternate",
        "Incognito",
        "External",
        "Phonetic"
      ]
    },
    "profileNameType": {
      "description": "This provides name information for a person.",
      "type": "object",
      "properties": {
        "fullName": {
          "description": "Full display Name.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "name": {
          "description": "Family name, last name or Company Name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        }
      }
    },
    "referralType": {
      "description": "Indicates the type of referral for a Profile to the Room Owner.",
      "type": "string",
      "enum": [
        "Owner",
        "OwnerReferral"
      ]
    },
    "roomOwnerReferralDetails": {
      "description": "Response object containing Room Owner Referral details.",
      "type": "object",
      "properties": {
        "hasOwnershipRecords": {
          "description": "Flag to indicate if the associated profile has any active Room Ownership records attached to it.",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "roomOwnerReferrals": {
          "description": "Room Owner Referral details.",
          "$ref": "#/definitions/roomOwnerReferralList"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomOwnerReferralList": {
      "description": "Room Owner Referral records.",
      "type": "object",
      "properties": {
        "roomOwnerReferrals": {
          "description": "Collection of Detailed information on Room Owner's Referral records.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomOwnerReferralType"
          }
        }
      }
    },
    "roomOwnerReferralType": {
      "description": "Define the search criteria for retrieving Room Owner Referral records",
      "type": "object",
      "properties": {
        "endDate": {
          "description": "End Date of the Room Owner Referral record.",
          "type": "string",
          "format": "date"
        },
        "hotelId": {
          "description": "Hotel Code of Room Owner Referral record.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Status of the Room Owner Referral record.",
          "type": "boolean"
        },
        "inactiveDate": {
          "description": "Date in which the room owner referral record was marked as inactive.",
          "type": "string",
          "format": "date"
        },
        "profileAddress": {
          "description": "Address details for the profile on the Room Owner Referral record",
          "$ref": "#/definitions/addressType"
        },
        "profileId": {
          "description": "Profile ID of the Room Owner Referral record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "profileName": {
          "description": "Profile Name of the Room Owner Referral record.",
          "$ref": "#/definitions/profileNameType"
        },
        "referral": {
          "description": "Type of referral to the room owner/target profile.",
          "$ref": "#/definitions/referralType"
        },
        "roomId": {
          "description": "Room Id of Room Owner Referral record.",
          "type": "string"
        },
        "roomOwnerId": {
          "description": "Unique Id for Room Ownership record.",
          "type": "number"
        },
        "roomOwnerReferralId": {
          "description": "Unique Id for Room Owner Referral record.",
          "type": "number"
        },
        "startDate": {
          "description": "Start Date of the Room Owner Referral record.",
          "type": "string",
          "format": "date"
        }
      }
    },
    "roomOwnershipDetails": {
      "description": "Response object containing room ownership details.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "roomOwnerships": {
          "description": "Room ownership details for the profile.",
          "$ref": "#/definitions/roomOwnershipsList"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomOwnershipType": {
      "description": "Define the search criteria for retrieving room ownership records",
      "type": "object",
      "properties": {
        "contractNumber": {
          "description": "Contract number for Room Ownership record.",
          "type": "string",
          "maxLength": 50
        },
        "endDate": {
          "description": "End Date of the Room Ownership record.",
          "type": "string",
          "format": "date"
        },
        "hotelId": {
          "description": "Hotel Code of Room Ownership record.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ownerExclusive": {
          "description": "Whether Room is available for the exclusive use of its designated owner and owner referrals, or if it is available in general availability.",
          "type": "boolean"
        },
        "profileId": {
          "description": "Profile ID of the Room Ownership record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "profileName": {
          "description": "Name of owner profile.",
          "$ref": "#/definitions/profileNameType"
        },
        "roomCategory": {
          "description": "Room Category of the Room Ownership record.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomId": {
          "description": "Room Id of Room Ownership record.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomOwnershipId": {
          "description": "Unique Id for Room Ownership record.",
          "type": "integer"
        },
        "roomType": {
          "description": "Room Type of the Room Ownership record.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "startDate": {
          "description": "Start Date of the Room Ownership record.",
          "type": "string",
          "format": "date"
        },
        "status": {
          "description": "Status of the Room Ownership record. (Active or Inactive)",
          "type": "string"
        }
      }
    },
    "roomOwnershipsList": {
      "description": "Room Ownership records.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "roomOwnershipInfo": {
          "description": "Collection of Detailed information on Room Ownership records.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomOwnershipType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "roomRotationAdjustmentReasonType": {
      "description": "Defines Rotation Adjustment Reason Details.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Defines the Rotation Adjustment Reason Code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 1
        },
        "description": {
          "description": "Description of the Rotation Adjustment Reason.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Rotation Adjustment Reason sequence number.",
          "type": "number",
          "maximum": 99999,
          "minimum": 0
        }
      }
    },
    "roomRotationAdjustmentReasonsType": {
      "description": "Room Rotation Adjustment Reason Enumeration element.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomRotationAdjustmentReasonType"
      }
    },
    "roomRotationOverrideReasonType": {
      "description": "Defines Rotation Override Reason Details.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Defines the Rotation Override Reason Code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 1
        },
        "description": {
          "description": "Description of the Rotation Override Reason.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Rotation Override Reason sequence number.",
          "type": "number",
          "maximum": 99999,
          "minimum": 0
        }
      }
    },
    "roomRotationOverrideReasonsType": {
      "description": "Room Rotation Override Reason Enumeration element.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomRotationOverrideReasonType"
      }
    },
    "roomRotationRules": {
      "description": "Request object for saving changes to room type rotation rules.",
      "type": "object",
      "properties": {
        "forceRecalculate": {
          "description": "Indicates if Rotation points recalculation job should be re-triggered.",
          "type": "boolean",
          "default": false
        },
        "rotationRules": {
          "description": "Defines collection of Room Rotation Setup Rules.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/rotationRuleType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomRotationUnitGradeType": {
      "description": "Defines Owner Room Grade Code Details.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Defines the Owner Room Grade Code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 1
        },
        "description": {
          "description": "Description of the Owner Room Grade Code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Owner Room Grade Code sequence number.",
          "type": "number",
          "maximum": 99999,
          "minimum": 0
        },
        "hotelId": {
          "description": "Hotel of the Owner Room Grade Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "roomRotationUnitGradesType": {
      "description": "Room Rotation Owner Room Grade Enumeration element.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomRotationUnitGradeType"
      }
    },
    "rotationPeriod": {
      "description": "Request Object for changing Rotation Period.",
      "type": "object",
      "properties": {
        "rotationPeriod": {
          "description": "Rotation Period data (Start date/Period Frequency) to be changed",
          "$ref": "#/definitions/rotationPeriodType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "rotationPeriodFrequencyType": {
      "description": "Simple type for Rotation Period Type.",
      "type": "string",
      "enum": [
        "Monthly",
        "Quarterly",
        "SemiAnnually",
        "Annually",
        "Never"
      ]
    },
    "rotationPeriodType": {
      "description": "Rotation Period Frequency and Start Date Details for a Property",
      "type": "object",
      "properties": {
        "forceRecalculate": {
          "description": "Represents if Rotation points/rules recalculation job should be re-triggered.",
          "type": "boolean",
          "default": false
        },
        "hotelId": {
          "description": "Hotel code for Room Rotation Period.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "periodFrequency": {
          "description": "Represents the frequency in which a Rotation Period resets for the Room Rotation Period Setup.",
          "$ref": "#/definitions/rotationPeriodFrequencyType"
        },
        "startDate": {
          "description": "Represents Effective start date for the Room Rotation Period Setup.",
          "type": "string",
          "format": "date"
        }
      }
    },
    "rotationRevenueTransactionCodeType": {
      "description": "A revenue transaction code",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the Transaction Code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel code of revenue transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rotationRevenue": {
          "description": "Indicates that the transaction code is marked as a rotation revenue transaction code.",
          "type": "boolean",
          "default": false
        },
        "transactionCode": {
          "description": "Unique ID for the Transaction Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "rotationRevenueTransactionCodesChangeType": {
      "description": "Two collections of transaction codes for a resort. One collection lists codes to be changed to Rotation Revenue transaction codes and the other to be changed to non Rotation Revenue Transaction codes.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel code of revenue transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nonRotationRevenueTransactionCodes": {
          "description": "List of transaction codes to be updated to non rotation revenue transaction codes.",
          "$ref": "#/definitions/transactionCodesType"
        },
        "rotationRevenueTransactionCodes": {
          "description": "List of transaction codes to be updated to rotation revenue transaction codes.",
          "$ref": "#/definitions/transactionCodesType"
        }
      }
    },
    "rotationRevenueTransactionCodesType": {
      "description": "A revenue transaction code.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/rotationRevenueTransactionCodeType"
      }
    },
    "rotationRuleCalculationRuleType": {
      "description": "Simple type for Rotation Setup Rule Calculation Rule.",
      "type": "string",
      "enum": [
        "PerRevenue",
        "PerNight",
        "PerStay"
      ]
    },
    "rotationRuleSetupType": {
      "description": "Simple type for Rotation Rule Setup.",
      "type": "string",
      "enum": [
        "Points",
        "OwnerMultiplier",
        "RoomStatusMultiplier"
      ]
    },
    "rotationRuleStatusType": {
      "description": "Simple type for Rotation Setup Rule System Status.",
      "type": "string",
      "enum": [
        "Changed",
        "Deleted",
        "New",
        "Queried"
      ]
    },
    "rotationRuleType": {
      "type": "object",
      "properties": {
        "calculationRule": {
          "description": "Represents the calculation type applicable for Rotation Point Rules.",
          "$ref": "#/definitions/rotationRuleCalculationRuleType"
        },
        "daysOfWeek": {
          "description": "Represents the days for which the Room Rotation Setup Rule are applicable.",
          "$ref": "#/definitions/daysOfWeekAttrType"
        },
        "endDate": {
          "description": "Represents end date for Room Rotation Setup Rule.",
          "type": "string",
          "format": "date"
        },
        "multiplier": {
          "description": "Represents multiplier value to be used for an Owner Multiplier Rule or an Out of Order / Service Multiplier rule.",
          "type": "number"
        },
        "points": {
          "description": "Represents total points for a Rotation Setup Rule. (To be used with Rotation Point Rules)",
          "type": "number"
        },
        "rateCodes": {
          "description": "Represents Rate Codes in which the Rotation Setup Rule is applicable for (Either for Rotation Point Rules, or Owner Multiplier Rules).",
          "$ref": "#/definitions/codeListType"
        },
        "reasons": {
          "description": "Represents Out Of Order/Service reasons in which an Owner Multiplier Rule is appplicable for.",
          "$ref": "#/definitions/codeListType"
        },
        "referral": {
          "description": "Indicates that this Rotation Setup Rule is to be used for Owner Referral Reservations.",
          "type": "boolean"
        },
        "roomTypes": {
          "description": "Represents Room Types in which the Room Rotation Setup Rule is applicable for (At least 1 Room Type is required).",
          "$ref": "#/definitions/codeListType"
        },
        "ruleId": {
          "description": "Unique ID for Room Rotation Setup Rule.",
          "type": "number"
        },
        "setupType": {
          "description": "Represents Setup type for Room Rotation Setup Rule.",
          "$ref": "#/definitions/rotationRuleSetupType"
        },
        "startDate": {
          "description": "Represents start date for Room Rotation Setup Rule.",
          "type": "string",
          "format": "date"
        },
        "status": {
          "description": "Represents Record Status of Room Rotation Setup Rule.",
          "$ref": "#/definitions/rotationRuleStatusType"
        }
      }
    },
    "rotationRules": {
      "description": "Request object for creating room rotation setup rules.",
      "type": "object",
      "properties": {
        "rotationRules": {
          "description": "Collection of Room Rotation Setup Rules to be created.",
          "$ref": "#/definitions/rotationRulesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "rotationRulesResultType": {
      "description": "Collection of Room Rotation Setup Rules Results.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer",
          "default": 25
        },
        "masterInfo": {
          "description": "Collection of RateCodes, RoomTypes, Out of Order Reasons",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer",
          "default": 0
        },
        "rotationRules": {
          "description": "Information representing Room Rotation Setup Rules.",
          "$ref": "#/definitions/rotationRulesType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "rotationRulesType": {
      "description": "Collection of Room Rotation Setup Rules elements.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel code for Room Rotation Setup Rules.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rule": {
          "description": "Description of the Room Rotation Setup Rule.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/rotationRuleType"
          }
        },
        "setupType": {
          "description": "Represents Setup type for Room Rotation Setup Rule.",
          "$ref": "#/definitions/rotationRuleSetupType"
        }
      }
    },
    "status": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "successType": {
      "description": "Returning an empty element of this type indicates the successful processing of an message. This is used in conjunction with the Warning Type to report any warnings or business errors.",
      "type": "object"
    },
    "transactionCodesType": {
      "description": "Revenue transaction code.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "maxLength": 20,
        "minLength": 0
      }
    },
    "translationTextType2000": {
      "description": "Contains Multiple translated texts and language codes.",
      "type": "object",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 1 to 2000.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 1
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationsTextType": {
      "description": "Language code for the translation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "description": "Language code for the translation.",
        "type": "object",
        "properties": {
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          },
          "value": {
            "description": "Used for Character Strings, length 0 to 2000.",
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          }
        }
      }
    },
    "uniqueID_Type": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "warningType": {
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "type": "object",
      "properties": {
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "maxLength": 8,
          "minLength": 1
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "description": "Used in conjunction with the Success element to define a business error.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    }
  },
  "tags": [
    {
      "description": "The REST APIs allow you to perform all actions related to Room Rotation from configuring point calculations for owner rooms, adjustment options for room prioritization and automatic assignment based on owner room utilization.",
      "name": "RoomRotationConfig"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}