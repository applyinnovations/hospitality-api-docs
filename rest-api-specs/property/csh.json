{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "title": "OPERA Cloud Cashiering API",
    "version": "23.2",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality-integrations_ww@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "basePath": "/csh/v1",
  "paths": {
    "/cashierReportPostings": {
      "get": {
        "description": "You can use this API to get Cashier Report postings. <p><strong>OperationId:</strong>getCashierReportPostings</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Cashier Report Postings",
        "operationId": "getCashierReportPostings",
        "parameters": [
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Cash",
              "Check",
              "ForeignCurrency",
              "CreditCard",
              "Miscellaneous",
              "ArSettlements",
              "DepositTransfers",
              "Shiftdrop"
            ],
            "type": "string",
            "description": "Shift drop report created when cashier closure is completed. It is an integral part of closure report and is not to be printed or accessed by itself.",
            "name": "requestType",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The Cashier Shift Number.",
            "name": "closureNo",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "name": "cashierId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cashier closure shift drop location code.",
            "name": "shiftDropLocationCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cashier closure shift drop others payment method type bag number.",
            "name": "bagNumberForOthers",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cashier closure shift drop cash payment method type bag number.",
            "name": "bagNumberForCash",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetching the Cashier report transactions.",
            "schema": {
              "$ref": "#/definitions/cashierReportPostingsInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CashierReportPostings not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/cashiers/{cashierId}/closure": {
      "put": {
        "description": "You can use this API to change Cashier Closure. <p><strong>OperationId:</strong>putCashier</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Close Cashier",
        "operationId": "putCashier",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the cashier.",
            "name": "cashierId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to close cashier's shift.",
            "name": "cashierClosure",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cashierClosure"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/cashiers/{cashierId}/locks": {
      "get": {
        "description": "You can use this API to Acquire Cashier Locks. <p><strong>OperationId:</strong>getCashierLock</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Acquire Cashier Locks",
        "operationId": "getCashierLock",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the cashier.",
            "name": "cashierId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the Cashier Lock request.",
            "schema": {
              "$ref": "#/definitions/acquiredCashierLock"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CashierLock not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "You can use this API to Break Cashier Lock. <p><strong>OperationId:</strong>breakCashierLock</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Break Cashier Lock",
        "operationId": "breakCashierLock",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the cashier.",
            "name": "cashierId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/cashiers/{cashierId}/transactions": {
      "get": {
        "description": "You can use this API to get Cashier Transactions. <p><strong>OperationId:</strong>getCashierTransactions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Cashier Transactions",
        "operationId": "getCashierTransactions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the cashier.",
            "name": "cashierId",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "The Cashier Shift Number.",
            "name": "closureNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cashier closure shift drop location code.",
            "name": "shiftDropLocationCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cashier closure shift drop others payment method type bag number.",
            "name": "bagNumberForOthers",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cashier closure shift drop cash payment method type bag number.",
            "name": "bagNumberForCash",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the fetch cashier's shift transactions.",
            "schema": {
              "$ref": "#/definitions/cashierTransactionsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CashierTransactions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/cashiersLock/{lockId}": {
      "delete": {
        "description": "You can use this API to Release Cashier Lock. <p><strong>OperationId:</strong>releaseCashierLock</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Release Cashier Lock",
        "operationId": "releaseCashierLock",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the lock.",
            "name": "lockId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/compAccountingJournal": {
      "get": {
        "description": "You can use this API to get Comp Accounting Journal. <br><p><strong><mark>This API is deprecated. Please use getCompPostingJournal instead</mark></strong></p> <p><strong>OperationId:</strong>getCompAccountingJournal</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Comp Accounting Journal",
        "operationId": "getCompAccountingJournal",
        "deprecated": true,
        "parameters": [
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "filterTransactionCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "filterRoomNumber",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filters the results for approval code.",
            "name": "approvalCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "code",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "authorizerNameCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filters the results for reference number.",
            "name": "referenceNumberWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter the results for supplement.",
            "name": "supplementWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetching the Complimentary Posting Journal.",
            "schema": {
              "$ref": "#/definitions/compAccountingJournal"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CompAccountingJournal not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/fbaReimbursements": {
      "post": {
        "description": "You can use this API to create FBA Reimbursement. <p><strong>OperationId:</strong>postFBAReimbursement</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create FBA Reimbursement",
        "operationId": "postFBAReimbursement",
        "parameters": [
          {
            "description": "PostFBAReimbursement operation posts reimbursement against the selected certificate records.",
            "name": "fbaReimbursementCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fbaReimbursementCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/fbaSettlements": {
      "post": {
        "description": "You can use this API to create FBA Settlement. <p><strong>OperationId:</strong>postFBASettlement</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create FBA Settlement",
        "operationId": "postFBASettlement",
        "parameters": [
          {
            "description": "PostFBASettlement operation posts settlement against the selected certificate records.",
            "name": "fbaReimbursementCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fbaReimbursementCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/foreignCurrency": {
      "put": {
        "description": "This API will allow you to Calculate Foreign Currency exchange. <p><strong>OperationId:</strong>calculateForeignCurrency</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Calculate Foreign Currency",
        "operationId": "calculateForeignCurrency",
        "parameters": [
          {
            "description": "Operation to calculate foreign currency exchange.",
            "name": "foreignCurrencyCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/foreignCurrencyCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Information regarding charges in batch result for each reservation.",
            "schema": {
              "$ref": "#/definitions/calculatedForeignCurrency"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/foreignCurrencyExchange": {
      "post": {
        "description": "You can use this API to Create Foreign Currency Exchange. <p><strong>OperationId:</strong>postForeignCurrencyExchange</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create Foreign Currency Exchange",
        "operationId": "postForeignCurrencyExchange",
        "parameters": [
          {
            "description": "A set of posting transactions that need to be posted with regards to exchange.",
            "name": "foreignCurrencyExchange",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/foreignCurrencyExchange"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response of the posting foreign currency exchange transaction.",
            "schema": {
              "$ref": "#/definitions/foreignCurrencyExchangeTransaction"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/advanceFolio/batchJobs": {
      "post": {
        "description": "You can use this API to create Batch Advance Folio. <p><strong>OperationId:</strong>postAdvanceFolio</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create Batch Advance Folio",
        "operationId": "postAdvanceFolio",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for submitting batch advance folio.",
            "name": "batchAdvanceFolio",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/batchAdvanceFolio"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/articlesSale": {
      "post": {
        "description": "You can use this API to create Articles Sale. <p><strong>OperationId:</strong>postArticlesSale</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create Articles Sale",
        "operationId": "postArticlesSale",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to post a set of charges, payments and generate a bill for a PasserBy or for the Post-It functionality . A PasserBy is someone who is not staying at the Property. A PasserBy transaction requires a Profile in Opera for whom the the folio is being created.",
            "name": "articlesSaleCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/articlesSaleCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Details of the folio created.",
            "schema": {
              "$ref": "#/definitions/articlesSale"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/authorizers/credits": {
      "get": {
        "description": "You can use this API to get Authorizers Credit Info. <p><strong>OperationId:</strong>getAuthorizersCreditInfo</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Authorizers Credit Info",
        "operationId": "getAuthorizersCreditInfo",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "code",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag will notify the service if the Credit details will also be returned or not.",
            "name": "includeCreditDetails",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns credit information of Comp Accounting Authorizers.",
            "schema": {
              "$ref": "#/definitions/authorizersCreditInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AuthorizersCreditInfo not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/autoCheckoutReservations/batchJobs": {
      "post": {
        "description": "You can use this API to create Auto Checkout Reservation Batch. <p><strong>OperationId:</strong>postAutoCheckoutReservations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create Auto Checkout Reservation Batch ",
        "operationId": "postAutoCheckoutReservations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type for batch auto checkout.",
            "name": "batchAutoCheckoutReservation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/batchAutoCheckoutReservation"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response for batch auto check out.",
            "schema": {
              "$ref": "#/definitions/batchAutoCheckoutDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/autoSettlements/batchJobs": {
      "post": {
        "description": "You can use this API to create Batch Auto Settlement. <p><strong>OperationId:</strong>postBatchAutoSettlement</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create Batch Auto Settlement",
        "operationId": "postBatchAutoSettlement",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type for batch auto settlement.",
            "name": "batchAutoSettlementCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/batchAutoSettlementCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/batchDeposits": {
      "post": {
        "description": "You can use this API to create batch deposits. <p><strong>OperationId:</strong>postBatchDeposit</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create batch deposits",
        "operationId": "postBatchDeposit",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for submitting batch deposit for reservations.",
            "name": "batchDeposit",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/batchDeposit"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/bedTax": {
      "get": {
        "description": "You can use this API to Retrieve bed tax information for a property. <p><strong>OperationId:</strong>getBedTaxInfo</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get bed tax information",
        "operationId": "getBedTaxInfo",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "Arrival Date of the reservation",
            "name": "arrival",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for bed transaction info",
            "schema": {
              "$ref": "#/definitions/bedTaxInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "BedTaxInfo not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "You can use this API to create new bed tax information for a property. <p><strong>OperationId:</strong>postBedTaxInfo</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create bed tax information",
        "operationId": "postBedTaxInfo",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type for create bed transaction info",
            "name": "bedTaxCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bedTaxCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/bedTax/{taxRegistraitionNo}": {
      "put": {
        "description": "You can use this API to Update bed tax information for a property. <p><strong>OperationId:</strong>putBedTaxInfo</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Change bed tax information",
        "operationId": "putBedTaxInfo",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique number of the tax registration.",
            "name": "taxRegistraitionNo",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type for change bed transaction info",
            "name": "bedTaxCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bedTaxCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "You can use this API to delete bed tax information for a property. <p><strong>OperationId:</strong>removeBedTaxInfo</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Delete bed tax information",
        "operationId": "removeBedTaxInfo",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique number of the tax registration.",
            "name": "taxRegistraitionNo",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/billingCharges": {
      "put": {
        "description": "You can use this API to change Billing Charges. <p><strong>OperationId:</strong>putBillingCharges</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Change Billing Charges",
        "operationId": "putBillingCharges",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to edit multiple billing charge information.",
            "name": "putBillingCharges",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/putBillingCharges"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/putBillingChargesStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/bulkCCSettlements/{batchId}/status": {
      "get": {
        "description": "You can use this API to get Batch CC Settlements Status. <p><strong>OperationId:</strong>getBatchCCSettlementsStatus</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Batch CC Settlements Status",
        "operationId": "getBatchCCSettlementsStatus",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the batch",
            "name": "batchId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for credit card settlements status.",
            "schema": {
              "$ref": "#/definitions/ccBatchSettlementsStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "BatchCCSettlementsStatus not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/cashiers/{cashierId}/closure": {
      "get": {
        "description": "You can use this API to get Cashier Closure. <p><strong>OperationId:</strong>getCashierClosure</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Cashier Closure",
        "operationId": "getCashierClosure",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the cashier.",
            "name": "cashierId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "The Cashier Lock Handle to pass along with operation which required cashier to be locked.",
            "name": "cashierLockHandle",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the fetch Cashier Closure information.",
            "schema": {
              "$ref": "#/definitions/cashierClosureDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CashierClosure not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/cashiers/{cashierId}/closureReports": {
      "get": {
        "description": "You can use this API to get Cashier Closure Reports List. <p><strong>OperationId:</strong>getCashierClosureReportsList</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Cashier Closure Reports List",
        "operationId": "getCashierClosureReportsList",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the cashier.",
            "name": "cashierId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "The Cashier Shift Number.",
            "name": "closureNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cashier closure shift drop location code.",
            "name": "shiftDropLocationCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cashier closure shift drop others payment method type bag number.",
            "name": "bagNumberForOthers",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cashier closure shift drop cash payment method type bag number.",
            "name": "bagNumberForCash",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns whether a particular report is applicable or not based on payment posting type. When no postings for a particular payment type is found, that report is marked as not applicable in the closure report.",
            "schema": {
              "$ref": "#/definitions/cashierClosureReportsList"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CashierClosureReportsList not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/cashiers/{cashierId}/folioTaxPayments": {
      "put": {
        "description": "You can use this API to change folio tax payments. <p><strong>OperationId:</strong>reverseFolioTaxPayment</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Change folio tax payments",
        "operationId": "reverseFolioTaxPayment",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the cashier.",
            "name": "cashierId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to reverse a Payment Tax record for Thailand Tax requirement.",
            "name": "transactionReversal",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionReversal"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the reverse Thailand Tax Payment Tax record request.",
            "schema": {
              "$ref": "#/definitions/folioTaxPaymentReversal"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/cashierslock/{lockId}": {
      "put": {
        "description": "You can use this API to Extend cashiers lock. <p><strong>OperationId:</strong>putCashierLock</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Extend Cashier Lock",
        "operationId": "putCashierLock",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the lock.",
            "name": "lockId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Operation for extending the lifetime of a lock on a cashier.",
            "name": "cashierLockCriteriaToExtend",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cashierLockCriteriaToExtend"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "This response will indicate whether or not the extension was successful. This operation may return errors when the lock being requested to be extended no longer exists. This can happen when the lock has already expired and cleaned up.",
            "schema": {
              "$ref": "#/definitions/extendedCashierLock"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/ccSettlement": {
      "post": {
        "description": "You can use this API to create cc Settlement. <p><strong>OperationId:</strong>postCCSettlement</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create CreditCard Settlement",
        "operationId": "postCCSettlement",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to change credit card settlement information.",
            "name": "ccSettlementCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/ccSettlementCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/ccSettlements/batchJobs": {
      "post": {
        "description": "You can use this API to create Batch CC Settlements. <p><strong>OperationId:</strong>postBatchCCSettlements</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create Batch CC Settlements",
        "operationId": "postBatchCCSettlements",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to process batch settlements",
            "name": "ccBatchSettlementsProcessCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/ccBatchSettlementsProcessCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/check/{checkNumber}": {
      "get": {
        "description": "You can use this API to get check details. <p><strong>OperationId:</strong>getCheckDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get check details",
        "operationId": "getCheckDetails",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique number of the check",
            "name": "checkNumber",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to Fetch the check details for a given posting posted through the POS.",
            "schema": {
              "$ref": "#/definitions/checkDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CheckDetails not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "This operation is to add guest check details for posted check transactions. <p><strong>OperationId:</strong>postGuestCheckDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Post Guest Check Details",
        "operationId": "postGuestCheckDetails",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique number of the check",
            "name": "checkNumber",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to process a guest check detail.",
            "name": "guestCheckDetails",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/guestCheckDetails"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/check/{checkNumber}/charges": {
      "delete": {
        "description": "You can use this API to delete (void) Billing Check Charges. <p><strong>OperationId:</strong>voidBillingCheckCharges</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Delete Billing Check Charges",
        "operationId": "voidBillingCheckCharges",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique number of the check.",
            "name": "checkNumber",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "The date against which void (reverse) charges are posted.",
            "name": "revenueDate",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "amount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "reservationIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "checkId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "checkIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "checkIdType",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Cashier Id of the Cashier.",
            "name": "cashierId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Text describing any applicable detail of the posting.",
            "name": "postingRemark",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/closureList": {
      "get": {
        "description": "You can use this API to get Cashier Closure Information. <p><strong>OperationId:</strong>getCashierClosureInfo</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Cashier Closure Information",
        "operationId": "getCashierClosureInfo",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "The Cashier Shift Number.",
            "name": "closureNo",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "name": "cashierId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cashier closure shift drop location code.",
            "name": "shiftDropLocationCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cashier closure shift drop others payment method type bag number.",
            "name": "bagNumberForOthers",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cashier closure shift drop cash payment method type bag number.",
            "name": "bagNumberForCash",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Business Date of cashier closure.",
            "name": "closureBusinessDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the request to get financial details for a Posting Activity. This will return the before and after values for the transactions which were changed.",
            "schema": {
              "$ref": "#/definitions/cashierClosureInformation"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CashierClosureInfo not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/compAccountingJournal": {
      "get": {
        "description": "You can use this API to get Comp Accounting Journal. <p><strong>OperationId:</strong>getCompPostingJournal</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Comp Accounting Journal",
        "operationId": "getCompPostingJournal",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "filterTransactionCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "filterRoomNumber",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filters the results for approval code.",
            "name": "approvalCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "code",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "authorizerNameCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filters the results for reference number.",
            "name": "referenceNumberWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter the results for supplement.",
            "name": "supplementWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetching the Complimentary Posting Journal.",
            "schema": {
              "$ref": "#/definitions/compAccountingJournal"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CompAccountingJournal not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/compRoutingInstructions": {
      "get": {
        "description": "You can use this API to get Comp Routing Instructions. <p><strong>OperationId:</strong>getCompRoutingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Comp Routing Instructions",
        "operationId": "getCompRoutingInstructions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "end",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "start",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Family name or last name of the guest",
            "name": "nameWildcard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name or first name of the guest.",
            "name": "firstNameWildCard",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "roomNumberCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Membership Card number.",
            "name": "membershipId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "code",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Reserved",
                "Requested",
                "NoShow",
                "Cancelled",
                "InHouse",
                "CheckedOut",
                "Waitlisted",
                "DueIn",
                "DueOut",
                "Walkin",
                "PendingCheckout"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
            "name": "resStatusCode",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Request",
                "Comp",
                "Declined"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Status which indicates that the Request of Comp Routing was declined",
            "name": "compRoutingStatuses",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object containing comp routing instructions for a reservation .",
            "schema": {
              "$ref": "#/definitions/compRoutingInstructions"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CompRoutingInstructions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/compTrxAuthorizers": {
      "get": {
        "description": "You can use this API to get Comp Trx Authorizers. <p><strong>OperationId:</strong>getCompTrxAuthorizers</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Comp Trx Authorizers",
        "operationId": "getCompTrxAuthorizers",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "name": "cashierId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Folio Window Number to where transactions will be transfered.",
            "name": "targetFolioWindowNo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "uniqueIdId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "uniqueIdIdContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "uniqueIdType",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "List of transactions to be transfered.",
            "name": "transaction",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "authorizerIdId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "authorizerIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "authorizerIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetch comp authorizers operation.",
            "schema": {
              "$ref": "#/definitions/compTrxAuthorizers"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CompTrxAuthorizers not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/creditBill": {
      "post": {
        "description": "You can use this API to create Credit Bill. <p><strong>OperationId:</strong>postCreditBill</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create Credit Bill",
        "operationId": "postCreditBill",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to post a Credit Folio for an existing Folio. Credit Bill Functionality parameter is required.",
            "name": "creditBillCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/creditBillCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response for the request to create a Credit Folio.",
            "schema": {
              "$ref": "#/definitions/postedCreditBill"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/creditBill/action/validate": {
      "put": {
        "description": "You can use this API to validate credit Bill. <p><strong>OperationId:</strong>validateCreditBill</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Validate Credit Bill",
        "operationId": "validateCreditBill",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to check if a Folio is valid for Credit Bill.",
            "name": "creditBillCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/creditBillCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the request to check if a Folio is valid for Credit Bill.",
            "schema": {
              "$ref": "#/definitions/validatedCreditBill"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/creditLimitsOveragePayments": {
      "get": {
        "description": "You can use this API to get Credit Limits Overage Payments. <p><strong>OperationId:</strong>getCreditLimitOveragePayments</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Credit Limits Overage Payments",
        "operationId": "getCreditLimitOveragePayments",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Guest name associated with the transaction.",
            "name": "guestNameWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room number associated with the transaction.",
            "name": "roomNumberWildCard",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for Fetch Credit Limit Overage Payments request",
            "schema": {
              "$ref": "#/definitions/creditLimitOveragePaymentsInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CreditLimitOveragePayments not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "You can use this API to create Credit Limit Overage Payments. <p><strong>OperationId:</strong>postCreditLimitOveragePayments</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create Credit Limit Overage Payments",
        "operationId": "postCreditLimitOveragePayments",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to start the Credit Limit Overage process for the reservations with a folio window balance equal or higher to the credit limit set for the credit card payment method of that folio window.",
            "name": "creditLimitOveragePayments",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/creditLimitOveragePayments"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response for Submit Credit Limit Overage Payments request",
            "schema": {
              "$ref": "#/definitions/creditLimitOveragePaymentsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/creditcardTransaction/logs": {
      "post": {
        "description": "You can use this API to create vault transaction. <p><strong>OperationId:</strong>registerVaultTransaction</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Register Vault Transaction",
        "operationId": "registerVaultTransaction",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to register the vault HTTP transaction.",
            "name": "vaultTransaction",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/vaultTransaction"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/creditcardsurcharge": {
      "get": {
        "description": "You can use this API to get CC Surcharge Information. <p><strong>OperationId:</strong>getCCSurchargeInfo</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get CC Surcharge Information",
        "operationId": "getCCSurchargeInfo",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "name": "cashierId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "folioView",
            "in": "query"
          },
          {
            "type": "string",
            "name": "paymentMethod",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Track2 data for the card which would be sent to the CC vendor as part of the authorization.",
            "name": "track2Data",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Attach the credit card to profile.",
            "name": "attachCreditCardToProfile",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardHolderName",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumber",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberLast4Digits",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ],
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "name": "cardOrToken",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ],
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "name": "cardType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Expiration date of the credit card",
            "name": "expirationDate",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "expirationDateExpired",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Masked Expiration date of the credit card",
            "name": "expirationDateMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ],
            "type": "string",
            "name": "processing",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "swiped",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "name": "userDefinedCardType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "amount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "approvalAmountNeededAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "approvalAmountNeededCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "balanceAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "balanceCurrencyCode",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The authorization rule code.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "amountAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "amountCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A percentage value if the authorization rule is percentage based.",
            "name": "percent",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "emailFolio",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "uniqueIdId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "uniqueIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "uniqueIdType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Time stamp of the creation.",
            "name": "createDateTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
            "name": "creatorId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the e-mail address.",
            "name": "emailAddress",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Html",
              "Text"
            ],
            "type": "string",
            "description": "Supported Email format.",
            "name": "emailFormat",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Identifies the last software system or person to modify a record.",
            "name": "lastModifierId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Time stamp of last modification.",
            "name": "lastModifyDateTime",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Display Order sequence.",
            "name": "orderSequence",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true, indicates a primary information.",
            "name": "primaryInd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
            "name": "purgeDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
            "name": "emailType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Describes the Type code",
            "name": "typeDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The approval code authenticates the authorization.",
            "name": "approvalCode",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Unique Authorization Sequence for the authorization and settlement.",
            "name": "originalAuthSequence",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Vendor transaction id for the authorization.",
            "name": "vendorTranId",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "approvalAmountAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "approvalAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "postingAmountAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "postingAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the request to fetch Credit Card Surcharge information for a Credit Card Payment.",
            "schema": {
              "$ref": "#/definitions/ccSurchargeDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CCSurchargeInfo not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/depositFolio": {
      "get": {
        "description": "You can use this API to get Deposit Folio. <p><strong>OperationId:</strong>getDepositFolio</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Deposit Folio",
        "operationId": "getDepositFolio",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "ProjectedRevenue"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Simple type for deposit folio instructions that can be used in requests for partial operations.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "policyIdId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "blockIdId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Deposit Posting Information for a reservation. Contains all deposit payments made for a reservation.",
            "schema": {
              "$ref": "#/definitions/reservationDepositFolios"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "DepositFolio not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/depositTransactions": {
      "get": {
        "description": "You can use this API to get Deposit Folio Transaction Details. <p><strong>OperationId:</strong>getDepositFolioTransactionDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Deposit Folio Transaction Details",
        "operationId": "getDepositFolioTransactionDetails",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Flag to indicate if the automatically generated transactions, related to the main transaction number above, are also to be retrieved as part of this request.",
            "name": "includeGenerates",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Unique Transaction Number of the transaction(posting) for which details are required.",
            "name": "transactionNo",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indicate what currency exchange information text needs to be included in response.",
            "name": "includeExchangeInformation",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the fetch transaction details request. Detail information regarding the folio transaction will be returned",
            "schema": {
              "$ref": "#/definitions/depositFolioTransactionDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "DepositFolioTransactionDetails not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/depositfolios/action/validate": {
      "put": {
        "description": "You can use this API to validate Deposit Folio. <p><strong>OperationId:</strong>validateDepositFolio</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Validate Deposit Folio",
        "operationId": "validateDepositFolio",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to validate a Deposit Folio for a reservation.",
            "name": "depositFolioValidateCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/depositFolioValidateCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Information regarding the Deposit Policy if a Deposit Folio is going to be created for this policy.",
            "schema": {
              "$ref": "#/definitions/depositedFolioValidate"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/externalSystems/{externalSysCode}/reservations/{reservationId}/depositPayments": {
      "post": {
        "description": "You can use this API to create Deposit Payment with external reference. <p><strong>OperationId:</strong>postDepositPaymentByExtId</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create Deposit Payment using external reference.",
        "operationId": "postDepositPaymentByExtId",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "External System's reservation ID.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Code to identify the external system from which the request is coming. This is the ExternalSystem ID used to exchange information between OPERA and the external system.",
            "name": "externalSysCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to post a deposit payment to a reservation.",
            "name": "depositPayment",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/depositPayment"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response for the post deposit payment request.",
            "schema": {
              "$ref": "#/definitions/depositedPayment"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/financialPostings": {
      "get": {
        "description": "You can use this API to get Financial postings. <p><strong>OperationId:</strong>getFinancialPostings</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Financial Postings",
        "operationId": "getFinancialPostings",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Cashier Id of the Cashier.",
            "name": "cashierId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "filterTransactionCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "code",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "filterRoomNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filters the results for reference number.",
            "name": "referenceNumberWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter the results for Cheque number's code.",
            "name": "checkNumberWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter the results for supplement.",
            "name": "supplementWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filters the results for approval code.",
            "name": "approvalCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "approvalStatusCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Filters the result to only include transactions in this window number.",
            "name": "folioWindowNo",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Attach the credit card to profile.",
            "name": "attachCreditCardToProfile",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardHolderName",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumber",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberLast4Digits",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ],
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "name": "cardOrToken",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ],
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "name": "cardType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Expiration date of the credit card",
            "name": "expirationDate",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "expirationDateExpired",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Masked Expiration date of the credit card",
            "name": "expirationDateMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ],
            "type": "string",
            "name": "processing",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "swiped",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "name": "userDefinedCardType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "amount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "approvalAmountNeededAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "approvalAmountNeededCurrencyCode",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Filters the result to only display the postings that were made during the cashier closure range",
            "name": "closureNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetching the Posting Journal.",
            "schema": {
              "$ref": "#/definitions/financialPostings"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FinancialPostings not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/financialPostingsNetVat": {
      "get": {
        "description": "You can use this API to get Financial postings with Net and Vat breakdown. <p><strong>OperationId:</strong>financialPostingsNetVat</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Financial Postings with breakdown",
        "operationId": "getFinancialPostingsNetVat",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "name": "folioWindowNo",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for fetching the Posting Journal with Net and Vat breakdown.",
            "schema": {
              "$ref": "#/definitions/financialPostingsNetVat"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FinancialPostings not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/fiscalCommands": {
      "post": {
        "description": "You can use this API to create Fiscal Invoice. <p><strong>OperationId:</strong>postFiscalCommandInvoice</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create Fiscal Invoice",
        "operationId": "postFiscalCommandInvoice",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to generate commands and communicate with fiscal service from fiscal terminals screen..",
            "name": "fiscalFolioCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalFolioCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response after generating a commands from Fiscal Terminals screen.",
            "schema": {
              "$ref": "#/definitions/fiscalCommandsResponseInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/fiscalFolioResponse": {
      "get": {
        "description": "You can use this API to get the fiscal folio activity details for a folio. <p><strong>OperationId:</strong>getFiscalFolioActivity</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get the Fiscal Folio Activity for a folio",
        "operationId": "getFiscalFolioActivity",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Folio Sequence number for a folio",
            "name": "folioSeqNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Details of Fiscal Folio Activity made.",
            "schema": {
              "$ref": "#/definitions/folioActivityDetailsType"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FiscalFolioActivity not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/fiscalFolioResponse/{folioSeqNo}": {
      "get": {
        "description": "You can use this API to get the fiscal folio activity response details for a folio. <p><strong>OperationId:</strong>getFiscalFolioActivityDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get the Fiscal Folio Activity Response details for a folio",
        "operationId": "getFiscalFolioActivityDetails",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the folio",
            "name": "folioSeqNo",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Number of fiscal response attempt made for the folio",
            "name": "responseAttemptNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Details of response for the Fiscal Folio Activity made.",
            "schema": {
              "$ref": "#/definitions/folioActivityResponseDetailType"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FiscalFolioActivityDetails not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/fiscalFolios": {
      "post": {
        "description": "You can use this API to create Fiscal Information Folio. <p><strong>OperationId:</strong>generateFiscalFolio</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create Fiscal Information Folio",
        "operationId": "generateFiscalFolio",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to generate fiscal Information folio.",
            "name": "fiscalInfoFolioCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalInfoFolioCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Provides information which is used for fiscal response processing.",
            "schema": {
              "$ref": "#/definitions/fiscalInformationFolio"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/fiscalPrinting": {
      "get": {
        "description": "You can use this API to get Fiscal Printing Details. <p><strong>OperationId:</strong>getValidateFiscalPrintingDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Fiscal Printing Details",
        "operationId": "getValidateFiscalPrintingDetails",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "The folio window where this settlement is applied.",
            "name": "folioView",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Folio Type",
            "name": "folioType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "code",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Paymentmethod",
                "Profile",
                "Foliotype",
                "Reservation"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Reservation Related information.",
            "name": "fetchInstruction",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileIdId",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "items": {
              "enum": [
                "CheckOut",
                "Credit",
                "Deposit",
                "Invoice",
                "PasserBy",
                "PostIt"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Mode when fiscal printing is called.",
            "name": "fiscalServiceMode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Check if it will call fiscal printing or not.",
            "schema": {
              "$ref": "#/definitions/fiscalCallStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ValidateFiscalPrintingDetails not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/fiscalSupportingDocuments": {
      "get": {
        "description": "This API is used to get the list of supporting documents for the reservations. <p><strong>OperationId:</strong>getSupportingDocuments</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get supporting documents details.",
        "operationId": "getFiscalSupportingDocuments",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Family name, last name.",
            "name": "surname",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name, first name or names.",
            "name": "givenName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Confirmation number of the reservation.",
            "name": "confirmationNo",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "arrivalStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "arrivalEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The starting value of the date range.",
            "name": "departureStartDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The ending value of the date range.",
            "name": "departureEndDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room number of the the transaction.",
            "name": "roomId",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "InformationFolio",
                "ProformaFolio"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Supporting document type.",
            "name": "documentType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Supporting document number.",
            "name": "documentNo",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicator to fetch only failed supporting documents, that were not sent successfully to the fiscal partner.",
            "name": "pendingDocumentsOnly",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Time stamp of the creation.",
            "name": "fromCreateDateTime",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Indicates maximum number of records the API should return. Default is 50",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Index of the page being requested. If the index goes out of the bounds of the total set count, no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "ArrivalDate",
                "DepartureDate",
                "Room",
                "DocumentUpdatedDate"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "orderBy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Asc",
                "Desc"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": [
              "Desc"
            ],
            "name": "sortOrder",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the supporting documents.",
            "schema": {
              "$ref": "#/definitions/fiscalSupportingDocumentsResponse"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Supporting Documents not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "This API is used to resend the failed supporting documents. <p><strong>OperationId:</strong>resendSupportingDocument</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Operation to resend the failed supporting documents to fiscal partner.",
        "operationId": "resendSupportingDocument",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to send supporting document.",
            "name": "fiscalSupportingDocumentCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalSupportingDocumentCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/folio/{folioId}/convert": {
      "put": {
        "description": "You can use this API to Convert folio. <p><strong>OperationId:</strong>convertFolio</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Convert Folio",
        "operationId": "convertFolio",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the folio",
            "name": "folioId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to convert folio from a Non Fiscal Folio type to a Fiscal Folio Type. Functionality is used in Italy and is only available when the country mode is set to Italy.",
            "name": "convertFolioCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/convertFolioCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the request to Convert Folio. Includes the new converted folio information.",
            "schema": {
              "$ref": "#/definitions/convertFolioDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/folio/{folioId}/fiscalCommands": {
      "post": {
        "description": "You can use this API to create Fiscal Invoice.<br><p><strong><mark>This API is deprecated. Please use postFiscalCommandInvoice instead</mark></strong></p> <p><strong>OperationId:</strong>postFiscalInvoice</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create Fiscal Invoice",
        "operationId": "postFiscalInvoice",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the folio.",
            "name": "folioId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to generate commands and communicate with fiscal service from fiscal terminals screen..",
            "name": "fiscalFolioCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalFolioCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/folioHistory": {
      "get": {
        "description": "You can use this API to get folio history for a reservation. <p><strong>OperationId:</strong>getFolioHistory</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get folio history",
        "operationId": "getFolioHistory",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if search includes AR Folios.",
            "name": "aR",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if search includes Check Out Folios.",
            "name": "checkOut",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if search includes Credit Bill Folios.",
            "name": "creditBill",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if search includes Debit Bill Folios.",
            "name": "supplementalFolio",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if search result includes Associated Bills and is only applied when Folio History for a particular reservation (i.e. ReservationID has a value) is requested.",
            "name": "includeAssociatedFolios",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if search includes No Show Folios.",
            "name": "noShow",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if search includes Offline Folios.",
            "name": "offlineFolio",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if search includes Passer By Folios.",
            "name": "passerBy",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if search includes Post-It Folios.",
            "name": "postIt",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if search includes Video Check Out Folios.",
            "name": "videoCheckOut",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Folio History Date.",
            "name": "folioDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationIdId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "reservationIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room Number to which this record applies.",
            "name": "room",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Family name, last name or Company Name.",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name, first name or names.",
            "name": "firstName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Credit card number used.",
            "name": "creditCardNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Folio Number.",
            "name": "folioNo",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Invoice Number.",
            "name": "invoiceNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Addressee Name filter. Works with the Addressee Functionality.",
            "name": "addresseeName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Fiscal Folio Number filter. Works with the Fiscal Folio Number Functionality.",
            "name": "fiscalFolioNo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "code",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "partnerFiscalFolioStatusCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the fetch Folio History.",
            "schema": {
              "$ref": "#/definitions/folioHistoryResponse"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FolioHistory not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/folioPrinters": {
      "get": {
        "description": "You can use this API to get folio printers. <p><strong>OperationId:</strong>getFolioPrinters</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get folio printers",
        "operationId": "getFolioPrinters",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Flag to decide if folios is to be generated for all windows in addition to the one requested with applicable postings and zero balance. If any of the windows have non-zero balance then folios are not generated for other windows.",
            "name": "allFolioWindow",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Correction flag",
            "name": "correction",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates the type of folio to be generated",
            "name": "debitFolio",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "folioWindowNo",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Manual Folio Number used for settlement during checkout",
            "name": "manualFolioNo",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "name": "cashierId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
            "name": "fiscalTerminalId",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "CheckOut",
              "EarlyDeparture",
              "AdvanceBill",
              "InterimBill",
              "PasserBy",
              "PostIt",
              "CreditBill",
              "Deposit",
              "DepositRefund",
              "AutoFolio",
              "PrepaidCard",
              "AutoSettlement",
              "InformationFolio",
              "SupplementalFolio"
            ],
            "type": "string",
            "description": "Event being generated by a Supplemental Folio.",
            "name": "eventType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileIdId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Description of currency Code.",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Description of exchange rate.",
            "name": "exchangeRate",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The bill number of the original bill for which the Credit Bill is being generated.",
            "name": "associatedBillNumber",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The folio type of the original bill for which the Credit Bill is being generated.",
            "name": "associatedBillFolioType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The folio number queue(used in certain countries) of the original bill for which the Credit Bill is being generated.",
            "name": "associatedBillQueueName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Fiscal Folio Bill Number(from a Fiscal System) of the original bill for which the Credit Bill is being generated.",
            "name": "associatedBillFiscalBillNumber",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The bill generation date of the original bill for which the Credit Bill is being generated.",
            "name": "associatedBillGenerationDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Folio Type to be assigned to generated folio. This is a country requirement.",
            "name": "folioType",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Fiscal folio flag to call fiscal folio web service after folio generation.",
            "name": "generateFiscalFolio",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Folio Queue name.",
            "name": "queueName",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Fiscal Folio sequence ID stored in queue table.",
            "name": "folioSeqId",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Retry",
              "New",
              "Void",
              "Offline"
            ],
            "type": "string",
            "description": "Action to generate Offline folio when no reponse is received from fiscal service.",
            "name": "fiscalFolioInstruction",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contains transaction service type.",
            "name": "transactionServiceType",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "amount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "balanceCurrencyCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the request to fetch the Folio Printers applicable for a Folio, based on the",
            "schema": {
              "$ref": "#/definitions/folioPrinters"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FolioPrinters not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/folioTypeNames": {
      "get": {
        "description": "You can use this API to get Folio Type Name. <p><strong>OperationId:</strong>getFolioTypeName</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Folio Type Name",
        "operationId": "getFolioTypeName",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The internal folio window Id for the reservation to determine the guest language details.",
            "name": "internalFolioWindowId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Filter language code which will be used to retrieve the report name set for this language.",
            "name": "languageCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Folio Type for which the details are requested.",
            "name": "folioTypeName",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Guest",
              "Group",
              "AccountsReceivables",
              "PasserBy",
              "PostIt",
              "Expense",
              "CorrectionHeader"
            ],
            "type": "string",
            "description": "The Folio Report Group name. The folio report will be defined under each group and based on where the folio has to be printed, Opera will pick up the correct folio report name to print.",
            "name": "folioReportGroup",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the fetch Folio Type Information.",
            "schema": {
              "$ref": "#/definitions/folioTypeNameInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FolioTypeName not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/folioTypes": {
      "get": {
        "description": "You can use this API to get Folio Types. <p><strong>OperationId:</strong>getFolioTypes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Folio Types",
        "operationId": "getFolioTypes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Folio to be use for compress bills.",
            "name": "includeCompress",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Folio to be use for credit bills.",
            "name": "includeCredit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Folio Type.",
            "name": "folioType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Information regarding the Folio Types.",
            "schema": {
              "$ref": "#/definitions/folioTypesInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FolioTypes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/folios/{folioId}/fiscal": {
      "put": {
        "description": "You can use this API to process fiscal retry status. <p><strong>OperationId:</strong>processFiscalRetry</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Process Fiscal retry",
        "operationId": "processFiscalRetry",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the folio.",
            "name": "folioId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "The request object to process fiscal retry functionality.",
            "name": "processFiscalRetry",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/processFiscalRetry"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "The response object to send back the fiscal service response to opera.",
            "schema": {
              "$ref": "#/definitions/processFiscalRetryStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/passerBySale": {
      "post": {
        "description": "You can use this API to create passer by sale. <p><strong>OperationId:</strong>postPasserBySale</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create passer by sale",
        "operationId": "postPasserBySale",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to post a set of charges, payments and generate a bill for a PasserBy or for the Post-It functionality . A PasserBy is someone who is not staying at the Property. A PasserBy transaction requires a Profile in Opera for whom the the folio is being created.",
            "name": "passerBySalesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/passerBySalesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Details of the folio created.",
            "schema": {
              "$ref": "#/definitions/passerBySale"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/payees/{payeeId}/taxNumber": {
      "put": {
        "description": "You can use this API to change Payee Tax Number. <p><strong>OperationId:</strong>putPayeeTaxNumber</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Change Payee Tax Number",
        "operationId": "putPayeeTaxNumber",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the payee",
            "name": "payeeId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to validate and change Payee Tax Number.",
            "name": "payeeTaxNumber",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/payeeTaxNumber"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/policies/{policyId}/transactions/{transactionId}/deposit": {
      "put": {
        "description": "You can use this API to attach Deposit Policy to Payment. <p><strong>OperationId:</strong>attachDepositPolicyToPayment</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Attach Deposit Policy to Payment",
        "operationId": "attachDepositPolicyToPayment",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the transaction",
            "name": "transactionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the policy",
            "name": "policyId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to attach an existing Deposit Policy on a reservation towards an existing deposit payment on the same reservation.",
            "name": "attachPolicyApplyCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/attachPolicyApplyCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/postingDates/date/postingSummary": {
      "get": {
        "description": "You can use this API to get posting Summary. <p><strong>OperationId:</strong>getPostingSummary</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Posting Summary",
        "operationId": "getPostingSummary",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Configuring this flag to be TRUE will return transactions that are auto generated like taxes.",
            "name": "includeGenerates",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The date on which the charge is posted.",
            "name": "postingDate",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When set to true,the summary of only the postings using checks will be fetched.",
            "name": "checkPostings",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When set to true,the summary of only the postings done by external systems will be fetched.",
            "name": "postingsByExternalSystem",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Cashier Id of the Cashier.",
            "name": "cashierId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Currency in which the postings are done. If null,amounts posted in local currency will be fetched.",
            "name": "currency",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Postings",
              "Adjustments",
              "All"
            ],
            "type": "string",
            "description": "Enumeration Type of Posting Summary Information.",
            "name": "postingSummaryType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object to fetch daily summary charges from Opera which are posted in Opera by external system.",
            "schema": {
              "$ref": "#/definitions/postingSummaryList"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "PostingSummary not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/prepaidCards": {
      "post": {
        "description": "You can use this API to create Prepaid Cards. <p><strong>OperationId:</strong>postPrepaidCards</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create Prepaid Cards",
        "operationId": "postPrepaidCards",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type for Prepaid card creation process",
            "name": "prepaidCardCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/prepaidCardCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/prepaidCards/activate": {
      "put": {
        "description": "You can use this API to activate Prepaid Card. <p><strong>OperationId:</strong>activatePrepaidCard</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Operation to activate prepaid card.",
        "operationId": "activatePrepaidCard",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type for activate prepaid card.",
            "name": "activatePrepaidCard",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/activatePrepaidCard"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/activatePrepaidCardStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/prepaidCards/cancel": {
      "put": {
        "description": "You can use this API to cancel PrepaidCard Transaction. <p><strong>OperationId:</strong>cancelPrepaidCardTransaction</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Operation to cancel prepaid card transaction.",
        "operationId": "cancelPrepaidCardTransaction",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type for reload prepaid card.",
            "name": "cancelPrepaidCardTransaction",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cancelPrepaidCardTransaction"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/cancelPrepaidCardTransactionStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/prepaidCards/cashOut": {
      "put": {
        "description": "You can use this API to cashOut Prepaid Card. <p><strong>OperationId:</strong>cashOutPrepaidCard</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Operation to cash out prepaid card.",
        "operationId": "cashOutPrepaidCard",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type for cashout prepaid card.",
            "name": "cashOutPrepaidCard",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cashOutPrepaidCard"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/cashOutPrepaidCardStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/prepaidCards/reload": {
      "put": {
        "description": "You can use this API to reload Prepaid Card. <p><strong>OperationId:</strong>reloadPrepaidCard</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Operation to reload prepaid card.",
        "operationId": "reloadPrepaidCard",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type for reload prepaid card.",
            "name": "reloadPrepaidCard",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reloadPrepaidCard"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/reloadPrepaidCardStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/profiles/{profileId}/creditCardWallet": {
      "get": {
        "description": "This API is used to fetch the credit card wallet from the specified hotel and profile. <p><strong>OperationId: getHotelCreditCardWallet</strong></p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "credit card wallet",
        "operationId": "getHotelCreditCardWallet",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the profile",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the request to get Credit Card Wallet Information",
            "schema": {
              "$ref": "#/definitions/creditCardWallet"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "HotelCreditCardWallet not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/profiles/{profileId}/paymentMethods/creditCard/authorize": {
      "post": {
        "description": "You can use this API to authorize Credit Card Amount by Profile. <p><strong>OperationId:</strong>authorizeCreditCardAmountByProfile</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Authorize Credit Card Amount by Profile",
        "operationId": "authorizeCreditCardAmountByProfile",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the profile",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for a credit card authorization. An authorization request will be sent to the Credit Card Vendor as part of this request.",
            "name": "ccAuthorizationCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/ccAuthorizationCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response to the credit card authorization request.",
            "schema": {
              "$ref": "#/definitions/authorizationInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/profiles/{profileId}/paymentMethods/creditCard/authorizeInstructions": {
      "get": {
        "description": "You can use this API to get Credit Card Authorization Instructions by Profile. <p><strong>OperationId:</strong>getCCAuthorizationInstructionsByProfile</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get CC Authorization Instructions by Profile",
        "operationId": "getCCAuthorizationInstructionsByProfile",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the profile",
            "name": "profileId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Flag to indicate if the approval amount should be calculated before authorization. If this is true and if the amount is 0 the approval amount will be calculated based on the rules.",
            "name": "evaluateApprovalAmount",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Additional",
              "ArPayment",
              "Batch",
              "BatchDeposit",
              "BatchDepositRefund",
              "Billing",
              "CheckIn",
              "CheckInManualAuth",
              "Deposit",
              "EndOfDay",
              "EndOfDayDeposit",
              "Manual",
              "Other",
              "PasserBy",
              "PostIt",
              "PreCheckIn",
              "Refund",
              "Scheduled"
            ],
            "type": "string",
            "description": "Currently supported transaction type categories used for credit card authorization.",
            "name": "sourceOfAuthorization",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Update the card details on the reservations for Chip and Pin Authorizations.",
            "name": "updateReservation",
            "in": "query"
          },
          {
            "type": "string",
            "default": "OPERA",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "default": "Reservation",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "default": "OPERA",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "profileIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "default": "Profile",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "profileIdType",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "amount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The folio window where this authorization is applied.",
            "name": "folioView",
            "in": "query"
          },
          {
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "paymentFolioView",
            "in": "query"
          },
          {
            "type": "string",
            "name": "paymentMethod",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Track2 data for the card which would be sent to the CC vendor as part of the authorization.",
            "name": "track2Data",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Attach the credit card to profile.",
            "name": "attachCreditCardToProfile",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardHolderName",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumber",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberLast4Digits",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ],
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "name": "cardOrToken",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ],
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "name": "cardType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Expiration date of the credit card",
            "name": "expirationDate",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "expirationDateExpired",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Masked Expiration date of the credit card",
            "name": "expirationDateMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ],
            "type": "string",
            "name": "processing",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "swiped",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
            "name": "cardPresent",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
            "name": "citId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "name": "userDefinedCardType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "cardIdId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "cardIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "cardIdType",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "currentAuthorizedAmountAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currentAuthorizedAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "approvalAmountNeededAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "approvalAmountNeededCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "balanceAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "balanceCurrencyCode",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The authorization rule code.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "amountAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "amountCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A percentage value if the authorization rule is percentage based.",
            "name": "percent",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "emailFolio",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "uniqueIdId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "uniqueIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "uniqueIdType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Time stamp of the creation.",
            "name": "createDateTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
            "name": "creatorId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the e-mail address.",
            "name": "emailAddress",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Html",
              "Text"
            ],
            "type": "string",
            "description": "Supported Email format.",
            "name": "emailFormat",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Identifies the last software system or person to modify a record.",
            "name": "lastModifierId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Time stamp of last modification.",
            "name": "lastModifyDateTime",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Display Order sequence.",
            "name": "orderSequence",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true, indicates a primary information.",
            "name": "primaryInd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
            "name": "purgeDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
            "name": "emailType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Describes the Type code",
            "name": "typeDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The approval code authenticates the authorization.",
            "name": "approvalCode",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Unique Authorization Sequence for the authorization and settlement.",
            "name": "originalAuthSequence",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Vendor transaction id for the authorization.",
            "name": "vendorTranId",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "approvalAmountAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "approvalAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Applicable for chip and pin. The ID of the terminal where the chip and pin device is connected.",
            "name": "terminalId",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "incidentalAmountAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "incidentalAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the fetch authorization instructions. Based on the criteria requested, the response can contain information required to send a credit card authorization to the Vendor.",
            "schema": {
              "$ref": "#/definitions/ccAuthorizationInstructions"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CCAuthorizationInstructionsByProfile not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/receiptHistory": {
      "get": {
        "description": "You can use this API to get Receipt History. <p><strong>OperationId:</strong>getReceiptHistory</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Receipt History",
        "operationId": "getReceiptHistory",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "Receipt History Date Range(from).",
            "name": "fromDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Receipt History Date Range(to).",
            "name": "toDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Family name, last name or Company Name.",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Given name, first name or names.",
            "name": "firstName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Receipt Type.",
            "name": "receiptTypeName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Tax Invoice Number.",
            "name": "taxInvoice",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Receipt Number.",
            "name": "receiptNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the fetch Receipt History.",
            "schema": {
              "$ref": "#/definitions/receiptHistoryResponse"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ReceiptHistory not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservation/{reservationId}/rateCode/{rateCode}": {
      "post": {
        "description": "You can use this API to create rate codes. <p><strong>OperationId:</strong>postRateCode</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create rate codes",
        "operationId": "postRateCode",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "The Rate Code which is to be posted on the Guest Folio.",
            "name": "rateCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Operation to post a Rate Code amount to the Reservation. Based on the criteria, Products(Packages) which are included as part of the Rate Code may be posted along with the room rate amount.",
            "name": "postRateCodeCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/postRateCodeCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response for the operation that posts a Rate Code amount on the reservation.",
            "schema": {
              "$ref": "#/definitions/postedRateCode"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservation/{reservationId}/rateCode/{rateCode}/action/validate": {
      "put": {
        "description": "You can use this API to change posted rate codes. <p><strong>OperationId:</strong>checkPostRateCode</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Change posted rate codes",
        "operationId": "checkPostRateCode",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "The Rate Code which is to be posted on the Guest Folio.",
            "name": "rateCode",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to check if a Rate Code can be posted to the room manually. This will check if the Rate Code is valid, if the Products(Packages) which are defined as part of the Rate Code can be posted or reversed.",
            "name": "postRateCodeCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/postRateCodeCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the request to check if a Rate Code can be posted to a reservation .",
            "schema": {
              "$ref": "#/definitions/checkedRateCode"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/billingCharges": {
      "post": {
        "description": "You can use this API to create Billing Charges in Batch. <p><strong>OperationId:</strong>postBillingChargesInBatch</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create Billing Charges in Batch",
        "operationId": "postBillingChargesInBatch",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Operation to post billing charge to list of reservations.",
            "name": "billingChargesInBatchCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/billingChargesInBatchCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Information regarding charges in batch result for each reservation.",
            "schema": {
              "$ref": "#/definitions/postedBillingChargesInBatch"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/cCSettlements": {
      "get": {
        "description": "You can use this API to get batch CC Settlements. <p><strong>OperationId:</strong>getBatchCCSettlements</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get batch CC Settlements",
        "operationId": "getBatchCCSettlements",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "fetch only offline settlements.",
            "name": "offlineSettlement",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Transaction Date associated with the transaction.",
            "name": "transactionDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Guest name associated with the transaction.",
            "name": "guestName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Room number associated with the transaction.",
            "name": "roomId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for credit card settlements.",
            "schema": {
              "$ref": "#/definitions/ccBatchSettlements"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "BatchCCSettlements not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/additionalTaxes": {
      "get": {
        "description": "You can use this API to get Additional Taxes. <p><strong>OperationId:</strong>getAdditionalTaxes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get additional Taxes",
        "operationId": "getAdditionalTaxes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Folio Window.",
            "name": "folioView",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Currency code on which tax is to be calculated",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object containing additional tax information.",
            "schema": {
              "$ref": "#/definitions/additionalTaxesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AdditionalTaxes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/advancePaymentBalance": {
      "get": {
        "description": "You can use this API to get advance payment balance. <p><strong>OperationId:</strong>getAdvancePaymentBalance</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get advance payment balance",
        "operationId": "getAdvancePaymentBalance",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "From date of reservation.",
            "name": "fromDate",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Number of nights to calculate advance payment.",
            "name": "numberOfNights",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "AdvanceBill",
              "Deposit",
              "CheckIn"
            ],
            "type": "string",
            "description": "Event to which this process will be logged.",
            "name": "eventType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the advance payment balance.",
            "schema": {
              "$ref": "#/definitions/advancePaymentBalance"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AdvancePaymentBalance not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/advanceRoomCharges": {
      "post": {
        "description": "You can use this API to create advance Room Charges. <p><strong>OperationId:</strong>postAdvanceRoomCharges</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create advance Room Charges",
        "operationId": "postAdvanceRoomCharges",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to post the Room Charges for a reservation in advance. This request posts the Room Charges for a reservation for tonight or for many nights starting from the last posted night. This can also be used to verify if the reservation has already been charged for the full stay. Setting the Verify flag will return details regarding the last Room Charge posted date and if there are any available dates for which the room charges can be posted in advance. Room Charges cannot be posted for dates prior to the business date of the resort. To make the actual posting, the verification flag should be false.",
            "name": "advanceRoomCharges",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/advanceRoomCharges"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response for the generate advance folio request. Post Advance Room Charges Request can return the below error codes : FOF00065 - Reservation ID or Resort was not supplied. FOF00147 - Reservation is currently not In-House. FOF00148 - Date range requested is not valid. FOF00149 - Advance Room Charges Posting was not completed successfully as there was an Error during posting. FOF00150 - Room Charges have already been posted for the requested dates. FOF00151 - Advance Room Charges could not be completed {the error message if any}.",
            "schema": {
              "$ref": "#/definitions/advanceRoomChargesReservationInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "You can use this API to reverse the Advance Folio Transactions on a reservation. As part of reversal, the actual charges may not be deleted but only an offset will be posted.<p><strong>OperationId:</strong>reverseAdvanceFolio</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Delete Advance Folio Transactions",
        "operationId": "deleteAdvanceRoomCharges",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "name": "cashierId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/alerts": {
      "get": {
        "description": "You can use this API to get Alert Notices.<br><p><strong><mark>This API is deprecated.</mark></strong></p> <p><strong>OperationId:</strong>getAlerts</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Alert Notices",
        "operationId": "getAlerts",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "enum": [
              "CheckIn",
              "CheckOut",
              "Reservation",
              "Billing",
              "InHouse"
            ],
            "type": "string",
            "name": "alertArea",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response with the fetched alerts, includes global alerts.",
            "schema": {
              "$ref": "#/definitions/alertNotices"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Alerts not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/authorizationHistory": {
      "get": {
        "description": "You can use this API to get authorization history. <p><strong>OperationId:</strong>getAuthorizationHistory</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get authorization history",
        "operationId": "getAuthorizationHistory",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "A flag which indicates whether authorizations should be included in the returned list.",
            "name": "includeAuthorizations",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "A flag which indicates whether payments should be included in the returned list.",
            "name": "includePayments",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "A flag which indicates whether refunds should be included in the returned list.",
            "name": "includeRefunds",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "A flag which indicates whether failures should be included in the returned list.",
            "name": "includeFailures",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "folioView",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Additional",
              "ArPayment",
              "Batch",
              "BatchDeposit",
              "BatchDepositRefund",
              "Billing",
              "CheckIn",
              "CheckInManualAuth",
              "Deposit",
              "EndOfDay",
              "EndOfDayDeposit",
              "Manual",
              "Other",
              "PasserBy",
              "PostIt",
              "PreCheckIn",
              "Refund",
              "Scheduled"
            ],
            "type": "string",
            "description": "Currently supported transaction type categories used for credit card authorization.",
            "name": "transactionType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "The result element containing a history list of credit card authorizations for a particular reservation, filtered by the requested criteria.",
            "schema": {
              "$ref": "#/definitions/authorizationHistory"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "AuthorizationHistory not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/charges": {
      "get": {
        "description": "You can use this API to get post Billing Charges. <p><strong>OperationId:</strong>getPostBillingCharges</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Billing Charges",
        "operationId": "getPostBillingCharges",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "name": "cashierId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "name": "folioWindowNo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "name": "chargeCashierId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Transaction Code to post.",
            "name": "transactionCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Article ID.",
            "name": "articleCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "amount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Quantity to post to the folio.",
            "name": "postingQuantity",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "User-defined posting reference.",
            "name": "postingReference",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "User-defined posting remark.",
            "name": "postingRemark",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Indicates the Cheque number.",
            "name": "checkNumber",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Corrected arrangement code from the package associated to this transaction.",
            "name": "arrangementCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "Apply room routing when making this posting.",
            "name": "applyRoutingInstructions",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "Use the applicable package allowance when making this posting.",
            "name": "usePackageAllowance",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "True indicates the Transaction Code is allowed to be posted automatically.",
            "name": "autoPosting",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "reservationIdType",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "PackageAllowance",
                "RoomRouting",
                "PostingStatus"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "This is the Default option. Operation checks if charges can be posted to the reservation based on the status of the reservation.",
            "name": "option",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response when checking or inquiring the available options for a set of billing charges.",
            "schema": {
              "$ref": "#/definitions/billingChargesStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "PostBillingCharges not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "You can use this API to post a charge to a folio window. <p><strong>OperationId:</strong>postBillingCharges</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Post Charge to a folio",
        "operationId": "postBillingCharges",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to post a charge on a reservation's folio.",
            "name": "billingCharges",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/billingCharges"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response notifying if the posting of a charge to a reservation was successful.",
            "schema": {
              "$ref": "#/definitions/billingChargesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/check/{checkNumber}/charges": {
      "post": {
        "description": "You can use this API to validate the posting prior to posting the charge to the folio <p><strong>OperationId:</strong>postBillingCheckCharges</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Pre-validate the Billing Charge",
        "operationId": "postBillingCheckCharges",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique number of the check.",
            "name": "checkNumber",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for PostBillingCheckCharges operation.",
            "name": "billingCheckChargesCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/billingCheckChargesCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/checkOuts": {
      "post": {
        "description": "This API enables you to check out a guest reservation which is in due out status, with options to update the room's housekeeping status and set a flag to email the guests folio. <p><strong>OperationId:</strong>postCheckOut</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Check out a guest",
        "operationId": "postCheckOut",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Checkout request can be used to verify a reservation for checkout and do an actual checkout. In case the verificationOnly attribute is sent false, the operation will perform an actual checkout. In case the verificationOnly attribute is sent true, the operation goes through the reservation in question and verifies if it's Ok to checkout, otherwise the verification status element will provide you the verification code. The verification codes are described in the documentation of verificationOnly attribute.",
            "name": "reservation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservation"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/checkOuts/reinstate": {
      "put": {
        "description": "You can use this API to reinstate Checked Out Reservation. <p><strong>OperationId:</strong>reinstateCheckOut</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Reinstate Checked Out Reservation",
        "operationId": "reinstateCheckOut",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to reinstate checkout reservation in order to post additional transactions, etc.",
            "name": "reinstateCheckedOutReservation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reinstateCheckedOutReservation"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/comp/folios/autoSettlements": {
      "put": {
        "description": "You can use this API to auto Settle CompFolios <p><strong>OperationId:</strong>autoSettleCompFolios</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Operation to auto settle comp folios.",
        "operationId": "autoSettleCompFolios",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to auto settle comp folios. OPERA will reference the 'Default Comp Payment Method' setting to settle the folio if no authorizer AR account is associated with the folio.",
            "name": "autoSettleCompFolios",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/autoSettleCompFolios"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for auto settle comp folios. This includes collection of auto settled comp folios.",
            "schema": {
              "$ref": "#/definitions/autoSettleCompFoliosStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/compRedemptionPostings": {
      "post": {
        "description": "You can use this API to post complimentary bucket redemptions for a guest having PTS Membership Type <p><strong>OperationId:</strong>postCompRedemptions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Operation to post complimentary bucket redemptions for a guest having PTS Membership Type",
        "operationId": "postCompRedemptions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type of Complimentary Bucket Redemptions posting.",
            "name": "postCompRedemptions",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/postCompRedemptions"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/compRedemptionReversals": {
      "post": {
        "description": "You can use this API to reverse complimentary bucket redemptions for a guest having PTS Membership Type <p><strong>OperationId:</strong>reverseCompRedemptions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Operation to reverse complimentary bucket redemptions for a guest having PTS Membership Type",
        "operationId": "reverseCompRedemptions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type of Complimentary Bucket Redemptions reversal.",
            "name": "reverseCompRedemptions",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reverseCompRedemptions"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/deferredTaxesProcess": {
      "post": {
        "description": "Request to submit a job to post the deferred taxes. <p><strong>OperationId:</strong>postDeferredTaxesProcess</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Request to submit a job to post the deferred taxes.",
        "operationId": "postDeferredTaxesProcess",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to submit a job to post the deferred taxes.",
            "name": "deferredTaxesProcess",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/deferredTaxesProcess"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response containing the job identifier to post the deferred taxes. Returns appropriate warnings in case if deferred tax is not enabled for the hotel or deferred tax is enabled but the reservation has deferred taxes already posted or currently under process",
            "schema": {
              "$ref": "#/definitions/deferredTaxesProcessDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/deposit": {
      "post": {
        "description": "You can use this API to Process reservations deposit. <p><strong>OperationId:</strong>processReservationDeposit</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Process Reservations deposit",
        "operationId": "processReservationDeposit",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to process reservation deposit.",
            "name": "reservationDepositCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationDepositCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/depositFolios": {
      "post": {
        "description": "You can use this API to create Deposit Folio. <p><strong>OperationId:</strong>postDepositFolio</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create Deposit Folio",
        "operationId": "postDepositFolio",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to create a Deposit Folio for a reservation.",
            "name": "depositFolioCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/depositFolioCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response to the request to create a Deposit Folio for a reservation.",
            "schema": {
              "$ref": "#/definitions/postedDepositFolio"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/depositMaturity": {
      "get": {
        "description": "You can use this API to get Deposit Maturity Information. <p><strong>OperationId:</strong>getDepositMaturityInfo</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Deposit Maturity Information",
        "operationId": "getDepositMaturityInfo",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "name": "cashierId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for deposit maturity information type.",
            "schema": {
              "$ref": "#/definitions/depositMaturityDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "DepositMaturityInfo not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/depositPayments": {
      "get": {
        "description": "You can use this API to fetch matured deposits. <p><strong>OperationId:</strong>getMaturedDeposits</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get matured deposits",
        "operationId": "getMaturedDeposits",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response of matured deposits.",
            "schema": {
              "$ref": "#/definitions/maturedDepositsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "MaturedDeposits not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "You can use this API to create Deposit Payment. <p><strong>OperationId:</strong>postDepositPayment</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create Deposit Payment",
        "operationId": "postDepositPayment",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to post a deposit payment to a reservation.",
            "name": "depositPayment",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/depositPayment"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response for the post deposit payment request.",
            "schema": {
              "$ref": "#/definitions/depositedPayment"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/depositTransition": {
      "put": {
        "description": "You can use this API to Transfer Deposit to Guest Folio. <p><strong>OperationId:</strong>transitionDepositToGuestFolio</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Transition Deposit to Guest Folio",
        "operationId": "transitionDepositToGuestFolio",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to post an existing deposit on a reservation to the Guest Folio for No Show or Cancelled Reservations. Deposits remain in the deposit ledger until Checkin/Checkout. In the case of No Show or Cancelled reservations they remain in the deposit ledger until this request is done.",
            "name": "depositToGuestFolio",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/depositToGuestFolio"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/earlyDeparture": {
      "put": {
        "description": "You can use this API to change early Departure. <p><strong>OperationId:</strong>putForEarlyDeparture</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Change early Departure",
        "operationId": "putForEarlyDeparture",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to change a reservation to an Early Departure. As part of this process the reservation will be changed to a Due Out status with the departure date being the current business date. Only Inhouse reservations can be changed to Early Departure. Before changing the reservation to early departure, rate restrictions on the rate code used and any allowances consumed by the guest for today will be checked. If there is a penalty applicable this can be posted to the reservation.",
            "name": "earlyDeparture",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/earlyDeparture"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/earlyDeparture/verify": {
      "get": {
        "description": "You can use this API to verify early Departure. <p><strong>OperationId:</strong>verifyForEarlyDeparture</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Verify for early Departure",
        "operationId": "verifyForEarlyDeparture",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Indicates if check has to be done for Rate Tiers.",
            "name": "ignoreCheckOnTieredRate",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if Rate Restriction check should be overridden.",
            "name": "ignoreRateRestriction",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if any allowance consumed by the guest for today can be posted to the Guest Folio. If this cannot be done then the Early Departure cannot proceed.",
            "name": "postConsumedAllowanceToGuest",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates if the early departure penalty should be posted .",
            "name": "postEarlyDeparturePenalty",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "name": "cashierId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for Early departure verification. Contains information regarding early departure penalty amount if applicable and any errors or warnings as to why the early departure cannot be done. Possible error codes are: FOF00152: An early departure could result in a change to the room rate, due to the reduced length of stay. FOF00153: Exchange Rates not setup for {currency code} . FOF00155: The partially consumed package(s) will be charged to the guest account. FOF00156: There is a Rate Code Restriction for {restriction information}. FOF00157: The reservation status is not valid for an early departure. FOF00158: Early Departure is not required as the reservation is already in Due Out status.",
            "schema": {
              "$ref": "#/definitions/earlyDepartureInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "verifyForEarlyDeparture not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/eligibleBillAmount": {
      "get": {
        "description": "Retrieves eligible bill amount in order to post redemption on a reservation folio <p><strong>OperationId:</strong>getEligibleBillAmount</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Eligible Bill Amount",
        "operationId": "getEligibleBillAmount",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "The folio window where this settlement is applied.",
            "name": "folioView",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for Eligible Bill Amount. This object contains details related to amount that is eligible to redeem.",
            "schema": {
              "$ref": "#/definitions/amountEligible"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "EligibleBillAmount not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/fetchStagedTransactions": {
      "get": {
        "description": "This API is used to fetch the staged transactions for a given reservation. <p><strong>OperationId:</strong>getfetchStagedTransactions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get fetchStagedTransactions",
        "operationId": "getfetchStagedTransactions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Folio Window Number of the staged transactions.",
            "name": "folioWindowNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the request to get the Reservation's staged comp transactions.",
            "schema": {
              "$ref": "#/definitions/stagedTransactions"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "fetchStagedTransactions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/finalCharges": {
      "post": {
        "description": "You can use this API to apply final postings on a reservation. <p><strong>OperationId:</strong>applyFinalPostings</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Apply final Postings",
        "operationId": "applyFinalPostings",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to apply any final charges or payments to a reservation prior to checkout. This operation should be called prior to the guest settlement which would then reflect the balance the guest has to pay.",
            "name": "finalPostings",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/finalPostings"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/fiscalInfo": {
      "post": {
        "description": "API to generate CHECK OUT payload for a reservation",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Post fiscal Info",
        "operationId": "postFiscalInfo",
        "parameters": [
          {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to generate CHECK OUT payload for a reservation.",
            "name": "postFiscalInfoType",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/postFiscalInfoType"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/fiscalPrinting": {
      "get": {
        "description": "You can use this API to get Fiscal Printing Details.<br><p><strong><mark>This API is deprecated. Please use getValidateFiscalPrintingDetails instead</mark></strong></p> <p><strong>OperationId:</strong>getFiscalPrintingDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Fiscal Printing Details",
        "operationId": "getFiscalPrintingDetails",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "The folio window where this settlement is applied.",
            "name": "folioView",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Folio Type",
            "name": "folioType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "code",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Paymentmethod",
                "Profile",
                "Foliotype",
                "Reservation"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Reservation Related information.",
            "name": "fetchInstruction",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileIdId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Check if it will call fiscal printing or not.",
            "schema": {
              "$ref": "#/definitions/fiscalCallStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FiscalPrintingDetails not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/fixedCharges": {
      "get": {
        "description": "You can use this API to get fixed Charges for a reservation. <p><strong>OperationId:</strong>getFixedCharges</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Fixed Charges",
        "operationId": "getFixedCharges",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response that contains either the fixed charges list if fetch was successful or error(s) if not.",
            "schema": {
              "$ref": "#/definitions/fixedChargesDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FixedCharges not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "You can use this API to update fixed Charges for a reservation. <p><strong>OperationId:</strong>updateFixedCharges</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Updates Fixed Charges ",
        "operationId": "updateFixedCharges",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Method to update fixed charges of a reservation.",
            "name": "fixedCharges",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fixedCharges"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "You can use this API to create a fixed Charge for a reservation. <p><strong>OperationId:</strong>postFixedCharges</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create Fixed Charges",
        "operationId": "postFixedCharges",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Method to create fixed charges of a reservation.",
            "name": "fixedCharges",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fixedCharges"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "You can use this API to remove fixed Charges for a reservation. <p><strong>OperationId:</strong>removeFixedCharges</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Delete Fixed Charges ",
        "operationId": "removeFixedCharges",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "fixedChargeID",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/flexibleBenefitPostings": {
      "post": {
        "description": "You can use this API to apply flexible benefit postings. <p><strong>OperationId:</strong>applyFlexibleBenefitPostings</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Apply flexible benefit postings",
        "operationId": "applyFlexibleBenefitPostings",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Apply Flexible Benefit Postings.",
            "name": "flexibleBenefitPostingsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/flexibleBenefitPostingsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/folioTaxPayments": {
      "get": {
        "description": "You can use this API to get folio tax payments information. <p><strong>OperationId:</strong>getFolioTaxPaymentsInfo</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get folio tax payments information",
        "operationId": "getFolioTaxPaymentsInfo",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "name": "folioWindowNo",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "name": "cashierId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "folioView",
            "in": "query"
          },
          {
            "type": "string",
            "name": "paymentMethod",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Track2 data for the card which would be sent to the CC vendor as part of the authorization.",
            "name": "track2Data",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Attach the credit card to profile.",
            "name": "attachCreditCardToProfile",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardHolderName",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumber",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberLast4Digits",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ],
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "name": "cardOrToken",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ],
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "name": "cardType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Expiration date of the credit card",
            "name": "expirationDate",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "expirationDateExpired",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Masked Expiration date of the credit card",
            "name": "expirationDateMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ],
            "type": "string",
            "name": "processing",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "swiped",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "name": "userDefinedCardType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "amount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "approvalAmountNeededAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "approvalAmountNeededCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "balanceAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "balanceCurrencyCode",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The authorization rule code.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "amountAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "amountCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A percentage value if the authorization rule is percentage based.",
            "name": "percent",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "emailFolio",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "uniqueIdId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "uniqueIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "uniqueIdType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Time stamp of the creation.",
            "name": "createDateTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
            "name": "creatorId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the e-mail address.",
            "name": "emailAddress",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Html",
              "Text"
            ],
            "type": "string",
            "description": "Supported Email format.",
            "name": "emailFormat",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Identifies the last software system or person to modify a record.",
            "name": "lastModifierId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Time stamp of last modification.",
            "name": "lastModifyDateTime",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Display Order sequence.",
            "name": "orderSequence",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true, indicates a primary information.",
            "name": "primaryInd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
            "name": "purgeDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
            "name": "emailType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Describes the Type code",
            "name": "typeDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The approval code authenticates the authorization.",
            "name": "approvalCode",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Unique Authorization Sequence for the authorization and settlement.",
            "name": "originalAuthSequence",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Vendor transaction id for the authorization.",
            "name": "vendorTranId",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "approvalAmountAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "approvalAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "postingAmountAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "postingAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "User-defined posting reference.",
            "name": "postingReference",
            "in": "query"
          },
          {
            "type": "string",
            "description": "User-defined posting remark.",
            "name": "postingRemark",
            "in": "query"
          },
          {
            "type": "string",
            "description": "User Defined Comments. Used for Deposit Payment postings.",
            "name": "comments",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indicate if Credit Card Surcharge has to be applied to this payment, when the functionality for Credit Card Surcharge is available.",
            "name": "applyCCSurcharge",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "manualPaymentTaxInfoFolioWindowNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Billing Transaction Code of the Payment.",
            "name": "transactionCode",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Transaction Date of the Payment.",
            "name": "transactionDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Billing Transaction Description.",
            "name": "transactionDescription",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Unique Transaction Identifier.",
            "name": "transactionNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Tax Invoice for this payment.",
            "name": "taxInvoiceNo",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Deposit",
              "FrontOffice",
              "CreditNote",
              "CityLedger",
              "AccountsReceivables",
              "NonVat"
            ],
            "type": "string",
            "description": "The types of Payment Tax transactions.",
            "name": "paymentType",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "manualPaymentTaxAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "manualPaymentTaxCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "taxableAmountAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "taxableAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "nonTaxableAmountAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "nonTaxableAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "availableCreditAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "availableCreditCurrencyCode",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "The Payment Invoice date",
            "name": "paymentDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "name": "taxFolioWindowNo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Billing Transaction Code of the Payment.",
            "name": "taxTransactionCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "Transaction Date of the Payment.",
            "name": "taxTransactionDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Billing Transaction Description.",
            "name": "taxTransactionDescription",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Unique Transaction Identifier.",
            "name": "taxTransactionNo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The Tax Invoice for this payment.",
            "name": "taxTaxInvoiceNo",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Deposit",
                "FrontOffice",
                "CreditNote",
                "CityLedger",
                "AccountsReceivables",
                "NonVat"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "The types of Payment Tax transactions.",
            "name": "taxPaymentType",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "creditablePaymentTaxesAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "creditablePaymentTaxesCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "creditablePaymentTaxableAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "creditablePaymentTaxableCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "creditablePaymentNonTaxableAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "creditablePaymentNonTaxableCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "availableTaxCreditAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "availableTaxCreditCurrencyCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "The Payment Invoice date",
            "name": "taxPaymentDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Applicable for chip and pin. The ID of the terminal where the chip and pin device is connected and where the payment is made.",
            "name": "terminalId",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to allow a rebate by Credit Card",
            "name": "overrideInsufficientCC",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "changeDueAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "changeDueAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to override account receivable credit limit",
            "name": "overrideARCreditLimit",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indidcate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.",
            "name": "applyCurrencyTaxes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indidcate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.",
            "name": "vATOffset",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Billing",
              "Settlefolio",
              "Deposit",
              "Compredemption",
              "Prepaidcardredemption",
              "Advancepayment"
            ],
            "type": "string",
            "description": "Payment action to know from where the payment has been made.",
            "name": "action",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "reservationIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileIdId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "profileIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "profileIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the request for Payment Tax records for a reservation. Lists all the Payment Taxes for the reservation which are available.",
            "schema": {
              "$ref": "#/definitions/folioTaxPaymentsInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FolioTaxPaymentsInfo not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/folios": {
      "get": {
        "description": "This API is used to fetch the folios for a given reservation. A guest reservation could have 1 or more folios per reservation. Folios will only exist for a reservation once the guest has checked into the hotel. <p><strong>OperationId:</strong>getFolio</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get folios",
        "operationId": "getFolio",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Flag to return the Folio Windows information where the Reservation Guest is the Payee, i.e the Folio Window is not Routed to another Reservation or another Profile.",
            "name": "guestPayOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag will notify the service if the folio history will also be returned or not.",
            "name": "includeFolioHistory",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag will notify the service if the reservation summary information will be returned. If TRUE then we will only return the reservation's outstanding balance.",
            "name": "reservationBalanceOnly",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Reservation",
                "Windowbalances",
                "Payment",
                "Payee",
                "Account",
                "Guestpay",
                "Notifications",
                "Transactioncodes",
                "Foliohistory",
                "Totalbalance",
                "Postings"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Posting details of each window.",
            "name": "fetchInstructions",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "The ending value of the date range.",
            "name": "end",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "name": "folioWindowNo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Indicates maximum number of records a Web Service should return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "collectionFormat": "multi",
            "description": "The starting value of the date range.",
            "name": "start",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag will notify the service that transactional postings will not be returned.",
            "name": "summaryOnly",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "CheckNo",
              "TransactionDate",
              "TransactionCode",
              "TransactionType"
            ],
            "type": "string",
            "description": "Grouping by Transactin Type.",
            "name": "groupType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Currency to which the Credit and Debit Amounts will be converted for each Folio. The response will have the ExchangeAmounts element with the converted amounts. The Posting Exchange Rate of the current business date will be used for the conversion",
            "name": "exchangeCurrency",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "calculateCollectingAgentTaxes",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "vATOffset",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "includeDepositTaxes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag signifies that generated Folio is Normal or Simple Folio. Certain countries of the World mandate a simple folio when the invoice amount is less than defined threshold.",
            "name": "simpleFolio",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the request to get Financial Information for a Reservation",
            "schema": {
              "$ref": "#/definitions/folio"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "Folio not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "You can use this API to close the Reservation Folio on a reservation. <p><strong>OperationId:</strong>closeReservationFolio</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Close Reservation Folio",
        "operationId": "closeReservationFolio",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to close an Open Folio Reservation. The Property should be using the Open Folio Functionality to use this operation.",
            "name": "closeFolioCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/closeFolioCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "You can use this API to generate folios for a reservation. <p><strong>OperationId:</strong>generateFolio</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Generate Folios",
        "operationId": "generateFolio",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Generate Folio request can be used to create a folio for checked in reservation or reservation with open folios",
            "name": "folioCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Generate Folio Response contains generated folio no and invoice number along or errors and warnings in case if folio couldn't be generated: FOF00065 - The hotel code and/or reservation id is missing. FOF00066 - Reservation can't be found with the supplied hotel code and reservation id. FOF00123 - Folio window has a balance and folio cannot be generated. FOF00124 - The guest's reservation is not in a valid status for folio generation.",
            "schema": {
              "$ref": "#/definitions/generatedFolio"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/memberships/{membershipId}/awardTransactions": {
      "post": {
        "description": "Creates a new membership award payment transaction. <p><strong>OperationId:</strong>postAwardTransaction</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Post a membership award payment transaction.",
        "operationId": "postAwardTransaction",
        "parameters": [
          {
            "type": "string",
            "description": "Unique ID of the hotel.",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "Unique ID of the reservation.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "Membership number of the guest in the reservation.",
            "name": "membershipId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object for creating an award transaction.",
            "name": "awardDetails",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/awardPaymentDetails"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/packageAllowance/links": {
      "delete": {
        "description": "You can use this API to unlink reservation package allowance. <p><strong>OperationId:</strong>unlinkReservationPackageAllowance</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Unlink reservation package allowance",
        "operationId": "unlinkReservationPackageAllowance",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/packageOptions": {
      "get": {
        "description": "You can use this API to get Reservation Package Options. <p><strong>OperationId:</strong>getReservationPackageOptions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Reservation Package Options",
        "operationId": "getReservationPackageOptions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to fetch reservation package options.",
            "schema": {
              "$ref": "#/definitions/reservationPackageOptions"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ReservationPackageOptions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/paymentMethods/creditCard/authorize": {
      "post": {
        "description": "You can use this API to authorize Credit Card Amount by Reservation. <p><strong>OperationId:</strong>authorizeCreditCardAmount</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Authorize Credit Card Amount",
        "operationId": "authorizeCreditCardAmount",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for a credit card authorization. An authorization request will be sent to the Credit Card Vendor as part of this request.",
            "name": "ccAuthorizationCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/ccAuthorizationCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response to the credit card authorization request.",
            "schema": {
              "$ref": "#/definitions/authorizationInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/paymentMethods/creditCard/authorize/manual": {
      "post": {
        "description": "You can use this API to register Manual Authorization. <p><strong>OperationId:</strong>registerManualAuthorization</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Register Manual Authorization",
        "operationId": "registerManualAuthorization",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for registering a Manual Authorization.",
            "name": "ccManualAuthorizationCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/ccManualAuthorizationCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/paymentMethods/creditCard/authorizeInstructions": {
      "get": {
        "description": "You can use this API to get Credit Card Authorization Instructions by Reservation. <p><strong>OperationId:</strong>getCCAuthorizationInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get CC Authorization Instructions",
        "operationId": "getCCAuthorizationInstructions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Flag to indicate if the approval amount should be calculated before authorization. If this is true and if the amount is 0 the approval amount will be calculated based on the rules.",
            "name": "evaluateApprovalAmount",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Additional",
              "ArPayment",
              "Batch",
              "BatchDeposit",
              "BatchDepositRefund",
              "Billing",
              "CheckIn",
              "CheckInManualAuth",
              "Deposit",
              "EndOfDay",
              "EndOfDayDeposit",
              "Manual",
              "Other",
              "PasserBy",
              "PostIt",
              "PreCheckIn",
              "Refund",
              "Scheduled"
            ],
            "type": "string",
            "description": "Currently supported transaction type categories used for credit card authorization.",
            "name": "sourceOfAuthorization",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Update the card details on the reservations for Chip and Pin Authorizations.",
            "name": "updateReservation",
            "in": "query"
          },
          {
            "type": "string",
            "default": "OPERA",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "default": "Reservation",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "default": "OPERA",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "profileIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "default": "Profile",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "profileIdType",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "amount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The folio window where this authorization is applied.",
            "name": "folioView",
            "in": "query"
          },
          {
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "paymentFolioView",
            "in": "query"
          },
          {
            "type": "string",
            "name": "paymentMethod",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Track2 data for the card which would be sent to the CC vendor as part of the authorization.",
            "name": "track2Data",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Attach the credit card to profile.",
            "name": "attachCreditCardToProfile",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardHolderName",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumber",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberLast4Digits",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ],
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "name": "cardOrToken",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Attach the credit card to the wallet.",
            "name": "storeToCreditCardWallet",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ],
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "name": "cardType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Expiration date of the credit card",
            "name": "expirationDate",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "expirationDateExpired",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Masked Expiration date of the credit card",
            "name": "expirationDateMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ],
            "type": "string",
            "name": "processing",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "swiped",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
            "name": "cardPresent",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
            "name": "citId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "name": "userDefinedCardType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "cardIdId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "cardIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "cardIdType",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "currentAuthorizedAmountAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currentAuthorizedAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "approvalAmountNeededAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "approvalAmountNeededCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "balanceAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "balanceCurrencyCode",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The authorization rule code.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "amountAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "amountCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A percentage value if the authorization rule is percentage based.",
            "name": "percent",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "emailFolio",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "uniqueIdId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "uniqueIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "uniqueIdType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Time stamp of the creation.",
            "name": "createDateTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
            "name": "creatorId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the e-mail address.",
            "name": "emailAddress",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Html",
              "Text"
            ],
            "type": "string",
            "description": "Supported Email format.",
            "name": "emailFormat",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Identifies the last software system or person to modify a record.",
            "name": "lastModifierId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Time stamp of last modification.",
            "name": "lastModifyDateTime",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Display Order sequence.",
            "name": "orderSequence",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true, indicates a primary information.",
            "name": "primaryInd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
            "name": "purgeDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
            "name": "emailType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Describes the Type code",
            "name": "typeDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The approval code authenticates the authorization.",
            "name": "approvalCode",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Unique Authorization Sequence for the authorization and settlement.",
            "name": "originalAuthSequence",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Vendor transaction id for the authorization.",
            "name": "vendorTranId",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "approvalAmountAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "approvalAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Applicable for chip and pin. The ID of the terminal where the chip and pin device is connected.",
            "name": "terminalId",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "incidentalAmountAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "incidentalAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the fetch authorization instructions. Based on the criteria requested, the response can contain information required to send a credit card authorization to the Vendor.",
            "schema": {
              "$ref": "#/definitions/ccAuthorizationInstructions"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "CCAuthorizationInstructions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/payments": {
      "post": {
        "description": "You can use this API to create Billing Payment on the folio of a Reservation. <p><strong>OperationId:</strong>postBillingPayment</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create Billing Payment",
        "operationId": "postBillingPayment",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to post a payment on a reservation's folio.",
            "name": "billingPayment",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/billingPayment"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response notifying if the posting of a payment to a reservation was successful.",
            "schema": {
              "$ref": "#/definitions/postedBillingPayment"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/postingActivities": {
      "get": {
        "description": "You can use this API to get posting activity details. <p><strong>OperationId:</strong>getPostingActivityDetail</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get posting activity details",
        "operationId": "getPostingActivityDetail",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "name": "module",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "logDate",
            "in": "query"
          },
          {
            "type": "number",
            "name": "refActionId",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "logUserId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "logUserName",
            "in": "query"
          },
          {
            "type": "string",
            "name": "machineStation",
            "in": "query"
          },
          {
            "type": "string",
            "name": "croCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "actionType",
            "in": "query"
          },
          {
            "type": "string",
            "name": "actionDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The IP Address of the machine that performed the activity",
            "name": "iPAddress",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the request to get financial details for a Posting Activity. This will return the before and after values for the transactions which were changed.",
            "schema": {
              "$ref": "#/definitions/postingActivityDetail"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "PostingActivityDetail not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/prepaidCards/redemptions": {
      "put": {
        "description": "You can use this API to redeem Prepaid Cards <p><strong>OperationId:</strong>redeemPrepaidCards</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Operation to redeem prepaid cards.",
        "operationId": "redeemPrepaidCards",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type for Prepaid card redeem amount request.",
            "name": "redeemPrepaidCards",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/redeemPrepaidCards"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for redeem Prepaid cards request.",
            "schema": {
              "$ref": "#/definitions/redeemPrepaidCardsStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/proforma": {
      "post": {
        "description": "You can use this API to create proforma for a specific reservation. <p><strong>OperationId:</strong>postProforma</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create proforma",
        "operationId": "postProforma",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to create a Proforma(folio) transactions for a reservation. The request generates the internal transactions required to create a Proforma report. After this request is called , the Opera Proforma report should be called so that these transactions can be used in the report. If the report is called without this request, the report will be incorrect and will not have the complete information. If the report is not used after this request, the internal transactions will be removed either by night audit or by the next request.",
            "name": "reservationFolio",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationFolio"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response for the Create Proforma WS. After the proforma is created by this request, the Opera Proforma report should be called to generate the actual physical Proforma report. The response can have the summary of the Guests Proforma Folio, if requested.",
            "schema": {
              "$ref": "#/definitions/reservationFolioInformation"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/revenueBuckets": {
      "get": {
        "description": "You can use this API to get a reservations Revenue Bucket Totals. <p><strong>OperationId:</strong>getReservationRevenueBucketTotals</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Reservations Revenue Bucket Totals",
        "operationId": "getReservationRevenueBucketTotals",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Type if the revenue bucket.",
            "name": "revenueBucketType",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag will notify the service if the revenue is of complimentary type.",
            "name": "compRevenue",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for revenue bucket totals for a reservation.",
            "schema": {
              "$ref": "#/definitions/revenueBucketTotals"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "ReservationRevenueBucketTotals not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/reverseCertificate": {
      "post": {
        "description": "You can use this API to Reverse certificate postings. <p><strong>OperationId:</strong>reverseCertificatePostings</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Reverse certificate postings",
        "operationId": "reverseCertificatePostings",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to reverse the certificate postings of transactions.",
            "name": "reverseCertificatePostingsCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reverseCertificatePostingsCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/routingInstructions": {
      "get": {
        "description": "You can use this API to retrieve routing instructions for a specified reservation. <p><strong>OperationId:</strong>getRoutingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get routing instructions",
        "operationId": "getRoutingInstructions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Include the window routing instructions to the response.",
            "name": "includeWindowRouting",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Include the room routing instructions in the response.",
            "name": "includeRoomRouting",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Include the comp routing instructions in the response.",
            "name": "includeCompRouting",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Include the comp routing requests in the response.",
            "name": "includeCompRoutingRequests",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "If date is included then the search result should only be valid for dates which includes this date.",
            "name": "effectiveOn",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object containing routing instructions for a reservation.",
            "schema": {
              "$ref": "#/definitions/routingInstructionsDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RoutingInstructions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "description": "You can use this API to delete routing instructions for a specified reservation.<br><p><strong><mark>This API is deprecated. Please use deleteFolioRoutingInstructions or  deleteRoomRoutingInstructions or deleteCompRoutingInstructions or deleteRequestRoutingInstructions instead</mark></strong></p> <p><strong>OperationId:</strong>deleteRoutingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Delete routing instructions",
        "operationId": "deleteRoutingInstructions",
        "deprecated": true,
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/routingInstructions/change": {
      "put": {
        "description": "You can use this API to update routing instructions for a specified reservation. <p><strong>OperationId:</strong>changeRoutingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Change routing instructions",
        "operationId": "changeRoutingInstructions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request when changing a routing instruction.",
            "name": "routingInstructionsToChange",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/routingInstructionsToChange"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response when changing a routing instruction. It may optionally return a list of postings which are eligible for transfer as per the modified routing instruction in case of room routing instruction.",
            "schema": {
              "$ref": "#/definitions/changedRoutingInstructions"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/routingInstructions/comp": {
      "delete": {
        "description": "You can use this API to delete comp routing instructions for a specified reservation. <p><strong>OperationId:</strong>deleteCompRoutingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Delete comp routing instructions",
        "operationId": "deleteCompRoutingInstructions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
            "name": "refreshFolio",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag indicates if postings that can be refreshed need to be part of the response when a routing instruction is created, updated or deleted.",
            "name": "retrievePostingsForRoomRouting",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "folioWindowNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "payeeId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Unique Id of membership",
            "name": "membershipIdNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "authorizerId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "User Id of the Opera User",
            "name": "userId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Name of the Opera User",
            "name": "userName",
            "in": "query"
          },
          {
            "type": "string",
            "name": "comments",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indicate if the routing instruction is a daily instruction.",
            "name": "daily",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "sunday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "monday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "tuesday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "wednesday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "thursday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "friday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "saturday",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Allowable credit amount for this routing instruction. Null value means no limit, 0 equals zero.",
            "name": "creditLimit",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "The routing limit percentage allowed for this routing instruction.",
            "name": "percentageLimit",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Number of covers for this routing instruction.",
            "name": "covers",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Unique identifier for the Transaction code.",
            "name": "transactionCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Unique identifier for the Billing Instruction.",
            "name": "billingCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
            "name": "routingInstructionsId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "routingLinkId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response when removing a routing instruction. It may optionally return a list of postings which are eligible for transfer as per the deleted routing instruction in case of room routing instruction.",
            "schema": {
              "$ref": "#/definitions/roomRoutingPostings"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/routingInstructions/create": {
      "put": {
        "description": "You can use this API to add routing instructions to a reservation. <p><strong>OperationId:</strong>putRoutingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create routing instructions",
        "operationId": "putRoutingInstructions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to create a routing instruction.",
            "name": "routingInstructions",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/routingInstructions"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response when creating a routing instruction. It may optionally return a list of postings which are eligible for transfer as per the new routing instruction in case of room routing instruction.",
            "schema": {
              "$ref": "#/definitions/createdRoutingInstructions"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/routingInstructions/folio": {
      "delete": {
        "description": "You can use this API to delete folio routing instructions for a specified reservation. <p><strong>OperationId:</strong>deleteFolioRoutingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Delete Folio routing instructions",
        "operationId": "deleteFolioRoutingInstructions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
            "name": "refreshFolio",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag indicates if postings that can be refreshed need to be part of the response when a routing instruction is created, updated or deleted.",
            "name": "retrievePostingsForRoomRouting",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "folioWindowNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "payeeId",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indicate if the routing instruction is a daily instruction.",
            "name": "daily",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "sunday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "monday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "tuesday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "wednesday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "thursday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "friday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "saturday",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Allowable credit amount for this routing instruction. Null value means no limit, 0 equals zero.",
            "name": "creditLimit",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "The routing limit percentage allowed for this routing instruction.",
            "name": "percentageLimit",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Number of covers for this routing instruction.",
            "name": "covers",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Unique identifier for the Transaction code.",
            "name": "transactionCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Unique identifier for the Billing Instruction.",
            "name": "billingCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
            "name": "routingInstructionsId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "routingLinkId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response when removing a routing instruction. It may optionally return a list of postings which are eligible for transfer as per the deleted routing instruction in case of room routing instruction.",
            "schema": {
              "$ref": "#/definitions/roomRoutingPostings"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/routingInstructions/request": {
      "delete": {
        "description": "You can use this API to delete request routing instructions for a specified reservation. <p><strong>OperationId:</strong>deleteRequestRoutingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Delete request routing instructions",
        "operationId": "deleteRequestRoutingInstructions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
            "name": "refreshFolio",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag indicates if postings that can be refreshed need to be part of the response when a routing instruction is created, updated or deleted.",
            "name": "retrievePostingsForRoomRouting",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Name of the Opera User",
            "name": "userName",
            "in": "query"
          },
          {
            "type": "string",
            "name": "comments",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indicate if the routing instruction is a daily instruction.",
            "name": "daily",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "sunday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "monday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "tuesday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "wednesday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "thursday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "friday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "saturday",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response when removing a routing instruction. It may optionally return a list of postings which are eligible for transfer as per the deleted routing instruction in case of room routing instruction.",
            "schema": {
              "$ref": "#/definitions/roomRoutingPostings"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/routingInstructions/room": {
      "delete": {
        "description": "You can use this API to delete room routing instructions for a specified reservation. <p><strong>OperationId:</strong>deleteRoomRoutingInstructions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Delete Room routing instructions",
        "operationId": "deleteRoomRoutingInstructions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
            "name": "refreshFolio",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This flag indicates if postings that can be refreshed need to be part of the response when a routing instruction is created, updated or deleted.",
            "name": "retrievePostingsForRoomRouting",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationNameId",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indicate if the routing instruction is a daily instruction.",
            "name": "daily",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "sunday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "monday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "tuesday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "wednesday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "thursday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "friday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "saturday",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Allowable credit amount for this routing instruction. Null value means no limit, 0 equals zero.",
            "name": "creditLimit",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "The routing limit percentage allowed for this routing instruction.",
            "name": "percentageLimit",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Number of covers for this routing instruction.",
            "name": "covers",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Unique identifier for the Transaction code.",
            "name": "transactionCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Unique identifier for the Billing Instruction.",
            "name": "billingCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
            "name": "routingInstructionsId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "routingLinkId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response when removing a routing instruction. It may optionally return a list of postings which are eligible for transfer as per the deleted routing instruction in case of room routing instruction.",
            "schema": {
              "$ref": "#/definitions/roomRoutingPostings"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/transactions/{transactionId}": {
      "get": {
        "description": "You can use this API to get eligibility of Deposit Refund. <p><strong>OperationId:</strong>isDepositRefundEligible</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get eligibility of Deposit Refund",
        "operationId": "isDepositRefundEligible",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the transaction",
            "name": "transactionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the refund deposit payment.",
            "schema": {
              "$ref": "#/definitions/depositRefundEligibleCheck"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "isDepositRefundEligible not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "You can use this API to Split deposit transaction. <p><strong>OperationId:</strong>splitDepositTransaction</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Split deposit transaction",
        "operationId": "splitDepositTransaction",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the transaction",
            "name": "transactionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to split deposit transaction for a reservation.",
            "name": "splitDepositTransaction",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/splitDepositTransaction"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response after spliting deposit transaction.",
            "schema": {
              "$ref": "#/definitions/splitDepositTransactionStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/transferFolioTransactions": {
      "put": {
        "description": "You can use this API to transfer Folio to Window. <p><strong>OperationId:</strong>transferFolioToWindow</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Transfer Folio to Window.",
        "operationId": "transferFolioToWindow",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for transaction folio(s) to specific window",
            "name": "folioToWindow",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioToWindow"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/transferTransactions": {
      "put": {
        "description": "You can use this API to transfer Transaction to Window. <p><strong>OperationId:</strong>transferTransactionToWindow</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Transfer Transaction to Window",
        "operationId": "transferTransactionToWindow",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for transaction transfer",
            "name": "transactionToWindow",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionToWindow"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction Transfer Response contains errors: FOF00065 - Reservation ID or Resort was not supplied. FOF00128 - Transactions that were automatically generated cannot be transferred. FOF00129 - Transactions with Folio Numbers cannot be transferred. FOF00130 - Transactions with Invoice Numbers cannot be transferred. FOF00131 - Deposit Transactions cannot be transferred. FOF00132 - The status of the reservation is not valid for Financial Transaction transfers. FOF00133 - The Transaction number(s) are invalid. FOF00134 - Folio window not supplied. FOF00135 - List of transactions not supplied.",
            "schema": {
              "$ref": "#/definitions/transferTransactionToWindow"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/voidfolios/{folioId}": {
      "put": {
        "description": "You can use this API to void a folio. <p><strong>OperationId:</strong>voidFolio</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Void folio",
        "operationId": "voidFolio",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the folio.",
            "name": "folioId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to Void a Guest Folio when the Void Functionality is active.",
            "name": "folioToVoid",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioToVoid"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the request for voiding a Guest Folio.",
            "schema": {
              "$ref": "#/definitions/voidedFolio"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{sourceReservationId}/deposit/transfers": {
      "put": {
        "description": "You can use this API to change Reservation Deposit Transfer. <p><strong>OperationId:</strong>putReservationDepositTransfer</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Change Reservation Deposit Transfer.",
        "operationId": "putReservationDepositTransfer",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "sourceReservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to transfer a deposit amount from one reservation to one or more reservations.",
            "name": "depositTransferCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/depositTransferCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/reservations/{toReservationId}/transferTransaction": {
      "put": {
        "description": "You can use this API to Transfer Transaction to Reservation. <p><strong>OperationId:</strong>transferTransactionToReservation</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Transfer Transaction to Reservation",
        "operationId": "transferTransactionToReservation",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation",
            "name": "toReservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to transfer a transaction(s) to a reservation. In the criteria, the target Reservation Id is required for the transfer.",
            "name": "reservationTransaction",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationTransaction"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/revenue": {
      "get": {
        "description": "You can use this API to get Hotel Revenue. <p><strong>OperationId:</strong>getHotelRevenue</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Hotel Revenue",
        "operationId": "getHotelRevenue",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "Business date.",
            "name": "businessDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for hotel room revenue for all HHonors redemption reservation.",
            "schema": {
              "$ref": "#/definitions/hotelRevenueDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "HotelRevenue not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/routingInstructionCodes": {
      "get": {
        "description": "You can use this API to get Billing Instruction Codes. <p><strong>OperationId:</strong>getBillingInstructionCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Billing (routing) Instruction Codes",
        "operationId": "getBillingInstructionCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Flag to include the search in the Transaction Codes.",
            "name": "includeTransactionCodes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to include the search in the Billing Instructions.",
            "name": "includeBillingInstructions",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to include the comp instructions in the available list.",
            "name": "includeCompInstructions",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Lookup string which will try to match an existing Billing and/or Transaction Codes.",
            "name": "codeWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Lookup string which will try to match an existing Billing and/or Transaction Code Description.",
            "name": "descriptionWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object containing comp routing instructions for a reservation .",
            "schema": {
              "$ref": "#/definitions/billingInstructionCodes"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "BillingInstructionCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/sourceReservations/{sourceReservationId}/destinationReservations/{destinationReservationId}/packageAllowance/links": {
      "post": {
        "description": "You can use this API to link reservation package allowance. <p><strong>OperationId:</strong>linkReservationPackageAllowance</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Link Reservation package allowance",
        "operationId": "linkReservationPackageAllowance",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the destination reservation.",
            "name": "destinationReservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the source reservation.",
            "name": "sourceReservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Method to create package allowance link from a source reservation to the target reservation.",
            "name": "linkReservationPackageAllowance",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/linkReservationPackageAllowance"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/sourceReservations/{sourceReservationId}/targetReservations/{targetReservationId}/roomRouting": {
      "get": {
        "description": "You can use this API to get postings For Refresh. <p><strong>OperationId:</strong>getPostingsForRefresh</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Postings For Refresh",
        "operationId": "getPostingsForRefresh",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the target reservation",
            "name": "targetReservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the source reservation",
            "name": "sourceReservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "targetResvNameIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "targetResvNameIdType",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indicate if the routing instruction is a daily instruction.",
            "name": "daily",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "friday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "monday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "saturday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "sunday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "thursday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "tuesday",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "wednesday",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel context of the Transaction code.",
            "name": "transactionHotelId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
            "name": "printTrxReceipt",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Unique identifier for the Transaction code.",
            "name": "transactionCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Transaction codes info.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Category of the transaction code.",
            "name": "transactionGroup",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sub category of the transaction code.",
            "name": "transactionSubGroup",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Unique Universal product code of the transaction code.",
            "name": "universalProductCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
            "name": "routingInstructionsId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Unique code of the article.",
            "name": "articleCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel code to which the article belongs.",
            "name": "articleHotelId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "Indicates whether the article is inactive or not.",
            "name": "inactive",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Display Order sequence.",
            "name": "orderSequence",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Description of the article.",
            "name": "articleDescription",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Transaction code to which the article belongs.",
            "name": "articleTransactionCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "amount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether the article is available for post it.",
            "name": "availableForPostIt",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Red",
              "DarkRed",
              "Green",
              "DarkGreen",
              "LightGreen",
              "Orange",
              "White",
              "Yellow",
              "DarkYellow",
              "Purple",
              "Brown",
              "Gray",
              "Aqua",
              "Chocolate",
              "Blue",
              "LightBlue",
              "DarkBlue",
              "Cyan",
              "DarkCyan",
              "Magenta",
              "DarkMagenta",
              "Black"
            ],
            "type": "string",
            "description": "Color configuration type. This color configuration provides a visual category of entities.",
            "name": "color",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Unique Universal product code of the article.",
            "name": "articleUniversalProductCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Unique identifier for the Billing Instruction.",
            "name": "billingCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel context of the Billing Instruction.",
            "name": "billingHotelId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Billing Instruction code description.",
            "name": "desc",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
            "name": "billingInstructionRoutingInstructionsId",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Allowable credit amount for this routing instruction. Null value means no limit, 0 equals zero.",
            "name": "creditLimit",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The routing limit percentage allowed for this routing instruction.",
            "name": "percentageLimit",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Number of covers for this routing instruction.",
            "name": "covers",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Amount of Credit used for this routing instruction.",
            "name": "limitUsed",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "routingLinkIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "routingLinkIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object that lists the transactions that can be refreshed when a routing instruction set is refreshed.",
            "schema": {
              "$ref": "#/definitions/postingsForRefresh"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "PostingsForRefresh not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "description": "You can use this API to change Room Routing Refresh. <p><strong>OperationId:</strong>processRoomRoutingRefresh</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Process Room Routing Refresh",
        "operationId": "processRoomRoutingRefresh",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the target reservation",
            "name": "targetReservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the source reservation",
            "name": "sourceReservationId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "The request object for processing refreshing of a routing instruction set. This operation transfers the postings to the respective reservation as per the routing instruction set which is created, edited, deleted or refreshed.",
            "name": "roomRoutingRefresh",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomRoutingRefresh"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/storedFolios/{folioId}": {
      "get": {
        "description": "You can use this API to get Stored Folio Details. <p><strong>OperationId:</strong>getStoredFolioDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Stored Folio Details",
        "operationId": "getStoredFolioDetails",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the folio.",
            "name": "folioId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The Fiscal Bill number of this posting",
            "name": "fiscalBillNo",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date of Folio Generation.",
            "name": "folioDate",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Deposit",
              "Void",
              "Ok",
              "Zero",
              "Compress",
              "Converted",
              "Internal"
            ],
            "type": "string",
            "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
            "name": "folioStatus",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The name of the Folio Type used for the Folio Number sequence.",
            "name": "folioTypeName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
            "name": "internalFolioWindowID",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "name": "invoiceNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetch stored folio details operation",
            "schema": {
              "$ref": "#/definitions/storedFolioDetailsInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "StoredFolioDetails not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "You can use this API to create Stored Folio Details. <p><strong>OperationId:</strong>postStoredFolioDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create Stored Folio Details",
        "operationId": "postStoredFolioDetails",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the folio.",
            "name": "folioId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to update stored folio details.",
            "name": "storedFolioDetails",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/storedFolioDetails"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/supplementFolios": {
      "post": {
        "description": "You can use this API to post supplemental folio. <p><strong>OperationId:</strong>postSupplementalFolio</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Post supplemental folio",
        "operationId": "postSupplementalFolio",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to post a Supplemental Folio for an existing Folio. Debit Bill ( Supplemental Folio ) Functionality parameter is required",
            "name": "postSupplementalFolio",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/postSupplementalFolio"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response for the request to create Supplemental Folio.",
            "schema": {
              "$ref": "#/definitions/postSupplementalFolioStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactionCodes": {
      "get": {
        "description": "You can use this API to retrieve a list of Transaction Codes configured for a property. <p><strong>OperationId:</strong>getTransactionCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Transaction Codes",
        "operationId": "getTransactionCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "enum": [
              "CheckOut",
              "EarlyDeparture",
              "AdvanceBill",
              "InterimBill",
              "PasserBy",
              "PostIt",
              "CreditBill",
              "Deposit",
              "DepositRefund",
              "AutoFolio",
              "PrepaidCard",
              "AutoSettlement",
              "InformationFolio",
              "SupplementalFolio"
            ],
            "type": "string",
            "description": "Event being generated by a Supplemental Folio.",
            "name": "event",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "description": "Flag to indicate if Article Codes are required, along with the parent Transaction Codes.",
            "name": "includeArticles",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indicate if it is allowed to manually post transaction codes.",
            "name": "userRoleTransactions",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to include the search for Manual Post Allowed.",
            "name": "manualPostAllowed",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Lookup string which will try to match an existing Transaction Codes.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Lookup string which will try to match an existing Transaction Code Description.",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "name": "wildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Fiscal Bill number of this posting",
            "name": "fiscalBillNo",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date of Folio Generation.",
            "name": "folioDate",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Folio Number.",
            "name": "folioNo",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Deposit",
              "Void",
              "Ok",
              "Zero",
              "Compress",
              "Converted",
              "Internal"
            ],
            "type": "string",
            "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
            "name": "folioStatus",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The name of the Folio Type used for the Folio Number sequence.",
            "name": "folioTypeName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
            "name": "internalFolioWindowID",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "name": "invoiceNo",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Services",
              "Goods"
            ],
            "type": "string",
            "description": "Goods Type Transactions.",
            "name": "trxServiceType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response that contains either the Transaction Code list if fetch was successful or error(s) if not.",
            "schema": {
              "$ref": "#/definitions/transactionCodes"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "TransactionCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactionDetails": {
      "get": {
        "description": "You can use this API to get Folio Transaction Details. <p><strong>OperationId:</strong>getFolioTransactionDetails</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Folio Transaction Details",
        "operationId": "getFolioTransactionDetails",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Flag to indicate if the automatically generated transactions, related to the main transaction number above, are also to be retrieved as part of this request.",
            "name": "includeGenerates",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Unique Transaction Number of the transaction(posting) for which details are required.",
            "name": "transactionNo",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Flag to indicate what currency exchange information text needs to be included in response.",
            "name": "includeExchangeInformation",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the fetch transaction details request. Detail information regarding the folio transaction will be returned",
            "schema": {
              "$ref": "#/definitions/folioTransactionDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "FolioTransactionDetails not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactions": {
      "get": {
        "description": "You can use this API to get  Guests Transactions. <p><strong>OperationId:</strong>getGuestsTransactions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Guests Transactions",
        "operationId": "getGuestsTransactions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationList",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Configuring this flag to be TRUE will return transactions that are auto generated like taxes.",
            "name": "includeGenerates",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Configuring this flag to be TRUE will return transactions that are included in an Accounts Receivable invoice.",
            "name": "includeTransactionsWithARInvoiceNo",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Configuring this flag to be TRUE will return transactions that already belongs to a folio.",
            "name": "includeTransactionsWithFolioNo",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Configuring this flag to be TRUE will return transactions whose transaction codes have manual posting enabled, or when an adjustment code is attached to the transaction code, the adjustment code's manual posting is enabled.",
            "name": "includeTransactionsWithManualPostingOnly",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "Transaction number of the payment being corrected.",
            "name": "transactionNo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Category of the transaction code to filter the result.",
            "name": "transactionGroup",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sub category of the transaction code to filter the result.",
            "name": "transactionSubGroup",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Unique identifier for the Billing Instruction.",
            "name": "billingCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Hotel context of the Billing Instruction.",
            "name": "billingHotelId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Billing Instruction code description.",
            "name": "desc",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
            "name": "routingInstructionsId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Lookup string which will try to match an existing Transaction Code/s.",
            "name": "trxCodeWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Lookup string which will try to match an existing Transaction Code's Description.",
            "name": "trxDescriptionWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Lookup string which will try to match an existing Cheque number's code.",
            "name": "checkNumberWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filters the results for reference number.",
            "name": "referenceNumberWildCard",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter the results for supplement.",
            "name": "supplementWildCard",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Filters the result to only include transactions in this window number.",
            "name": "windowNo",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Revenue",
                "Payment",
                "Wrapper"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Wrapper Transaction Type.",
            "name": "cashieringTransactionType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Cashier Id of the Cashier.",
            "name": "cashierId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "code",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Filters the result based on its commission property. Do not set this criteria if all transactions should be included whether or not they are commissionable.",
            "name": "commissionable",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Filters the result which are allow for service recovery.",
            "name": "serviceRecoveryAllowed",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "All",
                "Routed",
                "Direct",
                "Transferred",
                "Payments",
                "NonBilled"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Returns only postings without bill number.",
            "name": "postedTransactionType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a summary of transactions of guests.",
            "schema": {
              "$ref": "#/definitions/guestsTransactions"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "GuestsTransactions not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactions/adjust": {
      "put": {
        "description": "You can use this API to Adjust Transactions. <p><strong>OperationId:</strong>adjustTransactions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Adjust Transactions",
        "operationId": "adjustTransactions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to adjust a transaction. In order to adjust a transaction, a valid amount or percentage is required. A valid reason code and reason text is also required. Only negative adjustments are done. The adjust process will post a new negative transaction for the same transaction code for the current day.",
            "name": "transactionsAdjustment",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionsAdjustment"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the adjustment of transactions request. Contains any errors or warnings.",
            "schema": {
              "$ref": "#/definitions/adjustedTransactions"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactions/arInvoices/reverse": {
      "delete": {
        "description": "You can use this API to reverse an AR Invoice. <p><strong>OperationId:</strong>reverseARInvoice</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Reverse AR Invoice",
        "operationId": "reverseARInvoice",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The reason code for the deletion.",
            "name": "reasonCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "name": "cashierId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "maxItems": 4000,
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "The unique transaction number of this transaction.",
            "name": "transactionCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactions/split": {
      "put": {
        "description": "You can use this API to Split transactions. <p><strong>OperationId:</strong>splitTransaction</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Split transactions",
        "operationId": "splitTransaction",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to split a transaction on a reservation. Splitting of transactions requires a list of transactions and a valid amount or a percentage by which the amount can be split. Based on parameters, certain transactions cannot be split. Transaction which are included in an invoice cannot be split Transactions where the generates resides elsewhere(reservation or window) cannot be split. Automatically generated transactions such as taxes, cannot be split by itself. Deposits which were part of a deposit folio cannot be split. After the split is done the transaction resides on the same folio window as the original transaction.",
            "name": "transactionToSplit",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionToSplit"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactions/splitAndTransfer": {
      "put": {
        "description": "You can use this API to split and transfer transactions. <p><strong>OperationId:</strong>splitAndTransferTransaction</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Split and transfer transactions",
        "operationId": "splitAndTransferTransaction",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to split a transaction on a reservation and transfer the new transaction to a different reservation or a different window on the same reservation. Splitting of transactions requires a Inhouse target reservation, a list of transactions for a Inhouse reservation and a valid amount or a percentage by which the amount can be split. Based on parameters, certain transactions cannot be split. Transaction which are included in an invoice cannot be split Transactions where the generates resides elsewhere(reservation or window) cannot be split. Automatically generated transactions such as taxes, cannot be split by itself. Deposits which were part of a deposit folio cannot be split. After the split is done the transaction is transferred to the target reservation/window.",
            "name": "transactionToSplitAndTransfer",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionToSplitAndTransfer"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactions/{transactionId}": {
      "get": {
        "description": "You can use this API to validate Transaction Codes. <p><strong>OperationId:</strong>validateTransactionCodes</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Validate Transaction Codes",
        "operationId": "validateTransactionCodes",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the transaction",
            "name": "transactionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "enum": [
              "CheckOut",
              "EarlyDeparture",
              "AdvanceBill",
              "InterimBill",
              "PasserBy",
              "PostIt",
              "CreditBill",
              "Deposit",
              "DepositRefund",
              "AutoFolio",
              "PrepaidCard",
              "AutoSettlement",
              "InformationFolio",
              "SupplementalFolio"
            ],
            "type": "string",
            "description": "Event being generated by a Supplemental Folio.",
            "name": "event",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Fiscal Bill number of this posting",
            "name": "fiscalBillNo",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date of Folio Generation.",
            "name": "folioDate",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Folio Number.",
            "name": "folioNo",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Deposit",
              "Void",
              "Ok",
              "Zero",
              "Compress",
              "Converted",
              "Internal"
            ],
            "type": "string",
            "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
            "name": "folioStatus",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The name of the Folio Type used for the Folio Number sequence.",
            "name": "folioTypeName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
            "name": "internalFolioWindowID",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "name": "invoiceNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response notifying if transaction code is valid.",
            "schema": {
              "$ref": "#/definitions/validatedTransactionCode"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "validateTransactionCodes not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "post": {
        "description": "You can use this API to submit Comp Transactions. <p><strong>OperationId:</strong>postCompTransaction</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Submit Comp Transaction",
        "operationId": "postCompTransaction",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the transaction.",
            "name": "transactionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to submit a comp transaction to gaming system",
            "name": "compTransactionCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/compTransactionCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactions/{transactionId}/charges": {
      "put": {
        "description": "You can use this API to change Billing Charges. <p><strong>OperationId:</strong>putBillingCharge</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Change Billing Charge",
        "operationId": "putBillingCharge",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the transaction",
            "name": "transactionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to edit a billing charge information.",
            "name": "billingCharge",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/billingCharge"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/billingChargeStatus"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactions/{transactionId}/compRequestStatus": {
      "get": {
        "description": "You can use this API to get Gaming Request Status Information. <p><strong>OperationId:</strong>getGamingRequestStatusInfo</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Gaming Request Status ",
        "operationId": "getGamingRequestStatusInfo",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the transaction.",
            "name": "transactionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response object for fetch gaming info",
            "schema": {
              "$ref": "#/definitions/gamingRequestStatusInfo"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "GamingRequestStatusInfo not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactions/{transactionId}/flexibleBenefitPostings": {
      "delete": {
        "description": "You can use this API to delete flexible benefit postings. <p><strong>OperationId:</strong>reverseFlexibleBenefitPosting</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Delete flexible benefit postings",
        "operationId": "reverseFlexibleBenefitPosting",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the transaction",
            "name": "transactionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactions/{transactionId}/payments": {
      "put": {
        "description": "You can use this API to change Billing Payment. <p><strong>OperationId:</strong>changeBillingPayment</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Change Billing Payment",
        "operationId": "changeBillingPayment",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the transaction",
            "name": "transactionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to change a payment posting.",
            "name": "billingPaymentToChange",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/billingPaymentToChange"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactions/{transactionId}/policies/detach/deposit": {
      "put": {
        "description": "You can use this API to detach Deposit Policy from Payment. <p><strong>OperationId:</strong>detachDepositPolicyFromPayment</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Detach Deposit Policy from Payment",
        "operationId": "detachDepositPolicyFromPayment",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the transaction",
            "name": "transactionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request to detach a deposit payment from a Deposit Policy on a reservation.",
            "name": "detachPolicyApplyCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/detachPolicyApplyCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactions/{transactionId}/reversePayments": {
      "post": {
        "description": "You can use this API to create reverse payments. <p><strong>OperationId:</strong>postReversePayment</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create reverse payments",
        "operationId": "postReversePayment",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the Transaction",
            "name": "transactionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request for posting payment reversal.",
            "name": "paymentReversalCriteria",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/paymentReversalCriteria"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transactionsTotal": {
      "get": {
        "description": "You can use this API to get Balance Information. <p><strong>OperationId:</strong>getBalanceInfo</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Balance Information",
        "operationId": "getBalanceInfo",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "uniqueItems": true,
            "enum": [
              "CheckOut",
              "EarlyDeparture",
              "AdvanceBill",
              "InterimBill",
              "PasserBy",
              "PostIt",
              "CreditBill",
              "Deposit",
              "DepositRefund",
              "AutoFolio",
              "PrepaidCard",
              "AutoSettlement",
              "InformationFolio",
              "SupplementalFolio"
            ],
            "type": "string",
            "description": "Event being generated by a Supplemental Folio.",
            "name": "event",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "idContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "type",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "name": "folioWindowNo",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "name": "cashierId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Transaction Code to post.",
            "name": "transactionCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Article ID.",
            "name": "articleCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "collectionFormat": "multi",
            "description": "A monetary amount.",
            "name": "amount",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi",
            "description": "Quantity to post to the folio.",
            "name": "postingQuantity",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "User-defined posting reference.",
            "name": "postingReference",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "User-defined posting remark.",
            "name": "postingRemark",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Indicates the Cheque number.",
            "name": "checkNumber",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Corrected arrangement code from the package associated to this transaction.",
            "name": "arrangementCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "Apply room routing when making this posting.",
            "name": "applyRoutingInstructions",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "Use the applicable package allowance when making this posting.",
            "name": "usePackageAllowance",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "collectionFormat": "multi",
            "description": "True indicates the Transaction Code is allowed to be posted automatically.",
            "name": "autoPosting",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "uniqueIdId",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "uniqueIdIdContext",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "uniqueIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "postItNumberId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "postItNumberIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "postItNumberType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "profileIdId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "profileIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "profileIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "reservationIdId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "reservationIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "reservationIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "policyIdId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "name": "policyIdIdContext",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "name": "policyIdType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Fiscal Bill number of this posting",
            "name": "fiscalBillNo",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date of Folio Generation.",
            "name": "folioDate",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Folio Number.",
            "name": "folioNo",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Deposit",
              "Void",
              "Ok",
              "Zero",
              "Compress",
              "Converted",
              "Internal"
            ],
            "type": "string",
            "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
            "name": "folioStatus",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The name of the Folio Type used for the Folio Number sequence.",
            "name": "folioTypeName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
            "name": "internalFolioWindowID",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "name": "invoiceNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response for the fetch balance request. This will contain the current balance for the criteria requested.",
            "schema": {
              "$ref": "#/definitions/balanceInfoCriteria"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "BalanceInfo not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/transferCompTransactions": {
      "post": {
        "description": "You can use this API to transfer comp transactions to window <p><strong>OperationId:</strong>transferCompTransactions</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Transfer comp transactions to window",
        "operationId": "transferCompTransactions",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object of comp transactions transfer.",
            "name": "transferCompTransactions",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transferCompTransactions"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/hotels/{hotelId}/zeroBalanceCheckoutReservations/batchJobs": {
      "post": {
        "description": "You can use this API to create Zero Balance Checkout Reservation Batch. <p><strong>OperationId:</strong>postZeroBalanceCheckoutReservations</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Create Zero Balance Checkout Reservation Batch ",
        "operationId": "postZeroBalanceCheckoutReservations",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the hotel",
            "name": "hotelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request type for batch zero balance checkout",
            "name": "batchZeroBalanceCheckoutReservation",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/batchZeroBalanceCheckoutReservation"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Response type for batch zero balance checkout",
            "schema": {
              "$ref": "#/definitions/batchZeroBalanceCheckoutDetails"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/reservations/{reservationId}/postRoomAndTaxForDayUse": {
      "post": {
        "description": "You can use this API to post post Room And Tax For DayUse <p><strong>OperationId:</strong>postRoomAndTaxForDayUse</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Operation to post room and tax for day use.",
        "operationId": "postRoomAndTaxForDayUse",
        "parameters": [
          {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "x-example": "",
            "description": "Unique ID of the reservation.",
            "name": "reservationId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request object to calculate room and tax.",
            "name": "postRoomAndTaxForDayUse",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/postRoomAndTaxForDayUse"
                }
              ]
            }
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/roundingDifference": {
      "get": {
        "description": "You can use this API to get Rounding Difference. <p><strong>OperationId:</strong>getRoundingDifference</p>",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ],
        "summary": "Get Rounding Difference",
        "operationId": "getRoundingDifference",
        "parameters": [
          {
            "uniqueItems": true,
            "enum": [
              "CheckOut",
              "EarlyDeparture",
              "AdvanceBill",
              "InterimBill",
              "PasserBy",
              "PostIt",
              "CreditBill",
              "Deposit",
              "DepositRefund",
              "AutoFolio",
              "PrepaidCard",
              "AutoSettlement",
              "InformationFolio",
              "SupplementalFolio"
            ],
            "type": "string",
            "description": "Event being generated by a Supplemental Folio.",
            "name": "event",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "folioWindowNo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
            "name": "internalFolioWindowID",
            "in": "query"
          },
          {
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "name": "cashierId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Hotel context of the reservation.",
            "name": "hotelId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "amount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currencyCode",
            "in": "query"
          },
          {
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "folioView",
            "in": "query"
          },
          {
            "type": "string",
            "name": "paymentMethod",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Attach the credit card to profile.",
            "name": "attachCreditCardToProfile",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardHolderName",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumber",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberLast4Digits",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cardNumberMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ],
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "name": "cardOrToken",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ],
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "name": "cardType",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Expiration date of the credit card",
            "name": "expirationDate",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "expirationDateExpired",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Masked Expiration date of the credit card",
            "name": "expirationDateMasked",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ],
            "type": "string",
            "name": "processing",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "swiped",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "name": "userDefinedCardType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "cardIdId",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "currentAuthorizedAmountAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "currentAuthorizedAmountCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "approvalAmountNeededAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "approvalAmountNeededCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "balanceAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "balanceCurrencyCode",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The authorization rule code.",
            "name": "code",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A monetary amount.",
            "name": "amountAmount",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "name": "amountCurrencyCode",
            "in": "query"
          },
          {
            "type": "number",
            "description": "A percentage value if the authorization rule is percentage based.",
            "name": "percent",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "emailFolio",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "name": "uniqueIdId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Time stamp of the creation.",
            "name": "createDateTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
            "name": "creatorId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the e-mail address.",
            "name": "emailAddress",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "enum": [
              "Html",
              "Text"
            ],
            "type": "string",
            "description": "Supported Email format.",
            "name": "emailFormat",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Identifies the last software system or person to modify a record.",
            "name": "lastModifierId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Time stamp of last modification.",
            "name": "lastModifyDateTime",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Display Order sequence.",
            "name": "orderSequence",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "When true, indicates a primary information.",
            "name": "primaryInd",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
            "name": "purgeDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
            "name": "emailType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Describes the Type code",
            "name": "typeDescription",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Bearer token that needs to be passed which is generated post user authentication",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
            "type": "string",
            "description": "Client or Partner's Application Key",
            "name": "x-app-key",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
            "name": "x-hotelid",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 80,
            "type": "string",
            "x-example": "EXTERNALSYSTEMCODE",
            "description": "External system code.",
            "name": "x-externalsystem",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Language code",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Response to the request to fetch the rounding difference for a payment amount.",
            "schema": {
              "$ref": "#/definitions/roundingDifferenceAmount"
            },
            "headers": {
              "Content-Language": {
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "type": "string",
                "description": "Audience language"
              }
            }
          },
          "204": {
            "description": "RoundingDifference not found."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable."
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "414": {
            "description": "Request URI Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/exceptionDetailType"
            }
          },
          "502": {
            "description": "Bad Gateway"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    }
  },
  "definitions": {
    "aRAccountShortInfoType": {
      "description": "Accounts Receivabales Account details type charged for batched posting.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        }
      }
    },
    "aRAccountStatusType": {
      "description": "Type for the Account Status. Status can be restricted and a message/description added to the Account.",
      "type": "object",
      "properties": {
        "description": {
          "description": "User defined status message on the Account.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "restricted": {
          "description": "Flag to indicate if the Account is restricted.",
          "type": "boolean"
        },
        "restriction": {
          "description": "The Restriction Code added on the Account. This is available when the functionality for adding restriction codes is ON.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "acquiredCashierLock": {
      "description": "Response for the Cashier Lock request.",
      "type": "object",
      "properties": {
        "acquiredCashierLock": {
          "description": "This contains the lock information for the cashier.",
          "$ref": "#/definitions/operaRecordLock"
        },
        "existingCashierLock": {
          "description": "This will contain information about the cashier lock that is currently held by another user.",
          "$ref": "#/definitions/operaRecordLock"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "activatePrepaidCard": {
      "description": "Request type for activate prepaid card.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Prepaid card criteria type used to perform manage operation on the card.",
          "type": "object",
          "properties": {
            "amount": {
              "description": "Prepaid card transaction amount.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "cardNo": {
              "description": "Prepaid card number.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "cashierId": {
              "$ref": "#/definitions/cashierId"
            },
            "hotelId": {
              "description": "Hotel code.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "interfaceId": {
              "description": "The unique ID for the Interface.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "pin": {
              "description": "PIN code associated for the prepaid card.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "postChargeToRoom": {
              "description": "Indicate that charges will be posted to the room.",
              "type": "boolean"
            },
            "profileId": {
              "description": "The guest name id associated to the card.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "reservationId": {
              "description": "The reservation name id where the transaction is associated.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "saleCriteria": {
              "description": "Represent the sale criteria.",
              "$ref": "#/definitions/saleCriteriaType"
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "activatePrepaidCardStatus": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "activityLogType": {
      "type": "object",
      "properties": {
        "actionDescription": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "actionType": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "croCode": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "iPAddress": {
          "description": "The IP Address of the machine that performed the activity",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "logDate": {
          "type": "string",
          "format": "date-time"
        },
        "logUserId": {
          "type": "integer"
        },
        "logUserName": {
          "type": "string"
        },
        "machineStation": {
          "type": "string"
        },
        "module": {
          "type": "string"
        },
        "refActionId": {
          "type": "number"
        }
      }
    },
    "additionalTaxesDetails": {
      "description": "Response object containing additional tax information.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "taxAmountInfo": {
          "description": "Tax amount to be adjusted.",
          "$ref": "#/definitions/taxAmountInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "addressInfoType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "addressSearchType": {
      "description": "Address Details such as city, state, country, postal code etc.",
      "type": "object",
      "properties": {
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "excludeNoCity": {
          "description": "When true indicates that only profiles with city will be fetched.",
          "type": "boolean"
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "streetAddress": {
          "description": "First Line of Street Address. For profile search it matches the first Address line.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "addressType": {
      "description": "Provides address information.",
      "type": "object",
      "properties": {
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "maxLength": 80,
            "minLength": 0
          }
        },
        "barCode": {
          "description": "The postal barcode for the address.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string"
        },
        "updateReservations": {
          "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
          "type": "boolean"
        }
      }
    },
    "adjustedTransactions": {
      "description": "Response for the adjustment of transactions request. Contains any errors or warnings.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "serviceRecoveryAdjustments": {
          "description": "List of service recovery adjustment.This will only return if Adjust is service recovery type.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "adjustmentDetailsType": {
      "description": "Details regarding adjustments of transactions. Adjustment of transactions requires a amount/percentage and the adjustment reason.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The Amount by which the transaction has to be adjusted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "department": {
          "description": "The department name or ID with which the adjustment is associated.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "percentage": {
          "description": "The percentage by which the transaction has to be adjusted.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "reasonCode": {
          "description": "The reason code for the adjustment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonDescription": {
          "description": "The reason text for the adjustment.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "advanceCheckInType": {
      "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
      "type": "object",
      "properties": {
        "advanceCheckedIn": {
          "description": "Indicates if the reservation is marked as Advance Checked In",
          "type": "boolean"
        },
        "eTRComments": {
          "description": "ETR Comments",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "expectedReturnTime": {
          "description": "Expected Return Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "advancePaymentBalance": {
      "description": "Response for the advance payment balance.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "paymentBalance": {
          "description": "Advance payment balance.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "advanceRoomCharges": {
      "description": "Request to post the Room Charges for a reservation in advance. This request posts the Room Charges for a reservation for tonight or for many nights starting from the last posted night. This can also be used to verify if the reservation has already been charged for the full stay. Setting the Verify flag will return details regarding the last Room Charge posted date and if there are any available dates for which the room charges can be posted in advance. Room Charges cannot be posted for dates prior to the business date of the resort. To make the actual posting, the verification flag should be false.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for creating the advance folio. Includes information regarding the reservation(s) for which the advance bill is to be generated and the nights for which the postings have to be created.",
          "$ref": "#/definitions/advanceRoomChargesCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "advanceRoomChargesCriteriaType": {
      "description": "Type to set the criteria for generation of advance folios. This will post the room and tax transactions for the nights requested.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "endDateToCharge": {
          "description": "Indicates the last date until which the Advance Room Charges have to be posted.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventType": {
          "description": "Event to which this process will be logged.",
          "$ref": "#/definitions/cashieringEventType"
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "postForEntireStay": {
          "description": "Indicates if the posting of room charges have to be done for the entire stay.",
          "type": "boolean"
        },
        "reservationIdList": {
          "description": "Reservation id for which the advance bill will be generated.",
          "$ref": "#/definitions/reservationIdList"
        },
        "verifyOnly": {
          "description": "Flag to indicate if only a verification is required. This checks if advance bills have been generated for this reservation and returns the last date in the response. Setting this flag to true, will return the information for the below elements in the response: AvailablePostingDates, GeneratedForEntireStay, LastRoomAndTaxPostedDate and the Reservation Information. No posting will be done. In order for the actual posting to occur this flag should be false.",
          "type": "boolean"
        }
      }
    },
    "advanceRoomChargesInfoType": {
      "type": "object",
      "properties": {
        "availablePostingDates": {
          "description": "The Time Span for which the Advance Room Charges can be done.",
          "$ref": "#/definitions/timeSpanType"
        },
        "generatedForEntireStay": {
          "description": "Indicates if the advance folio has been generated for the entire stay.",
          "type": "boolean"
        },
        "lastRoomAndTaxPostedDate": {
          "description": "Indicates the date of the stay until which the advance bill has been generated .",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservation": {
          "description": "Reservation id for which the advance bill information is requested.",
          "$ref": "#/definitions/reservationInfoType"
        }
      }
    },
    "advanceRoomChargesReservationInfo": {
      "description": "Response for the generate advance folio request. Post Advance Room Charges Request can return the below error codes : FOF00065 - Reservation ID or Resort was not supplied. FOF00147 - Reservation is currently not In-House. FOF00148 - Date range requested is not valid. FOF00149 - Advance Room Charges Posting was not completed successfully as there was an Error during posting. FOF00150 - Room Charges have already been posted for the requested dates. FOF00151 - Advance Room Charges could not be completed {the error message if any}.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationInfo": {
          "description": "Reservation id for which the advance bill information is requested.",
          "$ref": "#/definitions/advanceRoomChargesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "alertAreaType": {
      "type": "string",
      "enum": [
        "CheckIn",
        "CheckOut",
        "Reservation",
        "Billing",
        "InHouse"
      ]
    },
    "alertGuestInfoType": {
      "type": "object",
      "properties": {
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        },
        "comments": {
          "description": "Additional alert information regarding the membership of the guest.",
          "type": "string"
        },
        "guestName": {
          "description": "Guest Name.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "guestPreferredLanguage": {
          "description": "Holds the language preferred by the guest.",
          "$ref": "#/definitions/languageType"
        },
        "lastHotelCode": {
          "description": "Hotel code of the last stay location of the guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "lastStayDate": {
          "description": "Last stay date at the property.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "membership": {
          "description": "Membership information of the guest.",
          "$ref": "#/definitions/membershipType"
        },
        "preference": {
          "description": "Additional alert information regarding the guest.",
          "type": "string"
        },
        "preference2": {
          "description": "Additional mandatory alert information regarding the guest preferences.",
          "type": "string"
        },
        "totalBrandStay": {
          "description": "Holds total number of days that the guest have stayed in the properties for the same brand.",
          "type": "integer"
        },
        "totalStay": {
          "description": "Holds total number of days that the guest have stayed in the property.",
          "type": "integer"
        },
        "vipStatus": {
          "description": "VIP status of the guest.",
          "$ref": "#/definitions/vIPStatusType"
        }
      }
    },
    "alertNotices": {
      "description": "Response with the fetched alerts, includes global alerts.",
      "type": "object",
      "properties": {
        "alerts": {
          "description": "The Alert information returned as per the request.",
          "$ref": "#/definitions/alertsType"
        },
        "comments": {
          "description": "List of Notes for the Guest related to the reservation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "alertType": {
      "type": "object",
      "properties": {
        "area": {
          "description": "The Area where the alert will be attached and shown.",
          "$ref": "#/definitions/alertAreaType"
        },
        "code": {
          "description": "Code identifying the type of alert.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "description": {
          "description": "The alert message.",
          "type": "string"
        },
        "global": {
          "description": "Indicate whether the alert is a global that is automatically and dynamically attached to all reservations that meet the alert criteria.",
          "type": "boolean"
        },
        "guestInfo": {
          "description": "Contains information regarding the guest.",
          "$ref": "#/definitions/alertGuestInfoType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "printerName": {
          "description": "Printer used to print the alert notification.",
          "type": "string"
        },
        "printerNotification": {
          "description": "Notify by sending the message to the printer.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reportDescription": {
          "description": "Report description. Mainly used for as a parameter for printing the alerts.",
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        },
        "reportId": {
          "description": "The module id of the report. This is used to printer the alert.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reportName": {
          "description": "Report name of the report type.",
          "type": "string"
        },
        "screenNotification": {
          "description": "Notify by showing the alert on the screen",
          "type": "boolean"
        },
        "stopCheckInCheckOut": {
          "description": "Indicates the Reservation Stop Check In/Check Out Global Alert.",
          "type": "boolean"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "welcomeOffer": {
          "description": "Contains information regarding welcome offer.",
          "$ref": "#/definitions/welcomeOfferType"
        }
      }
    },
    "alertsType": {
      "description": "List of alerts.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/alertType"
      }
    },
    "amountEligible": {
      "description": "List of eligible bill amounts for each folio.",
      "type": "object",
      "properties": {
        "amountEligibleInfo": {
          "description": "Retrieves eligible amount details in order to post redemption on a reservation folio <p><strong>OperationId:</strong> getEligibleBillAmount</p>",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/awardFolioInfo"
          }
        }
      }
    },
    "anonymizationStatusType": {
      "description": "Guest has been anonymized.",
      "type": "string",
      "enum": [
        "Requested",
        "Anonymized"
      ]
    },
    "anonymizationType": {
      "description": "Provides information about guest's anonymization status.",
      "type": "object",
      "properties": {
        "anonymizationDate": {
          "description": "Date and Time when the guest was anonymized.",
          "type": "string",
          "format": "date-time"
        },
        "anonymizationStatus": {
          "description": "Status of anonymization such as Requested or Anonymized.",
          "$ref": "#/definitions/anonymizationStatusType"
        }
      }
    },
    "applyFlexibleBenefitPostingsCriteriaType": {
      "description": "Criteria for retrieving one or more guest's folio transactions.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "description": "Hotel context for the Reservations.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationId": {
          "description": "Reservation identifier for which Flexible Benefits will be posted.",
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "articleInfoType": {
      "description": "Information regarding an article.",
      "type": "object",
      "properties": {
        "articleCode": {
          "description": "Unique code of the article.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the article.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel code to which the article belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicates whether the article is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "postIt": {
          "description": "Post it information of the article.",
          "$ref": "#/definitions/articlePostItType"
        },
        "price": {
          "description": "Default price of the article.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionCode": {
          "description": "Transaction code to which the article belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "articlePostItType": {
      "description": "Post it information of an article.",
      "type": "object",
      "properties": {
        "availableForPostIt": {
          "description": "Indicates whether the article is available for post it.",
          "type": "boolean"
        },
        "color": {
          "description": "Color indicator which is only configurable if article is available for post it.",
          "$ref": "#/definitions/colorType"
        }
      }
    },
    "articlesSale": {
      "description": "Details of the folio created.",
      "type": "object",
      "properties": {
        "folioWindowDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/folioWindowType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "articlesSaleCriteria": {
      "description": "Request to post a set of charges, payments and generate a bill for a PasserBy or for the Post-It functionality . A PasserBy is someone who is not staying at the Property. A PasserBy transaction requires a Profile in Opera for whom the the folio is being created.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for posting the Sale.",
          "$ref": "#/definitions/saleCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "associatedBillInfoType": {
      "description": "Associated Bill info.",
      "type": "object",
      "properties": {
        "associatedBillFiscalBillNumber": {
          "description": "The Fiscal Folio Bill Number(from a Fiscal System) of the original bill for which the Credit Bill is being generated.",
          "type": "string"
        },
        "associatedBillFolioType": {
          "description": "The folio type of the original bill for which the Credit Bill is being generated.",
          "type": "string"
        },
        "associatedBillGenerationDate": {
          "description": "The bill generation date of the original bill for which the Credit Bill is being generated.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "associatedBillNumber": {
          "description": "The bill number of the original bill for which the Credit Bill is being generated.",
          "type": "number"
        },
        "associatedBillQueueName": {
          "description": "The folio number queue(used in certain countries) of the original bill for which the Credit Bill is being generated.",
          "type": "string"
        }
      }
    },
    "attachPolicyApplyCriteria": {
      "description": "Request to attach an existing Deposit Policy on a reservation towards an existing deposit payment on the same reservation.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for applying a policy to an existing deposit payment.",
          "$ref": "#/definitions/policyApplyCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizationHistory": {
      "description": "The result element containing a history list of credit card authorizations for a particular reservation, filtered by the requested criteria.",
      "type": "object",
      "properties": {
        "folioHistory": {
          "description": "The collection of credit card history records.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/authorizationHistoryType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizationHistoryType": {
      "description": "Information on a single credit card authorization transaction.",
      "type": "object",
      "properties": {
        "approvalAmount": {
          "description": "Amount sent for authorization for this transaction.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "businessDate": {
          "description": "The corresponding business date for this record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "cardPaymentInformation": {
          "description": "Payment Card information that was sent for authorization",
          "type": "object",
          "properties": {
            "authorizationRule": {
              "$ref": "#/definitions/authorizationRuleType"
            },
            "balance": {
              "$ref": "#/definitions/currencyAmountType"
            },
            "description": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "emailFolioInfo": {
              "description": "Information on an email for the customer.",
              "type": "object",
              "properties": {
                "email": {
                  "description": "eMail deatils for the profile.",
                  "$ref": "#/definitions/emailType"
                },
                "emailFolio": {
                  "type": "boolean"
                },
                "id": {
                  "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
                  "type": "string",
                  "maxLength": 80,
                  "minLength": 0
                },
                "type": {
                  "description": "A reference to the type of object defined by the UniqueID element.",
                  "type": "string",
                  "maxLength": 40,
                  "minLength": 0
                }
              }
            },
            "folioView": {
              "type": "integer"
            },
            "paymentCard": {
              "$ref": "#/definitions/resPaymentCardType"
            },
            "paymentMethod": {
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            }
          }
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "status": {
          "description": "Contains he authorization status indicator - either Successful for Failed.",
          "type": "object",
          "properties": {
            "failed": {
              "description": "An indicator that the authorization failed.",
              "type": "object",
              "properties": {
                "reason": {
                  "description": "The reason for the authorization failure.",
                  "type": "string",
                  "maxLength": 2000,
                  "minLength": 0
                }
              }
            },
            "successful": {
              "description": "An indicator that the authorization was successful.",
              "type": "object",
              "properties": {
                "approvalCode": {
                  "description": "Approval code sent by the credit card company on a successful authorization.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                }
              }
            }
          }
        },
        "transactionType": {
          "$ref": "#/definitions/cardAuthorizationTransactionType"
        },
        "type": {
          "description": "History type can only be either Settlement or Authorization or Payment or Refunds.",
          "type": "string",
          "enum": [
            "Settlement",
            "Authorization",
            "Payment",
            "Refunds"
          ]
        }
      }
    },
    "authorizationInfo": {
      "description": "Response to the credit card authorization request.",
      "type": "object",
      "properties": {
        "authInfo": {
          "description": "Information regarding the authorization done.",
          "$ref": "#/definitions/authorizationInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "payment": {
          "description": "Details of the payment card to which the authorization was applied. The payment details would be returned in the case of Chip and Pin cards. For non chip and pin cards, only the authorization will be returned.",
          "$ref": "#/definitions/cashieringPaymentMethodType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizationInfoType": {
      "type": "object",
      "properties": {
        "approvalAmount": {
          "description": "Approved amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalCode": {
          "description": "The approval code authenticates the authorization.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "originalAuthSequence": {
          "description": "Unique Authorization Sequence for the authorization and settlement.",
          "type": "integer"
        },
        "vendorTranId": {
          "description": "Vendor transaction id for the authorization.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "authorizationRuleType": {
      "description": "Configured rule for computing the amount to authorize.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The amount applicable to the authorization rule.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "code": {
          "description": "The authorization rule code.",
          "type": "integer",
          "pattern": "[0-9]{1,9}"
        },
        "percent": {
          "description": "A percentage value if the authorization rule is percentage based.",
          "type": "number"
        }
      }
    },
    "authorizerCreditDetailType": {
      "description": "Information about the Authorizer Credit detail",
      "type": "object",
      "properties": {
        "actualAmount": {
          "description": "Indicates the Actual Amount which has been authorized.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "billingInstruction": {
          "description": "Indicates the Routing Instructions for which Authorization was done.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "creditLimit": {
          "description": "Indicates the Credit Limit of the Authorizers.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "authorizerCreditDetailsType": {
      "description": "List of Comp Accounting Authorizers details",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/authorizerCreditDetailType"
      }
    },
    "authorizerCreditType": {
      "description": "Authorizer Information",
      "type": "object",
      "properties": {
        "actualAmount": {
          "description": "Indicates the Actual Amount which has been authorized.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "authorizerCreditDetails": {
          "description": "Indicates the Comp Authorizer credit details.",
          "$ref": "#/definitions/authorizerCreditDetailsType"
        },
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "creditLimit": {
          "description": "Indicates the Credit Limit of the Authorizers.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "hotelId": {
          "description": "Identifies the hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        },
        "transactionDate": {
          "description": "Transaction Date associated with the transaction.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "authorizerInfoType": {
      "description": "Authorizer Information",
      "type": "object",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        }
      }
    },
    "authorizersCreditInfo": {
      "description": "Returns credit information of Comp Accounting Authorizers.",
      "type": "object",
      "properties": {
        "authorizersCreditType": {
          "description": "Comp Accounting Authorizers credit information.",
          "$ref": "#/definitions/authorizersCreditType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizersCreditType": {
      "description": "List of Comp Accounting Authorizers Credits",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/authorizerCreditType"
      }
    },
    "autoFolioSettlementCriteriaType": {
      "type": "object",
      "properties": {
        "dateSinceLastAutoSettled": {
          "description": "Date since the last auto folio settlement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "daysSinceLastAutoSettled": {
          "description": "Days since the last auto folio settlement.",
          "type": "integer",
          "maximum": 365,
          "minimum": 1
        },
        "defaultDays": {
          "description": "Use the Number of Days For Settlement, defined for the Reservation.",
          "type": "boolean"
        },
        "folioSettlementTypes": {
          "description": "Comma-delimited list of Folio Settlement Type codes.",
          "type": "string"
        }
      }
    },
    "autoSettleCompFolioType": {
      "description": "Information about comp folio that was auto settled.",
      "type": "object",
      "properties": {
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "folioSeqNo": {
          "description": "Unique sequence number. Used to identify the current folio tax record.",
          "type": "number"
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "folioView": {
          "description": "Comp folio window that was attempted to be auto settled.",
          "type": "integer"
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "payeeId": {
          "description": "Unique ID of payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "payeeName": {
          "description": "Name of the payee.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "autoSettleCompFolios": {
      "description": "Request to auto settle comp folios. OPERA will reference the 'Default Comp Payment Method' setting to settle the folio if no authorizer AR account is associated with the folio.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to auto settle comp folios.",
          "$ref": "#/definitions/autoSettleCompFoliosCriteriaType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "autoSettleCompFoliosCriteriaType": {
      "description": "Criteria to auto settle comp folios of a reservation.",
      "type": "object",
      "properties": {
        "cashierId": {
          "description": "Numeric ID of the cashier.",
          "type": "number"
        },
        "eventType": {
          "description": "Event to which this process will be logged. Possible values are CheckOut, InterimBill, AdvanceBill.",
          "$ref": "#/definitions/cashieringEventType"
        },
        "hotelId": {
          "description": "Hotel code of the folios to be auto settled.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationId": {
          "description": "Reservation Unique ID of the folios to be auto settled.",
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "autoSettleCompFoliosStatus": {
      "description": "Response for auto settle comp folios. This includes collection of auto settled comp folios.",
      "type": "object",
      "properties": {
        "folios": {
          "description": "Collection of auto settled comp folios.",
          "$ref": "#/definitions/autoSettleCompFoliosType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "autoSettleCompFoliosType": {
      "description": "Information about comp folio that was auto settled.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/autoSettleCompFolioType"
      }
    },
    "autoSettlementType": {
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "eventType": {
          "description": "Event to which this process will be logged.",
          "$ref": "#/definitions/cashieringEventType"
        },
        "folioWindowsToSettle": {
          "description": "Folio windows to do auto auto settlement.",
          "type": "array",
          "maxItems": 8,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "folioWindowsToTransfer": {
          "description": "Folio windows to transfer.",
          "type": "array",
          "maxItems": 8,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          }
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "includeCreditCardBalance": {
          "description": "Dictates whether to include negative postings for auto settlement.",
          "type": "boolean"
        },
        "minimumWindowBalance": {
          "description": "Indicates the minimum window balance to do auto settlement.",
          "type": "integer"
        },
        "paymentMethods": {
          "description": "Payment methods to be settled.",
          "$ref": "#/definitions/paymentMethodsSearchType"
        },
        "reservationCriteria": {
          "description": "This is related to reservation search.If the Reservation ID list is empty then this criteria filter will be applied to the reservation.",
          "$ref": "#/definitions/autoFolioSettlementCriteriaType"
        },
        "reservationIdList": {
          "$ref": "#/definitions/uniqueIDListType"
        }
      }
    },
    "awardFolioInfo": {
      "description": "eligible amount that is allowed to pay with award payment",
      "type": "object",
      "properties": {
        "eligibleBill": {
          "description": "Eligible Bill Amount",
          "type": "number"
        },
        "folioView": {
          "description": "Folio Window.",
          "type": "integer"
        }
      }
    },
    "awardPaymentDetails": {
      "description": "Request object for fetching a membership transaction.",
      "type": "object",
      "properties": {
        "awardType": {
          "description": "Type of award that is used to redeem points.",
          "type": "string"
        },
        "billAmount": {
          "description": "A monetary amount representing the outstanding balance.",
          "type": "number"
        },
        "folioView": {
          "description": "Folio Window.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "pointsRequired": {
          "description": "The number of points that are redeemed for this award.",
          "type": "number"
        },
        "redeemAmount": {
          "description": "The value of amount or points that is being redeemed.",
          "type": "integer"
        },
        "voucherNo": {
          "description": "Voucher number of redeemed award.",
          "type": "string"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "balanceInfoCriteria": {
      "description": "Response for the fetch balance request. This will contain the current balance for the criteria requested.",
      "type": "object",
      "properties": {
        "balance": {
          "description": "The total balance for the set of charges.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "postings": {
          "description": "List of Postings produced for the set of charges.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "basicEmailType": {
      "description": "Email address",
      "type": "string",
      "maxLength": 2000,
      "minLength": 0
    },
    "batchAdvanceFolio": {
      "description": "Request for submitting batch advance folio.",
      "type": "object",
      "properties": {
        "batchAdvanceFolio": {
          "description": "Information regarding the reservations for batch advance folio processing.",
          "$ref": "#/definitions/batchAdvanceFolioType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "batchAdvanceFolioType": {
      "description": "Contains criteria for process batch advance folio.",
      "type": "object",
      "properties": {
        "cashierId": {
          "description": "Unique cashier identifier to process the deposit transaction.",
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "description": "Property context of the reservations.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservations": {
          "description": "List of unique reservation identifiers having deposits to process. Reservations should come from the same property.",
          "$ref": "#/definitions/reservations"
        }
      }
    },
    "batchAutoCheckoutDetails": {
      "description": "Response for batch auto check out.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "processId": {
          "description": "Batch process identifier.",
          "$ref": "#/definitions/stringLength40"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "batchAutoCheckoutReservation": {
      "description": "Request type for batch auto checkout.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for batch auto checkout.",
          "$ref": "#/definitions/checkoutReservationType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "batchAutoSettlementCriteria": {
      "description": "Request type for batch auto settlement.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for batch auto settlement.",
          "$ref": "#/definitions/autoSettlementType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "batchDeposit": {
      "description": "Request for submitting batch deposit for reservations.",
      "type": "object",
      "properties": {
        "batchDeposit": {
          "description": "Information regarding the reservations for batch deposit processing.",
          "$ref": "#/definitions/batchDepositType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "batchDepositType": {
      "description": "Contains criteria for batch deposit for reservations.",
      "type": "object",
      "properties": {
        "cashierId": {
          "description": "Unique cashier identifier to process the deposit transaction.",
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "description": "Property context of the reservations.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservations": {
          "description": "List of unique reservation identifiers having deposits to process. Reservations should come from the same property.",
          "$ref": "#/definitions/reservations"
        }
      }
    },
    "batchZeroBalanceCheckoutDetails": {
      "description": "Response for batch zero balance check out.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "processId": {
          "description": "Batch process identifier.",
          "$ref": "#/definitions/stringLength40"
        },
        "resvCount": {
          "description": "Zero balance Reservations count identifier.",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "batchZeroBalanceCheckoutReservation": {
      "description": "Request type for batch zero balance checkout.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for batch zero balance checkout.",
          "$ref": "#/definitions/checkoutZeroBalanceReservationType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bedTaxCriteria": {
      "description": "Request type for change bed transaction info",
      "type": "object",
      "properties": {
        "bedTaxInfoType": {
          "description": "bed transaction info.",
          "$ref": "#/definitions/bedTaxInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bedTaxInfo": {
      "description": "Response for bed transaction info",
      "type": "object",
      "properties": {
        "bedTaxInfoTypes": {
          "description": "Criteria for bed transaction info.",
          "$ref": "#/definitions/bedTaxInfoTypes"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bedTaxInfoType": {
      "description": "Bed Trx Info type",
      "type": "object",
      "properties": {
        "arrival": {
          "description": "Arrival Date of the reservation",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "arrivalCarrierCode": {
          "description": "Arrival Carrier code of the mode of transportation (Airline No. or Railway No., etc.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "country": {
          "description": "Country of the guest",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "departure": {
          "description": "Departure Date with time of the reservation",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "departureCarrierCode": {
          "description": "Departure Carrier code of the mode of transportation (Airline No. or Railway No., etc.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "guestAge": {
          "description": "Age of the guest",
          "type": "integer"
        },
        "guestName": {
          "description": "Guest name associated with the transaction.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "guestNameId": {
          "description": "Guest Name id.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Property associated with bed tax",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nationality": {
          "description": "Nationality of the guest",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "passPortStr": {
          "description": "Passport number",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "passport": {
          "description": "Passport number",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "profession": {
          "description": "Profession of the guest",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "remark": {
          "description": "User-defined remark.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "reservationNameId": {
          "description": "Reservation name id.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "taxArrivaldate": {
          "description": "Arrival Date with time of the reservation",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "taxDepartureDate": {
          "description": "Departure Date with time of the reservation",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "taxNoOfStays": {
          "description": "Total number of tax stays at the property",
          "type": "integer"
        },
        "taxRegistrationNo": {
          "description": "Tax Registration Number",
          "type": "integer"
        },
        "visaExpirationDate": {
          "description": "Expiration date of visa",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaIssueDate": {
          "description": "Issue date of the Visa",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaNumber": {
          "description": "Visa Number",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "bedTaxInfoTypes": {
      "description": "List of Bed Tax info.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/bedTaxInfoType"
      }
    },
    "bedTaxReportingType": {
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "type": "object",
      "properties": {
        "taxRegistrationNo": {
          "description": "Tax Registration Number for Maldives Bed Tax Reporting.",
          "type": "number"
        },
        "taxableDays": {
          "description": "Number of days for which the Maldives tax is applicable.",
          "type": "integer"
        },
        "visaExpiryDate": {
          "description": "Visa Expiration Date used for Maldives Bed Tax Reporting",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaIssueDate": {
          "description": "Visa Issue Date used for Maldives Bed Tax Reporting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaNumber": {
          "description": "Visa number used for Maldives Bed Tax Reporting",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "benefitType": {
      "description": "Basic information about membership benefit.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Benefit code associated with a membership.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "inactive": {
          "description": "Indicates whether membership benefit is active or inactive.",
          "type": "boolean"
        },
        "message": {
          "description": "Processing message for membership benefit.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        }
      }
    },
    "benefitsType": {
      "description": "Basic information about membership benefit.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/benefitType"
      }
    },
    "billingCharge": {
      "description": "Request to edit a billing charge information.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for the charge information to be edited.",
          "$ref": "#/definitions/changeChargeCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "billingChargeStatus": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "billingChargeType": {
      "type": "object",
      "properties": {
        "approvalCode": {
          "description": "Approval code of the posting.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "approvalDate": {
          "description": "Approval date of the posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "approvalStatus": {
          "description": "Approval status of the posting.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "checkNumber": {
          "description": "Corrected Cheque number.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "covers": {
          "description": "Corrected POS covers - number of copies of receipts that got printed for that particular receipt.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "price": {
          "description": "Corrected charge price.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "quantity": {
          "description": "Corrected posting quantity.",
          "type": "integer"
        },
        "reference": {
          "description": "Corrected user-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "remark": {
          "description": "Corrected user-defined posting remark.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "revenueDate": {
          "description": "Corrected Revenue Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionNo": {
          "description": "Transaction number of the posting being corrected.",
          "type": "number"
        }
      }
    },
    "billingCharges": {
      "description": "Request to post a charge on a reservation's folio.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for the charge information to be posted.",
          "$ref": "#/definitions/billingChargesCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "billingChargesCriteriaType": {
      "description": "Criteria type for posting charges.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "charges": {
          "description": "Information regarding the charges which have to be posted.",
          "$ref": "#/definitions/chargesCriteriaType"
        },
        "hotelId": {
          "description": "Property where the charges are to be posted.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "incomeAuditDate": {
          "description": "Date of the Audit. This is used when postings are being created using the Income Audit functionality.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postIt": {
          "description": "Flag to indicate it is part of a PostIt Sale.",
          "type": "boolean"
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        },
        "welcomeOfferPosting": {
          "description": "Flag to indicate that current posting is a Welcome Offer Posting.",
          "type": "boolean"
        }
      }
    },
    "billingChargesDetails": {
      "description": "Response notifying if the posting of a charge to a reservation was successful.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "postings": {
          "description": "List of Postings produced by Billing Charge Request.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "billingChargesInBatchCriteria": {
      "description": "Operation to post billing charge to list of reservations.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Information regarding the Rate Code and reservation to which the rate amount should be posted.",
          "$ref": "#/definitions/postBillingChargesInBatchCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "billingChargesStatus": {
      "description": "Response when checking or inquiring the available options for a set of billing charges.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "options": {
          "description": "Set of consumables and the available options for each one.",
          "$ref": "#/definitions/checkPostBillingChargesOptionsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "billingChargesType": {
      "description": "Criteria for the charge information list to be edited.",
      "type": "object",
      "properties": {
        "billingCharges": {
          "description": "Request to edit a billing charge information",
          "type": "array",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/billingChargeType"
          }
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "billingCheckChargesCriteria": {
      "description": "Request object for PostBillingCheckCharges operation.",
      "type": "object",
      "properties": {
        "check": {
          "description": "Details of the check to be posted.",
          "$ref": "#/definitions/postBillingCheckChargesCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "billingInstructionCodes": {
      "type": "object",
      "properties": {
        "billingInstructions": {
          "description": "Set of Billing Instruction results.",
          "$ref": "#/definitions/billingInstructionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactionCodes": {
          "description": "Set of Transaction Code results.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "billingInstructionType": {
      "description": "Configured Billing Instruction which represents a set of Transaction Codes.",
      "type": "object",
      "properties": {
        "billingCode": {
          "description": "Unique identifier for the Billing Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "desc": {
          "description": "Billing Instruction code description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel context of the Billing Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        }
      }
    },
    "billingInstructionsType": {
      "description": "Set of Billing Instruction codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/billingInstructionType"
      }
    },
    "billingPayment": {
      "description": "Request to post a payment on a reservation's folio.",
      "type": "object",
      "properties": {
        "advanceDeposit": {
          "description": "Flag to indicate if the advance bill is being posted from deposits prior to check-in",
          "type": "boolean"
        },
        "criteria": {
          "description": "Criteria for the payment information to be posted.",
          "type": "object",
          "properties": {
            "action": {
              "description": "Payment action to know from where the payment has been made.",
              "$ref": "#/definitions/postPaymentActionType"
            },
            "applyCCSurcharge": {
              "description": "Flag to indicate if Credit Card Surcharge has to be applied to this payment, when the functionality for Credit Card Surcharge is available.",
              "type": "boolean"
            },
            "applyCurrencyTaxes": {
              "description": "Flag to indicate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.",
              "type": "boolean"
            },
            "cashierId": {
              "$ref": "#/definitions/cashierId"
            },
            "changeDueAmount": {
              "description": "Amount of change given to guest.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "comments": {
              "description": "User Defined Comments. Used for Deposit Payment postings.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "creditablePaymentTaxes": {
              "description": "Used for Thailand Tax Functionality.The payment tax records that can be used for a Credit Note for this reservation.",
              "$ref": "#/definitions/paymentTaxesType"
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "hotelId": {
              "description": "Property code.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "manualPaymentTaxInfo": {
              "description": "The Payment Tax information for Thailand Tax functionality. The invoice number and the date will be used.",
              "$ref": "#/definitions/paymentTaxType"
            },
            "overrideARCreditLimit": {
              "description": "Flag to override account receivable credit limit",
              "type": "boolean"
            },
            "overrideInsufficientCC": {
              "description": "Flag to allow a rebate by Credit Card",
              "type": "boolean"
            },
            "paymentMethod": {
              "description": "Payment method used by the payee.",
              "$ref": "#/definitions/cashieringPaymentMethodType"
            },
            "postingAmount": {
              "description": "Amount to post to the folio.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "postingReference": {
              "description": "User-defined posting reference.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "postingRemark": {
              "description": "User-defined posting remark.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "reservationId": {
              "$ref": "#/definitions/reservationId"
            },
            "terminalId": {
              "description": "Applicable for chip and pin. The ID of the terminal where the chip and pin device is connected and where the payment is made.",
              "type": "string",
              "maxLength": 2000
            },
            "vATOffset": {
              "description": "Flag to indicate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.",
              "type": "boolean"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "billingPaymentToChange": {
      "description": "Request to change a payment posting.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for the payment information to be edited.",
          "$ref": "#/definitions/changePaymentCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "billingPrivilegesType": {
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "type": "object",
      "properties": {
        "allowAutoCheckin": {
          "description": "Indicated if a new reservation should be created and automatically checked in whenever the room is checked out. Available for pseudo room types only.",
          "type": "boolean"
        },
        "autoSettlement": {
          "description": "Indicates if the is a candidate for auto folio settlement.",
          "type": "boolean"
        },
        "autoSettlementFreq": {
          "description": "The interval of days between each auto folio settlement.",
          "type": "integer"
        },
        "autoSettlementType": {
          "description": "The folio settlement type for auto folio settlement.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "creditLimitAutoPay": {
          "description": "Indicates if the reservation will be included in the Automatic Credit Limit Overages process and also be listed in the Credit Limit Overages screen results.",
          "type": "boolean"
        },
        "directBillAuthorized": {
          "description": "If Direct bill is authorized this will hold User ID who authorized it.",
          "type": "boolean"
        },
        "folioCloseDate": {
          "description": "Date when folio was closed. This works with PostStayCharging flag.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postStayCharging": {
          "description": "Indicates if the reservation has charging privileges after checkout.",
          "type": "boolean"
        },
        "postingRestriction": {
          "description": "Flag used by interface program during check in.",
          "type": "boolean"
        },
        "preStayCharging": {
          "description": "Indicates if the reservation has charging privileges before arrival.",
          "type": "boolean"
        },
        "scheduledCheckout": {
          "description": "Indicates if the guest is scheduled for automatic check out.",
          "type": "boolean"
        },
        "scheduledCheckoutTime": {
          "description": "Time of automatic check out if guest is schedule for automatic check out.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "videoCheckout": {
          "description": "Indicates if the guest can do video checkout",
          "type": "boolean"
        }
      }
    },
    "blockIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "bucketTypeType": {
      "description": "Fiscal Bucket Type.",
      "type": "string",
      "enum": [
        "Default",
        "Fiscal"
      ]
    },
    "cCAuthorizationCriteriaType": {
      "description": "Contains the credit card criteria for authorization.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The amount to authorize.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "ccRequestId": {
          "description": "Session Id registered in the WebSocket component for asynchronous Credit Card handling.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "evaluateApprovalAmount": {
          "description": "Flag to indicate if the approval amount should be calculated before authorization. If this is true and if the amount is 0 the approval amount will be calculated based on the rules.",
          "type": "boolean"
        },
        "folioView": {
          "description": "The folio window where this authorization is applied.",
          "type": "integer"
        },
        "hotelId": {
          "description": "Identifies the hotel code to authorize a credit card amount for.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "incidentalAmount": {
          "description": "The incidental part of the amount to authorize.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "payment": {
          "description": "Details of the payment card to which the authorization is to be applied. If this card does not exist on the reservation, it will not be added to the reservation.",
          "$ref": "#/definitions/cashieringPaymentMethodType"
        },
        "profileId": {
          "$ref": "#/definitions/profileId"
        },
        "reservationId": {
          "description": "Identifies the reservation to authorize a credit card amount for.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "sourceOfAuthorization": {
          "description": "Source of the authorization.",
          "$ref": "#/definitions/cardAuthorizationTransactionType"
        },
        "terminalId": {
          "description": "Applicable for chip and pin. The ID of the terminal where the chip and pin device is connected.",
          "type": "string"
        },
        "updateReservation": {
          "description": "Update the card details on the reservations for Chip and Pin Authorizations.",
          "type": "boolean"
        }
      }
    },
    "cCAuthorizationInstructionType": {
      "description": "Contains the details to use for a credit card authorization.",
      "type": "object",
      "properties": {
        "authorizationSetup": {
          "description": "Indicates the Credit Card EFT payment method authorization rules setup.",
          "type": "object",
          "properties": {
            "checkIn": {
              "description": "Indicates if authorization at Check In is allowed for this payment method. False will indicate that no authorization will be done at Check In for this payment method.",
              "type": "boolean"
            },
            "deposit": {
              "description": "Indicates if authorization at Deposit is allowed for this payment method. False will indicate that no authorization will be done at the time of deposit payments, for this payment method. The settlement request will be sent without an authorization request.",
              "type": "boolean"
            },
            "payOnly": {
              "description": "Indicates if this payment method is setup as a PayOnly, which does not require authorization to be done prior to settlement. The special settlement handling will take care of both Authorization and Settlement together.",
              "type": "boolean"
            },
            "stay": {
              "description": "Indicates if authorization during the stay of the guest is allowed for this payment method. False will indicate that no authorization will be done during the stay and prior to settlements for this payment method. The settlement request will be sent without an authorization request.",
              "type": "boolean"
            }
          }
        },
        "businessDate": {
          "description": "The current date of the Property.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "currentApprovalAmount": {
          "description": "The current amount to authorize as part of this transaction.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "incidentalAmount": {
          "description": "The incidental amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "initialAuthorizationRequired": {
          "description": "Flag to indicate if initial authorization required.",
          "type": "boolean"
        },
        "originalAuthSequence": {
          "description": "Unique Authorization Sequence for the authorization and settlement.",
          "type": "integer"
        },
        "paymentMethodInfo": {
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationDetail": {
          "description": "Reservation Details required for the authorization. The details returned are Hotel Code, Reservation Id, Guest Name, Arrival Date, Departure Date, Create Date,Room , Reservation Balance and Payment Information.",
          "$ref": "#/definitions/reservationInfoType"
        },
        "sequenceNumber": {
          "description": "Unique sequence for this authorization.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "totalApprovalAmount": {
          "description": "The total amount authorized(including the current amount).",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionType": {
          "description": "Transaction type of the authorization(INIT or SUPP).",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "usageType": {
          "description": "Usage type used.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "vendorTranId": {
          "description": "Vendor transaction id for the authorization.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "cCBatchSettlementStatusType": {
      "description": "Provides status information for credit card settlements .",
      "type": "object",
      "properties": {
        "reason": {
          "description": "Batch Id for identify status of job.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "settlementId": {
          "description": "List of selected settlements id.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "settlementStatus": {
          "description": "Status of credit card settlements.",
          "type": "string"
        }
      }
    },
    "cCBatchSettlementType": {
      "description": "Credit card transaction detail for batch settlement",
      "type": "object",
      "properties": {
        "approvalCode": {
          "description": "The approval code authenticates the authorization.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "folioNo": {
          "description": "Folio number of transaction",
          "type": "number"
        },
        "guestName": {
          "description": "Guest name associated with the CC settlement transaction.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "paymentMethod": {
          "description": "Identifies the payment method to validate the credit card number against.",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationId": {
          "description": "Unique Id for the reservation",
          "$ref": "#/definitions/reservationId"
        },
        "roomId": {
          "description": "Room number associated with the CC settlement transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "settlementAmount": {
          "description": "Settlement amount associated with the CC settlement transaction.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "settlementId": {
          "description": "CC Settlement id associated with the CC settlement transaction.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "transactionDate": {
          "description": "Transaction Date of the credit card transaction.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "windowNo": {
          "description": "Window number associated with the CC settlement transaction.",
          "type": "integer"
        }
      }
    },
    "cCBatchSettlementsProcessType": {
      "description": "Type for starting settlements job process.",
      "type": "object",
      "properties": {
        "batchId": {
          "description": "Batch Id for identify status of job.",
          "type": "string"
        },
        "hotelId": {
          "description": "Hotel code of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "settlementIdList": {
          "description": "List of selected settlements id.",
          "$ref": "#/definitions/uniqueIDListType"
        }
      }
    },
    "cCBatchSettlementsStatusType": {
      "description": "List of CCBatchSettlementStatusType type",
      "type": "object",
      "properties": {
        "batchId": {
          "description": "Batch Id for identify status of job.",
          "type": "string"
        },
        "cCBatchSettlementsStatus": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cCBatchSettlementStatusType"
          }
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "cCBatchSettlementsType": {
      "description": "List of Settlement transaction details for credit card transaction.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cCBatchSettlementType"
      }
    },
    "cCManualAuthorizationCriteriaType": {
      "description": "Type for registering a manual authorization.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The amount to authorize.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "folioView": {
          "description": "The folio window where this authorization is applied.",
          "type": "integer"
        },
        "hotelId": {
          "description": "Hotel context for the Reservations.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "manualApprovalCode": {
          "description": "Approval code is required when making a Manual Authorization.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationIdList": {
          "description": "Reservation id for the guest whose deposit payment information is being requested.",
          "$ref": "#/definitions/reservationIdList"
        }
      }
    },
    "cCSurchargeAmountType": {
      "description": "Information regarding the Surcharge amount which will be applied to a payment.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property where the payment is being posted.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "paymentMethod": {
          "description": "Payment method used for the payment.",
          "$ref": "#/definitions/cashieringPaymentMethodType"
        },
        "surchargeAmount": {
          "description": "The total Surcharge amount which is to be applied to this payment.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "surchargeInfo": {
          "description": "Details on the Surcharge configuration. The percentage and a threshold amount in case it is defined.",
          "$ref": "#/definitions/cCSurchargeInfoType"
        }
      }
    },
    "cCSurchargeInfoType": {
      "description": "Credit Card Surcharge Information type. Information regarding surcharge which can be applied to a Credit Card payment.",
      "type": "object",
      "properties": {
        "percentage": {
          "description": "The percentage on the payment amount which will be the Surcharge.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "threshold": {
          "description": "The threshold payment amount above which the Surcharge will be applied.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionCode": {
          "description": "The Payment Transaction Code for which the Surcharge Applies.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "calculatedForeignCurrency": {
      "description": "Information regarding charges in batch result for each reservation.",
      "type": "object",
      "properties": {
        "exchangeInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/exchangeRateCalculationType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cancelPrepaidCardTransaction": {
      "description": "Request type for cancel prepaid card transaction.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Prepaid card criteria type used to perform manage operation on the card.",
          "type": "object",
          "properties": {
            "amount": {
              "description": "Prepaid card transaction amount.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "cardNo": {
              "description": "Prepaid card number.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "cashierId": {
              "$ref": "#/definitions/cashierId"
            },
            "hotelId": {
              "description": "Hotel code.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "interfaceId": {
              "description": "The unique ID for the Interface.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "pin": {
              "description": "PIN code associated for the prepaid card.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "postChargeToRoom": {
              "description": "Indicate that charges will be posted to the room.",
              "type": "boolean"
            },
            "profileId": {
              "description": "The guest name id associated to the card.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "reservationId": {
              "description": "The reservation name id where the transaction is associated.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "saleCriteria": {
              "description": "Represent the sale criteria.",
              "$ref": "#/definitions/saleCriteriaType"
            },
            "transactionNo": {
              "description": "The opera transaction number associated with prepaid card transaction.",
              "type": "integer"
            },
            "transactionTye": {
              "description": "The transaction type of a given transaction.",
              "$ref": "#/definitions/prepaidCardTrxTypeType"
            },
            "vendorTransactionNo": {
              "description": "The vendor transaction number associated with prepaid card transaction.",
              "$ref": "#/definitions/stringLength100"
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cancelPrepaidCardTransactionStatus": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cardAuthorizationTransactionType": {
      "description": "Currently supported transaction type categories used for credit card authorization.",
      "type": "string",
      "enum": [
        "Additional",
        "ArPayment",
        "Batch",
        "BatchDeposit",
        "BatchDepositRefund",
        "Billing",
        "CheckIn",
        "CheckInManualAuth",
        "Deposit",
        "EndOfDay",
        "EndOfDayDeposit",
        "Manual",
        "Other",
        "PasserBy",
        "PostIt",
        "PreCheckIn",
        "Refund",
        "Scheduled"
      ]
    },
    "cardNumberTypeType": {
      "description": "Simple type for indicating if credit card number is tokenized.",
      "type": "string",
      "enum": [
        "CardNumber",
        "Token"
      ]
    },
    "cardProcessingType": {
      "type": "string",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "cardReIssueType": {
      "description": "Request to re issue a new card.",
      "type": "string",
      "enum": [
        "Pending",
        "NotApplicable",
        "Requested"
      ]
    },
    "cardTypeType": {
      "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
      "type": "string",
      "enum": [
        "Ab",
        "Am",
        "Ax",
        "Cb",
        "Dc",
        "Ds",
        "Dt",
        "Ec",
        "Er",
        "Jc",
        "Jl",
        "Mc",
        "Nb",
        "So",
        "St",
        "Sw",
        "Va",
        "Xy",
        "Zz",
        "Cp",
        "Cu"
      ]
    },
    "cashOutPrepaidCard": {
      "description": "Request type for cashout prepaid card.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Prepaid card criteria type used to perform manage operation on the card.",
          "type": "object",
          "properties": {
            "amount": {
              "description": "Prepaid card transaction amount.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "cardNo": {
              "description": "Prepaid card number.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "cashierId": {
              "$ref": "#/definitions/cashierId"
            },
            "hotelId": {
              "description": "Hotel code.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "interfaceId": {
              "description": "The unique ID for the Interface.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "pin": {
              "description": "PIN code associated for the prepaid card.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "postChargeToRoom": {
              "description": "Indicate that charges will be posted to the room.",
              "type": "boolean"
            },
            "profileId": {
              "description": "The guest name id associated to the card.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "reservationId": {
              "description": "The reservation name id where the transaction is associated.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "saleCriteria": {
              "description": "Represent the sale criteria.",
              "$ref": "#/definitions/saleCriteriaType"
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashOutPrepaidCardStatus": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierClosure": {
      "description": "Request to close cashier's shift.",
      "type": "object",
      "properties": {
        "cashierLockHandle": {
          "description": "The lock handle of the cashier lock. Cashier needs to be locked before this operation can be invoke.",
          "$ref": "#/definitions/cashierLockHandle"
        },
        "criteria": {
          "description": "Criteria for closing cashier.",
          "$ref": "#/definitions/cashierClosureType"
        },
        "hotelId": {
          "description": "Unique ID of the hotel",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierClosureAmountType": {
      "description": "Cashier Opening Balance and Shift Amounts type.",
      "type": "object",
      "properties": {
        "actualShiftBalance": {
          "description": "Actual Cashier shift amount.",
          "type": "number"
        },
        "expectedShiftBalance": {
          "description": "Expected Cashier shift amount.",
          "type": "number"
        },
        "openingBalance": {
          "description": "Cashier shift amounts type.",
          "type": "number"
        },
        "paidOut": {
          "description": "Paid Out amount.",
          "type": "number"
        },
        "received": {
          "description": "Receviced amount.",
          "type": "number"
        }
      }
    },
    "cashierClosureCurrencyAmountType": {
      "description": "Cashier Shift Currency Amount type - cash ,check ,credit and others elements.",
      "type": "object",
      "properties": {
        "cash": {
          "description": "Cash amounts for the currency.",
          "$ref": "#/definitions/cashierClosureAmountType"
        },
        "check": {
          "description": "Check amounts for the currency.",
          "$ref": "#/definitions/cashierClosureAmountType"
        },
        "creditCard": {
          "description": "Credit card amounts for the currency.",
          "$ref": "#/definitions/cashierClosureAmountType"
        },
        "currencyCode": {
          "description": "The Currency Code.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "others": {
          "description": "Other amounts for the currency.",
          "$ref": "#/definitions/cashierClosureAmountType"
        }
      }
    },
    "cashierClosureDetails": {
      "description": "Response for the fetch Cashier Closure information.",
      "type": "object",
      "properties": {
        "cashierClosureInfo": {
          "description": "Cashier shift amounts group by resort and currency.",
          "$ref": "#/definitions/cashierClosureType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierClosureInfoType": {
      "description": "Cashier closure Information.",
      "type": "object",
      "properties": {
        "cashierClosureNo": {
          "description": "Criteria for the cashier closure id and the closure number",
          "$ref": "#/definitions/cashierClosureNoType"
        },
        "cashierTitle": {
          "description": "Cashier title of the cashier.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "cashierUser": {
          "description": "Cashier user name.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "closeDate": {
          "description": "Date and time cashier was closed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "closureBusinessDate": {
          "description": "Business date cashier was closed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotelId": {
          "description": "Property this record belongs to.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "openDate": {
          "description": "Date and time cashier was opened.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reportsList": {
          "description": "Returns whether a particular report is applicable or not based on payment posting type. When no postings for a particular payment type is found, that report is marked as not applicable in the closure report.",
          "$ref": "#/definitions/cashierClosureReportsType"
        }
      }
    },
    "cashierClosureInfoTypes": {
      "description": "Information of the Cashier.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cashierClosureInfoType"
      }
    },
    "cashierClosureInformation": {
      "description": "Response to the request to get financial details for a Posting Activity. This will return the before and after values for the transactions which were changed.",
      "type": "object",
      "properties": {
        "cashierClosureInfo": {
          "description": "The details of the changes made during the activity.",
          "$ref": "#/definitions/cashierClosureInfoTypes"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierClosureNoType": {
      "description": "Type used in cashier closure to specify a cashier's shift.",
      "type": "object",
      "properties": {
        "bagNumberForCash": {
          "description": "Cashier closure shift drop cash payment method type bag number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "bagNumberForOthers": {
          "description": "Cashier closure shift drop others payment method type bag number.",
          "type": "string",
          "maxLength": 15,
          "minLength": 0
        },
        "cashierId": {
          "description": "The Cashier ID of the Cashier.",
          "$ref": "#/definitions/cashierId"
        },
        "closureNo": {
          "description": "The Cashier Shift Number.",
          "type": "number"
        },
        "shiftDropLocationCode": {
          "description": "Cashier closure shift drop location code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "cashierClosureReportsList": {
      "description": "Returns whether a particular report is applicable or not based on payment posting type. When no postings for a particular payment type is found, that report is marked as not applicable in the closure report.",
      "type": "object",
      "properties": {
        "cashierReportList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cashierReportType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierClosureReportsType": {
      "description": "Information of the Cashier.",
      "type": "array",
      "maxItems": 7,
      "items": {
        "$ref": "#/definitions/cashierReportType"
      }
    },
    "cashierClosureType": {
      "description": "Cashier Shift Totals and Per Hotel amounts group by currency code",
      "type": "object",
      "properties": {
        "cashierInfo": {
          "description": "Cashier ID and Closure No",
          "$ref": "#/definitions/cashierClosureNoType"
        },
        "hotelCurrencyAmountList": {
          "description": "Currency Hotels Amounts for Cashier Shift.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelCashierClosureCurrencyAmountType"
          }
        },
        "summaryCurrencyAmountList": {
          "description": "Currency Total Amounts for Cashier Shift.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cashierClosureCurrencyAmountType"
          }
        }
      }
    },
    "cashierId": {
      "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
      "type": "number"
    },
    "cashierInfoType": {
      "description": "Cashier information. Contains Id and Name details of the cashier.",
      "type": "object",
      "properties": {
        "cashierId": {
          "description": "Cashier Id of the Cashier.",
          "type": "number"
        },
        "cashierName": {
          "description": "Cashier Name.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "cashierLockCriteriaToExtend": {
      "description": "Operation for extending the lifetime of a lock on a cashier.",
      "type": "object",
      "properties": {
        "additionalTimeToLive": {
          "description": "The number of seconds to add to the lock's validity time.",
          "type": "number"
        },
        "cashierLockHandle": {
          "description": "The lock handle of the record lock we are attempting to extend.",
          "$ref": "#/definitions/cashierLockHandle"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierLockHandle": {
      "description": "The Cashier Lock Handle to pass along with operation which required cashier to be locked.",
      "type": "number"
    },
    "cashierReportPostingsInfo": {
      "description": "Response for fetching the Cashier report transactions.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "postings": {
          "description": "Transaction entries of the response.",
          "$ref": "#/definitions/detailPostingsType"
        },
        "transactionCodes": {
          "description": "Set of Transaction Code results.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierReportType": {
      "description": "Shift drop report created when cashier closure is completed. It is an integral part of closure report and is not to be printed or accessed by itself.",
      "type": "string",
      "enum": [
        "Cash",
        "Check",
        "ForeignCurrency",
        "CreditCard",
        "Miscellaneous",
        "ArSettlements",
        "DepositTransfers",
        "Shiftdrop"
      ]
    },
    "cashierTransactionType": {
      "description": "Cashier Shift Transaction Type.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Transaction amount and currency.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "description": "Transaction codes description which will be populated for summary elements only.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionCode": {
          "description": "Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "trxCount": {
          "description": "Number of same transactions during a shift.",
          "type": "integer"
        }
      }
    },
    "cashierTransactionsDetails": {
      "description": "Response for the fetch cashier's shift transactions.",
      "type": "object",
      "properties": {
        "cashierTransactionsInfo": {
          "description": "Cashier shift transactions group by transaction code and currency.",
          "$ref": "#/definitions/cashierTransactionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierTransactionsType": {
      "description": "Cashier Shift Totals and Per Hotel transactions group by transaction code",
      "type": "object",
      "properties": {
        "cashierInfo": {
          "description": "Cashier ID and Closure No",
          "$ref": "#/definitions/cashierClosureNoType"
        },
        "hotelTransactionList": {
          "description": "Hotel's transactions during Cashier Shift.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelCashierTransactionType"
          }
        },
        "summaryTransactionList": {
          "description": "Summary of all transactions during Cashier Shift.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cashierTransactionType"
          }
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response folio.",
          "$ref": "#/definitions/trxCodesInfoType"
        }
      }
    },
    "cashieringEventType": {
      "description": "Event being generated by a Supplemental Folio.",
      "type": "string",
      "enum": [
        "CheckOut",
        "EarlyDeparture",
        "AdvanceBill",
        "InterimBill",
        "PasserBy",
        "PostIt",
        "CreditBill",
        "Deposit",
        "DepositRefund",
        "AutoFolio",
        "PrepaidCard",
        "AutoSettlement",
        "InformationFolio",
        "SupplementalFolio"
      ]
    },
    "cashieringPaymentMethodType": {
      "type": "object",
      "properties": {
        "authorizationApproval": {
          "description": "Authorization approval record.",
          "$ref": "#/definitions/authorizationInfoType"
        },
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID element.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            }
          }
        },
        "folioView": {
          "type": "integer"
        },
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "paymentMethod": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "track2Data": {
          "description": "Track2 data for the card which would be sent to the CC vendor as part of the authorization.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "cashieringTransactionTypeType": {
      "description": "Wrapper Transaction Type.",
      "type": "string",
      "enum": [
        "Revenue",
        "Payment",
        "Wrapper"
      ]
    },
    "ccAuthorizationCriteria": {
      "description": "Request for a credit card authorization. An authorization request will be sent to the Credit Card Vendor as part of this request.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for the credit card authorization.",
          "$ref": "#/definitions/cCAuthorizationCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ccAuthorizationInstructions": {
      "description": "Response to the fetch authorization instructions. Based on the criteria requested, the response can contain information required to send a credit card authorization to the Vendor.",
      "type": "object",
      "properties": {
        "details": {
          "$ref": "#/definitions/cCAuthorizationInstructionType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ccBatchSettlements": {
      "description": "Response for credit card settlements.",
      "type": "object",
      "properties": {
        "batchSettlements": {
          "description": "List of credit card transaction.",
          "$ref": "#/definitions/cCBatchSettlementsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ccBatchSettlementsProcessCriteria": {
      "description": "Request to process batch settlements",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Selected settlements which will process",
          "$ref": "#/definitions/cCBatchSettlementsProcessType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ccBatchSettlementsStatus": {
      "description": "Response for credit card settlements status.",
      "type": "object",
      "properties": {
        "batchSettlementsStatus": {
          "description": "List of credit card transaction.",
          "$ref": "#/definitions/cCBatchSettlementsStatusType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ccManualAuthorizationCriteria": {
      "description": "Request for registering a Manual Authorization.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for registering the manual authorization.",
          "$ref": "#/definitions/cCManualAuthorizationCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ccSettlementCriteria": {
      "description": "Request object to change credit card settlement information.",
      "type": "object",
      "properties": {
        "creditCardSettlement": {
          "description": "credit card settlement.",
          "$ref": "#/definitions/cCBatchSettlementType"
        },
        "hotelId": {
          "description": "Hotel code.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ccSurchargeDetails": {
      "description": "Response to the request to fetch Credit Card Surcharge information for a Credit Card Payment.",
      "type": "object",
      "properties": {
        "info": {
          "description": "Surcharge information for the Credit Card Payment.",
          "$ref": "#/definitions/cCSurchargeAmountType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "certificateReconciliationType": {
      "description": "FBA ( Flexible Benefits Awards ) related fields.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Award's FBA amount.",
          "type": "number"
        },
        "certificateNumber": {
          "description": "The number for the given certificate.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "fBAStatus": {
          "description": "Possible FBA statuses.",
          "$ref": "#/definitions/fBAStatusType"
        },
        "fbaBillGenDate": {
          "description": "Business date of the FBA bill generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "flexibleBenefitAward": {
          "description": "Indicates if this certificate is a Flexible Benefit Award certificate.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel context for the selected certificate.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "monetaryValue": {
          "description": "Award's FBA monetary values.",
          "type": "number"
        },
        "orphanCertificate": {
          "description": "Indicates whether the certificate is Orphan or not.",
          "type": "boolean"
        },
        "posted": {
          "description": "Indicates whether FBA has been posted.",
          "type": "boolean"
        },
        "postedAmount": {
          "description": "Award's FBA posted amount.",
          "type": "number"
        },
        "postingBusinessDate": {
          "description": "Business date of the FBA posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingDateTime": {
          "description": "Date and time of the FBA posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reimburseAllowed": {
          "description": "Marks if the certificate is eligible for reimbursement.",
          "type": "boolean"
        },
        "reimbursed": {
          "description": "Indicates whether FBA has been reimbursed.",
          "type": "boolean"
        },
        "reimbursedAmount": {
          "description": "Award's FBA reimbursed amount.",
          "type": "number"
        },
        "reimbursementBusinessDate": {
          "description": "Business date of the FBA reimbursement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reimbursementDateTime": {
          "description": "Date and time of the FBA reimbursement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationId": {
          "description": "Reservation name id to which the the certificate belongs to.",
          "$ref": "#/definitions/reservationId"
        },
        "resettleAllowed": {
          "description": "Marks if the certificate is eligible for resettlement",
          "type": "boolean"
        },
        "settled": {
          "description": "Indicates whether FBA has been settled.",
          "type": "boolean"
        },
        "settlementBusinessDate": {
          "description": "Business date of the FBA settlement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "settlementDateTime": {
          "description": "Date and time of the FBA settlement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "status": {
          "description": "Possible FBA statuses.",
          "$ref": "#/definitions/fBAStatusType"
        }
      }
    },
    "certificateReconciliationTypes": {
      "description": "List of CertificateReconciliationType criteria",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/certificateReconciliationType"
      }
    },
    "changeChargeCriteriaType": {
      "type": "object",
      "properties": {
        "approvalCode": {
          "description": "Approval code of the posting.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "approvalDate": {
          "description": "Approval date of the posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "approvalStatus": {
          "description": "Approval status of the posting.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "checkNumber": {
          "description": "Corrected Cheque number.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "covers": {
          "description": "Corrected POS covers - number of copies of receipts that got printed for that particular receipt.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "message": {
          "description": "External message coming from the vendor that explains the status of transaction.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "price": {
          "description": "Corrected charge price.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "quantity": {
          "description": "Corrected posting quantity.",
          "type": "integer"
        },
        "reference": {
          "description": "Corrected user-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "remark": {
          "description": "Corrected user-defined posting remark.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "revenueDate": {
          "description": "Corrected Revenue Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionNo": {
          "description": "Transaction number of the posting being corrected.",
          "type": "number"
        }
      }
    },
    "changePayeeTaxNumberCriteriaType": {
      "description": "Criteria to validate and change payee tax number.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ignoreWarnings": {
          "description": "Flag to ignore warnings while updating a payee folio tax number.",
          "type": "boolean"
        },
        "payeeId": {
          "description": "Opera name id of the payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "taxNumber": {
          "description": "Payee Tax Number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "changePaymentCriteriaType": {
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "checkNumber": {
          "description": "Corrected Cheque number.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "covers": {
          "description": "Corrected POS covers - number of copies of receipts that got printed for that particular receipt.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "depositTransactionId": {
          "description": "Tax Service Accounting Codes used.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reference": {
          "description": "Corrected user-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "remark": {
          "description": "Corrected user-defined posting remark.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionNo": {
          "description": "Transaction number of the payment being corrected.",
          "type": "number"
        }
      }
    },
    "changedRoutingInstructions": {
      "description": "Response when changing a routing instruction. It may optionally return a list of postings which are eligible for transfer as per the modified routing instruction in case of room routing instruction.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "postingsForRoomRouting": {
          "description": "Transaction details along with the transaction code information.",
          "$ref": "#/definitions/postingsInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "characterUDFType": {
      "description": "Used to hold user defined field of Character/String Type.",
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "name": {
          "description": "Used to hold user defined field of Character Type. It is highly recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "characterUDFsType": {
      "description": "Used to hold collection of user defined fields of Character/String Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/characterUDFType"
      }
    },
    "chargeCriteriaType": {
      "description": "Criteria information for posting a charge.",
      "type": "object",
      "properties": {
        "applyRoutingInstructions": {
          "description": "Apply room routing when making this posting.",
          "type": "boolean"
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "articleCode": {
          "description": "Article ID.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "autoPosting": {
          "description": "True indicates the Transaction Code is allowed to be posted automatically.",
          "type": "boolean"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "checkNumber": {
          "description": "Indicates the Cheque number.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "financialTransactionIdList": {
          "description": "Collection of unique identifiers of the financial transactions.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "postingQuantity": {
          "description": "Quantity to post to the folio.",
          "type": "integer"
        },
        "postingReference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "postingRemark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "price": {
          "description": "Amount to post to the folio.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionCode": {
          "description": "Transaction Code to post.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "usePackageAllowance": {
          "description": "Use the applicable package allowance when making this posting.",
          "type": "boolean"
        }
      }
    },
    "chargesCriteriaType": {
      "description": "Collection of Charges to be posted.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/chargeCriteriaType"
      }
    },
    "checkDetails": {
      "description": "Response object to Fetch the check details for a given posting posted through the POS.",
      "type": "object",
      "properties": {
        "checkDate": {
          "description": "Indicates the Cheque date.",
          "type": "string",
          "format": "date"
        },
        "checkDetailsInfo": {
          "description": "Response flag whether the instructions overlaps or not.",
          "$ref": "#/definitions/stringLength32000"
        },
        "checkImageInfo": {
          "description": "Response of guest check Image details in encoded format.",
          "type": "string",
          "format": "byte"
        },
        "checkNumber": {
          "description": "Indicates the Cheque number.",
          "$ref": "#/definitions/stringLength200"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "checkDetailsType": {
      "description": "Holds check details information.",
      "type": "object",
      "properties": {
        "checkDate": {
          "description": "Check date of the posting.",
          "type": "string",
          "format": "date-time"
        },
        "checkImage": {
          "description": "Check image of the posting.",
          "type": "string",
          "format": "byte"
        },
        "checkText": {
          "description": "Check text of the posting.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        }
      }
    },
    "checkPostBillingChargesOptionsType": {
      "description": "TAvailable options for this consumable",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "consumable": {
            "$ref": "#/definitions/chargeCriteriaType"
          },
          "packageAllowance": {
            "description": "Determines if the package allowance is available to be consumed.",
            "type": "boolean"
          },
          "roomRouting": {
            "description": "Room routing is applicable on the requested consumable.",
            "type": "object",
            "properties": {
              "applicable": {
                "type": "boolean"
              },
              "guest": {
                "$ref": "#/definitions/personNameType"
              },
              "roomId": {
                "type": "string",
                "maxLength": 20,
                "minLength": 0
              }
            }
          }
        }
      }
    },
    "checkedRateCode": {
      "description": "Response for the request to check if a Rate Code can be posted to a reservation .",
      "type": "object",
      "properties": {
        "checks": {
          "description": "Includes flags to indicate if Products(Packages) are included in the Rate Code and if Products(Packages) can be posted or reversed.",
          "$ref": "#/definitions/postRateCodeCheckType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "checkoutInstructionsType": {
      "type": "object",
      "properties": {
        "guestPreferredCurrency": {
          "description": "Currency Code which the Guest preferred to use and to be stored on the reservation of the Guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ignoreWarnings": {
          "description": "Dictates whether to ignore warnings before check out.",
          "type": "boolean"
        },
        "roomStatus": {
          "description": "Housekeeping Status to be assigned to the room after checkout.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "scheduleOn": {
          "description": "Date and time for scheduled check out which could be performed when SCHEDULED CHECKOUT is active. Room status will be assigned according to SCHEDULED CHECKOUT ROOM STATUS parameter value.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "checkoutReservationType": {
      "type": "object",
      "properties": {
        "autoCheckout": {
          "description": "This flag will be set to true if the reservation is checked out via mobility service. When the reservation is checked out through UI, this would be false.",
          "type": "boolean"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "checkoutInstr": {
          "$ref": "#/definitions/checkoutInstructionsType"
        },
        "checkoutWithOpenFolio": {
          "description": "If the Property works with Open Folios and the reservation has the privileges for Post Stay Charging, this flag could be set to True which would checkout the guest without requiring the guest to settle his balances.",
          "type": "boolean"
        },
        "eventType": {
          "description": "Event to which this process will be logged.",
          "$ref": "#/definitions/cashieringEventType"
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "mobileCheckout": {
          "description": "This flag will be set to true if the reservation is checked out via mobility service. When the reservation is checked out through UI, this would be false.",
          "type": "boolean"
        },
        "mobileCheckoutFolioEmail": {
          "description": "This is the email address used by the External System to email a folio. Opera will not use this as the default email address for the folio. This will be stored as a EFOLIO type email of the Guest and an applicable external folio flag will be updated on the reservation.",
          "$ref": "#/definitions/basicEmailType"
        },
        "reservationIdList": {
          "$ref": "#/definitions/uniqueIDListType"
        },
        "stopCheckout": {
          "description": "Indicates Stop Checkout reservation Global Alert flag.",
          "type": "boolean"
        }
      }
    },
    "checkoutZeroBalanceReservationType": {
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "childAgeType": {
      "description": "Defines Child's Age.",
      "type": "object",
      "properties": {
        "age": {
          "description": "Age of a child in years.",
          "type": "integer"
        }
      }
    },
    "childAgesType": {
      "description": "Age of a child in years.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/childAgeType"
      }
    },
    "childBucketsType": {
      "description": "Defines children counts with Age Qualifying Group(Child Bucket) classification.",
      "type": "object",
      "properties": {
        "bucket1Count": {
          "description": "Number of children classified under the first Age Qualifying Group(Child Bucket#1).",
          "type": "integer"
        },
        "bucket2Count": {
          "description": "Number of children classified under the second Age Qualifying Group(Child Bucket#2).",
          "type": "integer"
        },
        "bucket3Count": {
          "description": "Number of children classified under the third Age Qualifying Group(Child Bucket#3).",
          "type": "integer"
        },
        "bucket4Count": {
          "description": "Number of children classified under the fourth Age Qualifying Group(Child Bucket#4).",
          "type": "integer"
        },
        "bucket5Count": {
          "description": "Number of children classified under the fifth Age Qualifying Group(Child Bucket#5).",
          "type": "integer"
        }
      }
    },
    "closeFolioCriteria": {
      "description": "Request to close an Open Folio Reservation. The Property should be using the Open Folio Functionality to use this operation.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for closing the folio. Property code and Reservation ID is required.",
          "$ref": "#/definitions/closeFolioCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "closeFolioCriteriaType": {
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "codeDescriptionType": {
      "description": "This contains a generic code and description information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "maxLength": 20,
        "minLength": 0
      }
    },
    "codeType": {
      "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
      "type": "string",
      "maxLength": 20,
      "minLength": 0
    },
    "colorType": {
      "description": "Color configuration type. This color configuration provides a visual category of entities.",
      "type": "string",
      "enum": [
        "Red",
        "DarkRed",
        "Green",
        "DarkGreen",
        "LightGreen",
        "Orange",
        "White",
        "Yellow",
        "DarkYellow",
        "Purple",
        "Brown",
        "Gray",
        "Aqua",
        "Chocolate",
        "Blue",
        "LightBlue",
        "DarkBlue",
        "Cyan",
        "DarkCyan",
        "Magenta",
        "DarkMagenta",
        "Black"
      ]
    },
    "commentInfoType": {
      "description": "Comment related to the profile/reservation.",
      "type": "object",
      "properties": {
        "comment": {
          "description": "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref": "#/definitions/commentType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "commentType": {
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "type": "object",
      "properties": {
        "actionDate": {
          "description": "Indicates at which date an action described in the comment must be taken.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "actionType": {
          "description": "Specifies type of action described in the comments.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "commentTitle": {
          "description": "Specifies Comment's Title.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "confidential": {
          "description": "When true, the comment may be confidential.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "If specified comment belongs to the Hotel, otherwise it is a global comment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "internal": {
          "description": "When true, the comment may not be shown to the consumer. When false, the comment may be shown to the consumer.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "notificationLocation": {
          "description": "Notification Location associated with the Note.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "overrideInternal": {
          "description": "When true, the note internal could be modified.",
          "type": "boolean"
        },
        "protectDescription": {
          "description": "When true, the note title will be populated from the note type description and couldn't be modified.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "type": {
          "description": "Specifies type of the comment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Comment type Description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        }
      }
    },
    "commissionPayoutToType": {
      "type": "string",
      "enum": [
        "TravelAgent",
        "Source",
        "TravelAgentSource",
        "None"
      ]
    },
    "communicationStatusType": {
      "description": "Enum to denote the Status of Readiness messages sent to Guest Devices.",
      "type": "string",
      "enum": [
        "Pending",
        "Completed",
        "Failed",
        "Sent",
        "Received",
        "Cancelled",
        "PendingAvailability"
      ]
    },
    "compAccountingJournal": {
      "description": "Response for fetching the Complimentary Posting Journal.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "journalPostings": {
          "description": "Complimentary Journal entries of the response.",
          "$ref": "#/definitions/financialPostingsType"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "compAccountingType": {
      "description": "Authorizer Information",
      "type": "object",
      "properties": {
        "aRNumber": {
          "description": "AR Account Number of the authorizer",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "compTypeCode": {
          "description": "The Comp Type for this Account. Used when using the Comp types functionality",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "compVoucherNo": {
          "description": "The coupon or voucher number used by the external gaming system to track postings made to this routing.",
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "dateRange": {
          "description": "Arrival date range for comp routing",
          "$ref": "#/definitions/dateRangeType"
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        },
        "membershipId": {
          "description": "Membership number",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "membershipIdNo": {
          "description": "Unique Id of membership",
          "type": "integer"
        },
        "membershipNameOnCard": {
          "description": "Name displayed on the membership card",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "compPostingsType": {
      "description": "Collection of comp postings.",
      "type": "object",
      "properties": {
        "approvalStatus": {
          "description": "Approval status of the comp account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "authorizer": {
          "description": "Authorizer name of the Comp Account.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "compRedemptionsType": {
      "description": "Information regarding Complimentary Bucket Redemption object.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/redemptionType"
      }
    },
    "compRoutingInstructions": {
      "description": "Response object containing comp routing instructions for a reservation .",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "resvRoutingInstructions": {
          "description": "Set of Routing Instructions.",
          "$ref": "#/definitions/resvRoutingInfoListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "compRoutingRequestType": {
      "description": "Type for the details of a Comp Routing Request",
      "type": "object",
      "properties": {
        "comments": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "declinedBy": {
          "description": "User information of user who declined comp routing request",
          "$ref": "#/definitions/userInfoType"
        },
        "requestedBy": {
          "description": "User who requested the Comp Routing",
          "$ref": "#/definitions/userInfoType"
        },
        "status": {
          "description": "Comp routing status",
          "$ref": "#/definitions/compRoutingStatusType"
        }
      }
    },
    "compRoutingStatusType": {
      "description": "Status which indicates that the Request of Comp Routing was declined",
      "type": "string",
      "enum": [
        "Request",
        "Comp",
        "Declined"
      ]
    },
    "compTransactionCriteria": {
      "description": "Request object to submit a comp transaction to gaming system",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel code.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "trxNo": {
          "description": "Transaction Number for which request is being submitted.",
          "type": "number"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "compTrxAuthorizers": {
      "description": "Response object for fetch comp authorizers operation.",
      "type": "object",
      "properties": {
        "authorizerInfo": {
          "description": "List of authorizers eligible to perform the transfer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/authorizerInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "convertFolioCriteria": {
      "description": "Request to convert folio from a Non Fiscal Folio type to a Fiscal Folio Type. Functionality is used in Italy and is only available when the country mode is set to Italy.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to Convert a Folio from a Non Fiscal Type to a Fiscal Type.",
          "$ref": "#/definitions/convertFolioType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "convertFolioDetails": {
      "description": "Response to the request to Convert Folio. Includes the new converted folio information.",
      "type": "object",
      "properties": {
        "folio": {
          "description": "Converted Folio Information.",
          "$ref": "#/definitions/folioType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "convertFolioType": {
      "description": "Criteria for Converting Folio.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "folioDate": {
          "description": "Date of folio generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioNo": {
          "description": "Folio number of the Folio which is going to be converted.",
          "type": "number"
        },
        "folioTypeName": {
          "description": "Folio Type of the folio(Example: Ricevuta, Fattura).",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel code where this folio was generated at.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "countryNameType": {
      "description": "Code for a country or a nationality.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Used for Character Strings, length 0 to 200.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "createProformaCriteriaType": {
      "description": "Criteria for creating Proforma transactions for a reservation. These transactions will be used by the Opera Proforma Report.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationIdList": {
          "description": "Reservation id for which the Proforma has to be created.",
          "$ref": "#/definitions/reservationIdList"
        },
        "responseInstruction": {
          "description": "Response instructions for the Proforma transactions creation. Possible values are None or Folio Summary. A Summary of the Proforma Folio can be returned, if requested.",
          "$ref": "#/definitions/proformaResponseInstructionType"
        }
      }
    },
    "createdRoutingInstructions": {
      "description": "Response when creating a routing instruction. It may optionally return a list of postings which are eligible for transfer as per the new routing instruction in case of room routing instruction.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "postingsForRoomRouting": {
          "description": "Transaction details along with the transaction code information.",
          "$ref": "#/definitions/postingsInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditBillCriteria": {
      "description": "Request to post a Credit Folio for an existing Folio. Credit Bill Functionality parameter is required.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for creating the Credit Folio. This should include all charges and payments for the Credit Folio.",
          "$ref": "#/definitions/creditBillCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditBillCriteriaType": {
      "description": "Criteria for posting the Credit Bill. Includes charges and payments.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "charges": {
          "description": "Information regarding the charges which have to be posted.",
          "$ref": "#/definitions/chargesCriteriaType"
        },
        "fiscalFolioInfo": {
          "description": "Generate Fiscal Folio Criteria type to be used for fiscal folio generation.",
          "$ref": "#/definitions/fiscalServiceType"
        },
        "fiscalTerminalId": {
          "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
          "type": "string"
        },
        "folioNameValue": {
          "description": "Custom Folio Name Value Informatoin to be saved",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/nameValueHeaderDetailType"
          }
        },
        "fullCredit": {
          "description": "Flag can be used when a Credit Bill is to be created for full set of transactions in the Original Bill.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property where the charges are to be posted.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "incomeAuditDate": {
          "description": "Date of the Audit. This is used when postings are being created using the Income Audit functionality.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "originalFolio": {
          "description": "Original Folio details. This is the folio for which a Credit Bill is required.",
          "$ref": "#/definitions/folioType"
        },
        "payments": {
          "description": "The payment information to be posted.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/paymentCriteriaType"
          }
        },
        "reason": {
          "description": "The Reason Code and Reason Text which is required when a folio is generated. This input is mandatory when the parameter Credit Bill Reason is active for Credit Bills",
          "$ref": "#/definitions/folioReasonType"
        },
        "trxServiceType": {
          "description": "Transaction service type which the Folio is being associated.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "creditCardInfo": {
      "description": "Information on a credit card for the customer.",
      "type": "object",
      "properties": {
        "cardHolderName": {
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberMasked": {
          "type": "string",
          "maxLength": 80,
          "minLength": 10
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "expirationDateString": {
          "description": "Expiration date in string representation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "creditCardWallet": {
      "description": "Response to the credit card wallet request. The wallet contains all the credit cards used in OPERA for a profile/reservation.",
      "type": "object",
      "properties": {
        "creditCardInfoList": {
          "description": "Contains a list of credit cards.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/creditCardInfo"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditLimitOveragePayments": {
      "description": "Request to start the Credit Limit Overage process for the reservations with a folio window balance equal or higher to the credit limit set for the credit card payment method of that folio window.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for submitting the payments request for a reservation to start the Credit Limit Overage process.",
          "$ref": "#/definitions/reservationOveragePaymentsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditLimitOveragePaymentsDetails": {
      "description": "Response for Submit Credit Limit Overage Payments request",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "processId": {
          "description": "Batch process identifier.",
          "$ref": "#/definitions/stringLength40"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditLimitOveragePaymentsInfo": {
      "description": "Response for Fetch Credit Limit Overage Payments request",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationOveragePayments": {
          "description": "List of reservations matching the search criteria.",
          "$ref": "#/definitions/reservationOveragePaymentsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "currencyAmountType": {
      "description": "A monetary value expressed with a currency code.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 3
        }
      }
    },
    "currencyExchangeType": {
      "description": "E-certificate conversion.",
      "type": "string",
      "enum": [
        "Cash",
        "Settlement",
        "Posting",
        "Check",
        "TACommission",
        "Membership",
        "Certificate"
      ]
    },
    "customChargeExemptionDateType": {
      "description": "Contains Custom Charge Exemption information for a day.",
      "type": "object",
      "properties": {
        "date": {
          "description": "Contains Custom Charge Exemption date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "guests": {
          "description": "List of guests.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/customChargeGuestInfoType"
          }
        },
        "quantity": {
          "description": "Contains number of Custom Charge Exemption for a day.",
          "type": "integer"
        }
      }
    },
    "customChargeExemptionDatesType": {
      "description": "Contains List of Custom Charge Exemption information for a day.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customChargeExemptionDateType"
      }
    },
    "customChargeExemptionType": {
      "description": "Contains custom charges exemption information.",
      "type": "object",
      "properties": {
        "customChargeDates": {
          "description": "Contains exemption detail information for each date.",
          "$ref": "#/definitions/customChargeExemptionDatesType"
        },
        "customChargeQuantity": {
          "description": "Contains exemption quantity for the stay. When this value is configured, daily exemption quantities are not permitted.",
          "$ref": "#/definitions/customChargeQuantityType"
        },
        "customChargesExemption": {
          "description": "Contains exemption code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "excludedDates": {
          "description": "Contains list of dates which are not valid for custom charge exemptions.",
          "$ref": "#/definitions/excludedDatesType"
        },
        "percentage": {
          "description": "Exemption Percentage",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "propertyExemption": {
          "description": "Flag specifying if custom charge exemptions is property level or not.",
          "type": "boolean"
        }
      }
    },
    "customChargeExemptionsType": {
      "description": "List of Custom Charge Exemptions.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customChargeExemptionType"
      }
    },
    "customChargeGuestInfoType": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "profileId": {
          "description": "Unique profile identifier.",
          "$ref": "#/definitions/profileId"
        }
      }
    },
    "customChargeQuantityType": {
      "description": "Contains quantity of custom charge exemptions.",
      "type": "object",
      "properties": {
        "available": {
          "description": "Indicates if Custom Charges Exemption information is editable.",
          "type": "boolean"
        },
        "guests": {
          "description": "List of guests.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/customChargeGuestInfoType"
          }
        },
        "quantity": {
          "description": "Contains number of Custom Charge Exemption for a day.",
          "type": "integer"
        }
      }
    },
    "customNameValueConfigType": {
      "description": "Italian Lottery Number.",
      "type": "string",
      "enum": [
        "ItalianFattura",
        "Folio",
        "FinancialTransaction",
        "TaiwanInvoice",
        "SaudiCustomerType",
        "ItalianLotteryNumber"
      ]
    },
    "dateRangeType": {
      "description": "Date Range with Start and End dates.",
      "type": "object",
      "properties": {
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "dateUDFType": {
      "description": "Used to hold user defined field of Date Type.",
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "name": {
          "description": "Used to hold user defined field of Date Type. It is highly recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "dateUDFsType": {
      "description": "Used to hold collection of user defined fields of Date Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dateUDFType"
      }
    },
    "deferredTaxesCriteriaType": {
      "description": "Contains criteria to post the deferred taxes for the given reservation.",
      "type": "object",
      "properties": {
        "cashierId": {
          "description": "Unique cashier identifier.",
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "description": "Property context of the reservations.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "refreshAlways": {
          "description": "Configuring this flag to be TRUE will make the postDeferredTax job to be submitted always.",
          "type": "boolean"
        },
        "reservationId": {
          "description": "Unique identifier of a reservation.",
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "deferredTaxesProcess": {
      "description": "Request for submitting post deferred taxes for a reservation.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Contains criteria to post the deferred taxes for the given reservation.",
          "$ref": "#/definitions/deferredTaxesCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "deferredTaxesProcessDetails": {
      "description": "Response of submitting post deferred taxes for a reservation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "processId": {
          "description": "Job process identifier.",
          "$ref": "#/definitions/stringLength40"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "deleteTransactionCriteriaType": {
      "description": "Criteria type for deletion of transactions.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "description": "Property code where the reservation transaction exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonCode": {
          "description": "The reason code for the deletion.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionList": {
          "description": "The unique transaction number of this transaction.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        }
      }
    },
    "depositCancelRevenueType": {
      "description": "The type to indicate what revenue is to be used for calculating deposit/cancellation amounts.",
      "type": "string",
      "enum": [
        "Rooms",
        "Catering",
        "All"
      ]
    },
    "depositDetailPostingType": {
      "description": "Posting information of the transaction .",
      "type": "object",
      "properties": {
        "approvalCode": {
          "description": "Approval code of the posting.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "approvalStatus": {
          "description": "Approval status of the posting.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "articleCode": {
          "description": "Information regarding the Article(Using Articles Functionality) of this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "canAdjustInvoice": {
          "description": "Indicator to determine if the transaction can be adjusted.",
          "type": "boolean"
        },
        "cashierInfo": {
          "$ref": "#/definitions/cashierInfoType"
        },
        "checkCount": {
          "description": "Check number count for the posting.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "checkNo": {
          "description": "Check number for the posting.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "comments": {
          "description": "User defined comments for the deposit.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "commissionable": {
          "description": "Indicator to determine if the transaction is commissionable.",
          "type": "boolean"
        },
        "compPostingsInfo": {
          "description": "Comp Postings information for the folio.",
          "$ref": "#/definitions/compPostingsType"
        },
        "compRedemptionCode": {
          "description": "Comp redemption code assiciated to the transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "creditAmount": {
          "description": "The amount posted as credit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "currencyExchangeInfo": {
          "description": "Currency exchange information if the posting was made using a currency different from the default currency.",
          "$ref": "#/definitions/transactionCurrencyExchangeInfoType"
        },
        "customCharge": {
          "description": "Flag to identify a Custom Charge.",
          "type": "boolean"
        },
        "debitAmount": {
          "description": "The amount posted as debit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "depositPolicy": {
          "description": "Deposit Policy information if this payment was applied to a deposit policy.",
          "$ref": "#/definitions/resDepositPolicyType"
        },
        "depositTransactionId": {
          "description": "Tax Service Accounting Codes used.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "exchange": {
          "description": "Available when the Fetch Folio Search Type requests the amounts to be converted to a currency different from the Resort currency.",
          "$ref": "#/definitions/exchangeAmounts"
        },
        "fbaCertificate": {
          "description": "Flag indicates that the posting is Flexible Benefits Awards Certificate",
          "type": "boolean"
        },
        "financialTransactionIdList": {
          "description": "Collection of unique identifiers of the financial transactions.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "folioNo": {
          "description": "The Folio number of this posting, if there was a Folio already generated.",
          "type": "number"
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "groupTypeInfo": {
          "description": "Information related to transaction grouping.",
          "$ref": "#/definitions/postingGroupType"
        },
        "internalFolioWindowID": {
          "description": "Internal Unique id for the Folio Window.",
          "type": "string"
        },
        "miscellaneousInfo": {
          "type": "object",
          "properties": {
            "createDateTime": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "paidOut": {
              "type": "boolean"
            }
          }
        },
        "paidOut": {
          "description": "Indicates if this transaction is a paid out transaction.",
          "type": "boolean"
        },
        "paymentMethod": {
          "description": "Defined method of payment for this transaction.",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "postedAmount": {
          "description": "Actual currency amount posted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingDate": {
          "description": "Date and time of posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "price": {
          "description": "Indicates the unit price of the consumption.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "quantity": {
          "description": "Indicates Quantity.",
          "type": "number"
        },
        "rateCode": {
          "description": "Rate code associated to this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "receiptNo": {
          "description": "The receipt number of the transaction, if there is a receipt generated.",
          "type": "number"
        },
        "receiptSummaryInfo": {
          "description": "Information regarding receipt of the posted deposit",
          "$ref": "#/definitions/receiptSummaryType"
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "referenceTransactionNo": {
          "description": "Generate transaction number for the Posting.",
          "type": "number"
        },
        "remark": {
          "description": "Posting remarks.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "revenueDate": {
          "description": "The date on which the transaction has its revenue effect.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reversePaymentTransactionNo": {
          "description": "Reverse payment transaction unique identifier.",
          "type": "number"
        },
        "roundingDifferenceTrx": {
          "description": "Indicator to determine if the posting was a posting for the Rounding Difference.",
          "type": "boolean"
        },
        "serviceRecovery": {
          "description": "Flag to indicates service recovery",
          "type": "boolean"
        },
        "stampDuty": {
          "description": "Flag to identify a Stamp Duty Transaction.",
          "type": "boolean"
        },
        "subPostings": {
          "description": "SubPostings for the posting.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "taxInvoiceNo": {
          "description": "Tax invoice number generated by payment tax.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionAmount": {
          "description": "The amount of the transaction.",
          "type": "number"
        },
        "transactionCode": {
          "description": "Billing Transaction Code.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionDescription": {
          "description": "Billing Transaction Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        },
        "transactionType": {
          "description": "This is the transaction type which says whether it is a Consumption(C), Payment (FC) or Package (PK) and it is inherited from transaction code.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "transferred": {
          "description": "Indicates if the deposit was transferred either to a reservation or from a reservation.",
          "type": "boolean"
        },
        "updateInfo": {
          "description": "Update info associated to this transaction.",
          "type": "object",
          "properties": {
            "updateBy": {
              "type": "string"
            },
            "updateDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        }
      }
    },
    "depositDetailPostingsType": {
      "description": "List of Deposit Postings with details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/depositDetailPostingType"
      }
    },
    "depositFolioCriteria": {
      "description": "Request to create a Deposit Folio for a reservation.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for creating a Deposit Folio. Deposit Folio functionality should be active.",
          "$ref": "#/definitions/depositFolioCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositFolioCriteriaType": {
      "description": "The Deposit folio posting and payments information.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "charges": {
          "description": "Information regarding the charges which have to be posted.",
          "$ref": "#/definitions/chargesCriteriaType"
        },
        "depositPolicyId": {
          "description": "The deposit policy ID to which the Deposit Folio is being associated.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "fiscalFolioInfo": {
          "description": "Generate Fiscal Folio Criteria type to be used for fiscal folio generation.",
          "$ref": "#/definitions/fiscalServiceType"
        },
        "fiscalTerminalId": {
          "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
          "type": "string"
        },
        "folioNameValue": {
          "description": "Custom Folio Name Value Informatoin to be saved",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/nameValueHeaderDetailType"
          }
        },
        "guaranteeCode": {
          "description": "New guarantee code associated with reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property where the charges are to be posted.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "incomeAuditDate": {
          "description": "Date of the Audit. This is used when postings are being created using the Income Audit functionality.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "manualFolioNo": {
          "description": "Manual Folio Number used for deposit folio.This applies to certain country requirements.",
          "type": "integer"
        },
        "overrideInventoryCheck": {
          "description": "Flag to indicate if the Inventory check has to be overridden when the guarantee code of the reservation is changed.",
          "type": "boolean"
        },
        "paymentMethod": {
          "description": "Payment method to update the reservation with, if the payment did not match.",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "payments": {
          "description": "The payment information to be posted.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/paymentCriteriaType"
          }
        },
        "profileId": {
          "description": "Profile Id of the Payee for this Deposit Folio.",
          "$ref": "#/definitions/profileId"
        },
        "reservationId": {
          "description": "Reservation for which the Deposit Folio is required.",
          "$ref": "#/definitions/reservationId"
        },
        "simpleFolio": {
          "description": "This flag signifies that generated Folio is Normal or Simple Folio. Certain countries of the World mandate a simple folio when the invoice amount is less than defined threshold.",
          "type": "boolean"
        },
        "trxServiceType": {
          "description": "Transaction service type which the Folio is being associated.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "depositFolioTransactionDetails": {
      "description": "Response for the fetch transaction details request. Detail information regarding the folio transaction will be returned",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactions": {
          "description": "The details regarding the transaction(Posting).",
          "$ref": "#/definitions/depositDetailPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositFolioValidateCriteria": {
      "description": "Request to validate a Deposit Folio for a reservation.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for validating if a Deposit Folio can be created for a reservation. Deposit Folio functionality should be active.",
          "$ref": "#/definitions/depositFolioValidateCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositFolioValidateCriteriaType": {
      "description": "Criteria for posting a Deposit Folio.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "depositPolicyId": {
          "description": "The deposit policy ID for which the Deposit Folio is being created.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Property where the reservation exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "profileId": {
          "description": "Profile Id of the Payee for this Deposit Folio.",
          "$ref": "#/definitions/profileId"
        },
        "reservationId": {
          "description": "Reservation for which the Deposit Folio is required.",
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "depositMaturityDetails": {
      "description": "Response object for deposit maturity information type.",
      "type": "object",
      "properties": {
        "depositMaturityInfo": {
          "description": "Deposit Maturity Information type .",
          "$ref": "#/definitions/depositMaturityInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositMaturityInfoType": {
      "description": "Deposit maturity information type.",
      "type": "object",
      "properties": {
        "depositMaturityType": {
          "description": "The Reservation's Deposit Status Type. When preference is set to Check In, the deposit is transferred when the guest checks in. When the preference is set to Last Night Stay,then the deposit is transferred during the last nights night audit. For example, if the departure date for a reservation is July 14th, then the deposit would be posted during the night audit for July 13th.",
          "$ref": "#/definitions/depositMaturityType"
        },
        "totalAmountDue": {
          "description": "Total Deposit Amount which is due for this reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalAmountTransferrable": {
          "description": "Total Deposit Amount that can be transferred to another Reservation.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "depositMaturityType": {
      "description": "The deposit is transferred when the guest checks in.",
      "type": "string",
      "enum": [
        "CheckIn",
        "LastNightStay",
        "LastDayAdvanceDeposit",
        "None"
      ]
    },
    "depositPayment": {
      "description": "Request to post a deposit payment to a reservation.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for the deposit payment information to be posted.",
          "$ref": "#/definitions/depositPaymentCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositPaymentCriteriaType": {
      "description": "Criteria for posting a deposit payment to a reservation.",
      "type": "object",
      "properties": {
        "action": {
          "description": "Payment action to know from where the payment has been made.",
          "$ref": "#/definitions/postPaymentActionType"
        },
        "applyCCSurcharge": {
          "description": "Flag to indicate if Credit Card Surcharge has to be applied to this payment, when the functionality for Credit Card Surcharge is available.",
          "type": "boolean"
        },
        "applyCurrencyTaxes": {
          "description": "Flag to indidcate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.",
          "type": "boolean"
        },
        "associatedTrxNo": {
          "description": "Transaction number of the payment being deposited.",
          "type": "number"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "changeDueAmount": {
          "description": "Amount of change given to guest.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "comments": {
          "description": "User Defined Comments. Used for Deposit Payment postings.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "compRedemptions": {
          "description": "Comp redemption information used to post as payment.",
          "$ref": "#/definitions/compRedemptionsType"
        },
        "creditablePaymentTaxes": {
          "description": "Used for Thailand Tax Functionality.The payment tax records that can be used for a Credit Note for this reservation.",
          "$ref": "#/definitions/paymentTaxesType"
        },
        "depositPolicyId": {
          "description": "The deposit policy ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "guaranteeCode": {
          "description": "New guarantee code associated with reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "manualPaymentTaxInfo": {
          "description": "The Payment Tax information for Thailand Tax functionality. The invoice number and the date will be used.",
          "$ref": "#/definitions/paymentTaxType"
        },
        "overrideARCreditLimit": {
          "description": "Flag to override account receivable credit limit",
          "type": "boolean"
        },
        "overrideInsufficientCC": {
          "description": "Flag to allow a rebate by Credit Card",
          "type": "boolean"
        },
        "overrideInventoryCheck": {
          "description": "Flag to indicate if the Inventory check has to be overridden when the guarantee code of the reservation is changed.",
          "type": "boolean"
        },
        "paymentMethod": {
          "description": "Payment method used by the payee.",
          "$ref": "#/definitions/cashieringPaymentMethodType"
        },
        "postingAmount": {
          "description": "Amount to post to the folio.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingReference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "postingRemark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "prepaidCardRedemptions": {
          "description": "Prepaid Card redemption information used to post as payment.",
          "$ref": "#/definitions/prepaidCardRedemptionsType"
        },
        "profileId": {
          "description": "The Payee ID for the deposit. Used for some country requirements.",
          "$ref": "#/definitions/profileId"
        },
        "receiptType": {
          "description": "Receipt Type.",
          "$ref": "#/definitions/receiptType"
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        },
        "terminalId": {
          "description": "Applicable for chip and pin. The ID of the terminal where the chip and pin device is connected and where the payment is made.",
          "type": "string"
        },
        "updateReservationPaymentMethod": {
          "description": "Flag to indicate if the payment method on the reservation, for Window 1, is to be updated with the payment method used for this deposit.",
          "type": "boolean"
        },
        "vATOffset": {
          "description": "Flag to indidcate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.",
          "type": "boolean"
        }
      }
    },
    "depositPolicyType": {
      "description": "Used to define the deposit policy, guarantees policy, and/or accepted forms of payment.",
      "type": "object",
      "properties": {
        "amountPercent": {
          "description": "Payment expressed as a fixed amount, or a percentage of/or room nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "deadline": {
          "description": "Payment deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "depositReceiptNo": {
          "description": "Receipt number associated with the deposit policy",
          "type": "integer"
        },
        "depositReqReversed": {
          "description": "Flag to indicate if deposit policy is reversed",
          "type": "boolean"
        },
        "description": {
          "description": "Text description of the Payment in a given language.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the deposit policy.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        },
        "policyCode": {
          "description": "Deposit Policy Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction Date associated with the deposit policy",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "typeOfCharges": {
          "description": "Defines if the deposit amount is calculated based on Room Charges, Catering Charges or both",
          "$ref": "#/definitions/depositCancelRevenueType"
        }
      }
    },
    "depositPostingType": {
      "description": "Posting details.",
      "type": "object",
      "properties": {
        "approvalCode": {
          "description": "Approval code of the posting.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "approvalStatus": {
          "description": "Approval status of the posting.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "articleCode": {
          "description": "Information regarding the Article(Using Articles Functionality) of this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "canAdjustInvoice": {
          "description": "Indicator to determine if the transaction can be adjusted.",
          "type": "boolean"
        },
        "cashierInfo": {
          "$ref": "#/definitions/cashierInfoType"
        },
        "checkCount": {
          "description": "Check number count for the posting.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "checkNo": {
          "description": "Check number for the posting.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "comments": {
          "description": "User defined comments for the deposit.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "commissionable": {
          "description": "Indicator to determine if the transaction is commissionable.",
          "type": "boolean"
        },
        "compPostingsInfo": {
          "description": "Comp Postings information for the folio.",
          "$ref": "#/definitions/compPostingsType"
        },
        "compRedemptionCode": {
          "description": "Comp redemption code assiciated to the transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "creditAmount": {
          "description": "The amount posted as credit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "customCharge": {
          "description": "Flag to identify a Custom Charge.",
          "type": "boolean"
        },
        "debitAmount": {
          "description": "The amount posted as debit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "depositPolicy": {
          "description": "Deposit Policy information if this payment was applied to a deposit policy.",
          "$ref": "#/definitions/resDepositPolicyType"
        },
        "depositTransactionId": {
          "description": "Tax Service Accounting Codes used.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "exchange": {
          "description": "Available when the Fetch Folio Search Type requests the amounts to be converted to a currency different from the Resort currency.",
          "$ref": "#/definitions/exchangeAmounts"
        },
        "fbaCertificate": {
          "description": "Flag indicates that the posting is Flexible Benefits Awards Certificate",
          "type": "boolean"
        },
        "financialTransactionIdList": {
          "description": "Collection of unique identifiers of the financial transactions.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "folioNo": {
          "description": "The Folio number of this posting, if there was a Folio already generated.",
          "type": "number"
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "groupTypeInfo": {
          "description": "Information related to transaction grouping.",
          "$ref": "#/definitions/postingGroupType"
        },
        "paidOut": {
          "description": "Indicates if this transaction is a paid out transaction.",
          "type": "boolean"
        },
        "paymentMethod": {
          "description": "Defined method of payment for this transaction.",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "postedAmount": {
          "description": "Actual currency amount posted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingDate": {
          "description": "Date and time of posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "price": {
          "description": "Indicates the unit price of the consumption.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "quantity": {
          "description": "Indicates Quantity.",
          "type": "number"
        },
        "rateCode": {
          "description": "Rate code associated to this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "receiptNo": {
          "description": "The receipt number of the transaction, if there is a receipt generated.",
          "type": "number"
        },
        "receiptSummaryInfo": {
          "description": "Information regarding receipt of the posted deposit",
          "$ref": "#/definitions/receiptSummaryType"
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "referenceTransactionNo": {
          "description": "Generate transaction number for the Posting.",
          "type": "number"
        },
        "remark": {
          "description": "Posting remarks.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "revenueDate": {
          "description": "The date on which the transaction has its revenue effect.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reversePaymentTransactionNo": {
          "description": "Reverse payment transaction unique identifier.",
          "type": "number"
        },
        "roundingDifferenceTrx": {
          "description": "Indicator to determine if the posting was a posting for the Rounding Difference.",
          "type": "boolean"
        },
        "serviceRecovery": {
          "description": "Flag to indicates service recovery",
          "type": "boolean"
        },
        "stampDuty": {
          "description": "Flag to identify a Stamp Duty Transaction.",
          "type": "boolean"
        },
        "taxInvoiceNo": {
          "description": "Tax invoice number generated by payment tax.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionAmount": {
          "description": "The amount of the transaction.",
          "type": "number"
        },
        "transactionCode": {
          "description": "Billing Transaction Code.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionDescription": {
          "description": "Billing Transaction Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        },
        "transactionType": {
          "description": "This is the transaction type which says whether it is a Consumption(C), Payment (FC) or Package (PK) and it is inherited from transaction code.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "transferred": {
          "description": "Indicates if the deposit was transferred either to a reservation or from a reservation.",
          "type": "boolean"
        },
        "updateInfo": {
          "description": "Update info associated to this transaction.",
          "type": "object",
          "properties": {
            "updateBy": {
              "type": "string"
            },
            "updateDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        }
      }
    },
    "depositPostingsType": {
      "description": "A List of Deposit Payments.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/depositPostingType"
      }
    },
    "depositProcessType": {
      "description": "The Deposit is transferred to an internal account for returned deposits to be handled by the property. Users can select to keep all (not exceeding total), a portion of, or none of the deposit.",
      "type": "string",
      "enum": [
        "Keep",
        "Return",
        "Mature"
      ]
    },
    "depositRefundEligibleCheck": {
      "description": "Response for the refund deposit payment.",
      "type": "object",
      "properties": {
        "isDepositRefundValid": {
          "description": "Is reservation valid for deposit refund.",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositToGuestFolio": {
      "description": "Request to post an existing deposit on a reservation to the Guest Folio for No Show or Canceled Reservations. Deposits remain in the deposit ledger until Checkin/Checkout. In the case of No Show or Canceled reservations they remain in the deposit ledger until this request is done.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to move the deposit from the Deposit Ledger to the Guest Folio(Ledger).",
          "$ref": "#/definitions/postDepositToGuestFolioType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositTransactionType": {
      "description": "Deposit transaction of a reservation.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property code where the reservation transaction exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "originalAmount": {
          "description": "The original deposited amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "reservationId": {
          "description": "Reservation id of the reservation",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "splitAmount": {
          "description": "The amount by which the deposit transaction has to be split.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionNo": {
          "description": "The unique transaction number associated with transaction group.",
          "type": "number"
        }
      }
    },
    "depositTransferCriteria": {
      "description": "Request to transfer a deposit amount from one reservation to one or more reservations.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for the deposit transfer between reservations.",
          "$ref": "#/definitions/depositTransferCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositTransferCriteriaType": {
      "description": "Criteria type for transfer of deposit amount from one reservation to one or more reservation(s).",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "comments": {
          "description": "User Comments for the transfer operation.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property where the reservation exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationId": {
          "description": "The unique Id of the source reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "toReservations": {
          "description": "The reservation id and the amount to transfer detail.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/depositTransferToReservationType"
          }
        }
      }
    },
    "depositTransferToReservationType": {
      "description": "Deposit Transfer detail for the target reservation.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "reservationId": {
          "description": "The unique ID of the reservation to which the deposit has to be transferred.",
          "$ref": "#/definitions/reservationId"
        },
        "transferAmount": {
          "description": "The deposit amount which has to be transferred to this reservation.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "depositType": {
      "description": "Enumeration Type of Deposit.",
      "type": "string",
      "enum": [
        "Folios",
        "Receipts",
        "None"
      ]
    },
    "depositedFolioValidate": {
      "description": "Information regarding the Deposit Policy if a Deposit Folio is going to be created for this policy.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "policyInfoList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/resDepositPolicyType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositedPayment": {
      "description": "Response for the post deposit payment request.",
      "type": "object",
      "properties": {
        "deposits": {
          "description": "Deposit payment information of the payment which was posted.",
          "$ref": "#/definitions/depositPostingsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "detachPolicyApplyCriteria": {
      "description": "Request to detach a deposit payment from a Deposit Policy on a reservation.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for unlinking a Deposit Policy from an existing deposit payment.",
          "$ref": "#/definitions/policyApplyCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "detailPostingType": {
      "description": "Posting information of the transaction.",
      "type": "object",
      "properties": {
        "aRInfo": {
          "description": "Details of the AR account if the posting was part of an AR invoice.",
          "$ref": "#/definitions/transactionARInfoType"
        },
        "adjustmentInfo": {
          "description": "Details regarding the adjustment made if the current transaction was created as a result of an adjustment.",
          "$ref": "#/definitions/transactionAdjustmentInfoType"
        },
        "approvalCode": {
          "description": "Approval code of the posting.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "approvalStatus": {
          "description": "Approval status of the posting.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "articleCode": {
          "description": "Information regarding the Article(Using Articles Functionality) of this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "canAdjustInvoice": {
          "description": "Indicator to determine if the transaction can be adjusted.",
          "type": "boolean"
        },
        "cashierInfo": {
          "$ref": "#/definitions/cashierInfoType"
        },
        "checkCount": {
          "description": "Check number count for the posting.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "checkNo": {
          "description": "Check number for the posting.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "commissionable": {
          "description": "Indicator to determine if the transaction is commissionable.",
          "type": "boolean"
        },
        "compPostingsInfo": {
          "description": "Comp Postings information for the folio.",
          "$ref": "#/definitions/compPostingsType"
        },
        "compRedemptionCode": {
          "description": "Comp redemption code assiciated to the transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "creditAmount": {
          "description": "The amount posted as credit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "currencyExchangeInfo": {
          "description": "Currency exchange information if the posting was made using a currency different from the default currency.",
          "$ref": "#/definitions/transactionCurrencyExchangeInfoType"
        },
        "customCharge": {
          "description": "Flag to identify a Custom Charge.",
          "type": "boolean"
        },
        "debitAmount": {
          "description": "The amount posted as debit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "deferredTax": {
          "description": "Flag to indicate if the Posting is a deferred tax record. Set to true only when the posting is a deferred tax record. Set to false only when the posting is not a deferred tax record.",
          "type": "boolean"
        },
        "depositTransactionId": {
          "description": "Tax Service Accounting Codes used.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "exchange": {
          "description": "Available when the Fetch Folio Search Type requests the amounts to be converted to a currency different from the Resort currency.",
          "$ref": "#/definitions/exchangeAmounts"
        },
        "exchangeInformation": {
          "description": "Exchange Information - text presentation of the exchange operation including formula, buy rate, etc.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fbaCertificate": {
          "description": "Flag indicates that the posting is Flexible Benefits Awards Certificate",
          "type": "boolean"
        },
        "financialTransactionIdList": {
          "description": "Collection of unique identifiers of the financial transactions.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "folioNo": {
          "description": "The Folio number of this posting, if there was a Folio already generated.",
          "type": "number"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "groupTypeInfo": {
          "description": "Information related to transaction grouping.",
          "$ref": "#/definitions/postingGroupType"
        },
        "guestInfo": {
          "description": "Details of the Guest information where this transaction was posted to.",
          "type": "object",
          "properties": {
            "confirmationNo": {
              "description": "Confirmation number associated with the transaction.",
              "type": "string",
              "maxLength": 50,
              "minLength": 0
            },
            "guestName": {
              "description": "Guest name associated with the transaction.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "profileId": {
              "description": "Profile Id corresponding to the guest name. It is sometimes possible to have a guest name but the profile id is null.",
              "$ref": "#/definitions/profileId"
            },
            "reservationId": {
              "description": "Reservation Id corresponding to the guest name. It is sometimes possible to have a room number but the reservation id is null.",
              "$ref": "#/definitions/reservationId"
            },
            "roomId": {
              "description": "Room number associated with the transaction.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            }
          }
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "internalFolioWindowID": {
          "description": "Internal Unique id for the Folio Window.",
          "type": "string"
        },
        "miscellaneousInfo": {
          "type": "object",
          "properties": {
            "covers": {
              "type": "string",
              "maxLength": 10,
              "minLength": 0
            },
            "createDateTime": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "paidOut": {
          "description": "Indicates if this transaction is a paid out transaction.",
          "type": "boolean"
        },
        "payeeInfo": {
          "description": "Payee information for the folio.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "paymentMethod": {
          "description": "Defined method of payment for this transaction.",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "postedAmount": {
          "description": "Actual currency amount posted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingDate": {
          "description": "Date and time of posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "price": {
          "description": "Indicates the unit price of the consumption.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "quantity": {
          "description": "Indicates Quantity.",
          "type": "number"
        },
        "rateCode": {
          "description": "Rate code associated to this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "receiptNo": {
          "description": "The receipt number of the transaction, if there is a receipt generated.",
          "type": "number"
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "referencePackageTransactionNo": {
          "description": "Package transaction number for the Posting.",
          "type": "number"
        },
        "referenceTransactionNo": {
          "description": "Generate transaction number for the Posting.",
          "type": "number"
        },
        "remark": {
          "description": "Posting remarks.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "revenueDate": {
          "description": "The date on which the transaction has its revenue effect.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reversePaymentTransactionNo": {
          "description": "Reverse payment transaction unique identifier.",
          "type": "number"
        },
        "revisionNo": {
          "type": "number"
        },
        "roundingDifferenceTrx": {
          "description": "Indicator to determine if the posting was a posting for the Rounding Difference.",
          "type": "boolean"
        },
        "serviceRecovery": {
          "description": "Flag to indicates service recovery",
          "type": "boolean"
        },
        "stampDuty": {
          "description": "Flag to identify a Stamp Duty Transaction.",
          "type": "boolean"
        },
        "subPostings": {
          "description": "SubPostings for the posting.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "targetHotel": {
          "description": "Cross property posting hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "taxInvoiceNo": {
          "description": "Tax invoice number generated by payment tax.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionAmount": {
          "description": "The amount of the transaction.",
          "type": "number"
        },
        "transactionCode": {
          "description": "Billing Transaction Code.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionDescription": {
          "description": "Billing Transaction Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        },
        "transactionType": {
          "description": "This is the transaction type which says whether it is a Consumption(C), Payment (FC) or Package (PK) and it is inherited from transaction code.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "updateInfo": {
          "description": "Update info associated to this transaction.",
          "type": "object",
          "properties": {
            "updateBy": {
              "type": "string"
            },
            "updateDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        }
      }
    },
    "detailPostingsType": {
      "description": "Details of the transaction(Posting).",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/detailPostingType"
      }
    },
    "downgradeType": {
      "description": "Do not downgrade membership when the next downgrade process runs. When the downgrade process runs, the membership will be automatically set to Grace.",
      "type": "string",
      "enum": [
        "Grace",
        "Never",
        "Period"
      ]
    },
    "earlyDeparture": {
      "description": "Request to change a reservation to an Early Departure. As part of this process the reservation will be changed to a Due Out status with the departure date being the current business date. Only Inhouse reservations can be changed to Early Departure. Before changing the reservation to early departure, rate restrictions on the rate code used and any allowances consumed by the guest for today will be checked. If there is a penalty applicable this can be posted to the reservation.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for changing a reservation to an early departure. As part of the criteria, flags can be sent to ignore any check on rate code restrictions, Tiered rate changes, post allowance consumed to guest account and post the early departure penalty if applicable, can be used to indicate the user preferences.",
          "$ref": "#/definitions/earlyDepartureCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "earlyDepartureCriteriaType": {
      "description": "Criteria type for verifying or changing an Early Departure reservation.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ignoreCheckOnTieredRate": {
          "description": "Indicates if check has to be done for Rate Tiers.",
          "type": "boolean"
        },
        "ignoreRateRestriction": {
          "description": "Indicates if Rate Restriction check should be overridden.",
          "type": "boolean"
        },
        "postConsumedAllowanceToGuest": {
          "description": "Indicates if any allowance consumed by the guest for today can be posted to the Guest Folio. If this cannot be done then the Early Departure cannot proceed.",
          "type": "boolean"
        },
        "postEarlyDeparturePenalty": {
          "description": "Indicates if the early departure penalty should be posted .",
          "type": "boolean"
        },
        "reservationIdList": {
          "description": "Reservation id for which the early departure is to be done.",
          "$ref": "#/definitions/reservationIdList"
        }
      }
    },
    "earlyDepartureInfo": {
      "description": "Response for Early departure verification. Contains information regarding early departure penalty amount if applicable and any errors or warnings as to why the early departure cannot be done. Possible error codes are: FOF00152: An early departure could result in a change to the room rate, due to the reduced length of stay. FOF00153: Exchange Rates not setup for {currency code} . FOF00155: The partially consumed package(s) will be charged to the guest account. FOF00156: There is a Rate Code Restriction for {restriction information}. FOF00157: The reservation status is not valid for an early departure. FOF00158: Early Departure is not required as the reservation is already in Due Out status.",
      "type": "object",
      "properties": {
        "earlyDepartureDetails": {
          "description": "Information for the Early Departure. Has details regarding the Early Departure penalty if applicable for the property and reservation.",
          "$ref": "#/definitions/earlyDepartureInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "earlyDepartureInfoType": {
      "description": "Information regarding Early Departure for a reservation. Contains information regarding penalty, if any.",
      "type": "object",
      "properties": {
        "penaltyAmount": {
          "description": "Amount that can be charged as Early Departure Penalty",
          "$ref": "#/definitions/currencyAmountType"
        },
        "penaltyDescription": {
          "description": "Description of the Early Departure Penalty calculation rule.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "emailInfoType": {
      "description": "Information on an email for the customer.",
      "type": "object",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "emailType": {
      "description": "Information on an email for the customer.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "errorInstance": {
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "title": "Error Instance Details",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "errorType": {
      "description": "Standard way to indicate that an error occurred during the processing of an OpenTravel message. If the message successfully processes, but there are business errors, those errors should be passed in the warning element.",
      "type": "object",
      "properties": {
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings. Refer to OpenTravel Code List Error Codes (ERR).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nodeList": {
          "description": "An XPath expression that selects all the nodes whose data caused this error. Further, this expression should have an additional contraint which contains the data of the node. This will provide the offending data back to systems that cannot maintain the original message.",
          "type": "string"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string"
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the OTA_ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string"
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string"
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\". Refer to OpenTravel Code List Error Warning Type (EWT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "errorsType": {
      "description": "An error that occurred during the processing of a message.",
      "type": "array",
      "maxItems": 99,
      "items": {
        "$ref": "#/definitions/errorType"
      }
    },
    "exceptionDetailType": {
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "title": "Error Detail",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "exchangeAmounts": {
      "description": "Converted values for the Exchange Currency requested.",
      "type": "object",
      "properties": {
        "creditAmount": {
          "description": "The converted Guest Ledger Credit Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitAmount": {
          "description": "The converted Guest Ledger Debit Amount.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "exchangeRateCalculationTaxType": {
      "description": "Detailed information about exchange rate calculation service tax.",
      "type": "object",
      "properties": {
        "baseAmount": {
          "description": "Based Amount in local currency to be added on top of computed service tax based on Percentage.",
          "type": "number"
        },
        "exchangeRateTransactionGenerateTaxes": {
          "description": "Collection of exchange rate calculation tax information based on Transaction Code Generate.",
          "$ref": "#/definitions/exchangeRateTransactionGenerateTaxesType"
        },
        "maxServiceTax": {
          "description": "Maximum service tax in local currency to be charged.",
          "type": "number"
        },
        "minServiceTax": {
          "description": "Minimum service tax in local currency to be charged",
          "type": "number"
        },
        "percentage": {
          "description": "Percentage to be multiplied to Percentage Applied On to get the service tax.",
          "type": "number"
        },
        "percentageAppliedOn": {
          "description": "Local currency amount the configured exchange service tax Percentage to be computed against.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "exchangeRateCalculationType": {
      "description": "Currency conversion calculation type.",
      "type": "object",
      "properties": {
        "buyCommission": {
          "description": "Buy commission for the foreign currency.",
          "type": "number"
        },
        "calculatedAmount": {
          "description": "Pure calculated amount.",
          "type": "number"
        },
        "date": {
          "description": "Date on which the exchange is to take place.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "euroAmount": {
          "description": "Amount in Euro for the exchange.",
          "type": "number"
        },
        "euroExchangeRate": {
          "description": "Exchange rate against Euro.",
          "type": "number"
        },
        "exchangeDate": {
          "description": "Date on which exchange rate was obtained.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "exchangeInformation": {
          "description": "Exchange Information - text presentation of the exchange operation including formula, buy rate, etc.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "exchangeRate": {
          "description": "Exchange Rate.",
          "type": "number"
        },
        "exchangeRateCalculationTax": {
          "description": "Detailed information about exchange rate calculation service tax.",
          "$ref": "#/definitions/exchangeRateCalculationTaxType"
        },
        "exchangeReference": {
          "description": "Exchange references.",
          "type": "string"
        },
        "exchangeType": {
          "description": "Type for exchange calculation.",
          "$ref": "#/definitions/currencyExchangeType"
        },
        "fromCurrencyAmount": {
          "description": "Amount and code of currency that is being converted from.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "hotelId": {
          "description": "Property code where the currency is being converted.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roundingAmount": {
          "description": "Amount by which the exchange was rounded.",
          "type": "number"
        },
        "sell": {
          "description": "Buy or Sell for calculation.",
          "type": "boolean"
        },
        "serviceTax": {
          "description": "Tax amount which is applicable for this transaction, when using the Exchange Service Tax functionality.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "toCurrencyAmount": {
          "description": "Amount and code of currency that is being converted to.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "exchangeRateInfoType": {
      "description": "Exchange rate information of a currency.",
      "type": "object",
      "properties": {
        "currencyCode": {
          "description": "Description of currency Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "exchangeRate": {
          "description": "Description of exchange rate.",
          "type": "number"
        }
      }
    },
    "exchangeRateTransactionGenerateTaxType": {
      "description": "Tax information based on Transaction Code Generate.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Transaction Code Generate description.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Transaction Code Generate description.",
          "type": "string"
        },
        "taxAmount": {
          "description": "Tax amount based on Transaction Code Generate configuration.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "exchangeRateTransactionGenerateTaxesType": {
      "description": "Exchange rate calculation tax information based on Transaction Code Generate.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/exchangeRateTransactionGenerateTaxType"
      }
    },
    "excludedDateType": {
      "description": "Specifies all the enabled dates.",
      "type": "object",
      "properties": {
        "date": {
          "description": "Contains exclusion date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reason": {
          "description": "Contains reason for exclusion.",
          "$ref": "#/definitions/exclusionReasonType"
        }
      }
    },
    "excludedDatesType": {
      "description": "Contains list of dates which are valid for custom charge exemptions.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/excludedDateType"
      }
    },
    "exclusionReasonType": {
      "description": "Custom Charge has already been Processed for this date within the reservation stay.",
      "type": "string",
      "enum": [
        "NotConfigured",
        "CustomChargeProcessed"
      ]
    },
    "extendedCashierLock": {
      "description": "This response will indicate whether or not the extension was successful. This operation may return errors when the lock being requested to be extended no longer exists. This can happen when the lock has already expired and cleaned up.",
      "type": "object",
      "properties": {
        "cashierLock": {
          "description": "This contains the updated lock information for the cashier. The time to live will contain the updated lifetime of the lock.",
          "$ref": "#/definitions/operaRecordLock"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fBAStatusType": {
      "description": "Flexible benefit award has been reimbursed.",
      "type": "string",
      "enum": [
        "Ordered",
        "Attached",
        "Posted",
        "Settled",
        "Reimbursed"
      ]
    },
    "facilityCodeType": {
      "description": "Facility Housekeeping Code, its description and quantity.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Facility code value.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Facility Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "quantity": {
          "description": "Signifies the quantity.",
          "type": "integer"
        }
      }
    },
    "facilityCodesType": {
      "description": "List of the facility codes.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/facilityCodeType"
      }
    },
    "facilityTaskType": {
      "description": "Information regarding facility task on a reservation.",
      "type": "object",
      "properties": {
        "date": {
          "description": "The Date on which the task is applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "supplies": {
          "description": "Supplies associated with the task.",
          "$ref": "#/definitions/facilityCodesType"
        },
        "task": {
          "description": "The Task Code.",
          "$ref": "#/definitions/housekeepingTaskCodeType"
        }
      }
    },
    "fbaReimbursementCriteria": {
      "description": "PostFBA Reimbursement/Settlement operation posts reimbursement/settlement against the selected certificate records.",
      "type": "object",
      "properties": {
        "certificateReconciliationTypes": {
          "description": "Information regarding reconciliation certificate posting.",
          "$ref": "#/definitions/certificateReconciliationTypes"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "finalPostings": {
      "description": "Request to apply any final charges or payments to a reservation prior to checkout. This operation should be called prior to the guest settlement which would then reflect the balance the guest has to pay.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservation": {
          "description": "Check out reservation request.",
          "$ref": "#/definitions/checkoutReservationType"
        },
        "responseInstruction": {
          "description": "This flag will allow the user to control the response performance. Response will return folio information based on the this flag. Possible values are None, Summary, Details",
          "$ref": "#/definitions/responseInstructionType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "financialPostings": {
      "description": "Response for fetching the Posting Journal.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "journalPostings": {
          "description": "Journal entries of the response.",
          "$ref": "#/definitions/financialPostingsType"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "financialPostingsNetVat": {
      "description": "Response for fetching the Posting Journal with Net and Vat breakdown.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "financialPostings": {
          "description": "Journal entries of the response.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/financialPostingsNetVatType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "financialPostingsNetVatType": {
      "description": "Financial Postings with their Net and Vat breakup",
      "type": "object",
      "properties": {
        "posting": {
          "description": "Details of the primary posting.",
          "$ref": "#/definitions/detailPostingType"
        },
        "postingBreakdown": {
          "description": "Details of posting's breakdown.",
          "$ref": "#/definitions/postingBreakdownType"
        }
      }
    },
    "financialPostingsType": {
      "description": "Collection of Reservations and their information.",
      "type": "object",
      "properties": {
        "overallTotal": {
          "description": "Indicates the Total Sum of Journal entries in a page.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postings": {
          "$ref": "#/definitions/detailPostingsType"
        },
        "totalCredit": {
          "description": "Indicates the Total Sum of Journal Credits.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalDebit": {
          "description": "Indicates the Total Sum of Journal Debits.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalEntriesCount": {
          "description": "Indicates the number of journal entries.",
          "type": "integer"
        },
        "totalForAllPages": {
          "description": "Indicates the Total Sum of all Journal entries in all pages.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionCodes": {
          "description": "Set of Transaction Codes configured in this time span.",
          "$ref": "#/definitions/trxCodesInfoType"
        }
      }
    },
    "fiscalCallStatus": {
      "description": "Check if it will call fiscal or not.",
      "type": "object",
      "properties": {
        "isValid": {
          "description": "Flag which contains if its valid or not.",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalCommandsResponseInfo": {
      "description": "Response after generating a commands from Fiscal Terminals screen.",
      "type": "object",
      "properties": {
        "fiscalResponseInfo": {
          "description": "Command information returned from the Fiscal service.",
          "$ref": "#/definitions/fiscalResponseInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalFolioCriteria": {
      "description": "Request to generate an Initial/Zero invoice from Fiscal Terminals screen.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for the creation of fiscal invoice.",
          "$ref": "#/definitions/fiscalFolioCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalFolioCriteriaType": {
      "description": "Criteria for calling fiscal folio service for the generation of invoices",
      "type": "object",
      "properties": {
        "effectiveDate": {
          "description": "Effective date to run fiscal command.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioCommand": {
          "description": "Type of fiscal folio operation.",
          "$ref": "#/definitions/folioCommandType"
        },
        "folios": {
          "description": "Folio details.",
          "$ref": "#/definitions/fiscalInvoiceSummaryType"
        },
        "hotelId": {
          "description": "Property where the folio is being generated.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "fiscalFolioInstruction": {
      "description": "Action to generate Offline folio when no reponse is received from fiscal service.",
      "type": "string",
      "enum": [
        "Retry",
        "New",
        "Void",
        "Offline"
      ]
    },
    "fiscalInfoFolioCriteria": {
      "description": "Request to generate fiscal Information folio.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for generating fiscal folio information.",
          "$ref": "#/definitions/fiscalInfoFolioCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalInfoFolioCriteriaType": {
      "description": "Criteria for calling fiscal Info type folio service",
      "type": "object",
      "properties": {
        "folioCommand": {
          "description": "Type of fiscal folio operation.",
          "$ref": "#/definitions/folioCommandType"
        },
        "folios": {
          "description": "Folio History details.",
          "$ref": "#/definitions/folioSummaryType"
        },
        "hotelId": {
          "description": "Property where the Folio History exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "fiscalInformationFolio": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "fiscalResponseList": {
          "description": "Provides information which is used for fiscal response processing.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/fiscalResponseType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalInvoiceSummaryType": {
      "description": "Contains information required for the generation of fiscal invoice.",
      "type": "object",
      "properties": {
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fiscalTerminalId": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "folioSeqNo": {
          "description": "Unique sequence number. Used to identify the current folio tax record.",
          "type": "number"
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "generateFiscalFolio": {
          "description": "Fiscal folio flag to call fiscal Information folio web service.",
          "type": "boolean"
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "queueName": {
          "description": "Folio Queue name",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionType": {
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        }
      }
    },
    "fiscalResponseInfoType": {
      "description": "Invoice information returned from the fiscal service.",
      "type": "object",
      "properties": {
        "fiscalResponseId": {
          "description": "Uniquely identifies data sent from FLIP.",
          "type": "number"
        },
        "invoiceNo": {
          "description": "Fiscal terminal invoice number returned from fiscal service.",
          "type": "number"
        }
      }
    },
    "fiscalResponseType": {
      "description": "Provides information which is used for fiscal response processing.",
      "type": "object",
      "properties": {
        "folioSeqId": {
          "description": "Fiscal Folio sequence ID stored in queue table.",
          "type": "integer"
        },
        "retryFiscalPrinting": {
          "description": "Flag to do the retrieval process of fiscal printing or not.",
          "type": "boolean"
        }
      }
    },
    "fiscalRetryType": {
      "description": "Generate Fiscal Folio Retry Criteria type to be used for fiscal folio generation",
      "type": "object",
      "properties": {
        "fiscalFolioInstruction": {
          "description": "Defines the action of the retrival process.",
          "$ref": "#/definitions/fiscalFolioInstruction"
        },
        "folioSeqId": {
          "description": "Fiscal Folio sequence ID stored in queue table.",
          "type": "integer"
        },
        "hotelId": {
          "description": "Hotel where the transaction belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "voidFolioModes": {
          "description": "Different modes to perform void folio.",
          "$ref": "#/definitions/voidFolioModes"
        }
      }
    },
    "fiscalServiceType": {
      "description": "Generate Fiscal Folio Criteria type to be used for fiscal folio generation",
      "type": "object",
      "properties": {
        "fiscalTerminal": {
          "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "folioQueueName": {
          "description": "Folio Type , Queue name , Fiscal Flag to be used in folio generation This is a country requirement.",
          "$ref": "#/definitions/folioQueueType"
        },
        "folioSeqId": {
          "description": "Fiscal Folio sequence ID stored in queue table.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "instructions": {
          "description": "Defines the action of the generate folio process.",
          "$ref": "#/definitions/fiscalFolioInstruction"
        },
        "invoiceCurrencyCode": {
          "description": "Fiscal Invoicing Currency code to be used by the Fiscal Service.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "fiscalSupportingDocumentCategory": {
      "description": "Supporting document category.",
      "type": "string",
      "enum": [
        "Financial",
        "Reservation"
      ]
    },
    "fiscalSupportingDocumentCriteria": {
      "description": "Request to send supporting document to fiscal partner.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for sending supporting document.",
          "$ref": "#/definitions/fiscalSupportingDocumentCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalSupportingDocumentCriteriaType": {
      "description": "Criteria for sending supporting document to fiscal partner.",
      "type": "object",
      "properties": {
        "documentNo": {
          "description": "Supporting document number.",
          "type": "integer"
        },
        "documentType": {
          "description": "Supporting document type.",
          "$ref": "#/definitions/fiscalSupportingDocumentType"
        },
        "hotelId": {
          "description": "Unique ID of the hotel",
          "type": "string"
        }
      }
    },
    "fiscalSupportingDocumentType": {
      "description": "Fiscal Supporting Document Type",
      "type": "string",
      "enum": [
        "InformationFolio",
        "ProformaFolio"
      ]
    },
    "fiscalSupportingDocumentsResponse": {
      "description": "Response for the supporting documents.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records the API should return.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "offset": {
          "description": "Index of the page being requested. If the index goes out of the bounds of the total set count, no data will be returned.",
          "type": "integer"
        },
        "supportingDocuments": {
          "description": "List of supporting documents.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/supportingDocumentType"
          }
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fixedChargeDetailType": {
      "description": "Fixed charge amount could be specified by flat fee or be a percentage of the rate amount.",
      "type": "object",
      "properties": {
        "article": {
          "description": "Holds related article code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "chargeAmount": {
          "description": "Price of the product.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "Percentage of the rate amount.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "quantity": {
          "description": "Quantity of the product.",
          "type": "integer"
        },
        "roomNights": {
          "description": "Holds number of comp or cash room night to allocate.",
          "type": "integer"
        },
        "supplement": {
          "description": "Additional information regarding the fixed charge.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transaction": {
          "description": "Transaction code and description of a fixed charge.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "fixedChargeFrequencyType": {
      "description": "Yearly.",
      "type": "string",
      "enum": [
        "O",
        "D",
        "W",
        "M",
        "Q",
        "Y"
      ]
    },
    "fixedChargeScheduleType": {
      "description": "Holds schedule of fixed charge.",
      "type": "object",
      "properties": {
        "dateToExecute": {
          "description": "Date of when to execute yearly fixed charge. Applicable when frequency is Yearly.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "dayToExecute": {
          "description": "Day of when to execute fixed charge. Applicable when frequency is Daily or Weekly.",
          "type": "string",
          "maxLength": 3,
          "minLength": 0
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency of a fixed charge.",
          "$ref": "#/definitions/fixedChargeFrequencyType"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "fixedChargeType": {
      "description": "Holds fixed charge information.",
      "type": "object",
      "properties": {
        "charge": {
          "description": "Holds specific details of fixed charge.",
          "$ref": "#/definitions/fixedChargeDetailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "schedule": {
          "description": "Holds schedule of fixed charge.",
          "$ref": "#/definitions/fixedChargeScheduleType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "fixedCharges": {
      "description": "Method to update fixed charges of a reservation.",
      "type": "object",
      "properties": {
        "fixedCharges": {
          "description": "List of the fixed charges that should be updated.",
          "$ref": "#/definitions/fixedChargesType"
        },
        "hotelId": {
          "description": "Hotel code of the reservation.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationId": {
          "description": "Reservation Id for which the fixed charges need to be updated.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fixedChargesDetails": {
      "description": "Response that contains either the fixed charges list if fetch was successful or error(s) if not.",
      "type": "object",
      "properties": {
        "fixedCharges": {
          "description": "List of Fixed Charges. Contains information on Fixed Charges Frequency, Schedule and Charge Details. Refer to the Generic Common Types document for information on the Fixed Charges Type",
          "$ref": "#/definitions/fixedChargesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fixedChargesType": {
      "description": "Holds fixed charge detail.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fixedChargeType"
      }
    },
    "flexibleBenefitPostingsCriteria": {
      "description": "Apply Flexible Benefit Postings.",
      "type": "object",
      "properties": {
        "applyFlexibleBenefitCriteria": {
          "description": "Criteria for reversing a Flexible Benefit Posting.",
          "$ref": "#/definitions/applyFlexibleBenefitPostingsCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folio": {
      "description": "Response to the request to get Financial Information for a Reservation",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationFolioInformation": {
          "description": "Financial details for the requested reservation.",
          "$ref": "#/definitions/reservationFolioInfoType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response folio information.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioActivityDetailType": {
      "description": "Details of Fiscal Folio Activity made.",
      "type": "object",
      "properties": {
        "billGenerationDate": {
          "description": "Bill Generation Date.",
          "type": "string"
        },
        "billNo": {
          "description": "Bill Number.",
          "type": "string"
        },
        "fiscalBillNo": {
          "description": "Fiscal Bill Number returned from Fiscal Program.",
          "type": "string"
        },
        "folioType": {
          "description": "Folio Type.",
          "type": "string"
        },
        "messageText": {
          "description": "Return Message from Fiscal Printing Program.",
          "type": "string"
        },
        "partnerFiscalFolioStatus": {
          "description": "Fiscal folio status for the partner system.",
          "type": "string"
        },
        "queueName": {
          "description": "Queue Name.",
          "type": "string"
        },
        "responseAttemptNo": {
          "description": "Number of fiscal response attempts made for the folio",
          "type": "integer"
        },
        "status": {
          "description": "Return Status from Fiscal Program Application (Fiscal Printer).",
          "type": "string"
        }
      }
    },
    "folioActivityDetailsType": {
      "description": "Fiscal Folio Activity information",
      "type": "object",
      "properties": {
        "folioActivityDetailInfo": {
          "description": "Details of Fiscal Folio Activity made.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioActivityDetailType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioActivityResponseDetailType": {
      "description": "Fiscal Folio Activity Details Information",
      "type": "object",
      "properties": {
        "folioActivityResponseDetailsInfo": {
          "description": "Details of response for the Fiscal Folio Activity made.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioActivityResponseDetailsType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioActivityResponseDetailsType": {
      "description": "Details of response for the Fiscal Folio Activity made.",
      "type": "object",
      "properties": {
        "businessDate": {
          "description": "Business Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "responseAttemptNo": {
          "description": "Number of fiscal response attempt made for the folio",
          "type": "integer"
        },
        "responseName": {
          "description": "Name of the response element.",
          "type": "string"
        },
        "responseType": {
          "description": "Type of the response, possible values: ERROR, WARNING, RESPONSE.",
          "type": "string"
        },
        "responseValue": {
          "description": "Value of the response element.",
          "type": "string"
        }
      }
    },
    "folioCommandType": {
      "type": "string",
      "enum": [
        "Invoice",
        "Info",
        "ResendInvoice",
        "Cancellation",
        "EodReset",
        "XReport",
        "SendFiscalInvoice",
        "ZeroInvoice",
        "EndOfPeriod",
        "ZeroInvoiceWithReceipt",
        "FiscalUpdate",
        "CheckOut"
      ]
    },
    "folioCriteria": {
      "description": "Generate Folio request can be used to create a folio for checked in reservation or reservation with open folios",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Property code of the reservation.",
          "$ref": "#/definitions/generateFolioCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioHistoryResponse": {
      "description": "Response for the fetch Folio History.",
      "type": "object",
      "properties": {
        "folioHistory": {
          "description": "List of Folio History.",
          "$ref": "#/definitions/foliosType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioPrinterType": {
      "description": "Information about a Printer which can be used to print a Folio.",
      "type": "object",
      "properties": {
        "device": {
          "description": "The Printer Device name.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "folioQueueName": {
          "description": "Folio Queue name for which this printer is being used.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "folioType": {
          "description": "The Folio Type for which this printer is being used.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "printerName": {
          "description": "Description of the Printer",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "folioPrinters": {
      "description": "Response to the request to fetch the Folio Printers applicable for a Folio, based on the",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "printers": {
          "description": "List of Printers which are applicable for this Folio.",
          "$ref": "#/definitions/folioPrintersType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioPrintersType": {
      "description": "List of Folio Printers.",
      "type": "object",
      "properties": {
        "folioTypeName": {
          "description": "Name of the Folio Type.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "printer": {
          "description": "Folio Printer Information.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioPrinterType"
          }
        }
      }
    },
    "folioQueueType": {
      "description": "List of charges that will be posted against the transaction code based from the test criteria.",
      "type": "object",
      "properties": {
        "folioType": {
          "description": "Folio Type to be assigned to generated folio. This is a country requirement.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "generateFiscalFolio": {
          "description": "Fiscal folio flag to call fiscal folio web service after folio generation.",
          "type": "boolean"
        },
        "queueName": {
          "description": "Folio Queue name.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "folioReasonType": {
      "description": "Type for Folio Reason and Text.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The Folio Reason Code.Currently Applicable only for Credit Bills.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "text": {
          "description": "The Folio Reason Text.Currently Applicable only for Credit Bills.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "folioSplitInfoType": {
      "description": "Containsts the folio split posting information.",
      "type": "object",
      "properties": {
        "balance": {
          "description": "Running balance of the transactions.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "folioSplitType": {
          "description": "Contains the folio split type.",
          "$ref": "#/definitions/folioSplitType"
        },
        "payment": {
          "description": "Payment amount of the transactions.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "revenue": {
          "description": "Revenue amount of the transactions.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPostings": {
          "description": "Running total number of the transactions.",
          "type": "integer"
        }
      }
    },
    "folioSplitType": {
      "description": "Indicates the type of folio to be created on the window.",
      "type": "string",
      "enum": [
        "TAXTRX",
        "REVTRX"
      ]
    },
    "folioStatusType": {
      "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
      "type": "string",
      "enum": [
        "Deposit",
        "Void",
        "Ok",
        "Zero",
        "Compress",
        "Converted",
        "Internal"
      ]
    },
    "folioSummaryType": {
      "description": "Contains Folio Details including payee information and the reservation which it's attached to.",
      "type": "object",
      "properties": {
        "accountCode": {
          "description": "Account Code.",
          "type": "number"
        },
        "accountReceivablesFolio": {
          "description": "Flag to check Folio generated from Acoount Receivables.",
          "type": "boolean"
        },
        "addresseeInfo": {
          "description": "Addressee Information for the Folio. This is available when the Addressee functionality is used and and Addressee is attached to the folio.",
          "$ref": "#/definitions/profileInfoType"
        },
        "allowConvertFolioYn": {
          "description": "Flag to check Folio Conversion Allowed.",
          "type": "boolean"
        },
        "anonymizedFolio": {
          "description": "Indicates if this folio is linked to an anonymized Guest/Payee/Addressee.",
          "type": "boolean"
        },
        "associatedBills": {
          "description": "Bill Number.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 0
          }
        },
        "creditFolio": {
          "description": "Indicates if the folio is a Credit Folio.",
          "type": "boolean"
        },
        "customNumbers": {
          "description": "Custom Number.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "type": "string",
            "maxLength": 200,
            "minLength": 0
          }
        },
        "debitFolio": {
          "description": "Indicates if the folio is a Debit Folio.",
          "type": "boolean"
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fiscalFolioNo": {
          "description": "Bill Number returned by the Fiscal Printer.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "fiscalInvoicingCurrencyInfo": {
          "description": "Exchange Rate information selected to be used by the Fiscal Service.",
          "$ref": "#/definitions/exchangeRateInfoType"
        },
        "fiscalTerminalId": {
          "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
          "type": "string"
        },
        "folioAmount": {
          "description": "Folio gross amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "folioSeqNo": {
          "description": "Unique sequence number. Used to identify the current folio tax record.",
          "type": "number"
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "generateFiscalFolio": {
          "description": "Fiscal folio flag to call fiscal Information folio web service.",
          "type": "boolean"
        },
        "generateFiscalSupportingDoc": {
          "description": "Flag to call fiscal web service for a supporting document.",
          "type": "boolean"
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "officialBIRReceiptExists": {
          "description": "Flag to indicate if an Official Receipt is generated for the folio window. Applicable only in the Philippines.",
          "type": "boolean"
        },
        "operaFiscalFolioStatus": {
          "description": "Opera Fiscal Folio Status for the Folio.",
          "type": "string"
        },
        "partnerFiscalFolioStatus": {
          "description": "Stores the fiscal folio status for the partner system.",
          "type": "string"
        },
        "passerbyFolio": {
          "description": "Indicates if the folio is a Passer By Folio.",
          "type": "boolean"
        },
        "payeeInfo": {
          "description": "Payee information for the folio.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "payment": {
          "description": "Payment Posting for the folio.",
          "$ref": "#/definitions/summaryPostingType"
        },
        "paymentTrxNo": {
          "description": "Bill Payment transaction Number.",
          "type": "number"
        },
        "postItNo": {
          "description": "Number for Post-It transactions.",
          "type": "number"
        },
        "queueName": {
          "description": "Folio Queue name.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reservationInfo": {
          "description": "ReservationID to which this record applies.",
          "type": "object",
          "properties": {
            "altName": {
              "description": "Guest Alternate Last and First Name",
              "type": "string",
              "maxLength": 200,
              "minLength": 0
            },
            "guestName": {
              "description": "Guest Name",
              "type": "string",
              "maxLength": 200,
              "minLength": 0
            },
            "nameId": {
              "description": "Guest Name ID",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "reservationId": {
              "description": "ReservationID to which this record applies.",
              "type": "number"
            },
            "room": {
              "description": "Room Number to which this record applies.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            }
          }
        },
        "revisionNo": {
          "description": "Folio Revision number.",
          "type": "number"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "supportingDocument": {
          "description": "Information on the supporting document.",
          "$ref": "#/definitions/supportingDocumentType"
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "folioTaxPaymentReversal": {
      "description": "Response for the reverse Thailand Tax Payment Tax record request.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "postings": {
          "description": "List of Postings produced by Reverse Payment Tax Request.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTaxPaymentsInfo": {
      "description": "Response to the request for Payment Tax records for a reservation. Lists all the Payment Taxes for the reservation which are available.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "paymentTaxInfo": {
          "$ref": "#/definitions/paymentTaxInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTextsType": {
      "description": "This stores the description for the type of tax calculation especially with tax exemption, etc.",
      "type": "array",
      "maxItems": 2,
      "items": {
        "type": "object",
        "properties": {
          "row": {
            "description": "Row number of the additional text.",
            "type": "integer"
          },
          "text": {
            "description": "Additional text field to display on the folio.",
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          }
        }
      }
    },
    "folioToVoid": {
      "description": "Request to Void a Guest Folio when the Void Functionality is active.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for Voiding a Guest Folio.",
          "$ref": "#/definitions/voidFolioCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioToWindow": {
      "description": "Request for transaction folio(s) to specific window",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Folio(s) transfer criteria.",
          "$ref": "#/definitions/folioTransferCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTransactionDetails": {
      "description": "Response for the fetch transaction details request. Detail information regarding the folio transaction will be returned",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactions": {
          "description": "The details regarding the transaction(Posting).",
          "$ref": "#/definitions/detailPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTransferCriteriaType": {
      "description": "Folio(s) Transfer Criteria type to be used for folio transfer request.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "folioList": {
          "description": "List of folios to be transfered.",
          "type": "array",
          "maxItems": 7,
          "items": {
            "type": "integer"
          }
        },
        "folioStyle": {
          "description": "Folio style of the folios to be transferred.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationId": {
          "description": "Reservation id from where folio will be transfered.",
          "$ref": "#/definitions/reservationId"
        },
        "targetFolioWindowNo": {
          "description": "Folio Window Number to where transactions will be transfered.",
          "type": "integer"
        }
      }
    },
    "folioType": {
      "description": "Represents a single page in a reservation's ledger which will contain transactions and payee information.",
      "type": "object",
      "properties": {
        "allowConvertFolioYn": {
          "description": "Flag to check Folio Conversion Allowed.",
          "type": "boolean"
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "folioAmount": {
          "description": "Folio gross amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "folioSeqNo": {
          "description": "Unique sequence number. Used to identify the current folio tax record.",
          "type": "number"
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "payeeInfo": {
          "description": "Payee information for the folio.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "postings": {
          "description": "Postings for the folio view.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "revisionNo": {
          "description": "Folio Revison number.",
          "type": "number"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "folioTypeNameInfo": {
      "description": "Response for the fetch Folio Type Information.",
      "type": "object",
      "properties": {
        "details": {
          "description": "Information regarding the Folio Type.",
          "$ref": "#/definitions/folioTypeNameInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTypeNameInfoType": {
      "description": "Details of a Folio Type configuration.",
      "type": "object",
      "properties": {
        "folioLanguageCode": {
          "description": "The Language Code for which the folio is effective.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "folioReportModuleId": {
          "description": "The internal report ID of the Folio report which is to be used.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "folioReportName": {
          "description": "The report name which should be used as the Folio for printing.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "folioTypeName": {
          "description": "The Folio Type.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property where the Folio Type exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "folioTypeValidationType": {
      "description": "Profile detail is not configured with Tax ID.",
      "type": "string",
      "enum": [
        "TaxID"
      ]
    },
    "folioTypesInfo": {
      "description": "Information regarding the Folio Types.",
      "type": "object",
      "properties": {
        "folioInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/folioTypesInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTypesInfoType": {
      "description": "Folio Types details.",
      "type": "object",
      "properties": {
        "compress": {
          "description": "Indicates folio to be use for compress bills.",
          "type": "boolean"
        },
        "credit": {
          "description": "Indicates folio type can be used for Credit bills.",
          "type": "boolean"
        },
        "fiscal": {
          "description": "Fiscal Folio indicator.",
          "type": "boolean"
        },
        "folioType": {
          "description": "Folio Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sendFiscalFolio": {
          "description": "Adding this flag at folio type level would decide to send fiscal folio (generate payload) or not.",
          "type": "boolean"
        }
      }
    },
    "folioWindowExchangeAmounts": {
      "description": "Converted folio windows values for the Exchange Currency requested.",
      "type": "object",
      "properties": {
        "balance": {
          "description": "The converted Folio Window Total Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "payment": {
          "description": "The converted Folio Window Payment Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "revenue": {
          "description": "The converted Folio Window Revenue Amount.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "folioWindowType": {
      "description": "A folio window view which holds the set of folios for a reservation.",
      "type": "object",
      "properties": {
        "ackBIRReceiptExists": {
          "description": "Flag to indicate if an Acknowledgement Receipt is generated for the folio window. Applicable only in the Philippines.",
          "type": "boolean"
        },
        "balance": {
          "description": "Running balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compAccountingInfo": {
          "description": "Defined comp accounting configuration for this window",
          "$ref": "#/definitions/compAccountingType"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "debitBalance": {
          "description": "Running debit balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitPayment": {
          "description": "Payment debit amount of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitRevenue": {
          "description": "Revenue debit amount of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "emptyFolio": {
          "description": "Flag to notify if the current folio has any postings.",
          "type": "boolean"
        },
        "emptyWindow": {
          "description": "Flag to notify if the entire window has any postings.",
          "type": "boolean"
        },
        "exchange": {
          "description": "Available when the Fetch Folio Search Type requests the amounts to be converted to a currency different from the Resort currency.",
          "$ref": "#/definitions/folioWindowExchangeAmounts"
        },
        "fiscalFolioInstruction": {
          "description": "Defines the action of the generate folio process.",
          "$ref": "#/definitions/fiscalFolioInstruction"
        },
        "fiscalResponseType": {
          "description": "Provides information which is used for fiscal response processing.",
          "$ref": "#/definitions/fiscalResponseType"
        },
        "folioSplitInfo": {
          "description": "Contains the folio split posting information.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioSplitInfoType"
          }
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "folios": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "officialBIRReceiptExists": {
          "description": "Flag to indicate if an Official Receipt is generated for the folio window. Applicable only in the Philippines.",
          "type": "boolean"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "payeeInfo": {
          "description": "The window's configured payee information.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "payment": {
          "description": "Payment amount of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "paymentMethod": {
          "description": "Defined method of payment for this window.",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "receiptNo": {
          "description": "The receipt number of the transaction, if there is a receipt generated.",
          "type": "number"
        },
        "revenue": {
          "description": "Revenue amount of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "serviceTypeInfo": {
          "description": "Contains service type information associated with transaction code posted in folio window.",
          "$ref": "#/definitions/transactionServiceTypesType"
        },
        "simpleFolio": {
          "description": "This flag signifies that generated Folio is Normal or Simple Folio. Certain countries of the World mandate a simple folio when the invoice amount is less than defined threshold.",
          "type": "boolean"
        },
        "storedFolioId": {
          "description": "ID of the Stored Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedFolioName": {
          "description": "Name of the Stored Folio.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        },
        "vATOffsetAmount": {
          "description": "VAT offset amount of the window.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "foliosType": {
      "description": "Folio History details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/folioSummaryType"
      }
    },
    "foreignCurrencyCriteria": {
      "description": "Operation to calculate foreign currency exchange.",
      "type": "object",
      "properties": {
        "addExchangeCommission": {
          "description": "Flag to add exchange commission in order to recalculate payment amount in billing.",
          "type": "boolean"
        },
        "exchange": {
          "description": "A set of currencies that need to be converted.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/exchangeRateCalculationType"
          }
        },
        "includeExchangeInformation": {
          "description": "Flag to include exchange information text in response.",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "foreignCurrencyExchange": {
      "description": "A set of posting transactions that need to be posted with regards to exchange.",
      "type": "object",
      "properties": {
        "foreignCurrencyExchangeList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/postForeignCurrencyExchangeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "foreignCurrencyExchangeTransaction": {
      "description": "Response of the posting foreign currency exchange transaction.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transaction": {
          "description": "Details of posting and generated folio.",
          "$ref": "#/definitions/foreignCurrencyExchangeTransactionType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "foreignCurrencyExchangeTransactionType": {
      "description": "Details about posting and generated folio on currency exchange.",
      "type": "object",
      "properties": {
        "folio": {
          "description": "Details of the generated folio.",
          "$ref": "#/definitions/folioType"
        },
        "posting": {
          "description": "Details of the primary posting.",
          "$ref": "#/definitions/summaryPostingType"
        }
      }
    },
    "formattedTextTextType": {
      "description": "Provides text and indicates whether it is formatted or not.",
      "type": "object",
      "properties": {
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "gamingRequestStatusInfo": {
      "description": "Response object for fetch gaming info",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "statusInfo": {
          "description": "details of the guest request provided by the external system",
          "$ref": "#/definitions/gamingRequestStatusInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "gamingRequestStatusInfoType": {
      "description": "List of guest request status details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/gamingRequestStatusType"
      }
    },
    "gamingRequestStatusType": {
      "description": "Type that holds guest request status details.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel code corresponding to the transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "messageId": {
          "description": "Message Id from the External System.",
          "type": "integer"
        },
        "messageText": {
          "description": "Message sent from the External System regarding the status of this request.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "requestDate": {
          "description": "Date the request was sent.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "status": {
          "description": "Status of the request.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "statusCode": {
          "description": "Status code from the External System..",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        }
      }
    },
    "generateFolioCriteriaType": {
      "description": "Generate Folio Criteria type to be used for folio generation request",
      "type": "object",
      "properties": {
        "allFolioWindow": {
          "description": "Flag to decide if folios is to be generated for all windows in addition to the one requested with applicable postings and zero balance. If any of the windows have non-zero balance then folios are not generated for other windows.",
          "type": "boolean"
        },
        "associatedBillInfo": {
          "description": "Bill Information of the original bill for which the Credit Bill is being generated .",
          "$ref": "#/definitions/associatedBillInfoType"
        },
        "balance": {
          "description": "Balance of a Reservation for this property.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "correction": {
          "description": "Correction flag",
          "type": "boolean"
        },
        "debitFolio": {
          "description": "Indicates the type of folio to be generated",
          "type": "boolean"
        },
        "eventType": {
          "description": "Event to which this process will be logged.",
          "$ref": "#/definitions/cashieringEventType"
        },
        "fiscalFolioInstruction": {
          "description": "Defines the action of the generate folio process.",
          "$ref": "#/definitions/fiscalFolioInstruction"
        },
        "fiscalInvoicingCurrencyInfo": {
          "description": "Exchange Rate information selected to be used by the Fiscal Service.",
          "$ref": "#/definitions/exchangeRateInfoType"
        },
        "fiscalTerminalId": {
          "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
          "type": "string"
        },
        "folioNameValue": {
          "description": "Custom Folio Name Value Information to be saved",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/nameValueHeaderDetailType"
          }
        },
        "folioQueue": {
          "description": "Folio Type , Queue name , Fiscal Flag to be used in folio generation This is a country requirement.",
          "$ref": "#/definitions/folioQueueType"
        },
        "folioSeqId": {
          "description": "Fiscal Folio sequence ID stored in queue table.",
          "type": "integer"
        },
        "folioTypeValidation": {
          "description": "Override Instruction for the Folio Type",
          "$ref": "#/definitions/folioTypeValidationType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "manualFolioNo": {
          "description": "Manual Folio Number used for settlement during checkout",
          "type": "integer"
        },
        "profileId": {
          "description": "Profile Id corresponding to the guest name.",
          "$ref": "#/definitions/profileId"
        },
        "reason": {
          "description": "The Reason Code and Reason Text which is required when a folio is generated. This input is mandatory when the parameter Credit Bill Reason is active for Credit Bills",
          "$ref": "#/definitions/folioReasonType"
        },
        "reservationId": {
          "description": "Reservation identifier that will be used as the context of the available options.",
          "$ref": "#/definitions/reservationId"
        },
        "simpleFolio": {
          "description": "This flag signifies that generated Folio is Normal or Simple Folio. Certain countries of the World mandate a simple folio when the invoice amount is less than defined threshold.",
          "type": "boolean"
        },
        "transactionServiceType": {
          "description": "Contains transaction service type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactions": {
          "description": "list of transaction.",
          "$ref": "#/definitions/transactionsType"
        }
      }
    },
    "generatePostingType": {
      "description": "Financial posting with their breakup",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Gross amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "referenceTransactionNo": {
          "description": "Generate transaction number for the Posting.",
          "type": "number"
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionNo": {
          "description": "Transaction Number for which request is being submitted.",
          "type": "number"
        }
      }
    },
    "generatedFolio": {
      "description": "Generate Folio Response contains generated folio no and invoice number along or errors and warnings in case if folio couldn't be generated: FOF00065 - The hotel code and/or reservation id is missing. FOF00066 - Reservation can't be found with the supplied hotel code and reservation id. FOF00123 - Folio window has a balance and folio cannot be generated. FOF00124 - The guest's reservation is not in a valid status for folio generation.",
      "type": "object",
      "properties": {
        "folioWindows": {
          "description": "Window count will be hotel based configurable.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/folioWindowType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "givenNameType": {
      "description": "Given name, first name or names",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "guestCheckDetails": {
      "description": "Request to process a guest check detail.",
      "type": "object",
      "properties": {
        "checkDetails": {
          "description": "Check details that needs to be posted.",
          "$ref": "#/definitions/checkDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationId": {
          "description": "Reservation Id for which the details need to be posted.",
          "$ref": "#/definitions/reservationId"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "guestCountsType": {
      "description": "A collection of GuestCount by age group.",
      "type": "object",
      "properties": {
        "adults": {
          "description": "Defines the number of Adults.",
          "type": "integer"
        },
        "childAges": {
          "description": "Defines Children's Ages. Number of children ages mentioned may mot match with children counts.",
          "$ref": "#/definitions/childAgesType"
        },
        "childBuckets": {
          "description": "Defines children counts with Age Qualifying Group(Child Bucket#1) classification.",
          "$ref": "#/definitions/childBucketsType"
        },
        "children": {
          "description": "Defines the number of Children.",
          "type": "integer"
        }
      }
    },
    "guestHousekeepingServiceRequestType": {
      "description": "Possible values for the Guest Service Status.",
      "type": "string",
      "enum": [
        "DoNotDisturb",
        "MakeUpRoom",
        "NoStatusSelected"
      ]
    },
    "guestLastStayInfoType": {
      "description": "Contains last stay related details of the guest.",
      "type": "object",
      "properties": {
        "lastStayDate": {
          "description": "Guest's last stay date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastStayRate": {
          "description": "The Rate amount of the guest's last stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "lastStayRoom": {
          "description": "Room Number where the guest stayed.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "totalStay": {
          "description": "The total number of previous stay of the guest.",
          "type": "integer"
        }
      }
    },
    "guestsTransactions": {
      "description": "Lists a summary of transactions of guests.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationFolioInformation": {
          "description": "Folio details for the requested reservation/s.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/reservationFolioInfoType"
          }
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response folio.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelCashierClosureCurrencyAmountType": {
      "description": "Cashier Shift amounts for each Hotel group by currency code",
      "type": "object",
      "properties": {
        "currencyAmounts": {
          "description": "Hotel Cash and Check Balances group by Currency Code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cashierClosureCurrencyAmountType"
          }
        },
        "hotelCurrencyCode": {
          "description": "Hotel local currency code.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "hotelCashierTransactionType": {
      "description": "Cashier Shift amounts for each Hotel group by currency code",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactions": {
          "description": "Hotel's transaction in cashier shift.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cashierTransactionType"
          }
        }
      }
    },
    "hotelInterfaceStatusType": {
      "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
      "type": "string",
      "enum": [
        "Stopped",
        "Running",
        "Waiting",
        "StopInitiated",
        "StartInitiated",
        "RebootInitiated",
        "Other"
      ]
    },
    "hotelInterfaceType": {
      "type": "object",
      "properties": {
        "activeFlag": {
          "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "interfaceId": {
          "description": "Unique DB internal number of a Hotel Interface record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "interfaceName": {
          "description": "Name of the Hotel Interface",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "interfaceType": {
          "description": "Three letter code for each interface that identifies the interface.",
          "$ref": "#/definitions/hotelInterfaceTypeType"
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "machineName": {
          "description": "Unique machine name of the running IFC.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "status": {
          "description": "The current status of the IFC.",
          "$ref": "#/definitions/hotelInterfaceStatusType"
        }
      }
    },
    "hotelInterfaceTypeType": {
      "description": "XML Posting Interface",
      "type": "string",
      "enum": [
        "Bms",
        "Cas",
        "Ccw",
        "Dls",
        "Eft",
        "Exp",
        "Mak",
        "Mbs",
        "Msc",
        "Pbx",
        "Pos",
        "Svs",
        "Tik",
        "Vid",
        "Vms",
        "Www",
        "Xml"
      ]
    },
    "hotelRevenueDetails": {
      "description": "Response object for hotel room revenue for all HHonors redemption reservation.",
      "type": "object",
      "properties": {
        "hotelRevenue": {
          "description": "Hotel Room Revenue type.",
          "$ref": "#/definitions/hotelRevenueType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelRevenueType": {
      "description": "Hotel revenue type.",
      "type": "object",
      "properties": {
        "compRevenue": {
          "description": "Total comp revenue for this hotel.",
          "type": "number"
        },
        "compRooms": {
          "description": "Total comp rooms for this hotel.",
          "type": "number"
        },
        "currencyCode": {
          "description": "The base currency code for this hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "houseRevenue": {
          "description": "Total house revenue for this hotel.",
          "type": "number"
        },
        "houseRooms": {
          "description": "Total house rooms for this hotel.",
          "type": "number"
        },
        "occupiedRooms": {
          "description": "Total occupied revenue for this hotel.",
          "type": "number"
        },
        "roomRevenue": {
          "description": "Total room revenue for this hotel.",
          "type": "number"
        },
        "zeroRoomsRevenue": {
          "description": "Total zero rooms revenue for this hotel.",
          "type": "number"
        }
      }
    },
    "housekeepingRoomStatusType": {
      "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
      "type": "string",
      "enum": [
        "Clean",
        "Dirty",
        "Pickup",
        "Inspected",
        "OutOfOrder",
        "OutOfService"
      ]
    },
    "housekeepingTaskCodeType": {
      "description": "Information related to a Task Code. Task Codes are used to generate task sheets in Rooms Management.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The Code for the task.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Task Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "facilityDepartureTask": {
          "description": "Indicates if this task code is the default departure task for Facility Tasks. This requires",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property where this task code is configured.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "instructions": {
          "description": "Instructions for this Task Code.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "sequence": {
          "description": "Ordering sequence for display.",
          "type": "integer"
        }
      }
    },
    "indicatorType": {
      "description": "Lamp indicator Type.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        },
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "indicatorsType": {
      "description": "Collection of lamp indicators.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "instanceLink": {
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "type": "object",
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ],
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "interfaceRightsStatusType": {
      "type": "object",
      "properties": {
        "category": {
          "description": "Category code of this interface right.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "description": {
          "description": "User defined description for an Interface Right.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "right": {
          "description": "Internal code for each allowed right of a Hotel Interface record.",
          "type": "integer"
        },
        "statusCode": {
          "description": "User defined code for an Interface Right.",
          "type": "string",
          "maxLength": 5,
          "minLength": 0
        }
      }
    },
    "languageType": {
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "linkReservationPackageAllowance": {
      "description": "Method to create package allowance link from a source reservation to the target reservation.",
      "type": "object",
      "properties": {
        "consumeSharedAllowances": {
          "description": "If set to TRUE, the source reservation contributes its allowance(s) to the linked allowance pool and is able to draw from the allowances of the target reservation and/or any other source rooms linked to the target room.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property code of the source and target reservations.",
          "$ref": "#/definitions/codeType"
        },
        "linkFromReservationId": {
          "description": "Reservation Id which is the source reservation for creating package link.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "linkToReservationId": {
          "description": "Reservation Id which is the target reservation for creating package link.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "linkedAllowanceReservationInfoType": {
      "description": "Linked Allowance Reservation Information.",
      "type": "object",
      "properties": {
        "confirmationNo": {
          "description": "Reservation confirmation number.",
          "type": "string"
        },
        "consumeSharedAllowances": {
          "description": "Indicates that guest is allowed to consumed shared allowances from others.",
          "type": "boolean"
        },
        "guestDisplayName": {
          "description": "Display Name for the guest.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "guestNameId": {
          "description": "Guest name unique identifier.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reservationId": {
          "description": "Reservation name id which package allowances are linked.",
          "$ref": "#/definitions/reservationId"
        },
        "roomId": {
          "description": "Guest Room number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "linkedAllowanceReservationsInfoType": {
      "description": "List of reservation with linked package allowances.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "The resort code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceReservations": {
          "description": "List of Package Allowance Source reservations.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/linkedAllowanceReservationInfoType"
          }
        },
        "targetReservation": {
          "description": "Package Allowance Target reservation.",
          "$ref": "#/definitions/linkedAllowanceReservationInfoType"
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "maturedDepositType": {
      "description": "Matured Deposits detail.",
      "type": "object",
      "properties": {
        "cashierInfo": {
          "description": "Chashier information of user",
          "$ref": "#/definitions/cashierInfoType"
        },
        "folioView": {
          "description": "The folio window where this authorization is applied.",
          "type": "integer"
        },
        "guestCreditAmount": {
          "description": "Deposit amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "reference": {
          "description": "User defined reference of the matured deposit.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "remark": {
          "description": "User defined remarks of the matured deposit.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transaction": {
          "description": "Transaction detail of matured deposits.",
          "$ref": "#/definitions/transactionType"
        }
      }
    },
    "maturedDepositsDetails": {
      "description": "Response of matured deposits.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "maturedDeposits": {
          "description": "Collection of matured deposits.",
          "$ref": "#/definitions/maturedDepositsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "maturedDepositsType": {
      "description": "Detailed information of matured deposits.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/maturedDepositType"
      }
    },
    "membershipEarningPreferenceType": {
      "description": "The earning preference of a membership, it depends on the type of property. eg. when the property is a airline it should be Miles, other than Points.",
      "type": "string",
      "enum": [
        "Points",
        "Miles"
      ]
    },
    "membershipInfoType": {
      "description": "The Membership object identifies the frequent customer reward program.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The account identification number for this particular member in this particular program.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "bonusCode": {
          "description": "The code or name of the bonus program. BonusCode can be used to indicate the level of membership (Gold Club, Platinum member, etc.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "expireDate": {
          "description": "Indicates the end date of membership.",
          "type": "string",
          "format": "date"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "membershipId": {
          "description": "Membership ID (Unique ID from the memberships table).",
          "type": "number"
        },
        "membershipLevel": {
          "description": "The code or name of the membership level and indicates the level of membership (Gold Club, Platinum member, etc.). This is same as the BonusCode.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipLevelDesc": {
          "description": "The description of the Bonus Code.(Platinum for code P)",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "membershipTypeDesc": {
          "description": "The description of the ProgramCode.(Delta Previlige for code DP)",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True indicates membership is a Primary Membership.",
          "type": "boolean"
        },
        "programCode": {
          "description": "The code or name of the membership program ('Hertz', 'AAdvantage', etc.).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "totalAmountRedeemed": {
          "description": "Total amount that was redeemed so far through points.",
          "type": "number"
        }
      }
    },
    "membershipType": {
      "description": "Detailed information of the memberships.",
      "type": "object",
      "properties": {
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "maxLength": 1,
          "minLength": 0
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        }
      }
    },
    "namePrefixType": {
      "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "nameTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Agent",
        "Contact",
        "Source",
        "Group",
        "Employee",
        "Hotel",
        "Purge"
      ]
    },
    "nameValueBaseSearchType": {
      "description": "Contains name value information search criteria.",
      "type": "object",
      "properties": {
        "configName": {
          "description": "Custom Name value Config Name.",
          "$ref": "#/definitions/customNameValueConfigType"
        },
        "hotelId": {
          "description": "Specifies the hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "moduleName": {
          "description": "Contains model name i.e. Reservation, Profile, Folio or FinTrx.",
          "$ref": "#/definitions/nameValueModuleType"
        },
        "nameValueType": {
          "description": "Contains name value type value i.e. AFTER_SETTLEMENT, BEFORE_SETTLEMENT, RESERVATION, etc.",
          "$ref": "#/definitions/nameValueTypeType"
        },
        "sequence": {
          "description": "Indicates configuration sequence number.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "nameValueDataTypeType": {
      "type": "string",
      "enum": [
        "String",
        "Number",
        "Date",
        "Datetime",
        "Time",
        "Integer"
      ]
    },
    "nameValueDetailType": {
      "description": "Detailed information returned during name value search.",
      "type": "object",
      "properties": {
        "nameValues": {
          "description": "Name Value List.",
          "$ref": "#/definitions/nameValuesType"
        }
      }
    },
    "nameValueHeaderDetailType": {
      "description": "Name value details collected before Folio Settlement",
      "type": "object",
      "properties": {
        "nameValueDetails": {
          "description": "Name Value Detail Information",
          "$ref": "#/definitions/nameValueDetailType"
        },
        "nameValueHeader": {
          "description": "Name Value Header Information",
          "$ref": "#/definitions/nameValueBaseSearchType"
        }
      }
    },
    "nameValueModuleType": {
      "type": "string",
      "enum": [
        "Reservation",
        "Folio",
        "Profile",
        "Fintrix"
      ]
    },
    "nameValueOriginType": {
      "description": "Contains origin details.",
      "type": "object",
      "properties": {
        "destination": {
          "description": "Contains destination column for Origin.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "originName": {
          "description": "Contains origin i.e. Reseravtion, Profile, Folio or FinTrx.",
          "$ref": "#/definitions/nameValueModuleType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "nameValueType": {
      "description": "Contains name value pair.",
      "type": "object",
      "properties": {
        "dataType": {
          "description": "Contains data type for values.",
          "$ref": "#/definitions/nameValueDataTypeType"
        },
        "formatString": {
          "description": "Contains format string for values.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "name": {
          "description": "Contains unique key which represents for record field.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "origin": {
          "description": "Contains Origin information.",
          "$ref": "#/definitions/nameValueOriginType"
        },
        "usageInstruction": {
          "description": "Contains value(s) to identify the reports to include the collected information in e.g. PFH=Print Folio Header, PFD=Print Folio Detail.",
          "$ref": "#/definitions/codeListType"
        },
        "value": {
          "description": "Contains value for the record/column.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        }
      }
    },
    "nameValueTypeType": {
      "type": "string",
      "enum": [
        "ReservationOptions",
        "AfterSettlement",
        "BeforeSettlement",
        "AfterPayment",
        "ProfileOptions"
      ]
    },
    "nameValuesType": {
      "description": "List of name value pairs.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/nameValueType"
      }
    },
    "numericUDFType": {
      "description": "Used to hold user defined field of Numeric Type. It is highly recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
      "type": "object",
      "properties": {
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "name": {
          "description": "Name of user defined field.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "number"
        }
      }
    },
    "numericUDFsType": {
      "description": "Used to hold collection of user defined fields of Numeric Type.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/numericUDFType"
      }
    },
    "offsetUnitType": {
      "description": "Indicates deadline offset unit type.",
      "type": "string",
      "enum": [
        "Year",
        "Month",
        "Day",
        "Hour"
      ]
    },
    "operaLockRecordType": {
      "type": "string",
      "enum": [
        "Reservation",
        "Cashier"
      ]
    },
    "operaRecordLock": {
      "description": "This type contains information about a record lock.",
      "type": "object",
      "properties": {
        "createdBy": {
          "description": "This is the user name of the current owner of the locked record.",
          "type": "string"
        },
        "createdOn": {
          "description": "This is the time when the record was locked.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expiresOn": {
          "description": "This is the estimated expiry time of the lock.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "internal": {
          "description": "Notification flag to specify if the lock is based on an Internal Opera9 lock versus an External lock.",
          "type": "boolean"
        },
        "lockHandle": {
          "description": "This is the identifier of the lock. This will be null when the requesting user does not own the lock.",
          "type": "number"
        },
        "recordId": {
          "description": "This is the id of the locked record.",
          "type": "string"
        },
        "recordType": {
          "description": "This is the record type of the locked record.",
          "$ref": "#/definitions/operaLockRecordType"
        },
        "timeToLive": {
          "description": "This is the validity of the lock in seconds.",
          "type": "number"
        }
      }
    },
    "operaVersionNumberType": {
      "description": "Current Opera Version Number",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "pMS_ResStatusType": {
      "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "type": "string",
      "enum": [
        "Reserved",
        "Requested",
        "NoShow",
        "Cancelled",
        "InHouse",
        "CheckedOut",
        "Waitlisted",
        "DueIn",
        "DueOut",
        "Walkin",
        "PendingCheckout"
      ]
    },
    "packagePostingType": {
      "description": "Posting details.",
      "type": "object",
      "properties": {
        "approvalCode": {
          "description": "Approval code of the posting.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "approvalStatus": {
          "description": "Approval status of the posting.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "articleCode": {
          "description": "Information regarding the Article(Using Articles Functionality) of this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "canAdjustInvoice": {
          "description": "Indicator to determine if the transaction can be adjusted.",
          "type": "boolean"
        },
        "cashierInfo": {
          "$ref": "#/definitions/cashierInfoType"
        },
        "checkCount": {
          "description": "Check number count for the posting.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "checkNo": {
          "description": "Check number for the posting.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "commissionable": {
          "description": "Indicator to determine if the transaction is commissionable.",
          "type": "boolean"
        },
        "compPostingsInfo": {
          "description": "Comp Postings information for the folio.",
          "$ref": "#/definitions/compPostingsType"
        },
        "compRedemptionCode": {
          "description": "Comp redemption code assiciated to the transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "creditAmount": {
          "description": "The amount posted as credit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "customCharge": {
          "description": "Flag to identify a Custom Charge.",
          "type": "boolean"
        },
        "debitAmount": {
          "description": "The amount posted as debit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "depositTransactionId": {
          "description": "Tax Service Accounting Codes used.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "exchange": {
          "description": "Available when the Fetch Folio Search Type requests the amounts to be converted to a currency different from the Resort currency.",
          "$ref": "#/definitions/exchangeAmounts"
        },
        "fbaCertificate": {
          "description": "Flag indicates that the posting is Flexible Benefits Awards Certificate",
          "type": "boolean"
        },
        "financialTransactionIdList": {
          "description": "Collection of unique identifiers of the financial transactions.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "fromRoom": {
          "description": "Room number for linked reservation package allowance or consumption.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "groupTypeInfo": {
          "description": "Information related to transaction grouping.",
          "$ref": "#/definitions/postingGroupType"
        },
        "overageAmount": {
          "description": "Overage Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "packageAllowance": {
          "description": "Package allowance.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "packageCode": {
          "description": "Package Code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "paidOut": {
          "description": "Indicates if this transaction is a paid out transaction.",
          "type": "boolean"
        },
        "postedAmount": {
          "description": "Actual currency amount posted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingDate": {
          "description": "Date and time of posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "price": {
          "description": "Indicates the unit price of the consumption.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "quantity": {
          "description": "Indicates Quantity.",
          "type": "number"
        },
        "rateCode": {
          "description": "Rate code associated to this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "receiptNo": {
          "description": "The receipt number of the transaction, if there is a receipt generated.",
          "type": "number"
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "referenceTransactionNo": {
          "description": "Generate transaction number for the Posting.",
          "type": "number"
        },
        "remark": {
          "description": "Posting remarks.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "revenueDate": {
          "description": "The date on which the transaction has its revenue effect.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reversePaymentTransactionNo": {
          "description": "Reverse payment transaction unique identifier.",
          "type": "number"
        },
        "roundingDifferenceTrx": {
          "description": "Indicator to determine if the posting was a posting for the Rounding Difference.",
          "type": "boolean"
        },
        "serviceRecovery": {
          "description": "Flag to indicates service recovery",
          "type": "boolean"
        },
        "stampDuty": {
          "description": "Flag to identify a Stamp Duty Transaction.",
          "type": "boolean"
        },
        "taxInvoiceNo": {
          "description": "Tax invoice number generated by payment tax.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionAmount": {
          "description": "The amount of the transaction.",
          "type": "number"
        },
        "transactionCode": {
          "description": "Billing Transaction Code.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionDescription": {
          "description": "Billing Transaction Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        },
        "transactionType": {
          "description": "This is the transaction type which says whether it is a Consumption(C), Payment (FC) or Package (PK) and it is inherited from transaction code.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "updateInfo": {
          "description": "Update info associated to this transaction.",
          "type": "object",
          "properties": {
            "updateBy": {
              "type": "string"
            },
            "updateDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        }
      }
    },
    "packagePostingsType": {
      "description": "List of package postings.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/packagePostingType"
      }
    },
    "paragraphType": {
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "type": "object",
      "properties": {
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        }
      }
    },
    "passerByCriteriaType": {
      "description": "Criteria type for posting charges.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "charges": {
          "description": "Information regarding the charges which have to be posted.",
          "$ref": "#/definitions/chargesCriteriaType"
        },
        "fiscalFolioInfo": {
          "description": "Generate Fiscal Folio Criteria type to be used for fiscal folio generation.",
          "$ref": "#/definitions/fiscalServiceType"
        },
        "fiscalTerminalId": {
          "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
          "type": "string"
        },
        "folioNameValue": {
          "description": "Custom Folio Name Value Informatoin to be saved",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/nameValueHeaderDetailType"
          }
        },
        "hotelId": {
          "description": "Property where the charges are to be posted.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "incomeAuditDate": {
          "description": "Date of the Audit. This is used when postings are being created using the Income Audit functionality.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "payments": {
          "description": "The payment information to be posted.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/paymentCriteriaType"
          }
        },
        "profileId": {
          "description": "The Profile ID of the PasserBy. If the sale is not a Post-It Sale, then a Profile ID is required.",
          "$ref": "#/definitions/profileId"
        },
        "reason": {
          "description": "The Reason Code and Reason Text which is required when a folio is generated. This input is mandatory when the parameter Credit Bill Reason is active for Credit Bills",
          "$ref": "#/definitions/folioReasonType"
        },
        "trxServiceType": {
          "description": "Transaction service type which the Folio is being associated.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "passerBySale": {
      "description": "Details of the folio created.",
      "type": "object",
      "properties": {
        "folioWindowDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/folioWindowType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "passerBySalesCriteria": {
      "description": "Request to post a set of charges, payments and generate a bill for a PasserBy or for the Post-It functionality . A PasserBy is someone who is not staying at the Property. A PasserBy transaction requires a Profile in Opera for whom the the folio is being created.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for posting the Sale.",
          "$ref": "#/definitions/passerByCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "payeeInfoType": {
      "description": "Payee information.",
      "type": "object",
      "properties": {
        "payeeAccountInfo": {
          "description": "AR account short info of the payee.",
          "$ref": "#/definitions/aRAccountShortInfoType"
        },
        "payeeAddress": {
          "description": "Address of the payee.",
          "$ref": "#/definitions/addressInfoType"
        },
        "payeeAddressCount": {
          "description": "Payee multiple address count.",
          "type": "integer"
        },
        "payeeId": {
          "description": "Opera name id of the payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "payeeName": {
          "description": "Name of the payee.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "payeeReferenceCurrency": {
          "description": "Reference currency of the payee.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "payeeTaxNumber": {
          "description": "The tax number of the payee.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "payeeTaxNumber": {
      "description": "Request to validate and change Payee Tax Number.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to validate and change Payee Tax Number.",
          "$ref": "#/definitions/changePayeeTaxNumberCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "payloadType": {
      "description": "Fiscal Payload Type.",
      "type": "string",
      "enum": [
        "CheckOut",
        "FolioGeneration"
      ]
    },
    "paymentCriteriaType": {
      "type": "object",
      "properties": {
        "action": {
          "description": "Payment action to know from where the payment has been made.",
          "$ref": "#/definitions/postPaymentActionType"
        },
        "applyCCSurcharge": {
          "description": "Flag to indicate if Credit Card Surcharge has to be applied to this payment, when the functionality for Credit Card Surcharge is available.",
          "type": "boolean"
        },
        "applyCurrencyTaxes": {
          "description": "Flag to indidcate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.",
          "type": "boolean"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "changeDueAmount": {
          "description": "Amount of change given to guest.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "comments": {
          "description": "User Defined Comments. Used for Deposit Payment postings.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "compRedemptions": {
          "description": "Comp redemption information used to post as payment.",
          "$ref": "#/definitions/compRedemptionsType"
        },
        "creditablePaymentTaxes": {
          "description": "Used for Thailand Tax Functionality.The payment tax records that can be used for a Credit Note for this reservation.",
          "$ref": "#/definitions/paymentTaxesType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "manualPaymentTaxInfo": {
          "description": "The Payment Tax information for Thailand Tax functionality. The invoice number and the date will be used.",
          "$ref": "#/definitions/paymentTaxType"
        },
        "overrideARCreditLimit": {
          "description": "Flag to override account receivable credit limit",
          "type": "boolean"
        },
        "overrideInsufficientCC": {
          "description": "Flag to allow a rebate by Credit Card",
          "type": "boolean"
        },
        "paymentMethod": {
          "description": "Payment method used by the payee.",
          "$ref": "#/definitions/cashieringPaymentMethodType"
        },
        "postingAmount": {
          "description": "Amount to post to the folio.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingReference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "postingRemark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "prepaidCardRedemptions": {
          "description": "Prepaid Card redemption information used to post as payment.",
          "$ref": "#/definitions/prepaidCardRedemptionsType"
        },
        "terminalId": {
          "description": "Applicable for chip and pin. The ID of the terminal where the chip and pin device is connected and where the payment is made.",
          "type": "string"
        },
        "vATOffset": {
          "description": "Flag to indidcate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.",
          "type": "boolean"
        }
      }
    },
    "paymentMethodSearchType": {
      "description": "Reservation Payment method search criteria for searching a reservation.",
      "type": "object",
      "properties": {
        "paymentMethod": {
          "description": "Payment Method to search the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "paymentMethodsSearchType": {
      "description": "Defines the payment method to search reservations.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/paymentMethodSearchType"
      }
    },
    "paymentReversalCriteria": {
      "description": "Request for posting payment reversal.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "payment": {
          "description": "Information regarding the payment transaction to be reversed.",
          "$ref": "#/definitions/paymentReversalType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "paymentReversalType": {
      "description": "Information regarding the payment transaction to be reversed.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "description": "Hotel context of the transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonCode": {
          "description": "The reason code for payment reversal.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionNo": {
          "description": "Unique identifier of the transaction to be reversed.",
          "type": "number"
        }
      }
    },
    "paymentTax": {
      "description": "The types of Payment Tax transactions.",
      "type": "string",
      "enum": [
        "Deposit",
        "FrontOffice",
        "CreditNote",
        "CityLedger",
        "AccountsReceivables",
        "NonVat"
      ]
    },
    "paymentTaxInfoType": {
      "description": "Type for Package Tax Information for Thailand Tax functionality.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel context for the Reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationId": {
          "description": "Reservation id for which the Payment Tax information is used.",
          "$ref": "#/definitions/reservationId"
        },
        "taxes": {
          "description": "The payment tax records for this reservation.",
          "$ref": "#/definitions/paymentTaxesType"
        }
      }
    },
    "paymentTaxType": {
      "description": "Information regarding payments made which have Payment Tax.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The payment amount/",
          "$ref": "#/definitions/currencyAmountType"
        },
        "availableCredit": {
          "description": "The amount that is not taxable.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "nonTaxableAmount": {
          "description": "Documentation goes here",
          "$ref": "#/definitions/currencyAmountType"
        },
        "paymentDate": {
          "description": "The Payment Invoice date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "paymentType": {
          "description": "The Type of Payment transaction.",
          "$ref": "#/definitions/paymentTax"
        },
        "taxInvoiceNo": {
          "description": "The Tax Invoice for this payment.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "taxableAmount": {
          "description": "The amount that is taxable.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionCode": {
          "description": "Billing Transaction Code of the Payment.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction Date of the Payment.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionDescription": {
          "description": "Billing Transaction Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        }
      }
    },
    "paymentTaxesType": {
      "description": "Payment Tax record.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/paymentTaxType"
      }
    },
    "personNameType": {
      "description": "This provides name information for a person.",
      "type": "object",
      "properties": {
        "envelopeGreeting": {
          "description": "Envelope Greeting of the profile",
          "type": "string"
        },
        "externalSystem": {
          "description": "When name type is external, indicates the external system the name belongs to.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "nameTitleSuffix": {
          "description": "Title Suffix. Must be populated if ADVANCED_TITLE is on.",
          "type": "integer"
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        },
        "salutation": {
          "description": "Salutation of the profile",
          "type": "string"
        },
        "surname": {
          "description": "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "personNameTypeType": {
      "description": "Person's name in an external system.",
      "type": "string",
      "enum": [
        "Primary",
        "Alternate",
        "Incognito",
        "External",
        "Phonetic"
      ]
    },
    "phoneNumberType": {
      "description": "Phone number",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "pointsType": {
      "description": "The Redeem Points contains the number of points required to book a room type.",
      "type": "object",
      "properties": {
        "awardsType": {
          "description": "Awards type for the award type rate code.",
          "type": "string"
        },
        "points": {
          "description": "No of points required to book this Room Stay.",
          "type": "integer"
        }
      }
    },
    "policyAmountPercentType": {
      "description": "Defines the percentage basis for calculating the fee amount or the amount.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "basisType": {
          "description": "Provides the basis for how the amount of the guarantee is calculated.",
          "$ref": "#/definitions/policyBasisTypeType"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "maxLength": 3,
          "minLength": 3
        },
        "nights": {
          "description": "The number of nights of the hotel stay that are used to calculate the fee amount.",
          "type": "integer"
        },
        "percent": {
          "description": "The percentage used to calculate the amount.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        }
      }
    },
    "policyApplyCriteriaType": {
      "description": "Criteria for Attaching or Detaching a Deposit Policy towards a Deposit payment.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property where the deposit exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "policyId": {
          "description": "Deposit Policy Id of the policy which would be attached to the payment.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "transactionNo": {
          "description": "The transaction number of the payment to which the Deposit policy is being attached or detached.",
          "type": "number"
        }
      }
    },
    "policyBasisTypeType": {
      "description": "Full Amount.",
      "type": "string",
      "enum": [
        "FlatAmount",
        "Percentage",
        "Nights",
        "NightPercentage",
        "FullAmount"
      ]
    },
    "policyDeadlineType": {
      "description": "Cancellation deadline, absolute or relative.",
      "type": "object",
      "properties": {
        "absoluteDeadline": {
          "description": "Defines the absolute deadline. Either this or the offset attributes may be used.",
          "type": "string",
          "format": "date-time"
        },
        "offsetDropTime": {
          "description": "Time on offset day the cancellation penalties applies.",
          "type": "string",
          "format": "date-time"
        },
        "offsetFromArrival": {
          "description": "The number of days before arrival that allows cancellation without penalties.",
          "type": "integer"
        },
        "offsetFromBookingDate": {
          "description": "The number of days after booking deposit must be paid.",
          "type": "integer"
        }
      }
    },
    "postBillingChargesInBatchCriteriaType": {
      "description": "Criteria type for posting charges.",
      "type": "object",
      "properties": {
        "charges": {
          "description": "Information regarding the charges which have to be posted.",
          "$ref": "#/definitions/chargesCriteriaType"
        },
        "hotelId": {
          "description": "Property where the charges are to be posted.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservations": {
          "$ref": "#/definitions/reservations"
        }
      }
    },
    "postBillingCheckChargesCriteriaType": {
      "description": "Details of the check with line item charges to post to a guest folio.",
      "type": "object",
      "properties": {
        "cashierId": {
          "description": "Cashier Id of the Cashier.",
          "type": "number"
        },
        "checkId": {
          "description": "Unique identifier of this check in the partner system, applicable only if the charge is originated in a partner system.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "checkNumber": {
          "description": "Indicates the check number.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "items": {
          "description": "Line items of the check.",
          "$ref": "#/definitions/postBillingCheckChargesItemsCriteriaType"
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        },
        "revenueDate": {
          "description": "The date against which charges are posted.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "postBillingCheckChargesItemCriteriaType": {
      "description": "Line item of check to post.",
      "type": "object",
      "properties": {
        "postingRemark": {
          "description": "Text describing any applicable detail of the posting.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "price": {
          "description": "Amount to post.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionCode": {
          "description": "Transaction code to use for the posting.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "postBillingCheckChargesItemsCriteriaType": {
      "description": "Line items of the check.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/postBillingCheckChargesItemCriteriaType"
      }
    },
    "postCompRedemptions": {
      "description": "Request type of complimentary bucket redemptions posting.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to post complimentary bucket redemptions request.",
          "type": "object",
          "properties": {
            "cashierId": {
              "description": "Numeric ID of the cashier.",
              "$ref": "#/definitions/cashierId"
            },
            "compRedemptions": {
              "description": "Complimentary bucket redemptions to post as payment.",
              "$ref": "#/definitions/compRedemptionsType"
            },
            "folioView": {
              "description": "Folio Window.",
              "type": "integer"
            },
            "membershipId": {
              "description": "Membership number.",
              "type": "string",
              "maxLength": 100,
              "minLength": 0
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postDepositToGuestFolioType": {
      "description": "Criteria for transferring the Deposit Amount to the Guest Folio",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "description": "Resort for which the reservation defined.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationId": {
          "description": "Unique ID of a reservation.",
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "postFiscalInfoType": {
      "description": "FiscalInfo criteria type.",
      "type": "object",
      "properties": {
        "fiscalPayloadType": {
          "description": "Fiscal Payload Type.",
          "$ref": "#/definitions/payloadType"
        }
      }
    },
    "postForeignCurrencyExchangeType": {
      "description": "Currency conversion calculation type.",
      "type": "object",
      "properties": {
        "cashierId": {
          "description": "The Cashier who is posting.",
          "$ref": "#/definitions/cashierId"
        },
        "exchangeDate": {
          "description": "Date on which exchange rate was obtained.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "exchangeReference": {
          "description": "Exchange references.",
          "type": "string"
        },
        "exchangeType": {
          "description": "Type for exchange calculation.",
          "$ref": "#/definitions/currencyExchangeType"
        },
        "fromCurrencyAmount": {
          "description": "Amount and code of currency that is being converted from.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guestName": {
          "description": "Name of the guest to whom posting is done.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property code where the currency is being converted.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "passerByName": {
          "description": "Name of the passer by customer to whom posting is to be done.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "profileId": {
          "description": "Profile ID of the profile to post to.",
          "$ref": "#/definitions/profileId"
        },
        "reservationId": {
          "description": "Reservation id",
          "$ref": "#/definitions/reservationId"
        },
        "room": {
          "description": "Room to which posting is to be made.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sell": {
          "description": "Buy or Sell for calculation.",
          "type": "boolean"
        }
      }
    },
    "postPaymentActionType": {
      "description": "Advance Payment Action.",
      "type": "string",
      "enum": [
        "Billing",
        "Settlefolio",
        "Deposit",
        "Compredemption",
        "Prepaidcardredemption",
        "Advancepayment"
      ]
    },
    "postRateCodeCheckType": {
      "description": "The response type for Checks done before Posting a Rate Code amount to a reservation.",
      "type": "object",
      "properties": {
        "canPostProducts": {
          "description": "Indicates that the Products(Packages) which are included in the Rate Code cannot be posted as part of this transaction. This could be the case where the reservation is an Open Folio or has Post Stay.",
          "type": "boolean"
        },
        "canReverseProducts": {
          "description": "Indicates that the Products(Packages) which are included in the Rate Code cannot be reversed as part of this transaction. This could be the case when the reservation has consumed the allowance already and is now trying to reverse the Rate Code by using a negative quantity.",
          "type": "boolean"
        },
        "rateCodeHasProducts": {
          "description": "Indicates that the Rate Code has Products(Packages) for the user to determine if they should be posted.",
          "type": "boolean"
        }
      }
    },
    "postRateCodeCriteria": {
      "description": "Request to check if a Rate Code can be posted to the room manually. This will check if the Rate Code is valid, if the Products(Packages) which are defined as part of the Rate Code can be posted or reversed.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Information on the Rate Code and reservation where it should be posted.",
          "$ref": "#/definitions/postRateCodeCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postRateCodeCriteriaType": {
      "description": "Criteria type for posting a Rate Code amount to a guest folio.",
      "type": "object",
      "properties": {
        "adjustmentCode": {
          "description": "Adjustment code to be used for the manual posting of rate code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cashierId": {
          "description": "The Cashier who is posting.",
          "$ref": "#/definitions/cashierId"
        },
        "checkNo": {
          "description": "Check number for the posting.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "guestCounts": {
          "description": "Holds the guest counts(adults or children) for posting the Rate Code to the reservation.",
          "$ref": "#/definitions/guestCountsType"
        },
        "hotelId": {
          "description": "Hotel context for the Reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nights": {
          "description": "Number of nights to post the Rate Code for. Used for Comp Accounting.",
          "type": "integer"
        },
        "parentTrxNo": {
          "description": "The linked transaction number for this Posting of Rate Code.",
          "type": "number"
        },
        "postProducts": {
          "description": "Flag to indicate if Products(Packages) which are part of the Rate Code should be posted as part of this operation. If products are not required, the entire amount will be posted towards the room element of the Rate Code.",
          "type": "boolean"
        },
        "price": {
          "description": "Price of the Rate Code.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "quantity": {
          "description": "Posting quantity.",
          "type": "integer"
        },
        "rateCode": {
          "description": "The Rate Code which is to be posted on the Guest Folio.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "remark": {
          "description": "Posting remarks.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reservationId": {
          "description": "Reservation e",
          "$ref": "#/definitions/reservationId"
        },
        "revenueDate": {
          "description": "Revenue Date or the business date of the posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "postRoomAndTaxForDayUse": {
      "type": "object",
      "properties": {
        "cashierId": {
          "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
          "$ref": "#/definitions/cashierId"
        },
        "reservationId": {
          "description": "Reservation Id for which room and tax is to be posted.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postSupplementalFolio": {
      "description": "Request to post a Supplemental Folio for an existing Folio. Debit Bill ( Supplemental Folio ) Functionality parameter is required",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for creating the Supplemental Folio. This should include all charges and payments for the Supplemental Folio.",
          "$ref": "#/definitions/supplementalFolioCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postSupplementalFolioStatus": {
      "description": "Response for the request to create Supplemental Folio.",
      "type": "object",
      "properties": {
        "folioWindow": {
          "description": "Information regarding the new Supplemental Folio created.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioWindowType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "payments": {
          "description": "Deposit payment information of the payment which was posted.",
          "$ref": "#/definitions/detailPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postedBillingChargesInBatch": {
      "description": "Operation response to post billing charge with list of reservations.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationBatchChargeInfoList": {
          "description": "Information regarding charges in batch result for each reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationChargesInBatchInfoType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postedBillingPayment": {
      "description": "Response notifying if the posting of a payment to a reservation was successful.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "postings": {
          "description": "List of Postings produced by Billing Payment Request.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postedCreditBill": {
      "description": "Response for the request to create a Credit Folio.",
      "type": "object",
      "properties": {
        "folioWindow": {
          "description": "Information regarding the new Credit Folio created.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/folioWindowType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "payments": {
          "description": "Deposit payment information of the payment which was posted.",
          "$ref": "#/definitions/detailPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postedDepositFolio": {
      "description": "Response to the request to create a Deposit Folio for a reservation.",
      "type": "object",
      "properties": {
        "deposits": {
          "description": "Deposit payment information of the payment which was posted.",
          "$ref": "#/definitions/depositPostingsType"
        },
        "folioWindow": {
          "description": "Information regarding the new Deposit Folio created.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/folioWindowType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postedRateCode": {
      "description": "Response for the operation that posts a Rate Code amount on the reservation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "postings": {
          "description": "The postings which were made as part of the operation.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postingActivityDetail": {
      "description": "Response to the request to get financial details for a Posting Activity. This will return the before and after values for the transactions which were changed.",
      "type": "object",
      "properties": {
        "details": {
          "description": "The details of the changes made during the activity.",
          "$ref": "#/definitions/postingActivityDetailType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postingActivityDetailType": {
      "description": "Details of a Posting transaction change.",
      "type": "object",
      "properties": {
        "activity": {
          "description": "Information of the Activity that changed the Posting transaction.",
          "$ref": "#/definitions/activityLogType"
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "newInfo": {
          "description": "The new information after the change.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "oldInfo": {
          "description": "The original information prior to the change.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "postingBreakdownType": {
      "description": "Details of a financial posting's breakdown.",
      "type": "object",
      "properties": {
        "grossAmount": {
          "description": "Gross amount of posting.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "netAmount": {
          "description": "Net amount of posting.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "taxes": {
          "description": "Taxes breakout associated to postings",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/generatePostingType"
          }
        }
      }
    },
    "postingGroupType": {
      "description": "Transaction group information. Ever posting could represent a. Regular transaction b. Group header - has Group Id, Count, Descripton and Includes Group Memebers elements c. Group transaction - has SubGroupId element pointing to Group Header Id",
      "type": "object",
      "properties": {
        "groupCount": {
          "description": "Number of transactions in group.",
          "type": "integer"
        },
        "groupDescription": {
          "description": "Group Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "groupId": {
          "description": "Group Id.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "subGroupId": {
          "description": "Indicates to which group transaction belongs.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "postingSummaryList": {
      "description": "Response object to fetch daily summary charges from Opera which are posted in Opera by external system.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "postingSummaries": {
          "description": "List of Summary of total postings in Opera.",
          "$ref": "#/definitions/postingSummaryListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postingSummaryListType": {
      "description": "Summary of the postings by external system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/postingSummaryType"
      }
    },
    "postingSummaryType": {
      "description": "summary of the postings by external system.",
      "type": "object",
      "properties": {
        "totalAmount": {
          "description": "Total Amount Posted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalCheckCount": {
          "description": "Total count of checks posted.",
          "type": "integer"
        },
        "totalPostings": {
          "description": "Total count of postings.",
          "type": "integer"
        }
      }
    },
    "postingTimeType": {
      "description": "Time of posting.",
      "type": "object",
      "properties": {
        "time": {
          "description": "Time of posting.",
          "type": "string",
          "format": "date-time"
        },
        "timezone": {
          "description": "Timezone associated with posting time.",
          "type": "string"
        }
      }
    },
    "postingsForRefresh": {
      "description": "Response object that lists the transactions that can be refreshed when a routing instruction set is refreshed.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "postingsForRoomRouting": {
          "description": "Transaction details along with the transaction code information.",
          "$ref": "#/definitions/postingsInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postingsInfoType": {
      "description": "This type is useful to hold the transaction details along the transaction code information.",
      "type": "object",
      "properties": {
        "transactions": {
          "description": "The details regarding the transaction(Posting).",
          "$ref": "#/definitions/detailPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        }
      }
    },
    "prepaidCardCriteria": {
      "description": "Request type for prepaid card creation/reload/redeem/removal process",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for creation/reload/redeem/removal of prepaid cards.",
          "$ref": "#/definitions/prepaidCardCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "prepaidCardCriteriaType": {
      "description": "Holds fixed charge information.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Prepaid Card Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cardDetails": {
          "description": "Prepaid Card details from vendor.",
          "$ref": "#/definitions/prepaidCardDetailsType"
        },
        "cardNo": {
          "description": "Prepaid card / account number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberMasked": {
          "description": "Masked Prepaid card / account number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "firstName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "giftCard": {
          "description": "Indicates a gift card type.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel context for the Reservations.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "interfaceId": {
          "description": "The unique ID for the Interface.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Family name, last name or Company Name.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "pinCode": {
          "description": "Prepaid card pin code.",
          "type": "string",
          "maxLength": 10,
          "minLength": 0
        },
        "postChargeToRoom": {
          "type": "boolean"
        },
        "profileId": {
          "description": "Card / Account holder name ID",
          "$ref": "#/definitions/profileId"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationId": {
          "description": "The unique ID of the reservation to which this record applies.",
          "$ref": "#/definitions/reservationId"
        },
        "saleCriteria": {
          "$ref": "#/definitions/saleCriteriaType"
        },
        "vendorInterfaceID": {
          "type": "number"
        }
      }
    },
    "prepaidCardDetailsType": {
      "description": "Prepaid Card Details.",
      "type": "object",
      "properties": {
        "activateDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "balanceTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "creditTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "expiredDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "initialCreditTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "initialLoadDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservedTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactions": {
          "description": "Holds fixed charge detail.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/prepaidCardTransactionType"
          }
        },
        "validUntilDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "prepaidCardInfoType": {
      "description": "Detailed information about the prepaid card.",
      "type": "object",
      "properties": {
        "availableCashoutAmount": {
          "description": "Available cashout of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Balance of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cardNo": {
          "description": "Prepaid card number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberMasked": {
          "description": "Masked Prepaid card / account number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "expiryDate": {
          "description": "Expiry Date of the prepaid card.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotelId": {
          "description": "Hotel context for the prepaid card.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "initialCredit": {
          "description": "Initial Credit of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "initialLoadDate": {
          "description": "Initial Load Date of the prepaid card.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "interfaceId": {
          "description": "The unique ID for the Interface.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "issueDate": {
          "description": "Issue Date of the prepaid card.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "operaTransactionsActive": {
          "description": "Indicate if opera transactions are included on the transactions list.",
          "type": "boolean"
        },
        "prepaidCardTransactions": {
          "description": "List of prepaid card transactions.",
          "$ref": "#/definitions/prepaidCardTransactionsType"
        },
        "reservationId": {
          "description": "The reservation name id where the transaction is associated.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reservedAmount": {
          "description": "Reserved Amount of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalCredit": {
          "description": "Total Credit of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalDebit": {
          "description": "Total Debt of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "validUntil": {
          "description": "Validity of the prepaid card amount.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "vendorTransactionsActive": {
          "description": "Indicate if vendor transactions are included on the transactions list.",
          "type": "boolean"
        }
      }
    },
    "prepaidCardRedemptionType": {
      "description": "Redemption information.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The amount to redeem when posting a payment.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cardNo": {
          "description": "Prepaid card number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "interfaceId": {
          "description": "The unique ID of the Interface.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "pin": {
          "description": "Prepaid card number.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "reference": {
          "description": "Additional information regarding the redemption.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionCode": {
          "description": "The associated redemption transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "prepaidCardRedemptionsType": {
      "description": "A prepaid redemption info object to be used for posting a payment.",
      "type": "array",
      "maxItems": 1000,
      "items": {
        "$ref": "#/definitions/prepaidCardRedemptionType"
      }
    },
    "prepaidCardTransactionInfoType": {
      "description": "Prepaid Card Transactions",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Prepaid card transaction amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cancellable": {
          "description": "Indicate if the transaction is cancellable or not.",
          "type": "boolean"
        },
        "date": {
          "description": "Prepaid card transaction date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "profileId": {
          "description": "The guest name id associated to the card.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "source": {
          "description": "Prepaid card transaction source.",
          "$ref": "#/definitions/prepaidCardTransactionSourceType"
        },
        "transactionNo": {
          "description": "Opera transaction number.",
          "type": "integer"
        },
        "type": {
          "description": "Prepaid card transaction type.",
          "$ref": "#/definitions/prepaidCardTrxTypeType"
        },
        "vendorTransactionNo": {
          "description": "Vendor transaction number.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        }
      }
    },
    "prepaidCardTransactionSourceType": {
      "description": "Vendor transaction source type.",
      "type": "string",
      "enum": [
        "Opera",
        "Vendor"
      ]
    },
    "prepaidCardTransactionType": {
      "description": "Prepaid Card transaction.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Prepaid Card Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionDate": {
          "description": "Transaction number of the Prepaid card transaction.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionNo": {
          "description": "Transaction number of the Prepaid card transaction.",
          "type": "number"
        },
        "transactionType": {
          "description": "Transaction type enumeration.",
          "$ref": "#/definitions/prepaidCardTrxTypeType"
        }
      }
    },
    "prepaidCardTransactionsType": {
      "description": "Prepaid card transaction details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/prepaidCardTransactionInfoType"
      }
    },
    "prepaidCardTrxTypeType": {
      "description": "Reload transaction.",
      "type": "string",
      "enum": [
        "Activate",
        "Cancel",
        "Cashout",
        "Inquiry",
        "Issue",
        "Redeem",
        "Reload"
      ]
    },
    "prepaidCardsInfoType": {
      "description": "Prepaid card info object.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/prepaidCardInfoType"
      }
    },
    "processFiscalRetry": {
      "description": "The request object to process fiscal retry functionality.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to call the fiscal service again.",
          "$ref": "#/definitions/fiscalRetryType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "processFiscalRetryStatus": {
      "description": "The response object to send back the fiscal service response to opera.",
      "type": "object",
      "properties": {
        "folioSeqId": {
          "description": "Fiscal Folio sequence ID stored in queue table.",
          "type": "integer"
        },
        "isLastRetry": {
          "description": "Indicating if it is last trial for fiscal printing.",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "processReservationDepositCriteriaType": {
      "description": "Criteria to process reservation deposit.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The Amount would be transferred to the Guest Ledger of the Psuedo Posting Room if the DepositProcessingType = Keep/Return otherwise it will be transferred to the Guest Ledger of the current reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "depositProcessType": {
          "description": "Deposit process type of the reservation.",
          "$ref": "#/definitions/depositProcessType"
        },
        "hotelId": {
          "description": "Hotel code of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "percentage": {
          "description": "The Percentage would be transferred to the Guest Ledger of the Psuedo Posting Room if the DepositProcessingType = Keep/Return otherwise it will be transferred to the Guest Ledger of the current reservation.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "reservationId": {
          "description": "Reservation id of the reservation",
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "profileId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "profileIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "profileInfoType": {
      "description": "Provides information about attached profiles to the block.",
      "type": "object",
      "properties": {
        "city": {
          "description": "City for the profile attached to the block.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "name": {
          "description": "Name for the profile attached to the block.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "phone": {
          "description": "Phone for the profile attached to the block.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "profileId": {
          "description": "Opera ID for the profile attached to the block.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "type": {
          "description": "Defines the type of Linked profiles for a block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "proformaResponseInstructionType": {
      "description": "Response instructions for Proforma Creation.",
      "type": "string",
      "enum": [
        "None",
        "FolioSummary"
      ]
    },
    "projectedRevenueType": {
      "description": "Information about projected catering and room revenue for the reservation.",
      "type": "object",
      "properties": {
        "projectedCateringRevenue": {
          "description": "Projected catering revenue for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "projectedRoomRevenue": {
          "description": "Projected room revenue for the reservation",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomNights": {
          "description": "Number of room nights for the reservation.",
          "type": "integer"
        }
      }
    },
    "promotionType": {
      "description": "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation.",
      "type": "object",
      "properties": {
        "couponCode": {
          "description": "Promotion Coupon Code when promotion is setup to have a valid coupon code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "promotionCode": {
          "description": "Promotion code associated with the rate plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "promotionName": {
          "description": "Promotion code Name associated with the rate plan.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "putBillingCharges": {
      "description": "Request to edit a billing charge information.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for the charge information to be edited.",
          "$ref": "#/definitions/billingChargesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "putBillingChargesStatus": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "queueTextInfoType": {
      "description": "Information regarding the message sent to guest.",
      "type": "object",
      "properties": {
        "sentBy": {
          "description": "User name of the user who sent message.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "sentTime": {
          "description": "Time the text was last sent to the user.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "receiptHistoryResponse": {
      "description": "Response for the fetch Receipt History.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "receiptHistory": {
          "description": "List of Receipt History.",
          "$ref": "#/definitions/receiptsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "receiptSummaryType": {
      "description": "Contains Receipt Details.",
      "type": "object",
      "properties": {
        "customNumbers": {
          "description": "Custom Number.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "type": "string",
            "maxLength": 200,
            "minLength": 0
          }
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "payeeInfo": {
          "description": "Payee information for the Receipt.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "receiptAmount": {
          "description": "Receipt gross amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "receiptNo": {
          "description": "Receipt Number.",
          "type": "number"
        },
        "receiptType": {
          "description": "Receipt Type.",
          "$ref": "#/definitions/receiptType"
        },
        "receiptTypeDescription": {
          "description": "Receipt Type Description.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "taxInvoice": {
          "description": "Tax Invoice Number of the Receipt.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "transactionNo": {
          "description": "Transaction Number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "receiptType": {
      "description": "This contains the receipt type.",
      "type": "string",
      "enum": [
        "Payment",
        "Deposit",
        "Paidout",
        "Transaction",
        "CheckExchange",
        "CurrencyExchangeCheck",
        "CurrencyExchangeCash",
        "DepositRequest",
        "DepositRefundReceipt",
        "Acknowledgement"
      ]
    },
    "receiptsType": {
      "description": "Receipt History details.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/receiptSummaryType"
      }
    },
    "redeemPrepaidCardCriteriaType": {
      "description": "Criteria for Prepaid card redeem request.",
      "type": "object",
      "properties": {
        "cashierId": {
          "description": "Numeric ID of the cashier.",
          "$ref": "#/definitions/cashierId"
        },
        "folioView": {
          "description": "Folio Window.",
          "type": "integer"
        },
        "hotelId": {
          "description": "Hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "prepaidCardRedemptions": {
          "description": "Prepaid Card redemption information used to post as payment.",
          "$ref": "#/definitions/prepaidCardRedemptionsType"
        },
        "reservationId": {
          "description": "Reservation id of the reservation",
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "redeemPrepaidCards": {
      "description": "Request type for Prepaid card redeem amount request",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for Prepaid card redeem request.",
          "$ref": "#/definitions/redeemPrepaidCardCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "redeemPrepaidCardsStatus": {
      "description": "Response for redeem Prepaid cards request.",
      "type": "object",
      "properties": {
        "prepaidCards": {
          "description": "Prepaid Card details type.",
          "$ref": "#/definitions/prepaidCardsInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "redemptionType": {
      "description": "Redemption information.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The amount to redeem when posting a payment.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalCode": {
          "description": "Approval Code of the Complimentary Bucket Redemption.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "availableAmount": {
          "description": "Available Amount of the Complimentary Bucket Redemption.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "code": {
          "description": "The associated redemption code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the Complimentary Bucket Redemption.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "supplement": {
          "description": "Additional information regarding the redemption.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionCode": {
          "description": "Transaction code of the Complimentary Bucket Redemption.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionNo": {
          "description": "Transaction Number of the Complimentary Bucket Redemption.",
          "type": "number"
        }
      }
    },
    "reinstateCheckedOutReservation": {
      "description": "Request to reinstate checkout reservation in order to post additional transactions, etc.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "description": "Hotel code.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "notifyInterfaces": {
          "description": "Indicates whether interfaces should be notified.",
          "type": "boolean"
        },
        "overrideFlag": {
          "description": "Indicate whether user wants to reinstate even if some other guest already checked in into same room.",
          "type": "boolean"
        },
        "reservationId": {
          "description": "Identifies the reservation to reinstate..",
          "$ref": "#/definitions/reservationId"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reloadPrepaidCard": {
      "description": "Request type for reload prepaid card.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Prepaid card criteria type used to perform manage operation on the card.",
          "type": "object",
          "properties": {
            "amount": {
              "description": "Prepaid card transaction amount.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "cardNo": {
              "description": "Prepaid card number.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "cashierId": {
              "$ref": "#/definitions/cashierId"
            },
            "hotelId": {
              "description": "Hotel code.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "interfaceId": {
              "description": "The unique ID for the Interface.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "pin": {
              "description": "PIN code associated for the prepaid card.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "postChargeToRoom": {
              "description": "Indicate that charges will be posted to the room.",
              "type": "boolean"
            },
            "profileId": {
              "description": "The guest name id associated to the card.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "reservationId": {
              "description": "The reservation name id where the transaction is associated.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "saleCriteria": {
              "description": "Represent the sale criteria.",
              "$ref": "#/definitions/saleCriteriaType"
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reloadPrepaidCardStatus": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "resAccessRestrictionType": {
      "description": "Indicates any Updates/Changes on the reservation as well as Reservation Cancellation are not allowed.",
      "type": "string",
      "enum": [
        "Change",
        "Cancel",
        "ChangeOrCancel"
      ]
    },
    "resAccompanyGuestInfoType": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "resAccompanyGuestListType": {
      "description": "Collection of accompany guests",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAccompanyGuestInfoType"
      }
    },
    "resAttachedProfileListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAttachedProfileType"
      }
    },
    "resAttachedProfileType": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Attached profile name",
          "type": "string"
        },
        "profileIdList": {
          "description": "Collection of unique profile identifiers",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "resCancelPenaltyType": {
      "description": "The CancelPenalty class defines the cancellation policy of the hotel facility.",
      "type": "object",
      "properties": {
        "amountPercent": {
          "description": "Cancellation fee expressed as a fixed amount, or percentage of/or room nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "deadline": {
          "description": "Cancellation deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "effective": {
          "description": "Indicator if Cancellation Penalty is currently applicable or not.",
          "type": "boolean"
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the Cancellation Penalty.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        },
        "nonRefundable": {
          "description": "Indicates if the amount is refundable if booking is canceled.",
          "type": "boolean"
        },
        "offsetUnit": {
          "$ref": "#/definitions/offsetUnitType"
        },
        "penaltyDescription": {
          "description": "Text description of the Penalty in a given language.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "policyCode": {
          "description": "Policy Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resCancellationPoliciesType": {
      "description": "A list of reservation cancellation policies.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resCancellationPolicyType"
      }
    },
    "resCancellationPolicyType": {
      "description": "A cancellation policy attached with the reservation.",
      "type": "object",
      "properties": {
        "comments": {
          "description": "Comments attached with the reservation cancellation.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "percentageDue": {
          "description": "The percentage amount due for reservation cancellation.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "policy": {
          "description": "Cancellation policy details.",
          "$ref": "#/definitions/resCancelPenaltyType"
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "revenueType": {
          "description": "Type of reservation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        }
      }
    },
    "resCashieringType": {
      "description": "Cashiering Information for the reservation.",
      "type": "object",
      "properties": {
        "bedTaxReporting": {
          "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
          "$ref": "#/definitions/bedTaxReportingType"
        },
        "billingPrivileges": {
          "description": "Billing privileges set on the reservation.",
          "$ref": "#/definitions/billingPrivilegesType"
        },
        "compAccounting": {
          "description": "Information regarding comp accounting on the reservation.",
          "$ref": "#/definitions/resCompAccountingType"
        },
        "financiallyResponsible": {
          "description": "The guest from whom payment has to be recovered (direct guest).",
          "type": "boolean"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "lastRoomAndTaxPostedDate": {
          "description": "Date of the last Room And Tax posting. Used primarily to know the date in case of Advance Billing.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "periodicFolio": {
          "description": "Information regarding periodic folios set on the reservation.",
          "$ref": "#/definitions/resPeriodicFolioType"
        },
        "proratedBilling": {
          "description": "In case of Appartment style billing indicates whether a prorated amount should be used for an Apartment Style Billing rate.",
          "type": "boolean"
        },
        "reservationPreConfiguredRoutingInstruction": {
          "description": "Information regarding the selected preconfigured routing instruction on the reservation.",
          "$ref": "#/definitions/resPreConfiguredRoutingInstrType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "reverseAdvanceCheckInAllowed": {
          "description": "This attribute is to verify if reverse advance check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/reservationTaxTypeInfo"
        },
        "transactionsPosted": {
          "description": "Specifies whether reservation has a financial transaction associated with it.",
          "type": "boolean"
        }
      }
    },
    "resCommunicationType": {
      "description": "Communication details for a reservation.",
      "type": "object",
      "properties": {
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        }
      }
    },
    "resCompAccountingType": {
      "description": "Information regarding comp accounting on the reservation.",
      "type": "object",
      "properties": {
        "authorizer": {
          "description": "ID of the employee who will act as the host for this guest.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "compPostings": {
          "description": "Indicates if the Comp Billing/posting Exist",
          "type": "string",
          "maxLength": 5,
          "minLength": 0
        },
        "compType": {
          "description": "Code used to identify the casino comp type and ranking of a guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resDepositPoliciesType": {
      "description": "A list of deposit policies attached with the reservation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resDepositPolicyType"
      }
    },
    "resDepositPolicyType": {
      "description": "A deposit policy attached with the reservation.",
      "type": "object",
      "properties": {
        "amountDue": {
          "description": "Total amount due against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amountPaid": {
          "description": "Total amount paid against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "comments": {
          "description": "Comments attached with a deposit.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "policy": {
          "description": "Reservation deposit policy details.",
          "$ref": "#/definitions/depositPolicyType"
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "revenueType": {
          "description": "Type of reservation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        }
      }
    },
    "resExpectedTimesType": {
      "description": "Holds the Arrival and Departure Time Information",
      "type": "object",
      "properties": {
        "reservationExpectedArrivalTime": {
          "description": "Arrival Time",
          "type": "string",
          "format": "date-time"
        },
        "reservationExpectedDepartureTime": {
          "description": "Departure Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "resGuaranteeType": {
      "description": "Validations type record returned after Validations are done.",
      "type": "object",
      "properties": {
        "guaranteeCode": {
          "description": "Guarantee Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "onHold": {
          "description": "Guarantee Code.",
          "type": "boolean"
        },
        "shortDescription": {
          "description": "Guarantee Code.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "resGuestExternalInfoType": {
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "type": "object",
      "properties": {
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        }
      }
    },
    "resGuestInfoType": {
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "type": "object",
      "properties": {
        "accompanyGuests": {
          "description": "List of guest names that are accompanying the reservation guest",
          "$ref": "#/definitions/resAccompanyGuestListType"
        },
        "address": {
          "description": "Address information that is attached to the reservation guest",
          "$ref": "#/definitions/addressSearchType"
        },
        "alternateFullName": {
          "description": "Altername full display name",
          "type": "string"
        },
        "alternateGivenName": {
          "description": "Alternate given name, first name or names",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "alternateSurname": {
          "description": "Alternate family name, last name.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "birthDate": {
          "description": "Date of birth",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "email": {
          "description": "Email address",
          "$ref": "#/definitions/basicEmailType"
        },
        "externalInfo": {
          "description": "External information about the guest associated with the reservation.",
          "$ref": "#/definitions/resGuestExternalInfoType"
        },
        "fullName": {
          "description": "Full display name",
          "type": "string"
        },
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "guestLastStayInfo": {
          "description": "Contains information regarding the last stay of this guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "guestRestricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        },
        "guestRestrictedCode": {
          "description": "Guest profile restricted reason code",
          "type": "string"
        },
        "guestRestrictedReasonDesc": {
          "description": "Guest profile restricted reason description",
          "type": "string"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "membership": {
          "description": "The Membership object identifying the frequent customer reward program.",
          "$ref": "#/definitions/membershipInfoType"
        },
        "middleName": {
          "description": "The middle name of the person name",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "namePrefix": {
          "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
          "$ref": "#/definitions/namePrefixType"
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "nameType": {
          "$ref": "#/definitions/nameTypeType"
        },
        "nationality": {
          "description": "Affiliation or ethnicity to a particular country.",
          "$ref": "#/definitions/countryNameType"
        },
        "phoneNumber": {
          "description": "Phone number",
          "$ref": "#/definitions/phoneNumberType"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        },
        "surnamePrefix": {
          "description": "e.g \"van der\", \"von\", \"de\"",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "vip": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "$ref": "#/definitions/vIPType"
        }
      }
    },
    "resHousekeepingType": {
      "description": "Holds housekeeping turndown service information for the room.",
      "type": "object",
      "properties": {
        "expectedServiceTime": {
          "description": "Expected Start Time for housekeeping task(s).",
          "type": "string"
        },
        "facilityTaskInfo": {
          "description": "The facility task applicable for the current day. This will be information only and not used for any updates.",
          "$ref": "#/definitions/facilityTaskType"
        },
        "instructions": {
          "description": "Turndown instructions for the room.",
          "type": "string"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "roomStatus": {
          "description": "Current room status. Current room status is populated only if room is assigned to the reservation and reservation is due in or in house.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "serviceTime": {
          "description": "This is the Turndown room service time.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "turndownRequested": {
          "description": "Indicates whether guest wants turndown facility or not.",
          "type": "boolean"
        }
      }
    },
    "resMobileNotificationsType": {
      "description": "Contains the status of Room Ready and Key Ready messages.",
      "type": "object",
      "properties": {
        "checkoutMessageReceived": {
          "description": "Indicates if the Mobile checkout message is received.",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "Error message when Mobile Notification has failed.",
          "type": "string"
        },
        "keyReady": {
          "description": "Denotes the status of Key Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "requiresAction": {
          "description": "Indicates if user action is required. The action could be for sending Room Ready or Key Ready Notification. It could also be for initiating Checkout",
          "type": "boolean"
        },
        "roomReady": {
          "description": "Denotes the status of Room Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        }
      }
    },
    "resPaymentCardType": {
      "description": "Information on a credit card for the customer.",
      "type": "object",
      "properties": {
        "approvalAmountNeeded": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalCode": {
          "description": "Approval code sent by the credit card company on a successful authorization.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "attachCreditCardToProfile": {
          "description": "Attach the credit card to profile.",
          "type": "boolean"
        },
        "cardHolderName": {
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cardNumber": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardNumberMasked": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "cardOrToken": {
          "description": "This contains information on whether credit card is tokenized (token enabled). A value of 'Token' indicates credit card is token enabled and 'CardNumber' indicates non token environment for this payment card type.",
          "$ref": "#/definitions/cardNumberTypeType"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
          "type": "boolean"
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "maxLength": 30,
          "minLength": 0
        },
        "currentAuthorizedAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "expirationDate": {
          "description": "Expiration date of the credit card",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expirationDateExpired": {
          "type": "boolean"
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        },
        "storeToCreditCardWallet": {
          "description": "Indicate whether the credit card will be stored to the credit card wallet or not.",
          "type": "boolean"
        },
        "swiped": {
          "type": "boolean"
        },
        "userDefinedCardType": {
          "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
          "type": "string",
          "maxLength": 2,
          "minLength": 0
        }
      }
    },
    "resPeriodicFolioType": {
      "description": "Information regarding periodic folios set on the reservation.",
      "type": "object",
      "properties": {
        "frequency": {
          "description": "Frequency in number of days when folios should be printed for this reservation.",
          "type": "integer"
        },
        "lastFolioDate": {
          "description": "Latest date when a folio was printed using the \"Periodic Batch Folios\" option",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastSettlementDate": {
          "description": "Latest date when a direct bill settlement was automatically done using the \"Direct Bill Batch Folios\" option.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "resPreConfiguredRoutingInstrType": {
      "description": "Instruction to attach Pre-Configured Routing Instructions to a Reservation.",
      "type": "object",
      "properties": {
        "authorizerInfo": {
          "description": "The authorizer information for Promotion Code with attached Complimentary Routing",
          "$ref": "#/definitions/authorizerInfoType"
        },
        "profileType": {
          "description": "Profile Type with attached Routing Instruction.",
          "$ref": "#/definitions/resProfileTypeType"
        },
        "promotionCode": {
          "description": "Promotion Code with attached Complimentary Routing.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "Rate Code with attached Routing Instruction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "resProfileTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Group",
        "TravelAgent",
        "Source",
        "ReservationContact",
        "BillingContact",
        "Addressee"
      ]
    },
    "resRevenueBalanceType": {
      "description": "Revenue and Balance Amount summary for the reservation.",
      "type": "object",
      "properties": {
        "balance": {
          "description": "Balance amount on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "foodAndBevRevenue": {
          "description": "Food and Beverage Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "nonRevenue": {
          "description": "Total Non Revenue posted on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "otherRevenue": {
          "description": "Other Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomRevenue": {
          "description": "Room Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalFixedCharge": {
          "description": "Total Fixed Charges on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPayment": {
          "description": "Total payment received for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalRevenue": {
          "description": "Total Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "resSharedGuestInfoType": {
      "description": "Contains information regarding the share reservation.",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "profileId": {
          "$ref": "#/definitions/profileId"
        }
      }
    },
    "resSharedGuestListType": {
      "description": "Collection of shared guest reservations.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resSharedGuestInfoType"
      }
    },
    "reservation": {
      "description": "Checkout request can be used to verify a reservation for checkout and do an actual checkout. In case the verificationOnly attribute is sent false, the operation will perform an actual checkout. In case the verificationOnly attribute is sent true, the operation goes through the reservation in question and verifies if it's Ok to checkout, otherwise the verification status element will provide you the verification code. The verification codes are described in the documentation of verificationOnly attribute.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservation": {
          "description": "Check in reservation request.",
          "$ref": "#/definitions/checkoutReservationType"
        },
        "verificationOnly": {
          "description": "VerificationOnly \"true\" validates the hotel code and reservation id supplied in the request. VerificationOnly \"false\" validates and then check-out the guest using the request details. Following codes might be returned during the verification: FOF00065 - The hotel code and/or reservation id is missing. FOF00066 - Reservation can't be found with the supplied hotel code and reservation id. FOF00107 - The guest's departure is not scheduled for today. Check-out not possible. FOF00109 - The guest's reservation is not in a valid status for check-out. FOF00108 - The guest has a balance. Check-out not possible.",
          "type": "boolean"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationAllowedActionType": {
      "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
      "type": "string",
      "enum": [
        "Cancel",
        "Move",
        "PreCharge",
        "PostCharge",
        "FacilitySchedule",
        "Upsell",
        "PreCheckIn",
        "PostToNoShowCancel",
        "NoShow",
        "NameChange",
        "Discount",
        "HouseKeeping",
        "EnrollToPrimaryMembership",
        "EnrollInProgress"
      ]
    },
    "reservationAllowedActionsType": {
      "description": "Allowed action.",
      "type": "array",
      "maxItems": 11,
      "items": {
        "$ref": "#/definitions/reservationAllowedActionType"
      }
    },
    "reservationBlockType": {
      "description": "Key information about the block for a reservation.",
      "type": "object",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers for the reservation.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockName": {
          "description": "The Name of the block that is attached to the reservation.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "This is the HotelCode of the Block.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationChargesInBatchInfoType": {
      "description": "Result of charges in batch for each reservation.",
      "type": "object",
      "properties": {
        "arrivalDate": {
          "description": "Arrival date of the reservation.",
          "type": "string",
          "format": "date-time"
        },
        "departureDate": {
          "description": "Departure date of the reservation.",
          "type": "string",
          "format": "date-time"
        },
        "errors": {
          "$ref": "#/definitions/errorsType"
        },
        "guestName": {
          "description": "Guest name associated to the reservation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "postingAllowed": {
          "description": "Indicator that tells whether posting is allowed for the reservation",
          "type": "boolean"
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        },
        "roomId": {
          "description": "Room number associated to the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "success": {
          "$ref": "#/definitions/successType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationDepositCriteria": {
      "description": "Request object to process reservation deposit.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to process deposit reservation.",
          "$ref": "#/definitions/processReservationDepositCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationDepositFolioInfoType": {
      "description": "Detailed information of a reservation and its deposit payment posting information.",
      "type": "object",
      "properties": {
        "advanceFolioGenerated": {
          "description": "Flag to indicate if an Advance Folio is already generated.",
          "type": "boolean"
        },
        "depositMaturityType": {
          "description": "The Reservation's Deposit Status Type. When preference is set to Check In, the deposit is transferred when the guest checks in. When the preference is set to Last Night Stay, then the deposit is transferred during the last nights night audit. For example, if the departure date for a reservation is July 14th, then the deposit would be posted during the night audit for July 13th.",
          "$ref": "#/definitions/depositMaturityType"
        },
        "depositType": {
          "description": "The Reservation's Deposit Status Type. This can indicate if the Reservation is only allowed to create Folios for Deposits or Receipts for Deposits or by Default Any. Used when Deposit Folio Functionality is ON.",
          "$ref": "#/definitions/depositType"
        },
        "deposits": {
          "description": "Window count will be hotel based configurable.",
          "$ref": "#/definitions/depositPostingsType"
        },
        "policySummaryInfo": {
          "description": "Summary information for the Deposit and Cancellation Policies on the reservation.",
          "$ref": "#/definitions/reservationPolicySummaryType"
        },
        "projectedRevenue": {
          "description": "Projected revenue for the reservation.",
          "$ref": "#/definitions/projectedRevenueType"
        },
        "reservationInfo": {
          "description": "Reservation guest details.",
          "$ref": "#/definitions/reservationInfoType"
        },
        "totalAmountDue": {
          "description": "Total Deposit Amount which is due for this reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalAmountTransferrable": {
          "description": "Total Deposit Amount that can be transferred to another Reservation.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "reservationDepositFolios": {
      "description": "Deposit Posting Information for a reservation. Contains all deposit payments made for a reservation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationDepositFoliosInfo": {
          "description": "Collection of Reservations and their Deposit Information. Includes a list of all deposit payments and folios(if applicable).",
          "$ref": "#/definitions/reservationDepositFoliosInfoType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response folio.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationDepositFoliosInfoType": {
      "description": "Detailed information of a reservation and its deposit payment posting information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationDepositFolioInfoType"
      }
    },
    "reservationDepositType": {
      "description": "Reservation Deposit Type.",
      "type": "object",
      "properties": {
        "amountOwed": {
          "description": "Deposit Amount Owed.",
          "type": "number"
        },
        "amountPaid": {
          "description": "Deposit Amount Paid.",
          "type": "number"
        },
        "amountRequired": {
          "description": "Deposit Amount Required.",
          "type": "number"
        },
        "dueDate": {
          "description": "Deposit Due Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hasOutstanding": {
          "description": "Resolves whether reservation has outstanding deposit.",
          "type": "boolean"
        },
        "hasPaid": {
          "description": "Resolves whether reservation has paid deposit.",
          "type": "boolean"
        },
        "postingDate": {
          "description": "Deposit Posting Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "reservationFolio": {
      "description": "Request to create a Proforma(folio) transactions for a reservation. The request generates the internal transactions required to create a Proforma report. After this request is called , the Opera Proforma report should be called so that these transactions can be used in the report. If the report is called without this request, the report will be incorrect and will not have the complete information. If the report is not used after this request, the internal transactions will be removed either by night audit or by the next request.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to create a Proforma for a reservation.",
          "$ref": "#/definitions/createProformaCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationFolioInfoType": {
      "description": "Each folio will include summary and/or detailed information.",
      "type": "object",
      "properties": {
        "autoCheckInAllowed": {
          "description": "Flag specifying that the reservation can be auto check in when Auto Checkin Pseudo Room parameter is active.",
          "type": "boolean"
        },
        "correctionTrxExists": {
          "description": "Flag indicating if a folio window contains a correction trx. A correction trx indicates a pending required fiscal action over the folio window. Applicable only in Greece.",
          "type": "boolean"
        },
        "deferredTaxesPosted": {
          "description": "Flag applicable only when ALLOW_DEFERRED_TAXES is ON for the resort. Set to true only when there are any unsettled transactions on any of the windows with the deferred tax entry posted. Set to false only when there are unsettled transactions on any of the windows without deferred tax entry.",
          "type": "string"
        },
        "folioHistory": {
          "description": "Folio History element contains all generated folios",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioWindowType"
          }
        },
        "folioWindows": {
          "description": "The Folio Window information of the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioWindowType"
          }
        },
        "postStayChargeAllowed": {
          "description": "Computed flag specifying that the reservation has met the criteria which allows charges to be posted after being checked-out.",
          "type": "boolean"
        },
        "postToNoShowCancelAllowed": {
          "description": "Flag specifying that the reservation can post if the reservation status was No Show or Cancelled.",
          "type": "boolean"
        },
        "preStayChargeAllowed": {
          "description": "Computed flag specifying that the reservation has met the criteria which allows charges to be posted before checking-in.",
          "type": "boolean"
        },
        "reservationInfo": {
          "description": "Reservation guest details.",
          "$ref": "#/definitions/reservationInfoType"
        },
        "roomAndTaxPosted": {
          "description": "Flag to check if the room and tax are already posted.",
          "type": "boolean"
        },
        "stampDutyExists": {
          "description": "Stamp Duty posted in at least one folio window.",
          "type": "boolean"
        }
      }
    },
    "reservationFolioInformation": {
      "description": "Response for the Create Proforma WS. After the proforma is created by this request, the Opera Proforma report should be called to generate the actual physical Proforma report. The response can have the summary of the Guests Proforma Folio, if requested.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reservationFolioInformation": {
          "description": "This type will return a summary Proforma Folio information in the response based on the Response Instruction flag passed in request.",
          "$ref": "#/definitions/reservationFolioInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationFolioWindowType": {
      "description": "Folio window view which holds the set of folios for a reservation.",
      "type": "object",
      "properties": {
        "balance": {
          "description": "Running balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "payeeInfo": {
          "description": "The window's configured payee information.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "paymentMethod": {
          "description": "Payment Method Type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationFolioWindowsType": {
      "description": "Collection of reservation folio windows.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationFolioWindowType"
      }
    },
    "reservationId": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        }
      }
    },
    "reservationIdList": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "reservationInfoType": {
      "description": "The Reservation class contains the current reservation being created or altered.",
      "type": "object",
      "properties": {
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "allowedActions": {
          "description": "Collection of reservation allowed actions.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "cancellationInfo": {
          "description": "Information regarding why reservation has been/was cancelled.",
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "description": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            }
          }
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "commissionPayoutTo": {
          "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
          "$ref": "#/definitions/commissionPayoutToType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "deposit": {
          "description": "Holds reservation deposit information.",
          "$ref": "#/definitions/reservationDepositType"
        },
        "displayColor": {
          "description": "Color setting of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "expectedServiceTime": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "guestPreferredCurrency": {
          "description": "Currency code preferred by guest.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelId": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "hotelInterfaceStatusList": {
          "description": "Collection of Hotel Interfaces and rights, this is populated only when fetching interface status for rooms.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInterfaceStatusType"
          }
        },
        "hotelName": {
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "housekeeping": {
          "description": "Information regarding housekeeping for this reservation.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "keyCount": {
          "description": "Number of keys created for the reservation.",
          "type": "integer"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastPrivacyPromptDate": {
          "description": "Last Privacy Prompt Date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready, Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "openFolio": {
          "description": "Returns true when reservation has an open folio.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Attribute OptedForCommunication is set to true when the guest has opted for receiving communicationsl related to the reservation.",
          "type": "boolean"
        },
        "paymentMethod": {
          "description": "Payment Method.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "preRegistered": {
          "description": "Defines if the reservation is pre-registered or not.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "reservationFolioWindows": {
          "description": "Collection of reservation folio windows.",
          "$ref": "#/definitions/reservationFolioWindowsType"
        },
        "reservationGuest": {
          "description": "Collection of guests associated with the reservation.",
          "$ref": "#/definitions/resGuestInfoType"
        },
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "reservationPaymentMethod": {
          "description": "Payment method used for this reservation",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "roomStatus": {
          "description": "Current room status",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "specials": {
          "description": "Set of reservation preferences which belongs to the Specials group.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/taxTypeType"
        },
        "turndownInfo": {
          "description": "Currency code preferred by guest.",
          "$ref": "#/definitions/reservationTurndownInfoType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is not in Waitlist status anymore.",
          "$ref": "#/definitions/waitlistResType"
        },
        "walkInIndicator": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "welcomeOffer": {
          "description": "This flag will determine wheather the reservation is eligible for Welcome Offer or not.",
          "type": "boolean"
        }
      }
    },
    "reservationInterfaceStatusType": {
      "description": "Hotel Interface Type for a reservation and status of the various services",
      "type": "object",
      "properties": {
        "hotelInterface": {
          "description": "Hotel interface information for the reservation",
          "$ref": "#/definitions/hotelInterfaceType"
        },
        "interfaceRights": {
          "description": "Contains a list of status/rights for the various services under this interface",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceRightsStatusType"
          }
        },
        "roomExtension": {
          "description": "Identifier for the room extension",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationOveragePaymentType": {
      "description": "Details of the reservation with the folio balance equal or higher to the credit limit",
      "type": "object",
      "properties": {
        "balance": {
          "description": "Amount that will be charge to the payment method in the folio window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cardExpirationDate": {
          "description": "Expiration date of the credit card (mask based on PCI compliance)",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "cardType": {
          "description": "Identifies the credit card type.",
          "$ref": "#/definitions/cardTypeType"
        },
        "creditCardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "creditCardLimit": {
          "description": "Credit Limit set for the credit card payment method.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "creditCardNo": {
          "description": "Credit Card number / token (mask based on PCI compliance).",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "guestName": {
          "description": "Guest name of the listed reservation.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "paymentMethod": {
          "description": "Defines the unique identifier for this payment method.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationId": {
          "description": "Reservation id of the reservation",
          "$ref": "#/definitions/reservationId"
        },
        "roomId": {
          "description": "Room number on the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "userDefinedCardType": {
          "description": "Identifies the user defined credit card type if credit card type from a defined list is not provided.",
          "type": "string",
          "maxLength": 2,
          "minLength": 0
        },
        "windowNo": {
          "description": "Window number associated where the balance is equal or higher to the credit limit on the method of payment.",
          "type": "integer"
        }
      }
    },
    "reservationOveragePaymentsType": {
      "description": "List of Reservation details for payment that has a folio window balance equal or higher to the credit limit set for the credit card payment method of that folio window.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "description": "Identifies the hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationOveragePayment": {
          "description": "Reservation details to initiate the Credit Limit Overage process",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationOveragePaymentType"
          }
        }
      }
    },
    "reservationPackageOptions": {
      "description": "Response to fetch reservation package options.",
      "type": "object",
      "properties": {
        "linkedAllowanceReservationsInfo": {
          "description": "List of reservations with linked package allowances",
          "$ref": "#/definitions/linkedAllowanceReservationsInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "packagePostings": {
          "description": "List of Packages postings.",
          "$ref": "#/definitions/packagePostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationPaymentMethodType": {
      "type": "object",
      "properties": {
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID element.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            }
          }
        },
        "folioView": {
          "type": "integer"
        },
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "paymentMethod": {
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationPolicySummaryType": {
      "description": "A collection of reservation deposit and cancellation policies.",
      "type": "object",
      "properties": {
        "cancellationPolicies": {
          "description": "A collection of reservation cancellation policies..",
          "$ref": "#/definitions/resCancellationPoliciesType"
        },
        "depositPolicies": {
          "description": "A collection of reservation deposit policies.",
          "$ref": "#/definitions/resDepositPoliciesType"
        },
        "name": {
          "description": "Name identifier for the reservation.",
          "type": "string"
        },
        "reservationIdList": {
          "description": "A list of Ids for reservation.",
          "$ref": "#/definitions/uniqueIDListType"
        }
      }
    },
    "reservationQueueInformationType": {
      "description": "Information regarding the Date, Duration and Priority of the reservation on Queue for Check in.",
      "type": "object",
      "properties": {
        "averageQueueTimeCurrentReservations": {
          "description": "The average time, in seconds, of the reservations currently in queue.",
          "type": "integer"
        },
        "averageQueueTimeToCheckIn": {
          "description": "The average time, in seconds, a reservation was on queue prior to Check-In.",
          "type": "integer"
        },
        "guestTextInfo": {
          "description": "Information for the message sent to the user",
          "$ref": "#/definitions/queueTextInfoType"
        },
        "priority": {
          "description": "The Queue Priority given to this reservation.",
          "type": "integer"
        },
        "queueDate": {
          "description": "The Business date on which the reservation was due to arrive and is currently placed on Queue for Check In.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "timeSpan": {
          "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
          "type": "object",
          "properties": {
            "duration": {
              "type": "string"
            },
            "durationInSeconds": {
              "description": "The total duration, in seconds, the reservation is on Queue.",
              "type": "integer"
            },
            "endDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        }
      }
    },
    "reservationRoomOwnershipType": {
      "description": "Indicates if the assigned reservation room is an Owner/Referral or Regular room.",
      "type": "string",
      "enum": [
        "Owner",
        "Referral",
        "Regular"
      ]
    },
    "reservationTaxTypeInfo": {
      "description": "Provides information about the Tax Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        },
        "taxExemptNo": {
          "description": "Tax exempt number on the profile.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "reservationTransaction": {
      "description": "Request to transfer a transaction(s) to a reservation. In the criteria, the target Reservation Id is required for the transfer.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Transaction transfer criteria. Target Reservation Id is required.",
          "$ref": "#/definitions/reservationTrxTransferCriteria"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationTrxTransferCriteria": {
      "description": "Criteria for transaction transfer. The choice element should have the target Reservation Id.",
      "type": "object",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipIdNo": {
          "description": "Unique ID of Membership.",
          "type": "integer"
        },
        "reservationIdList": {
          "description": "Reservation id from where transactions will be transfered.",
          "$ref": "#/definitions/reservationIdList"
        },
        "targetFolioWindowNo": {
          "description": "Folio Window Number to where transactions will be transfered.",
          "type": "integer"
        },
        "targetReservationIdList": {
          "description": "Reservation Id where the transactions will be transferred.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "transactionList": {
          "description": "List of transactions to be transfered.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        }
      }
    },
    "reservationTurndownInfoType": {
      "description": "Turndown information for a reservation",
      "type": "object",
      "properties": {
        "allowed": {
          "description": "Indicates if turndown is allowed or not",
          "type": "boolean"
        },
        "status": {
          "description": "Indicates turndown status, values could be required, not required, completed",
          "$ref": "#/definitions/turndownStatusType"
        }
      }
    },
    "reservations": {
      "description": "Unique identifier for a reservation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationId"
      }
    },
    "responseInstructionType": {
      "description": "Response types used in the Apply Final Postings request. Based on the request the folio summary , folio details or no details will be returned in the response.",
      "type": "string",
      "enum": [
        "None",
        "Summary",
        "Details"
      ]
    },
    "resvRoutingCriteriaType": {
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding object.",
      "type": "object",
      "properties": {
        "comp": {
          "description": "Comp Accounting Routing Info",
          "type": "object",
          "properties": {
            "compAccountingInfo": {
              "$ref": "#/definitions/compAccountingType"
            },
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            }
          }
        },
        "folio": {
          "description": "Folio routing type.",
          "type": "object",
          "properties": {
            "aRNumber": {
              "description": "Accounts Receivable.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "guestInfo": {
              "description": "Guest details",
              "type": "object",
              "properties": {
                "profileIdList": {
                  "description": "Unique identifiers for the Profile for both internal and external systems.",
                  "$ref": "#/definitions/profileIdList"
                }
              }
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            },
            "paymentMethod": {
              "type": "string",
              "maxLength": 2000
            }
          }
        },
        "hotelId": {
          "description": "Hotel context of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "refreshFolio": {
          "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
          "type": "boolean"
        },
        "request": {
          "description": "Comp Accounting Request routing",
          "type": "object",
          "properties": {
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            }
          }
        },
        "reservationId": {
          "description": "Unique ID of a reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "retrievePostingsForRoomRouting": {
          "description": "This flag indicates if postings that can be refreshed need to be part of the response when a routing instruction is created, updated or deleted.",
          "type": "boolean"
        },
        "room": {
          "description": "Room routing type.",
          "type": "object",
          "properties": {
            "guestDisplayName": {
              "description": "Display Name for the guest.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "guestNameId": {
              "description": "Guest unique identifier to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "reservationNameId": {
              "description": "Reservation name id to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "roomId": {
              "description": "Room number to route the instructions.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            }
          }
        }
      }
    },
    "resvRoutingInfoListType": {
      "description": "A comp routing info object",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resvRoutingInfoType"
      }
    },
    "resvRoutingInfoType": {
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding object.",
      "type": "object",
      "properties": {
        "comp": {
          "description": "Comp Accounting Routing Info",
          "type": "object",
          "properties": {
            "compAccountingInfo": {
              "$ref": "#/definitions/compAccountingType"
            },
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            }
          }
        },
        "folio": {
          "description": "Folio routing type.",
          "type": "object",
          "properties": {
            "aRNumber": {
              "description": "Accounts Receivable.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "guestInfo": {
              "description": "Guest details",
              "type": "object",
              "properties": {
                "profileIdList": {
                  "description": "Unique identifiers for the Profile for both internal and external systems.",
                  "$ref": "#/definitions/profileIdList"
                }
              }
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            },
            "paymentMethod": {
              "type": "string",
              "maxLength": 2000
            }
          }
        },
        "refreshFolio": {
          "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
          "type": "boolean"
        },
        "request": {
          "description": "Comp Accounting Request routing",
          "type": "object",
          "properties": {
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            }
          }
        },
        "reservationInfo": {
          "description": "Reservation guest details.",
          "$ref": "#/definitions/reservationInfoType"
        },
        "room": {
          "description": "Room routing type.",
          "type": "object",
          "properties": {
            "guestDisplayName": {
              "description": "Display Name for the guest.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "guestNameId": {
              "description": "Guest unique identifier to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "reservationNameId": {
              "description": "Reservation name id to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "roomId": {
              "description": "Room number to route the instructions.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            }
          }
        }
      }
    },
    "revenueBucketCodeType": {
      "description": "This gives detailed information about a trx code arrangement.",
      "type": "object",
      "properties": {
        "bucketType": {
          "description": "Flag to identify Fiscal related bucket types.",
          "$ref": "#/definitions/bucketTypeType"
        },
        "bucketValue": {
          "description": "Stores the default value for the arrangement code for revenue buckets in order to group transaction codes.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "code": {
          "description": "Code is used to identify a trx code arrangement.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "Description of the trx code arrangement code.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "hotelId": {
          "description": "Identifies the hotel code for which the trx code arrangement is specified.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "pointsEligible": {
          "description": "Bucket is eligible for membership points",
          "type": "boolean"
        },
        "revenueBucketType": {
          "description": "This holds Revenue Bucket Type",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionCodes": {
          "description": "Collection of transaction codes which form the trx code arrangement.",
          "$ref": "#/definitions/trxCodesInfoType"
        }
      }
    },
    "revenueBucketTotalType": {
      "description": "reservation revenue bucket total information.",
      "type": "object",
      "properties": {
        "revenueBucketCode": {
          "description": "Holds Revenue Bucket Type details.",
          "$ref": "#/definitions/revenueBucketCodeType"
        },
        "totalAmount": {
          "description": "Total amount related to the bucket.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "revenueBucketTotals": {
      "description": "Response object for revenue bucket totals for a reservation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "revenueBucketsInfo": {
          "description": "List of revenue bucket totals.",
          "$ref": "#/definitions/revenueBucketTotalsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "revenueBucketTotalsType": {
      "description": "List of revenue bucket total details",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/revenueBucketTotalType"
      }
    },
    "reverseCertificatePostingsCriteria": {
      "description": "Request to reverse the certificate postings of transactions.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reverseCriteria": {
          "description": "Criteria for reversing the certificate postings of transactions.",
          "$ref": "#/definitions/reverseCertificatePostingsCriteriaType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reverseCertificatePostingsCriteriaType": {
      "description": "Criteria type for reversing certificate postings of transactions.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "description": "Property code where the reservation transaction exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonCode": {
          "description": "The reason code for the deletion.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reservationNameId": {
          "description": "Reservation name id to which reverse certificate postings to be done.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "transactionList": {
          "description": "The unique transaction number of this transaction.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        }
      }
    },
    "reverseCompRedemptions": {
      "description": "Request type of complimentary bucket redemptions reversal.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to reverse complimentary bucket redemptions request.",
          "type": "object",
          "properties": {
            "cashierId": {
              "description": "Numeric ID of the cashier.",
              "$ref": "#/definitions/cashierId"
            },
            "compRedemptions": {
              "description": "Complimentary bucket redemptions to post as negative payment.",
              "$ref": "#/definitions/compRedemptionsType"
            },
            "folioView": {
              "description": "Folio Window.",
              "type": "integer"
            },
            "membershipId": {
              "description": "Membership number.",
              "type": "string",
              "maxLength": 100,
              "minLength": 0
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomRoutingPostings": {
      "type": "object",
      "properties": {
        "postingsForRoomRouting": {
          "description": "Transaction details along with the transaction code information.",
          "$ref": "#/definitions/postingsInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomRoutingRefresh": {
      "description": "The request object for processing refreshing of a routing instruction set. This operation transfers the postings to the respective reservation as per the routing instruction set which is created, edited, deleted or refreshed.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "roomRoutingRefreshCriteria": {
          "description": "Criteria to process room routing refresh.",
          "$ref": "#/definitions/roomRoutingRefreshCriteriaType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomRoutingRefreshCriteriaType": {
      "description": "Criteria for refreshing the routing instruction set.",
      "type": "object",
      "properties": {
        "fromBothResvs": {
          "description": "Flag to indicate whether to fetch transaction from both reservations.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property code where the routing instruction set exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "instructions": {
          "description": "Set of routing instructions associated to this routing type.",
          "$ref": "#/definitions/routingInstructionType"
        },
        "originalTargetResvNameId": {
          "description": "Old reservation id of the routing instruction set after it is edited.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "resvNameId": {
          "description": "Source reservation id of the routing instruction set.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "status": {
          "description": "List of transaction number for which the details are required.",
          "$ref": "#/definitions/routingInstructionStatusType"
        },
        "targetResvNameId": {
          "description": "Target reservation id of the routing instruction set.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "transactions": {
          "description": "Unique Transaction Number of the transaction(posting) which need to be transferred.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        }
      }
    },
    "roundingDifferenceAmount": {
      "description": "Response to the request to fetch the rounding difference for a payment amount.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "roundingDifference": {
          "description": "The information regarding the rounding difference.",
          "$ref": "#/definitions/roundingDifferenceAmountType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roundingDifferenceAmountType": {
      "description": "Information regarding the rounding difference which can be applied to the payment amount, based on the payment method.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The amount for which the rounding is to be applied.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "hotelId": {
          "description": "Property where the payment is being posted.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roundingDifference": {
          "description": "The rounding difference amount.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "routingInfoListType": {
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding instructions.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/routingInfoType"
      }
    },
    "routingInfoType": {
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding object.",
      "type": "object",
      "properties": {
        "comp": {
          "description": "Comp Accounting Routing Info",
          "type": "object",
          "properties": {
            "compAccountingInfo": {
              "$ref": "#/definitions/compAccountingType"
            },
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            }
          }
        },
        "folio": {
          "description": "Folio routing type.",
          "type": "object",
          "properties": {
            "aRNumber": {
              "description": "Accounts Receivable.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "guestInfo": {
              "description": "Guest details",
              "type": "object",
              "properties": {
                "profileIdList": {
                  "description": "Unique identifiers for the Profile for both internal and external systems.",
                  "$ref": "#/definitions/profileIdList"
                }
              }
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            },
            "paymentMethod": {
              "type": "string",
              "maxLength": 2000
            }
          }
        },
        "refreshFolio": {
          "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
          "type": "boolean"
        },
        "request": {
          "description": "Comp Accounting Request routing",
          "type": "object",
          "properties": {
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            }
          }
        },
        "room": {
          "description": "Room routing type.",
          "type": "object",
          "properties": {
            "guestDisplayName": {
              "description": "Display Name for the guest.",
              "type": "string",
              "maxLength": 80,
              "minLength": 0
            },
            "guestNameId": {
              "description": "Guest unique identifier to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "reservationNameId": {
              "description": "Reservation name id to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "roomId": {
              "description": "Room number to route the instructions.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            }
          }
        }
      }
    },
    "routingInstructionStatusType": {
      "description": "Routing instruction set is deleted.",
      "type": "string",
      "enum": [
        "RoutingInstructionNew",
        "RoutingInstructionEdited",
        "RoutingInstructionRemoved"
      ]
    },
    "routingInstructionType": {
      "description": "Routing limit can be one of the three: Credit Limit, Percetage Limit, Covers Limit",
      "type": "object",
      "properties": {
        "billingInstructions": {
          "description": "Set of Billing Instructions configured in this time span.",
          "$ref": "#/definitions/billingInstructionsType"
        },
        "covers": {
          "description": "Number of covers for this routing instruction.",
          "type": "number"
        },
        "creditLimit": {
          "description": "Allowable credit amount for this routing instruction. Null value means no limit, 0 equals zero.",
          "type": "number"
        },
        "duration": {
          "description": "Duration of this instruction.",
          "type": "object",
          "properties": {
            "daily": {
              "description": "Flag to indicate if the routing instruction is a daily instruction.",
              "type": "boolean"
            },
            "friday": {
              "type": "boolean"
            },
            "monday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            },
            "sunday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "timeSpan": {
              "$ref": "#/definitions/timeSpanType"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            }
          }
        },
        "limitUsed": {
          "description": "Amount of Credit used for this routing instruction.",
          "type": "number"
        },
        "percentageLimit": {
          "description": "The routing limit percentage allowed for this routing instruction.",
          "type": "number"
        },
        "routingLinkId": {
          "description": "Internal Routing Link Id identifier to which limit group the instruction belongs.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "transactionCodes": {
          "description": "Set of Transaction Codes configured in this time span.",
          "$ref": "#/definitions/trxCodesInfoType"
        }
      }
    },
    "routingInstructions": {
      "description": "Request to create a routing instruction.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Reservation routing criteria defining the routing information to be created.",
          "$ref": "#/definitions/resvRoutingCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "routingInstructionsDetails": {
      "description": "Response object containing routing instructions for a reservation.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "routingInstructions": {
          "description": "Set of Routing Instructions.",
          "$ref": "#/definitions/routingInfoListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "routingInstructionsToChange": {
      "description": "Request when changing a routing instruction.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Transactions and scheduled instructions included in this routing element will be replaced with the new element.",
          "type": "object",
          "properties": {
            "comp": {
              "description": "Comp Accounting Routing Info",
              "type": "object",
              "properties": {
                "compAccountingInfo": {
                  "$ref": "#/definitions/compAccountingType"
                },
                "compRequestInfo": {
                  "$ref": "#/definitions/compRoutingRequestType"
                },
                "folioWindowNo": {
                  "type": "integer"
                },
                "instructions": {
                  "description": "Set of routing instructions associated to this routing type.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/routingInstructionType"
                  }
                },
                "payeeInfo": {
                  "$ref": "#/definitions/payeeInfoType"
                }
              }
            },
            "folio": {
              "description": "Folio routing type.",
              "type": "object",
              "properties": {
                "aRNumber": {
                  "description": "Accounts Receivable.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "folioWindowNo": {
                  "type": "integer"
                },
                "guestInfo": {
                  "description": "Guest details",
                  "type": "object",
                  "properties": {
                    "profileIdList": {
                      "description": "Unique identifiers for the Profile for both internal and external systems.",
                      "$ref": "#/definitions/profileIdList"
                    }
                  }
                },
                "instructions": {
                  "description": "Set of routing instructions associated to this routing type.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/routingInstructionType"
                  }
                },
                "payeeInfo": {
                  "$ref": "#/definitions/payeeInfoType"
                },
                "paymentMethod": {
                  "type": "string",
                  "maxLength": 2000
                }
              }
            },
            "hotelId": {
              "description": "Hotel context of the reservation.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "newRoutingInfo": {
              "description": "Transactions and schedule instructions which will replace the base element.",
              "$ref": "#/definitions/routingInfoType"
            },
            "refreshFolio": {
              "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
              "type": "boolean"
            },
            "request": {
              "description": "Comp Accounting Request routing",
              "type": "object",
              "properties": {
                "compRequestInfo": {
                  "$ref": "#/definitions/compRoutingRequestType"
                },
                "instructions": {
                  "description": "Set of routing instructions associated to this routing type.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/routingInstructionType"
                  }
                }
              }
            },
            "reservationId": {
              "description": "Unique ID of a reservation.",
              "$ref": "#/definitions/reservationId"
            },
            "retrievePostingsForRoomRouting": {
              "description": "This flag indicates if postings that can be refreshed need to be part of the response when a routing instruction is created, updated or deleted.",
              "type": "boolean"
            },
            "room": {
              "description": "Room routing type.",
              "type": "object",
              "properties": {
                "guestDisplayName": {
                  "description": "Display Name for the guest.",
                  "type": "string",
                  "maxLength": 80,
                  "minLength": 0
                },
                "guestNameId": {
                  "description": "Guest unique identifier to which the instruction will be routed.",
                  "$ref": "#/definitions/uniqueID_Type"
                },
                "instructions": {
                  "description": "Set of routing instructions associated to this routing type.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/routingInstructionType"
                  }
                },
                "reservationNameId": {
                  "description": "Reservation name id to which the instruction will be routed.",
                  "$ref": "#/definitions/uniqueID_Type"
                },
                "roomNumber": {
                  "description": "Room number to route the instructions.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                }
              }
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "saleCriteriaType": {
      "description": "Criteria type for posting charges.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "charges": {
          "description": "Information regarding the charges which have to be posted.",
          "$ref": "#/definitions/chargesCriteriaType"
        },
        "fiscalFolioInfo": {
          "description": "Generate Fiscal Folio Criteria type to be used for fiscal folio generation.",
          "$ref": "#/definitions/fiscalServiceType"
        },
        "fiscalTerminalId": {
          "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
          "type": "string"
        },
        "folioNameValue": {
          "description": "Custom Folio Name Value Informatoin to be saved",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/nameValueHeaderDetailType"
          }
        },
        "hotelId": {
          "description": "Property where the charges are to be posted.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "incomeAuditDate": {
          "description": "Date of the Audit. This is used when postings are being created using the Income Audit functionality.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "payments": {
          "description": "The payment information to be posted.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/paymentCriteriaType"
          }
        },
        "reason": {
          "description": "The Reason Code and Reason Text which is required when a folio is generated. This input is mandatory when the parameter Credit Bill Reason is active for Credit Bills",
          "$ref": "#/definitions/folioReasonType"
        },
        "trxServiceType": {
          "description": "Transaction service type which the Folio is being associated.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "searchMatchType": {
      "description": "Search match indicating attribute and the matching value.",
      "type": "object",
      "properties": {
        "attribute": {
          "description": "Search match attribute.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "value": {
          "description": "Search match value.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "searchMatchesType": {
      "description": "List of Generic Name-Value-Pair Parameters used for super search matches.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/searchMatchType"
      }
    },
    "sourceOfSaleType": {
      "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
      "type": "object",
      "properties": {
        "sourceCode": {
          "description": "The entity/channel who made the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceType": {
          "description": "Type of entity/channel who made the reservation..",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "splitDepositTransaction": {
      "description": "Request to split deposit transaction for a reservation.",
      "type": "object",
      "properties": {
        "depositTransaction": {
          "description": "Deposit transaction info to split.",
          "$ref": "#/definitions/depositTransactionType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "splitDepositTransactionStatus": {
      "description": "Response after spliting deposit transaction.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactions": {
          "description": "Collection of transactions.",
          "$ref": "#/definitions/transactionsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "stagedCompTransactionsInfoType": {
      "description": "Transaction ID List of staged comp transactions for the reservation.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueIDListType"
      }
    },
    "stagedTransactions": {
      "description": "Response to the request to get staged transaction information for a Reservation",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "stagedCompTransactionsInfo": {
          "description": "Transaction details of staged comp transactions for the requested reservation.",
          "$ref": "#/definitions/stagedCompTransactionsInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "status": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "statusType": {
      "description": "Status of the batch process.",
      "type": "string",
      "enum": [
        "Success",
        "Error",
        "Running",
        "Stopped",
        "Warning",
        "Failed",
        "Started",
        "CompletedWithLogs"
      ]
    },
    "stayInfoType": {
      "description": "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties.",
      "type": "object",
      "properties": {
        "adultCount": {
          "description": "A collection of Guest Counts associated with Room Stay.",
          "type": "integer"
        },
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "balance": {
          "description": "Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "bookingChannelCode": {
          "description": "Booking channel code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "childCount": {
          "description": "A collection of Child Counts associated with Room Stay.",
          "type": "integer"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "componentRoomType": {
          "description": "True indicates room type is a component type.",
          "type": "boolean"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "depositPayments": {
          "description": "A collection of deposit and/or payments for the Room Stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "expectedTimes": {
          "description": "The expected arrival, return and departure times of the guest.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "fixedRate": {
          "description": "True if the rate is a fixed rate, otherwise false",
          "type": "boolean"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "guestServiceStatus": {
          "description": "Service Status of In House guest like DND or MUP",
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "linkCode": {
          "description": "Party code",
          "type": "string",
          "maxLength": 2000
        },
        "marketCode": {
          "description": "Market code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "marketDescription": {
          "description": "Description of Market code",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "numberOfRooms": {
          "description": "Room Id",
          "type": "integer"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "points": {
          "description": "The Points contains the number of points used to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "promotion": {
          "description": "Promotion Codes",
          "$ref": "#/definitions/promotionType"
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "rateAmount": {
          "description": "Rate amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "ratePlanCode": {
          "description": "Rate plan code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "rateSuppressed": {
          "description": "Whether this rate should be suppressed from view",
          "type": "boolean"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "roomClass": {
          "description": "Room class code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomId": {
          "description": "Room Id",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "roomOwnershipType": {
          "description": "Provides the information of the assigned reservation room is an Owner,Referral or regular room. This value is returned when Room Rotation OPERA Control is active and room number is assigned to a reservation.",
          "$ref": "#/definitions/reservationRoomOwnershipType"
        },
        "roomType": {
          "description": "Room type code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomTypeCharged": {
          "description": "Room type code that was charged",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "scheduledCheckoutTime": {
          "description": "Indicates that this reservation is scheduled for automated check out.",
          "type": "string",
          "format": "date"
        },
        "sourceCode": {
          "description": "Source of business",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "totalAmount": {
          "description": "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "upgradedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "storedFolioDetails": {
      "description": "Request object to update stored folio details.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "storedFolioDetails": {
          "description": "Stored folio details type.",
          "$ref": "#/definitions/storedFolioDetailsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "storedFolioDetailsInfo": {
      "description": "Response object for fetch stored folio details operation",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "storedFolioDetails": {
          "description": "details of the Stored Folio",
          "$ref": "#/definitions/storedFolioDetailsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "storedFolioDetailsType": {
      "description": "Stored Folio Details type.Folio can be printed/viewed without re-generation.",
      "type": "object",
      "properties": {
        "folioReportURL": {
          "description": "Folio Report URL.",
          "type": "string",
          "maxLength": 32000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reportStatus": {
          "description": "Report status. Report status can be Success",
          "$ref": "#/definitions/statusType"
        },
        "storedFolioFileName": {
          "description": "Name of the Stored Folio file.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "storedFolioId": {
          "description": "ID of the Stored Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "stringLength100": {
      "description": "Used for Character Strings, length 0 to 100.",
      "type": "string",
      "maxLength": 100,
      "minLength": 0
    },
    "stringLength200": {
      "description": "Used for Character Strings, length 0 to 200.",
      "type": "string",
      "maxLength": 200,
      "minLength": 0
    },
    "stringLength32000": {
      "description": "Used for Character Strings, length 0 to 32000.",
      "type": "string",
      "maxLength": 32000,
      "minLength": 0
    },
    "stringLength40": {
      "description": "Used for Character Strings, length 0 to 40.",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "successType": {
      "description": "Returning an empty element of this type indicates the successful processing of an message. This is used in conjunction with the Warning Type to report any warnings or business errors.",
      "type": "object"
    },
    "summaryPostingType": {
      "description": "Posting details.",
      "type": "object",
      "properties": {
        "approvalCode": {
          "description": "Approval code of the posting.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "approvalStatus": {
          "description": "Approval status of the posting.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "articleCode": {
          "description": "Information regarding the Article(Using Articles Functionality) of this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "canAdjustInvoice": {
          "description": "Indicator to determine if the transaction can be adjusted.",
          "type": "boolean"
        },
        "cashierInfo": {
          "$ref": "#/definitions/cashierInfoType"
        },
        "checkCount": {
          "description": "Check number count for the posting.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "checkNo": {
          "description": "Check number for the posting.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "commissionable": {
          "description": "Indicator to determine if the transaction is commissionable.",
          "type": "boolean"
        },
        "compPostingsInfo": {
          "description": "Comp Postings information for the folio.",
          "$ref": "#/definitions/compPostingsType"
        },
        "compRedemptionCode": {
          "description": "Comp redemption code assiciated to the transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "creditAmount": {
          "description": "The amount posted as credit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "customCharge": {
          "description": "Flag to identify a Custom Charge.",
          "type": "boolean"
        },
        "debitAmount": {
          "description": "The amount posted as debit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "deferredTax": {
          "description": "Flag to indicate if the Posting is a deferred tax record. Set to true only when the posting is a deferred tax record. Set to false only when the posting is not a deferred tax record.",
          "type": "boolean"
        },
        "depositTransactionId": {
          "description": "Tax Service Accounting Codes used.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "exchange": {
          "description": "Available when the Fetch Folio Search Type requests the amounts to be converted to a currency different from the Resort currency.",
          "$ref": "#/definitions/exchangeAmounts"
        },
        "fbaCertificate": {
          "description": "Flag indicates that the posting is Flexible Benefits Awards Certificate",
          "type": "boolean"
        },
        "financialTransactionIdList": {
          "description": "Collection of unique identifiers of the financial transactions.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "folioWindowNo": {
          "description": "The Folio Window number of this posting.",
          "type": "integer"
        },
        "groupByCount": {
          "description": "When some SummaryPostingsGroupBy element is send as request ,then this element will represent how many transactions rolled up into this Summary Posting Type.",
          "type": "number"
        },
        "groupTypeInfo": {
          "description": "Information related to transaction grouping.",
          "$ref": "#/definitions/postingGroupType"
        },
        "officialBIRReceiptExists": {
          "description": "Flag to indicate if an Official Receipt is generated for the folio window. Applicable only in the Philippines.",
          "type": "boolean"
        },
        "paidOut": {
          "description": "Indicates if this transaction is a paid out transaction.",
          "type": "boolean"
        },
        "postedAmount": {
          "description": "Actual currency amount posted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingDate": {
          "description": "Date and time of posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingTime": {
          "description": "Time of posting.",
          "$ref": "#/definitions/postingTimeType"
        },
        "price": {
          "description": "Indicates the unit price of the consumption.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "quantity": {
          "description": "Indicates Quantity.",
          "type": "number"
        },
        "rateCode": {
          "description": "Rate code associated to this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "receiptNo": {
          "description": "The receipt number of the transaction, if there is a receipt generated.",
          "type": "number"
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "referenceTransactionNo": {
          "description": "Generate transaction number for the Posting.",
          "type": "number"
        },
        "remark": {
          "description": "Posting remarks.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "revenueDate": {
          "description": "The date on which the transaction has its revenue effect.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reversePaymentTransactionNo": {
          "description": "Reverse payment transaction unique identifier.",
          "type": "number"
        },
        "roundingDifferenceTrx": {
          "description": "Indicator to determine if the posting was a posting for the Rounding Difference.",
          "type": "boolean"
        },
        "serviceRecovery": {
          "description": "Flag to indicates service recovery",
          "type": "boolean"
        },
        "stampDuty": {
          "description": "Flag to identify a Stamp Duty Transaction.",
          "type": "boolean"
        },
        "taxInvoiceNo": {
          "description": "Tax invoice number generated by payment tax.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionAmount": {
          "description": "The amount of the transaction.",
          "type": "number"
        },
        "transactionCode": {
          "description": "Billing Transaction Code.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionDescription": {
          "description": "Billing Transaction Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        },
        "transactionType": {
          "description": "This is the transaction type which says whether it is a Consumption(C), Payment (FC) or Package (PK) and it is inherited from transaction code.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "updateInfo": {
          "description": "Update info associated to this transaction.",
          "type": "object",
          "properties": {
            "updateBy": {
              "type": "string"
            },
            "updateDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        }
      }
    },
    "summaryPostingsType": {
      "description": "List of postings.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/summaryPostingType"
      }
    },
    "supplementalFolioCriteriaType": {
      "description": "Criteria for posting the Supplemental Folio. Includes charges and payments.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "charges": {
          "description": "Information regarding the charges which have to be posted.",
          "$ref": "#/definitions/chargesCriteriaType"
        },
        "fiscalFolioInfo": {
          "description": "Generate Fiscal Folio Criteria type to be used for fiscal folio generation.",
          "$ref": "#/definitions/fiscalServiceType"
        },
        "fiscalTerminalId": {
          "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
          "type": "string"
        },
        "folioNameValue": {
          "description": "Custom Folio Name Value Informatoin to be saved",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/nameValueHeaderDetailType"
          }
        },
        "hotelId": {
          "description": "Property where the charges are to be posted.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "incomeAuditDate": {
          "description": "Date of the Audit. This is used when postings are being created using the Income Audit functionality.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "originalFolio": {
          "description": "Original Folio details. This is the folio for which a Supplemental Folio is required.",
          "$ref": "#/definitions/folioType"
        },
        "payments": {
          "description": "The payment information to be posted.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/paymentCriteriaType"
          }
        },
        "trxServiceType": {
          "description": "Transaction service type which the Folio is being associated.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "supportingDocumentType": {
      "description": "Supporting document details.",
      "type": "object",
      "properties": {
        "confirmationNo": {
          "description": "Confirmation number of the reservation.",
          "type": "string",
          "maxLength": 50,
          "minLength": 0
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "documentCategory": {
          "description": "Supporting document category.",
          "$ref": "#/definitions/fiscalSupportingDocumentCategory"
        },
        "documentDate": {
          "description": "Supporting document creation date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "documentNo": {
          "description": "Supporting document number.",
          "type": "integer"
        },
        "documentType": {
          "description": "Supporting document type.",
          "$ref": "#/definitions/fiscalSupportingDocumentType"
        },
        "fiscalStatus": {
          "description": "OPERA Fiscal status.",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "hotelId": {
          "description": "Unique ID of the hotel",
          "type": "string"
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "roomId": {
          "description": "Room number of the reservation.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "surnameType": {
      "description": "Family name, last name.",
      "type": "string",
      "maxLength": 40,
      "minLength": 0
    },
    "taxAmountInfoType": {
      "description": "Tax amount to be adjusted for the guest",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Amount to be adjusted for the guest.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "taxTypeType": {
      "description": "Provides information about the Tax Type.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        }
      }
    },
    "telephoneInfoType": {
      "description": "Information on a telephone number for the customer.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "telephoneType": {
      "description": "Information on a telephone number for the customer.",
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "extension": {
          "description": "Extension to reach a specific party at the phone number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        },
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "tierAdministrationType": {
      "description": "Do not upgrade membership. The membership may be downgraded.",
      "type": "string",
      "enum": [
        "Disabled",
        "NoUpgrade"
      ]
    },
    "timeSpanType": {
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "type": "object",
      "properties": {
        "duration": {
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "transactionARInfoType": {
      "description": "Details of the AR account where this transaction was posted to.",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The Account name where this invoice is sent.",
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        },
        "accountNumber": {
          "description": "AR Account number.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoiceNo": {
          "description": "The invoice number which includes this transaction.",
          "type": "number"
        }
      }
    },
    "transactionAdjustmentInfoType": {
      "description": "Adjustment details of the transaction, if the transaction was created as part of an adjustment.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Adjustment code used.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "departmentCode": {
          "description": "Department code for service recovery",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reason": {
          "description": "Reason for the adjustment.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "transactionCodes": {
      "description": "Response that contains either the Transaction Code list if fetch was successful or error(s) if not.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "trxCodes": {
          "description": "List of TransactionCode. Contains information on Transaction Code, TransactionCode Description Its Group and Sub Group.",
          "$ref": "#/definitions/trxCodesPostingInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionCurrencyExchangeInfoType": {
      "description": "Details of the Exchange Information for this transaction, if the posting was made in a currency different from the default currency.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The converted default currency amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "code": {
          "description": "Foreign Currency Code of the currency which was used to post this transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "commissionPercent": {
          "description": "Percentage for commission used for the currency conversion.",
          "type": "number"
        },
        "currencyAmount": {
          "description": "The foreign currency amount posted for this transaction.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "description": "Description or reference for this exchange.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "exchangeDate": {
          "description": "The date when this exchange rate was set.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "exchangeRate": {
          "description": "The Buying rate used for this transaction.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "transactionReversal": {
      "description": "Request to reverse a Payment Tax record for Thailand Tax requirement.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "reverseCriteria": {
          "description": "Criteria for reversing the Payment Tax Record.",
          "$ref": "#/definitions/deleteTransactionCriteriaType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionServiceTypeType": {
      "description": "Containsts service type posting information.",
      "type": "object",
      "properties": {
        "balance": {
          "description": "Running balance of the service type.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "payment": {
          "description": "Payment amount of the service type.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "revenue": {
          "description": "Revenue amount of the service type.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "serviceType": {
          "description": "Contains service type code attached with transaction code.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "totalPostings": {
          "description": "Running total number of the service type.",
          "type": "integer"
        }
      }
    },
    "transactionServiceTypesType": {
      "description": "Details about service type postings.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transactionServiceTypeType"
      }
    },
    "transactionToSplit": {
      "description": "Request to split a transaction on a reservation. Splitting of transactions requires a list of transactions and a valid amount or a percentage by which the amount can be split. Based on parameters, certain transactions cannot be split. Transaction which are included in an invoice cannot be split Transactions where the generates resides elsewhere(reservation or window) cannot be split. Automatically generated transactions such as taxes, cannot be split by itself. Deposits which were part of a deposit folio cannot be split. After the split is done the transaction resides on the same folio window as the original transaction.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Transaction Split criteria. An Amount or a Percentage is required along with the transactions to split.",
          "$ref": "#/definitions/trxSplitCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionToSplitAndTransfer": {
      "description": "Request to split a transaction on a reservation and transfer the new transaction to a different reservation or a different window on the same reservation. Splitting of transactions requires a In-house target reservation, a list of transactions for a In-house reservation and a valid amount or a percentage by which the amount can be split. Based on parameters, certain transactions cannot be split. Transaction which are included in an invoice cannot be split Transactions where the generates resides elsewhere(reservation or window) cannot be split. Automatically generated transactions such as taxes, cannot be split by itself. Deposits which were part of a deposit folio cannot be split. After the split is done the transaction is transferred to the target reservation/window.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Transaction Split and Transfer criteria. A target reservation or a target window, and an Amount or a Percentage is required along with the transactions to split.",
          "$ref": "#/definitions/trxSplitAndTransferCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionToWindow": {
      "description": "Request for transaction transfer",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Transaction transfer criteria.",
          "$ref": "#/definitions/trxTransferCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionType": {
      "description": "Transaction type.",
      "type": "object",
      "properties": {
        "transactionCode": {
          "description": "Transaction code.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "transactionDate": {
          "description": "Transaction date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionDescription": {
          "description": "Transaction description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "transactionNo": {
          "description": "Unique transaction identifier.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "transactionsAdjustment": {
      "description": "Request to adjust a transaction. In order to adjust a transaction, a valid amount or percentage is required. A valid reason code and reason text is also required. Only negative adjustments are done. The adjust process will post a new negative transaction for the same transaction code for the current day.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria for the transaction adjustment. To adjust a transaction, a valid amount or percentage and a valid reason code and text are required.",
          "$ref": "#/definitions/trxAdjustCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionsType": {
      "description": "List of transaction information.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transactionType"
      }
    },
    "transferCompTransactions": {
      "description": "Request type for comp transactions transfer.",
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Comp transactions transfer criteria.",
          "type": "object",
          "properties": {
            "cashierId": {
              "$ref": "#/definitions/cashierId"
            },
            "targetFolioNo": {
              "description": "Folio window number to where transactions will be transfered.",
              "type": "integer"
            },
            "transactionList": {
              "description": "List of transactions to be transfered.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "type": "number"
              }
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transferTransactionToWindow": {
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "transactions": {
          "description": "Generated transaction number on destination window.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trxAdjustCriteriaType": {
      "type": "object",
      "properties": {
        "aRAccountNo": {
          "description": "The AR Account Number for the Account.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "aRInvoiceNo": {
          "description": "The AR Invoice Number for the Account.",
          "type": "number"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "customChargeExemptionDetails": {
          "description": "List of Custom Charge Exemptions.",
          "$ref": "#/definitions/customChargeExemptionsType"
        },
        "details": {
          "description": "The criteria required for the transaction adjustment. Adjustments can be done either by an amount or by a percentage. Atleast one should be defined.",
          "$ref": "#/definitions/adjustmentDetailsType"
        },
        "hotelId": {
          "description": "Property code where the reservation transaction exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "incomeAuditDate": {
          "description": "Date of the Audit. This is used when postings are being created using the Income Audit functionality.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationId": {
          "description": "Unique identifier of the reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "transactionList": {
          "description": "The unique transaction number of this transaction.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        }
      }
    },
    "trxCodesInfoType": {
      "description": "List of Transaction codes info.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxInfoType"
      }
    },
    "trxCodesPostingInfoType": {
      "description": "List of TransactionCodes",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxPostingInfoType"
      }
    },
    "trxInfoType": {
      "description": "Transaction codes info.",
      "type": "object",
      "properties": {
        "articles": {
          "description": "The List of Articles defined for this transaction code, when using the Articles functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/articleInfoType"
          }
        },
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel context of the Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "printTrxReceipt": {
          "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
          "type": "boolean"
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionGroup": {
          "description": "Category of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionSubGroup": {
          "description": "Sub category of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "trxPostingInfoType": {
      "description": "Transaction codes info.",
      "type": "object",
      "properties": {
        "articles": {
          "description": "The List of Articles defined for this transaction code, when using the Articles functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/articleInfoType"
          }
        },
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "hotelId": {
          "description": "Hotel context of the Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "maximumPrice": {
          "description": "Maximum quantity limitation of posting.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "minimumPrice": {
          "description": "Minimum quantity needs to be posted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "price": {
          "description": "Default price of that transaction code.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "printTrxReceipt": {
          "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
          "type": "boolean"
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionGroup": {
          "description": "Category of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "transactionSubGroup": {
          "description": "Sub category of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the transaction code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "trxSplitAndTransferCriteriaType": {
      "description": "Type to define the criteria for Splitting and Transferring the new transaction.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "description": "Property code where the reservation transaction exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "splitDetails": {
          "description": "The criteria required for the transaction splitting. Splitting can be done either by an amount or by a percentage. Atleast one should be defined.",
          "type": "object",
          "properties": {
            "amount": {
              "description": "The Amount by which the transaction has to be split.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "percentage": {
              "description": "The percentage by which the transaction has to be split.",
              "type": "number",
              "maximum": 100,
              "minimum": 0
            },
            "quantity": {
              "description": "The quantity to split. This can be used only if the original quantity of the transaction(s) was > 1.",
              "type": "integer"
            }
          }
        },
        "targetFolioWindowNo": {
          "description": "Folio Window Number to where the new transactions , after split, will be transfered.",
          "type": "integer"
        },
        "targetReservationIdList": {
          "description": "Reservation Id where the new transactions will be transferred after the split.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "transactionList": {
          "description": "The unique transaction number of this transaction.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        }
      }
    },
    "trxSplitCriteriaType": {
      "description": "Criteria which should be used for Splitting a financial transaction which belongs to a reservation.",
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "description": "Property code where the reservation transaction exists.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "splitDetails": {
          "description": "The criteria required for the transaction splitting. Splitting can be done either by an amount or by a percentage. Atleast one should be defined.",
          "type": "object",
          "properties": {
            "amount": {
              "description": "The Amount by which the transaction has to be split.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "percentage": {
              "description": "The percentage by which the transaction has to be split.",
              "type": "number",
              "maximum": 100,
              "minimum": 0
            },
            "quantity": {
              "description": "The quantity to split. This can be used only if the original quantity of the transaction(s) was > 1.",
              "type": "integer"
            }
          }
        },
        "transactionList": {
          "description": "The unique transaction number of this transaction.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        }
      }
    },
    "trxTransferCriteriaType": {
      "description": "Transactions can be transferred to either a FolioWindow Number of the same reservation or to another Inhouse Reservation.",
      "type": "object",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "membershipIdNo": {
          "description": "Unique ID of Membership.",
          "type": "integer"
        },
        "reservationIdList": {
          "description": "Reservation id from where transactions will be transfered.",
          "$ref": "#/definitions/reservationIdList"
        },
        "targetFolioWindowNo": {
          "description": "Folio Window Number to where transactions will be transfered.",
          "type": "integer"
        },
        "targetReservationIdList": {
          "description": "Reservation Id where the transactions will be transferred.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "transactionList": {
          "description": "List of transactions to be transfered.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        }
      }
    },
    "turndownStatusType": {
      "description": "Simple type for turndown status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Required, Not Required and Completed.",
      "type": "string",
      "enum": [
        "Required",
        "NotRequired",
        "Compeleted"
      ]
    },
    "uniqueIDListType": {
      "description": "Unique Id that references an object uniquely in the system.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "uniqueID_Type": {
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "userDefinedFieldsType": {
      "description": "A common type used to hold user defined fields(UDFs). This type should be used to handle UDFs on RReservation, Profiles, etc.",
      "type": "object",
      "properties": {
        "characterUDFs": {
          "description": "Collection of user defined fields of Character/String Type.",
          "$ref": "#/definitions/characterUDFsType"
        },
        "dateUDFs": {
          "description": "Collection of user defined fields of Date Type.",
          "$ref": "#/definitions/dateUDFsType"
        },
        "numericUDFs": {
          "description": "Collection of user defined fields of Numeric Type.",
          "$ref": "#/definitions/numericUDFsType"
        }
      }
    },
    "userInfoType": {
      "description": "Opera User Information",
      "type": "object",
      "properties": {
        "userId": {
          "description": "User Id of the Opera User",
          "type": "integer"
        },
        "userName": {
          "description": "Name of the Opera User",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "vIPStatusType": {
      "description": "VIP status of the customer.",
      "type": "object",
      "properties": {
        "code": {
          "description": "VIP status of the customer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Used for Character Strings, length 0 to 2000.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "vIPType": {
      "description": "The supplier's ranking of the customer.",
      "type": "object",
      "properties": {
        "vipCode": {
          "description": "VIP Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "vipDescription": {
          "description": "VIP Description.",
          "type": "string",
          "maxLength": 80,
          "minLength": 0
        }
      }
    },
    "validatedCreditBill": {
      "description": "Response to the request to check if a Folio is valid for Credit Bill.",
      "type": "object",
      "properties": {
        "folio": {
          "description": "Contains Folio Details including payee information and the reservation which it's attached to.",
          "type": "object",
          "properties": {
            "accountCode": {
              "description": "Account Code.",
              "type": "number"
            },
            "accountReceivablesFolio": {
              "description": "Flag to check Folio generated from Acoount Receivables.",
              "type": "boolean"
            },
            "addresseeInfo": {
              "description": "Addressee Information for the Folio. This is available when the Addressee functionality is used and and Addressee is attached to the folio.",
              "$ref": "#/definitions/profileInfoType"
            },
            "allowConvertFolioYn": {
              "description": "Flag to check Folio Conversion Allowed.",
              "type": "boolean"
            },
            "anonymizedFolio": {
              "description": "Indicates if this folio is linked to an anonymized Guest/Payee/Addressee.",
              "type": "boolean"
            },
            "associatedBills": {
              "description": "Bill Number.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "creditBillGenerated": {
              "description": "A flag which indicates whether credit folio has been generated.",
              "type": "boolean"
            },
            "creditableAmount": {
              "description": "If the Property checks on the gross amount of the Original Folio,then this will be the remaining amount on the Original Folio that can be credited.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "end": {
              "description": "The ending value of the date range.",
              "type": "string",
              "format": "date"
            },
            "fiscalBillNo": {
              "description": "The Fiscal Bill number of this posting",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "fiscalFolioNo": {
              "description": "Bill Number returned by the Fiscal Printer.",
              "type": "string",
              "maxLength": 40,
              "minLength": 0
            },
            "fiscalInvoicingCurrencyInfo": {
              "description": "Exchange Rate information selected to be used by the Fiscal Service.",
              "$ref": "#/definitions/exchangeRateInfoType"
            },
            "fiscalTerminalId": {
              "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
              "type": "string",
              "maxLength": 2000
            },
            "folioAmount": {
              "description": "Folio gross amount.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "folioDate": {
              "description": "Date of Folio Generation.",
              "type": "string",
              "format": "date"
            },
            "folioNo": {
              "description": "Folio Number.",
              "type": "number"
            },
            "folioStatus": {
              "$ref": "#/definitions/folioStatusType"
            },
            "folioTypeName": {
              "description": "The name of the Folio Type used for the Folio Number sequence.",
              "type": "string",
              "maxLength": 100,
              "minLength": 0
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "generateFiscalFolio": {
              "description": "Fiscal folio flag to call fiscal Information folio web service.",
              "type": "boolean"
            },
            "hasDepositTransfer": {
              "description": "A flag which indicates whether selected folio has deposit transfer or not.",
              "type": "boolean"
            },
            "internalFolioWindowID": {
              "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "invoiceNo": {
              "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
              "type": "number"
            },
            "payeeInfo": {
              "description": "Payee information for the folio.",
              "$ref": "#/definitions/payeeInfoType"
            },
            "payment": {
              "description": "Payment Posting for the folio.",
              "$ref": "#/definitions/summaryPostingType"
            },
            "paymentTrxNo": {
              "description": "Bill Payment transaction Number.",
              "type": "number"
            },
            "postItNo": {
              "description": "Number for Post-It transactions.",
              "type": "number"
            },
            "queueName": {
              "description": "Folio Queue name.",
              "type": "string",
              "maxLength": 2000,
              "minLength": 0
            },
            "reservationInfo": {
              "description": "ReservationID to which this record applies.",
              "type": "object",
              "properties": {
                "altName": {
                  "description": "Guest Alternate Last and First Name",
                  "type": "string",
                  "maxLength": 200,
                  "minLength": 0
                },
                "guestName": {
                  "description": "Guest Name",
                  "type": "string",
                  "maxLength": 200,
                  "minLength": 0
                },
                "nameId": {
                  "description": "Guest Name ID",
                  "$ref": "#/definitions/uniqueID_Type"
                },
                "reservationId": {
                  "description": "ReservationID to which this record applies.",
                  "type": "number"
                },
                "room": {
                  "description": "Room Number to which this record applies.",
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                }
              }
            },
            "revisionNo": {
              "description": "Folio Revision number.",
              "type": "number"
            },
            "start": {
              "description": "The starting value of the date range.",
              "type": "string",
              "format": "date"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "validatedTransactionCode": {
      "description": "Response notifying if transaction code is valid.",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel context where the Transaction Code will be validated.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "trxCode": {
          "description": "Transaction Code.",
          "$ref": "#/definitions/codeType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "vaultHTTPTransactionMessageType": {
      "type": "object",
      "properties": {
        "authorizationApproval": {
          "description": "Authorization approval record.",
          "type": "object",
          "properties": {
            "approvalAmount": {
              "description": "Approved amount.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "approvalCode": {
              "description": "The approval code authenticates the authorization.",
              "type": "string",
              "maxLength": 20,
              "minLength": 0
            },
            "authorizedPaymentRecord": {
              "description": "The payment record which the authorization approved.",
              "$ref": "#/definitions/reservationPaymentMethodType"
            },
            "cardSwiped": {
              "type": "boolean"
            },
            "originalAuthSequence": {
              "description": "Unique Authorization Sequence for the authorization and settlement.",
              "type": "integer"
            },
            "profileId": {
              "description": "Profile Id corresponding to the guest name.",
              "$ref": "#/definitions/profileId"
            },
            "reservationIdList": {
              "$ref": "#/definitions/reservationIdList"
            },
            "sourceOfAuthorization": {
              "description": "Source of the authorization.",
              "$ref": "#/definitions/cardAuthorizationTransactionType"
            }
          }
        },
        "escapedRequestContent": {
          "description": "The HTTP request entity content. The needs to use escape characters.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "escapedResponseContent": {
          "description": "The HTTP response entity content. The needs to use escape characters.",
          "type": "string",
          "maxLength": 4000,
          "minLength": 0
        },
        "hTTPError": {
          "description": "Vault error.",
          "$ref": "#/definitions/errorType"
        },
        "hTTPTransactionDuration": {
          "description": "Request and response time of the vault communication.",
          "$ref": "#/definitions/dateRangeType"
        },
        "hotelId": {
          "description": "The hotel context of the transaction.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "$ref": "#/definitions/vaultHTTPTransactionType"
        }
      }
    },
    "vaultHTTPTransactionType": {
      "type": "string",
      "enum": [
        "CCUniqueID",
        "CCNumber",
        "FolioAuthorization"
      ]
    },
    "vaultTransaction": {
      "description": "Request to register the vault HTTP transaction.",
      "type": "object",
      "properties": {
        "httpTransactionMessage": {
          "$ref": "#/definitions/vaultHTTPTransactionMessageType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "voidFolioCriteriaType": {
      "description": "Criteria for Voiding a Folio.",
      "type": "object",
      "properties": {
        "associatedBillInfo": {
          "description": "Bill Information of the original bill for which the Credit Bill is being generated .",
          "$ref": "#/definitions/associatedBillInfoType"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fiscalCreditBillQueueName": {
          "description": "Folio Queue name to generate a credit bill for fiscal service.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "fiscalFolioInfo": {
          "description": "Generate Fiscal Folio Criteria type to be used for fiscal folio generation.",
          "$ref": "#/definitions/fiscalServiceType"
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "maxLength": 200,
          "minLength": 0
        },
        "folioSeqNo": {
          "description": "Unique sequence number. Used to identify the current folio tax record.",
          "type": "number"
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "maxLength": 100,
          "minLength": 0
        },
        "hotelId": {
          "description": "Property where the Folio exists which has to be voided.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "reservationId": {
          "description": "Reservation to which the Folio belongs.",
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "voidFolioModes": {
      "description": "Different modes to perform void folio.",
      "type": "string",
      "enum": [
        "Invoice",
        "InfoFolio",
        "CreditFolio",
        "DepositFolio",
        "PostIt",
        "PasserBy",
        "VoidFolio",
        "SupplementalFolio",
        "SendFiscalFolio",
        "ResendFolio"
      ]
    },
    "voidedFolio": {
      "description": "Response to the request for voiding a Guest Folio.",
      "type": "object",
      "properties": {
        "fiscalCreditBillFolio": {
          "description": "Generated fiscal credit bill information.",
          "$ref": "#/definitions/folioWindowType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "waitlistResType": {
      "description": "Information regarding why reservation is being /has been waitlisted.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description why the reservation is being /has been waitlisted.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "priorityCode": {
          "description": "Waitlist Priority Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "priorityDescription": {
          "description": "Waitlist priority Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "reasonCode": {
          "description": "Waitlist Reason Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "reasonDescription": {
          "description": "Waitlist Reason Description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        },
        "telephone": {
          "description": "Guest telephone number.",
          "type": "string",
          "maxLength": 40,
          "minLength": 0
        }
      }
    },
    "warningType": {
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "type": "object",
      "properties": {
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "maxLength": 8,
          "minLength": 1
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "description": "Used in conjunction with the Success element to define a business error.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "welcomeOfferOptionsType": {
      "description": "None of the Welcome Offer option is selected.",
      "type": "string",
      "enum": [
        "BonusPoints",
        "Ecoupons",
        "Items",
        "PostIt",
        "NotSelected"
      ]
    },
    "welcomeOfferType": {
      "type": "object",
      "properties": {
        "status": {
          "description": "Determines the status of the welcome offer.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "type": {
          "description": "Determines the welcome offer option selected while availing the welcome offer.",
          "$ref": "#/definitions/welcomeOfferOptionsType"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Cashiering module provides APIs to service front desk billing requirements, as well as any requirements related to a reservation's folio. You can retrieve a guest folio, post billing charges to guest folio, add routing instructions to a reservation, view authorization history, all the way through to checking the guest out using the postCheckOut API.",
      "name": "Cashiering"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}