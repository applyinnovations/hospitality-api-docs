{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Availability Extension API",
    "description": "APIs to provide extended features for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br />Compatible with OPERA Cloud release 23.2.0.0.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 23.2.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "version": "23.2.0.0",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality-integrations_ww@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/parext/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/hotels/multiRoomRateAvailability": {
      "post": {
        "summary": "Advanced multi property search with multiple room and rates.",
        "description": "List availability across requested properties matching given rooms with quantity, occupancy and rates.",
        "operationId": "postMultiRoomRateAvailability",
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "description": "Request for multi room rate availability.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/multiRoomRateAvailabilityRequestType"
                },
                {
                  "example": {
                    "hotelIds": [
                      "LONEUS",
                      "MANOLD"
                    ],
                    "rooms": [
                      {
                        "tag": "TWIN",
                        "roomTypes": [
                          "DOUBLE",
                          "DBLDBL",
                          "FMTRPL",
                          "FMBUNK"
                        ],
                        "adults": 2,
                        "children": 1,
                        "numberOfRooms": 1
                      }
                    ],
                    "rates": {
                      "corporateRates": {
                        "corporateId": "12345",
                        "ratePlanSets": [
                          "BDB",
                          "PKG"
                        ]
                      },
                      "ratePlanCodes": [
                        "FLEXRATE",
                        "STANDARD",
                        "ADVANCED",
                        "FIXEDB05"
                      ]
                    },
                    "arrivalDate": "2021-06-01",
                    "departureDate": "2021-06-04"
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/multiRoomRateAvailabilityResponseType"
            },
            "examples": {
              "application/json": {
                "hotelAvailability": [
                  {
                    "hotelId": "MANOLD",
                    "roomStays": [
                      {
                        "roomClass": "PI",
                        "roomTypes": [
                          {
                            "tag": "TWIN",
                            "roomType": "DBLDBL",
                            "roomRates": [
                              {
                                "ratePlanCode": "FLEX",
                                "ratePlanSet": "BDB",
                                "currencyCode": "GBP",
                                "roomRateInfo": {
                                  "priceInfo": [
                                    {
                                      "stayDate": "2021-06-01",
                                      "amountBeforeTax": 104.97,
                                      "amountAfterTax": 124.97
                                    },
                                    {
                                      "stayDate": "2021-06-02",
                                      "amountBeforeTax": 104.97,
                                      "amountAfterTax": 124.97
                                    },
                                    {
                                      "stayDate": "2021-06-03",
                                      "amountBeforeTax": 104.97,
                                      "amountAfterTax": 124.97
                                    }
                                  ],
                                  "packages": [
                                    {
                                      "code": "BFADBF",
                                      "description": "Breakfast for 2 Adults"
                                    },
                                    {
                                      "code": "BFADCT",
                                      "description": "Breakfast for Adult"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Availability"
        ]
      }
    },
    "/hotels/minimumRateAvailability": {
      "post": {
        "summary": "Advanced Property Search with minimum rates.",
        "description": "List the availability status and rate range at multiple properties for given list of properties and multiple combinations of rate plan codes and negotiated rates. <p><strong>OperationId:</strong>postMinimumRateAvailability</p>",
        "operationId": "postMinimumRateAvailability",
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "tags": [
          "Availability"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/searchPropertyRequestType"
            }
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/searchPropertyResponseType"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        }
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner's Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    },
    "x-hubid": {
      "name": "x-hubid",
      "type": "string",
      "description": "x-hubid is a logical grouping of multiple properties that allows api consumers to manage data from a group of properties. This x-hubid is a valid list of hub codes configured in OPERA to which the user has access. Rest APIs without hotelId in the operation path can support hub level integration using x-hubid",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "codeDescriptionType": {
      "description": "This contains a generic code and description information.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "description": {
          "description": "description.",
          "type": "string",
          "maxLength": 2000,
          "minLength": 0
        }
      }
    },
    "corporateRatesSearchType": {
      "type": "object",
      "properties": {
        "corporateId": {
          "description": "Corporate Id",
          "type": "string",
          "example": "12345"
        },
        "ratePlanSets": {
          "description": "Rate Plan Set code to filter Rate Plans based on the predefined set.",
          "type": "array",
          "maxItems": 10,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          },
          "example": [
            "BDB",
            "PKG"
          ]
        }
      }
    },
    "errorInstance": {
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "title": "Error Instance Details",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "exceptionDetailType": {
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "title": "Error Detail",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "detail": {
          "description": "Human-readable description specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced.",
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "o:errorCode": {
          "description": "Application error code, which is different from HTTP error code.",
          "type": "string"
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "o:errorPath": {
          "description": "Path to the problem at the resource or property level.",
          "type": "string"
        },
        "status": {
          "description": "HTTP status code for this occurrence of the problem, set by the origin server.",
          "type": "integer"
        },
        "title": {
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization.",
          "type": "string"
        },
        "type": {
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML).",
          "type": "string"
        }
      }
    },
    "hotelAvailabilityStatus": {
      "description": "Availability status of the hotel",
      "type": "string",
      "enum": [
        "AvailableForSale",
        "NoAvailability",
        "NotFound",
        "OtherAvailable"
      ]
    },
    "instanceLink": {
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "type": "object",
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ],
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "multiRoomRateAvailabilityRequestType": {
      "type": "object",
      "required": [
        "hotelIds",
        "rooms",
        "rates",
        "arrivalDate",
        "departureDate"
      ],
      "properties": {
        "arrivalDate": {
          "description": "Arrival/Check-in Date",
          "type": "string",
          "format": "date",
          "example": "2021-06-01"
        },
        "departureDate": {
          "description": "Departure/Check-out Date",
          "type": "string",
          "format": "date",
          "example": "2021-06-07"
        },
        "hotelIds": {
          "description": "List of hotelIds for search criteria.",
          "type": "array",
          "maxItems": 10,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 1
          },
          "example": [
            "LONEUS",
            "MANOLD"
          ]
        },
        "rates": {
          "description": "Rates search criteria with corporate and public rate codes.",
          "$ref": "#/definitions/ratesSearchType"
        },
        "rooms": {
          "description": "Multi room search criteria with occupancy and quantity.",
          "type": "array",
          "maxItems": 30,
          "items": {
            "$ref": "#/definitions/roomsSearchType"
          }
        }
      }
    },
    "multiRoomRateAvailabilityResponseType": {
      "description": "Response object for multi room rate availability.",
      "type": "object",
      "properties": {
        "hotelAvailability": {
          "type": "array",
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/multiRoomRateAvailabilityType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "multiRoomRateAvailabilityType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Unique ID of the hotel where availability will be searched for.",
          "type": "string"
        },
        "roomStays": {
          "description": "Collection of available room rate combinations.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/multiRoomRateStayType"
          }
        }
      }
    },
    "multiRoomRateStayType": {
      "type": "object",
      "properties": {
        "roomClass": {
          "description": "Room Class grouping the returned availability.",
          "type": "string",
          "maxLength": 20
        },
        "roomTypes": {
          "type": "array",
          "maxItems": 30,
          "items": {
            "$ref": "#/definitions/multiRoomTypesType"
          }
        }
      }
    },
    "multiRoomRateType": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ratePlanCode": {
          "description": "Rate Plan code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "ratePlanSet": {
          "description": "Rate Plan Set code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "roomRateInfo": {
          "$ref": "#/definitions/roomRateInfoType"
        }
      }
    },
    "multiRoomTypesType": {
      "type": "object",
      "properties": {
        "roomRates": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/multiRoomRateType"
          }
        },
        "roomType": {
          "description": "Room Type code.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "tag": {
          "description": "Tag code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        }
      }
    },
    "offerTotalType": {
      "description": "The total amount charged for the service including additional amounts and fees.",
      "type": "object",
      "properties": {
        "amountAfterTax": {
          "description": "The total amount including all associated taxes (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number",
          "example": 123.2
        },
        "currencyCode": {
          "description": "ISO 4217 currency code",
          "type": "string",
          "maxLength": 3,
          "minLength": 3,
          "pattern": "[A-Z]{3}",
          "example": "USD"
        }
      }
    },
    "propertySearchPropertyInfo": {
      "description": "Property information",
      "type": "object",
      "properties": {
        "chainCode": {
          "type": "string",
          "example": "CHAIN1"
        },
        "hotelCode": {
          "type": "string",
          "example": "XUSXXYY99"
        },
        "hotelName": {
          "type": "string",
          "example": "Resort1"
        },
        "isAlternate": {
          "type": "boolean",
          "default": false,
          "example": true
        }
      }
    },
    "ratesSearchType": {
      "type": "object",
      "properties": {
        "corporateRates": {
          "description": "Corporate rate search criteria with Profile Corporate Id and Rate Plan Set codes.",
          "$ref": "#/definitions/corporateRatesSearchType"
        },
        "ratePlanCodes": {
          "description": "Available Rate Plan codes whose availability is requested.",
          "type": "array",
          "maxItems": 10,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          },
          "example": [
            "FLEXRATE",
            "STANDARD",
            "ADVANCED"
          ]
        }
      }
    },
    "roomRateInfoType": {
      "type": "object",
      "properties": {
        "packages": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "priceInfo": {
          "type": "array",
          "maxItems": 366,
          "items": {
            "$ref": "#/definitions/roomRatePriceInfoType"
          }
        }
      }
    },
    "roomRatePriceInfoType": {
      "type": "object",
      "properties": {
        "amountAfterTax": {
          "description": "The total amount including all associated taxes (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "amountBeforeTax": {
          "description": "The total amount not including any associated tax (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "stayDate": {
          "description": "Stay Date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "roomTagType": {
      "description": "The tag and respective room type for which minimum rate is returned.",
      "type": "object",
      "properties": {
        "roomTypes": {
          "description": "List of Room Type codes",
          "type": "array",
          "maxItems": 50,
          "minItems": 0,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          },
          "example": [
            "DOUBLE",
            "DBLDBL",
            "FMTRPL",
            "FMBUNK"
          ]
        },
        "tag": {
          "description": "Tag code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0,
          "example": "TWIN"
        }
      }
    },
    "roomsSearchType": {
      "type": "object",
      "properties": {
        "adults": {
          "description": "Number of adults",
          "type": "integer",
          "format": "int32",
          "maximum": 10,
          "minimum": 1,
          "example": 2
        },
        "children": {
          "description": "Number of children",
          "type": "integer",
          "format": "int32",
          "maximum": 10,
          "minimum": 0,
          "example": 1
        },
        "numberOfRooms": {
          "description": "Number of rooms",
          "type": "integer",
          "format": "int32",
          "maximum": 10,
          "minimum": 1,
          "example": 1
        },
        "roomTypes": {
          "description": "List of Room Type codes",
          "type": "array",
          "maxItems": 50,
          "minItems": 0,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          },
          "example": [
            "DOUBLE",
            "DBLDBL",
            "FMTRPL",
            "FMBUNK"
          ]
        },
        "tag": {
          "description": "Tag code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0,
          "example": "TWIN"
        }
      }
    },
    "searchPropertyRequestType": {
      "type": "object",
      "required": [
        "hotelCodes",
        "arrivalDate",
        "departureDate"
      ],
      "properties": {
        "accountId": {
          "description": "Corporate ID",
          "type": "string",
          "example": "12345"
        },
        "arrivalDate": {
          "description": "Arrival/Check-in Date",
          "type": "string",
          "format": "date",
          "example": "2021-06-01"
        },
        "departureDate": {
          "description": "Departure/Check-out Date",
          "type": "string",
          "format": "date",
          "example": "2021-06-07"
        },
        "hotelIds": {
          "description": "List of hotelIds for search criteria.",
          "type": "array",
          "maxItems": 300,
          "minItems": 1,
          "items": {
            "type": "string",
            "maxLength": 20,
            "minLength": 1
          },
          "example": [
            "H1",
            "H2"
          ]
        },
        "includePublicRates": {
          "type": "boolean",
          "default": false,
          "example": false
        },
        "limit": {
          "description": "number of records to be fetched in one request",
          "type": "integer",
          "format": "int32",
          "maximum": 40,
          "minimum": 0,
          "example": 2
        },
        "minRate": {
          "description": "Minimum base rate in an offer",
          "type": "number",
          "example": 24.12
        },
        "offset": {
          "description": "offset of record",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "example": 2
        },
        "rooms": {
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/searchRoomClassificationType"
          }
        },
        "sortBy": {
          "description": "The sort order to be applied",
          "$ref": "#/definitions/sortByType"
        }
      }
    },
    "searchPropertyResponseType": {
      "description": "Property Search Response",
      "type": "object",
      "properties": {
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "roomStays": {
          "description": "Collection of the returned Offers",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/searchPropertyRoomStayType"
          }
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "searchPropertyRoomStayType": {
      "type": "object",
      "properties": {
        "availability": {
          "$ref": "#/definitions/hotelAvailabilityStatus"
        },
        "minimumRate": {
          "description": "Minimum Rate",
          "$ref": "#/definitions/offerTotalType"
        },
        "propertyInfo": {
          "$ref": "#/definitions/propertySearchPropertyInfo"
        },
        "roomClass": {
          "type": "string",
          "example": "ST"
        },
        "roomTags": {
          "description": "The collection of tag and respective room type for which minimum rate is returned.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomTagType"
          }
        }
      }
    },
    "searchRoomClassificationType": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/shopBaseRequest"
        }
      ],
      "properties": {
        "roomTypes": {
          "description": "List of Room Type codes",
          "type": "array",
          "maxItems": 20,
          "minItems": 0,
          "items": {
            "type": "string",
            "maxLength": 5,
            "minLength": 1
          },
          "example": [
            "LOWTWN",
            "BRFTWN",
            "PPLDBL"
          ]
        },
        "tag": {
          "description": "Tag code",
          "type": "string",
          "maxLength": 20,
          "minLength": 0,
          "example": "TWIN"
        }
      }
    },
    "shopBaseRequest": {
      "description": "Search Request attributes",
      "type": "object",
      "properties": {
        "adults": {
          "description": "Number of adults",
          "type": "integer",
          "format": "int32",
          "maximum": 10,
          "minimum": 1,
          "example": 1
        },
        "children": {
          "description": "Number of children",
          "type": "integer",
          "format": "int32",
          "maximum": 10,
          "minimum": 0,
          "example": 2
        },
        "numberOfUnits": {
          "description": "Number of units",
          "type": "integer",
          "format": "int32",
          "maximum": 10,
          "minimum": 1,
          "example": 1
        }
      }
    },
    "sortByType": {
      "description": "The sort order to be applied",
      "type": "string",
      "default": "None",
      "enum": [
        "Price",
        "None",
        "Distance"
      ],
      "example": "Price"
    },
    "warningType": {
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "type": "object",
      "properties": {
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "maxLength": 8,
          "minLength": 1
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "maxLength": 20,
          "minLength": 0
        },
        "value": {
          "description": "Property Value",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "description": "Used in conjunction with the Success element to define a business error.",
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    }
  },
  "tags": [
    {
      "name": "Availability",
      "description": "The Availability module provides APIs to fetch a properties room/rate availability, manage restrictions and hurdles.  Restrictions can be set for the entire property or for a rate category, rate code, room class or room type. <br /><br />Restrictions can also be set for a combination of these attributes, for example room class and rate code.  You can also fetch available guarantee policies for a property in this module."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}